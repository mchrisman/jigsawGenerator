{"version":3,"file":"static/js/main.c28669a6.js","mappings":"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","sources":["Bounds.ts","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","Math/Chain.ts","Math/Cubic.ts","Math/DragOptions.ts","Math/Path.ts","Math/Point.ts","Math/RDPSmoothing.ts","Math/Segment.ts","Math/const.ts","flatten.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","Reacts/svgParsing.ts","Math/WeakMemoize.ts","Reacts/Mos.ts","Test/sample-files.ts","Reacts/Toolbar/TextAreaWithCallback.tsx","Math/Exporter.ts","Reacts/Toolbar/FileInput.tsx","Reacts/Toolbar/Edit.tsx","Reacts/Toolbar/ViewToolOptions.tsx","Reacts/Toolbar/DebugToolOptions.tsx","Reacts/Toolbar/Inspect.tsx","Reacts/Toolbar/Toolbar.tsx","Reacts/RendPaths.tsx","Reacts/RendPois.tsx","Reacts/RendPoiLabels.tsx","Reacts/PoisInteractions.tsx","Reacts/PathsInteractions.tsx","Reacts/ZoomInteractions.tsx","Reacts/PencilInteractions.tsx","Reacts/HoverInteractions.tsx","Reacts/SvgZoomer.tsx","Reacts/UserCoo.tsx","Reacts/ProgessBar.tsx","Reacts/App.tsx","index.tsx"],"sourcesContent":["import {Point} from \"./Math/Point\";\n\n\ninterface P {\n    x:number;\n    y:number;\n\n}\n\nclass Bounds {\n    readonly x:number;\n    readonly y:number;\n    readonly w:number;\n    readonly h:number;\n    readonly mx:number;\n    readonly my:number\n\n    constructor(x: number, y: number, w: number, h: number) {\n        this.x = x;\n        this.y = y;\n        this.w = (w || 0);\n        this.h = (h || 0);\n        this.mx = x+w;\n        this.my = y+h;\n    }\n\n    svgRect(style:string): SVGRectElement {\n        let e = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        e.setAttribute(\"x\",String(this.x))\n        e.setAttribute(\"y\",String(this.y));\n        e.setAttribute(\"width\",String(this.w))\n        e.setAttribute(\"height\",String(this.h))\n        e.setAttribute(\"style\",style);\n        return e;\n    }\n    static forViewBox(viewBox:string):Bounds {\n        if (!viewBox) return null;\n        let v = viewBox.trim().replace(/\\s+/g, ' ').split(\" \");\n        let w = v.length>2 ? parseFloat(v[2]) : 0;\n        let h = v.length>3 ? parseFloat(v[3]) : 0;\n        return new Bounds(parseFloat(v[0]),parseFloat(v[1]),w,h);\n    }\n    static forPoints(ps:P[]):Bounds {\n        return ps.map(p=>new Bounds(p.x,p.y,0,0)).reduce((a,b)=>a.union(b));\n    }\n    union(other:Bounds):Bounds {\n        let x = Math.min(this.x,other.x);\n        let y = Math.min(this.y,other.y);\n        let mx = Math.max(this.mx,other.mx);\n        let my = Math.max(this.my,other.my);\n        return new Bounds(x,y,mx-x,my-y);\n    }\n    \n    // The diameter of this.union(other)\n    extentWith(other:Bounds):number {\n        let x = Math.min(this.x,other.x);\n        let y = Math.min(this.y,other.y);\n        let mx = Math.max(this.mx,other.mx);\n        let my = Math.max(this.my,other.my);\n        let dx = mx-x;\n        let dy = my-y;\n        return Math.sqrt(dx*dx+dy*dy);\n    }\n    \n    toViewBox():string {\n        return `${this.x} ${this.y} ${this.w} ${this.h}`;\n    }\n\n    /**\n     * True if this rectangle intersects the circle of radius r\n     * centered on the point\n     */\n    intersectsCircle(p:Point, r:number):boolean {\n        // Closest point on rect to the circle center\n        var x = Math.min(this.mx, Math.max(this.x, p.x));\n        var y = Math.min(this.my, Math.max(this.y, p.y));\n        return p.d2({x:x,y:y})<=r*r;\n    }\n\n    intersectsBounds(b: Bounds) {\n        let a=this;\n        return a.x <= b.mx && a.mx >= b.x\n            && a.y <= b.my && a.my >= b.y;\n    }\n    \n    intersectsBoundsFuzzy(b:Bounds, fuzz:number) {\n        let a=this;\n        return a.x-fuzz <= b.mx && a.mx+fuzz >= b.x\n               && a.y-fuzz <= b.my && a.my+fuzz >= b.y;\n    }\n    /**\n     * True iff this rectangle lies entirely inside\n     * the circle of radius r centered on the point.\n     */\n    isInsideCircle(p: Point, r: number) {\n        return this.extent(p)<=r;\n    }\n    /**\n     * Return the distance from p to the furthermost part of this box\n     */\n    extent(p: Point) {\n        // let dx = Math.max(p.x-this.x, p.x-this.mx)\n        // let dy = Math.max(p.y-this.y, p.y-this.my)\n        // return Math.sqrt(dx*dx+dy*dy);\n        return Math.max(\n            p.dist({x:this.x,y:this.y}),\n            p.dist({x:this.x,y:this.my}),\n            p.dist({x:this.mx,y:this.y}),\n            p.dist({x:this.mx,y:this.my}))\n    }\n\n    equals(other: Bounds|null) {\n        return other && this.x===other.x && this.y===other.y && this.w===other.w && this.h===other.h;\n    }\n\n    isInside(other: Bounds) {\n        return this.x>=other.x\n               && this.y>=other.y\n               && this.mx<=other.mx\n               && this.my<=other.my\n    }\n    size():number {\n        return Math.sqrt(this.w*this.w+this.h*this.h);\n    }\n}\n\nexport {Bounds}\nexport type {P}\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import {Bounds} from \"../Bounds\";\nimport {Angle, Point} from \"./Point\";\nimport {Ch, Path, Piece, singularity} from \"./Path\";\nimport {NPoint} from \"../Reacts/Mos\";\nimport {anglePreservingTransformation, PRECISION_EPSILON, shapeColor} from \"./const\";\nimport {DISTORTION_ORTHORGONAL, DISTORTION_STRETCHY, DistortionOption} from \"./DragOptions\";\nimport {Segment} from \"./Segment\";\n\n\nexport class Shape {\n    public segs:Path[];\n    private _id:string;\n    private _svg:string;\n    private _area:number;\n    constructor(segs: Path[]) {\n        this.segs = segs;\n    }\n    public id() {\n        if (!this._id) {\n            this._id=this.segs.map(path=>path.id()).join(\"*\");\n        }\n        return this._id;\n    }\n    public fullSvgPath() {\n        if (!this._svg) {\n            let a = this.segs.map(s => s.svgPath()).join(\"\\n\");\n            this._svg = `M${this.segs[0].start().svg()} ${a}`\n        }\n        return this._svg;\n    }\n    public toChain():Path {\n        return Chain.of(this.segs.map((seg)=>({path:seg,t1:0,t2:1})));\n    }\n    public estimatedArea() {\n        if (!this._area) {\n            let pieces: Piece[] = this.segs.flatMap(path => {\n                let frags= path.fragmentize().unchainRecursive();\n                return frags;\n            });\n            let points: Point[] = pieces\n                .map(piece=>piece.path.end());\n            // y.unshift(x[0].path.start());\n            if (points.length<3) return 0;\n\n            // Gauss's formula\n            let area = 0;\n            let j = points.length - 1;\n            for (let i = 0; i < points.length; i++) {\n                area += (points[j].x + points[i].x) * (points[j].y - points[i].y);\n                j = i;\n            }\n            this._area = area/2.0;\n        }\n        return this._area;\n    }\n}\n\nexport function shapeColorFunctionByMedianArea(shapes: Shape[]): (_:Shape)=>string {\n    if (!shapes||!shapes.length) return (x)=>\"\";\n    let ss = shapes.map(s=>s.estimatedArea()).sort((a,b)=>a-b);\n    let half = Math.floor(ss.length/2);\n    let medianSize = ss.length % 2 ? ss[half] : (ss[half-1]+ss[half])/2.0;\n    let averageSize: number = shapes.reduce((sum, shape) => sum + shape.estimatedArea(), 0) / shapes.length;\n    let medium=averageSize;\n    return (shape)=> {\n        let colorParam = shape.estimatedArea() / medium;\n        return shapeColor(colorParam);\n    }\n}\n\n\n/**\n * A compound path made of an unbroken chain.\n * We don't enforce that it doesn't intersect itself ... todo see whether we should!\n */\nexport class Chain extends Path implements Ch {\n    /**\n     * Pull the unbroken chains from the input as Chains;\n     * Todo, see if we can improve parameterization by using lengths\n     */\n    static chains(input: Path[]): Path[] {\n        let result: Path[] = [];\n        while (input.length) {\n            let current: Path[] = [input.shift()];\n            let currentPoint = current[0].end();\n            while (input.length && currentPoint.equals(input[0].start())) {\n                currentPoint = input[0].end();\n                current.push(input.shift());\n            }\n            let len=current.length;\n            let segs:Piece[]=[];\n            for (let i=0;i<current.length;i++) {\n                segs.push({path:current[i], t1:i/len,t2:(i+1)/len})\n            }\n            // todo, don't make chains of single elements, dummy\n            result.push(Chain.of(segs));\n        }\n        return result;\n    }\n    \n    segs: Piece[];\n    private _svg: string;\n    private _hString: string;\n    \n    /** Return a simple path or a non-nested Chain.*/\n    static of(segs: Piece[]):Path {\n        return segs.length === 1\n               ? segs[0].path \n               : Chain._of(segs);\n    }\n    \n    // The result will be a chain, even if only one piece.\n    static _of(segs: Piece[]):Chain {\n        if (!segs.length) \n            throw new Error(\"Empty segment list\");\n        \n        let totalParamLength = segs.map(cs=>cs.t2-cs.t1).reduce((a,b)=>a+b);\n        let t=0;\n        segs=segs.slice();\n        for (let i=0;i<segs.length;i++) {\n            let t1 = t;\n            let t2 = t + (segs[i].t2 - segs[i].t1) / totalParamLength;\n            segs[i] = {path:segs[i].path, t1:t1, t2:t2};\n            t = t2;\n        }\n        // Some of them might be chains...\n        segs = segs.flatMap(cs=>{\n            let subchain: Piece[] = cs.path.unchainRecursive();\n            // Now subchain is assumed to have good parameter values going from 0 to 1\n            // and those need to be mapped to the range cs.t1,cs.t2\n            let f = (u:number) => cs.t1 + u * (cs.t2-cs.t1);\n            return subchain.map(scs => ({path:scs.path, t1:f(scs.t1), t2:f(scs.t2)}));\n        });\n        \n        return new Chain(segs);\n    }\n    \n    // this works because we enforce they aren't nested\n    unchainRecursive(): Piece[] {\n        return [...this.segs];\n    }\n\n    /**\n     * String together the segments.  Note this can handle some segments being reversed.\n     */\n    protected constructor(segs: Piece[]) {\n        super();\n        if (segs.length === 0) throw new Error(\"tried to make empty chain\")\n        this.segs = segs;\n    }\n\n    svgPath(): string {\n        if (!this._svg) this._svg=this.segs.map(s => s.path.svgPath()).join(\"\\n\");\n        return this._svg; \n    }\n    start(): Point { \n        return this.segs[0].path.start(); \n    }\n    end(): Point { \n        return this.segs[this.segs.length - 1].path.end(); \n    }\n    idPrefix():string {return \"Ch\"}\n    \n    hString(): string {\n        if (!this._hString)  this._hString = `${this.id()}(${(this.segs.map(s => s.path.hString()).join(\"•\"))})`;\n        return this._hString;\n    }\n\n    reverse():Chain {\n        return super.reverse() as Chain;\n    }\n    _reverse = (): Chain => {\n        return  Chain._of(this.segs.map(({path, t1, t2}) =>\n                                            ({path: path.reverse(), t1:1-t2, t2: 1-t1})).reverse());\n    }\n\n    _bounds(): Bounds {\n        return  this.segs.map(({path}) => (path.bounds())).reduce((b1, b2) => b1.union(b2));\n    }\n\n    isSingularity():singularity|false {\n        let isPoint =  this.segs.every(seg=>seg.path.isSingularity());\n        if (isPoint) console.log(\"Chain is found to be a singularity\");\n        return isPoint ? singularity : false;\n    }\n\n\n    applyLinearTransform(f: (_: Point) => Point): Chain|singularity {\n        // if (f(this.start()).equalsfp(f(this.end()))) return singularity;\n        \n        // This is tricky because we don't want any singularities, \n        // but we might get them if the function maps two non-approximately-equal points\n        // to two approximately-equal points. In that case, if we delete the singularity\n        // we might end up with gaps in the chain. We'll replace the gaps with\n        // segments unless the gaps are actually zero.\n        let newSegs:Piece[]=[];\n        for (let i=0;i<this.segs.length;i++) {\n            let {path,t1,t2}=this.segs[i];\n            let path2 = path.applyLinearTransform(f);\n            if (path2 === singularity) {\n                let a = f(path.start());\n                let b = f(path.end());\n                if (a.equals(b)) { // strict\n                    // skip the singularity\n                } else {\n                    // replace the singularity with a segment, which really \n                    // isn't ideal for our goal of not having points too close together--- todo xx\n                    console.log('applyLinearTransform: including near singularity')\n                    newSegs.push({path:Segment.ofNonsingular(a,b),t1,t2})\n                }\n            } else {\n                newSegs.push({path:path2,t1,t2})\n            }\n        }\n        if (newSegs.length===0) return singularity;\n        let c = Chain._of(newSegs);\n        if (c.bounds().w < PRECISION_EPSILON && c.bounds().h<PRECISION_EPSILON) return singularity;\n        return c;\n    }\n    moveRigidToStart(newStart:Point, newStartTangent:Angle):Chain|singularity {\n        // super impl guarantees it's a chain\n        return super.moveRigidToStart(newStart,newStartTangent) as Chain|singularity;\n    }\n    moveRigidToEnd(newEnd:Point, newEndTangent:Angle):Chain|singularity {\n        // super impl guarantees it's a chain\n        return super.moveRigidToEnd(newEnd,newEndTangent) as Chain|singularity;\n    }\n\n    _bend(newStart: NPoint, newStartTangent: Angle, newEndTangent: Angle, newEnd: NPoint, stretch: DistortionOption = DISTORTION_STRETCHY): Path|singularity\n    {\n        // return super.bend(newStart, newStartTangent,newEndTangent,newEnd);\n        // We need to get proper lengths of the subpaths. Redo the chaining with proper parameterization\n        let linear:Chain = Chain._of(this.segs.map((seg)=>({path:seg.path, t1:0, t2:seg.path.length()})));\n        \n        if (stretch===DISTORTION_ORTHORGONAL) {\n            let linDirection = linear.end().minus(linear.start());\n            let linNewEnd = linear.start().plus(linDirection.toLength(newEnd.dist(newStart)));\n            let lin2 = linear.applyLinearTransform(anglePreservingTransformation(\n                linear.start(), linear.start(), linear.end(), linNewEnd\n            ));\n            if (lin2 === singularity) return singularity;\n            linear = lin2;\n        }  else {\n        }\n\n        // The chain is parameterized on t in [0,1] but its length is LEN, which will impact the\n        // derivative with respect to t.\n        let LEN = linear.segs.map((seg)=>seg.path.length()).reduce((a,b)=>a+b);\n        \n        let A1 = linear.moveRigidToStart(newStart,newStartTangent) ;\n        let B1 = linear.moveRigidToEnd(newEnd,newEndTangent) ;\n        if (A1===singularity||B1===singularity) {\n            console.log(\"unexpected singularity\")\n            return singularity;\n        }\n        let A=A1 as Chain;\n        let B=B1 as Chain;\n        \n        // A simpler form of Path.spline() which uses the assumption that\n        // start and end curves are really translations of the same Chain,\n        // and doesn't subdivide but rather recursievely calls bend() on the subpaths\n        // Start by applying the original bend algorithm on the polysegments joining the inner points.\n        let ts=[0].concat(linear.segs.map((s)=>s.t2));\n        // let v:Array<{p1:Point,a1:Angle,a2:Angle,p2:Point}>=new Array();\n        let v:{x:Point, xp1?:Angle, xp2?:Angle}[] = [];\n        for (let i=0;i<ts.length;i++) {\n            let t = ts[i];\n            let a = A.pointAt(t);\n            let b = B.pointAt(t);\n            /*\n            interpolates 0 to 1 with zero slope at 0,1;  y=3x^2-2x^3\n            i.e. x(t) = (1-u(t))a(t) + u(t)b(t), where  u = 3t^2-2t^3 = t^2(3-2t)\n            i.e. x(t) = a(t) + (b(t)-a(t))u(t)\n            x'(t) = a'(t) + u(t)(b'(t)-a'(t)) + (b(t)-a(t))u'(t), where u'(t)=6t-6t^2 = 6t(1-t)\n            x'    = a' +  (t^2(3-2t)) (b'-a') + (b-a)(6t(1-t))\n            */\n            let u = t * t * (3 - 2 * t);\n            let up = 6*t*(1-t);\n            let x = a.to(b, u);\n            v[i] = {x:x};\n            // Compute rotation from the left (a1)\n            if (i!==0) {\n                // a'(t) is this vector\n                let ap=A.segs[i-1].path.endTangent().vector().times(LEN);\n                let bp=B.segs[i-1].path.endTangent().vector().times(LEN);\n                // x'(t)\n                let xp = ap.plus( bp.minus(ap).times(u) ).plus(b.minus(a).times(up));\n                // This would be the numerical estimation way to do it\n                // let tme = t-0.001;\n                // let ume = tme * tme * (3-2*tme);\n                // let ape = A.pointAt(tme);\n                // let bpe = B.pointAt(tme);\n                // let da = ape.minus(a).times(1/0.001);\n                // let db = bpe.minus(b).times(1/0.001);\n                // let xme = ape.to(bpe, ume);\n                // xp = x.minus(xme);\n                v[i].xp1=new Angle(xp);\n            }\n            if (i!==ts.length-1) {\n                let ap=A.segs[i].path.startTangent().vector().times(LEN);\n                let bp=B.segs[i].path.startTangent().vector().times(LEN);\n                let xp = ap.plus( bp.minus(ap).times(u) ).plus(b.minus(a).times(up));\n                v[i].xp2=new Angle(xp);\n            }\n            // console.log(\"i=\"+i+\"\\n\"+JSON.stringify(v[i]))\n        }\n        let newSegs:Piece[]=[]\n        for (let i=1;i<ts.length;i++) {\n            let t1 = ts[i-1];\n            let t2 = ts[i];\n            let x1 = v[i-1].x;\n            let x2 = v[i].x;\n            let a1 = v[i-1].xp2;\n            let a2 = v[i].xp1;\n            let path = this.segs[i-1].path.bend(x1, a1, a2, x2, stretch);\n            if (path !== singularity) newSegs.push({path,t1,t2});\n        }\n        return newSegs.length ? Chain.of(newSegs) : singularity;\n    }\n    \n    // this is a little strange because we might have ChainSegments holding Chains(?)\n    // but that's just a convenience for the return value.\n    _splitNatural(): [Piece, Piece]|singularity {\n        if (this.segs.length === 1) {\n            return this.segs[0].path.splitNatural();\n        }\n        const mid = Math.ceil(this.segs.length / 2);\n        let c1 = (this.segs.slice(0, mid));\n        let c2 = (this.segs.slice(mid));\n        let t = c2[0].t1;\n        return [{path: Chain.of(c1), t1:0, t2:t},\n                {path: Chain.of(c2), t1:t, t2:1}];\n    }\n\n    // for debugging chains\n    innerPointsOfNaturalInterest(): Point[] {\n        if (this.segs.length === 1) return [];\n        return this.segs.slice(1).map(seg => seg.path.start());\n    }\n\n    split2(u: number): [Path|singularity, Path|singularity] {\n        if (u < 0) u = 0;  // out of range but we're being lenient for rounding errors\n        if (u > 1) u = 1;  // ditto\n        let a: Piece[] = [];\n        let b: Piece[] = this.segs.slice(); // copy\n        while (b.length && b[0].t1 < u ) {\n            let ss = b.shift();\n            if (ss.t2 < u) {\n                // we haven't scraped enough\n                a.push(ss);\n                continue;\n            }\n            // Now either ss.t2=u (we found the exact split)\n            // or ss.t2 > u (we need to split the current sub-path) \n            if (Math.abs(ss.t2-u)<PRECISION_EPSILON) {\n                // unlikely to be so exact? maybe not if we're\n                // splitting at 0.5 for a 2-element chain.\n                // Now ss should belong on the left side \n                // and we have the exact result.\n                a.push(ss);\n                break;\n            }\n            // it's too much, we have to break it between ss.t1 and ss.t2\n            let splitRatio = (u-ss.t1)/(ss.t2-ss.t1);\n            splitRatio = Math.min(1, Math.max(0, splitRatio)); // this is just for rounding errors\n            let [left, right] = ss.path.split2(splitRatio);\n            if (left === singularity && right === singularity) {\n                // Well this sucks.  It means an tiny sub-path\n                // was split into tinier singularity subpaths.  \n                // If we just ignore it, we might end up with a tiny gap.\n                // Let's just not split it.\n                a.push(ss); \n                break;\n            } else if (left === singularity) {\n                b.unshift(ss);\n                break;\n            } else if (right === singularity) {\n                a.push(ss);\n                break;\n            }\n            // We got a real split, at a point between ss.t1 and ss.t2 (i.e. at u)\n            // Push the left half onto a, and the right half onto b\n            a.push({path:left, t1:ss.t1, t2:u})\n            b.unshift({path:right, t1:u, t2:ss.t2})\n            break;\n        }\n        // Note invoking Chain.of() will re-normalize the parameters\n        return [a.length ? Chain.of(a) : singularity,\n                b.length ? Chain.of(b) : singularity];\n    }\n\n    startTangent(): Angle {\n        return this.segs[0].path.startTangent();\n    }\n\n    endTangent(): Angle {\n        return this.segs[this.segs.length - 1].path.endTangent();\n    }\n}","import {Angle, Point} from \"./Point\";\nimport {Bounds, P} from \"../Bounds\";\nimport {Segment} from \"./Segment\";\nimport {Path, singularity} from \"./Path\";\nimport {anglePreservingTransformation, PRECISION_PATH} from \"./const\";\nimport {NPoint} from \"../Reacts/Mos\";\nimport {DISTORTION_STRETCHY, DistortionOption} from \"./DragOptions\";\n\nexport class Cubic extends Path {\n    readonly a: Point;\n    readonly b: Point;\n    readonly c: Point;\n    readonly d: Point;\n    private _svg: string;\n    private _hString: string;\n\n    static of(a: Point, b: Point, c: Point, d: Point):Segment|Cubic|singularity{\n        return Cubic.isSegment(a,b,c,d,PRECISION_PATH) || Cubic._of(a,b,c,d);\n    }\n    \n    static _of(a: Point, b: Point, c: Point, d: Point):Cubic|singularity {\n        let cubic = new Cubic(a,b,c,d);\n        return cubic.isSingularity() ? singularity : cubic; \n    }\n    private constructor(a: Point, b: Point, c: Point, d: Point) {\n        super();\n        this.a = a;\n        this.b = b;\n        this.c = c;\n        this.d = d;\n    }\n    svgPath(): string {\n        if (!this._svg) this._svg=`C${this.b.x} ${this.b.y} ${this.c.x} ${this.c.y} ${this.d.x} ${this.d.y}`;\n        return this._svg; \n    }\n    start(): Point {\n        return this.a; \n    }\n    end(): Point { \n        return this.d; \n    }\n\n    idPrefix():string { return \"C\" }\n\n    hString(): string {\n        if (!this._hString) this._hString= `${this.id()}(${this.a.hString()}~${this.d.hString()})`;\n        return this._hString;\n    }\n    \n    _reverse = (): Cubic => {\n        return Cubic._of(this.d, this.c, this.b, this.a) as Cubic\n    }\n\n    _bounds(): Bounds {\n        let x = Math.min(this.a.x, this.b.x, this.c.x, this.d.x);\n        let y = Math.min(this.a.y, this.b.y, this.c.y, this.d.y);\n        let x2 = Math.max(this.a.x, this.b.x, this.c.x, this.d.x);\n        let y2 = Math.max(this.a.y, this.b.y, this.c.y, this.d.y);\n        return new Bounds(x, y, x2 - x, y2 - y);\n    }\n\n    applyLinearTransform(f: (_: Point) => Point): Cubic|singularity {\n        \n        return Cubic._of(f(this.a), f(this.b), f(this.c), f(this.d));\n    }\n\n    moveRigidtoStartEnd(newStart:Point, newEnd:Point): Cubic|singularity {\n        return this.applyLinearTransform(anglePreservingTransformation(this.start(), newStart, this.end(), newEnd))\n    }\n\n    // todo, need to recheck for self-intersection?\n    _bend(newStart: NPoint, newStartTangent: Angle, newEndTangent: Angle, newEnd: NPoint, stretch: DistortionOption = DISTORTION_STRETCHY): Path|singularity\n    {\n        let r:Cubic|singularity = this;\n        \n        // We need this to smooth some degenerate cases, in particular (a near b & c near d)\n        let seg = Cubic.isSegment(this.a, this.b, this.c, this.d, PRECISION_PATH);\n        if (seg===singularity) return singularity;\n        if (seg) {\n            r = Cubic._of(this.a, this.a.to(this.d, 0.33), this.d.to(this.a, 0.33), this.d);\n        }\n        if (r===singularity) return r;\n\n        r = r.moveRigidtoStartEnd(newStart,newEnd);\n        if (r===singularity || r.isSingularity()) return singularity;\n        // eliminate a degenerate case\n        if (r.a.equalsfp(r.b) && r.a.equalsfp(r.c)) {\n            // it's actually a segment AD. Make it a nondegenerate cubic.\n            r = Cubic._of(r.a, r.a.to(r.d, 0.33), r.d.to(r.a, 0.33), r.d);\n            if (r===singularity) return r;\n        }\n        \n        let dA = newStartTangent.minus(r.startTangent());\n        // In the degenerate case a=b, we've already guaranteed c!=a; use that vector proportionally to the change.\n        let ab = (r.a.equalsfp(r.b))\n                 ? r.c.minus(r.a).times(Math.abs(dA.radians()) / Math.PI)\n                 : r.b.minus(r.a);\n        ab = ab.rotate(dA);\n        \n        let dD = newEndTangent.reverse().minus(r.endTangent().reverse());\n        let dc = (r.d.equalsfp(r.c))\n                 ? r.b.minus(r.d).times(Math.abs(dD.radians())/Math.PI)\n                 : r.c.minus(r.d);\n        dc = dc.rotate(dD);\n        // Now we have to return strictly equal newStart and newEnd\n        r = Cubic._of(newStart,r.a.plus(ab),r.d.plus(dc),newEnd);\n        return r;\n    }\n\n    \n\n    isSingularity():singularity|false {\n        if (this.a.equalsfp(this.b) && this.b.equalsfp(this.c) && this.c.equalsfp(this.d)) {\n            console.log('cubic is a point');\n            return singularity;\n        }\n        return false;\n    }\n    \n    \n    /**\n     * If the curve with the given control points can be approximated by a \n     * segment to the given precision, return the segment.\n     * \n     * Slight issue, I don't think I've guaranteed compatible parameterization\n     * in the approximating Segment.  In practice I hope we can get away with that.\n     * \n     * If this isn't a singularity but the approximating segment is (i.e. this is a closed loop\n     * of size less than given precision), the result will be a singularity.\n     * P.S. this doesn't work: https://hcklbrrfnn.files.wordpress.com/2012/08/bez.pdf\n     */\n    static isSegment(b0:P, b1:P, b2:P, b3:P, precision:number):Segment|singularity|null {\n        // If both control points are within 'precision' of the segment between endpoints,\n        // then so is the entire convex hull.\n        let isStraight = Segment.distancePointToLineSegment(b1,b0,b3)<precision\n                      && Segment.distancePointToLineSegment(b2,b0,b3)<precision;\n        // console.log(\"isStraight=\"+isStraight);\n        if (isStraight) {\n            return Segment.of(Point.forP(b0), Point.forP(b3));\n        } else {\n            return null;\n        }\n    }\n    \n    //De Casteljau's algorithm\n    __split(u:number): [Point,Point,Point,Point,Point,Point,Point] {\n        let A = this.a;\n        let P = this.b;\n        let Q = this.c;\n        let G = this.d;\n        let B = A.to(P, u);  // B = uP + (1-u)A\n                             // B' = P-A\n        let F = Q.to(G, u);  // F = uG + (1-u)Q\n                             // F' = G-Q\n        let X = P.to(Q, u);  // X = uQ + (1-u)P\n                             // X' = Q-P\n        let C = B.to(X, u);  // C = uX + (1-u)B \n                             // C' = uX' + X + (1-u)B' - B\n                             //    = u(Q-P) + uQ + (1-u)P + (1-u)(P-A) - (uP + (1-u)A)\n                             //    = u(Q-P+Q-P-P+A-P+A) + P+P-A-A\n                             //    = u(2Q-4P+2A) + (2P-2A)\n                             // C'' = (2Q-4P+2A)\n        let E = X.to(F, u);  // E = uF + (1-u)X\n                             // E' = uF' + F + (1-u)X' - X\n                             //    = u(G-Q) + uG + (1-u)Q + (1-u)(Q-P) - (uQ + (1-u)P)\n                             //    = u(G-Q+G-Q -Q + P - Q + P  ) + Q + Q-P - P\n        //     = u(2G-4Q+2P) + (2Q-2P)\n        let D = C.to(E, u);  // D = uE + (1-u)C\n                             // D' = uE' + E + (1-u)C' - C\n                             // D'(0) = E(0) + C'(0) - C(0)\n                             //       = X(0) + (2P-2A) - B(0)\n                             //       = P + 2P -2A -A\n                             //       = 3P-3A\n                             //\n                             // D'' = uE'' + E' + E' + (1-u)C'' - C' - C'\n                             //     = u(E'' -C'') + (2E' +C'' - 2C')\n                             // D''(0) = 2E'(0) + C''(0) - 2C'(0)\n                            //         = 2(2Q-2P) + (2Q-4P+2A) - 2( 2P-2A )\n                            //        = 4Q-4P+2Q-4P+2A-4P+4A\n                            //        = 6Q - 12P + 6A\n                            //        = 6( (Q-P) + (A-P) )\n        \n                            // I think we have\n                            // D = u^3 G + 3 u^2 (1-u) Q + 3u (1-u)^2 P + (1-u)^3 A\n                            // and an upper bound for D' is\n                            // |D'(t)| ≤ 3(1-t)^2 * |P-A| + 6(1-t)t * |Q-P| + 3t^2 * |G-Q|\n\n\n                return [A,B,C,D,E,F,G];\n    }\n    \n    // https://math.stackexchange.com/questions/877725/retrieve-the-initial-cubic-bézier-curve-subdivided-in-two-bézier-curves\n    split2(u: number):[Segment|Cubic|singularity, Path|singularity] {\n        let [A,B,C,D,E,F,G] = this.__split(u);\n        return [Cubic.of(A, B, C, D),\n                Cubic.of(D, E, F, G)];\n    }\n\n    pointAt(t:number):Point {\n        let [A,B,C,D,E,F,G] = this.__split(t);\n        return D;\n    }\n\n    startTangent(): Angle {\n        let v = this.b.minus(this.a);\n        if (v.abs()===0) v = this.c.minus(this.a);\n        if (v.abs()===0) v = this.d.minus(this.a);\n        if (v.abs()===0) {\n            console.log(\"degenerate cubic, no tangent\")\n            return Angle.forAngle(0);\n        }\n        return new Angle(v);\n    }\n\n    endTangent(): Angle {\n        return this.reverse().startTangent().reverse();\n    }\n}","export const DISTORTION_STRETCHY = 'DISTORTION_STRETCHY';\nexport const DISTORTION_ORTHORGONAL = 'DISTORTION_ORTHORGONAL';\nexport type DistortionOption = 'DISTORTION_STRETCHY' | 'DISTORTION_ORTHORGONAL';\nexport const END_TANGENTS_FIXED = 'END_TANGENTS_FIXED';\nexport const END_TANGENTS_FREE = 'END_TANGENTS_FREE';\nexport const END_TANGENTS_FLOPPY = 'END_TANGENTS_FLOPPY';\nexport type EndTangentsOption = 'END_TANGENTS_FIXED' | 'END_TANGENTS_FREE' | 'END_TANGENTS_FLOPPY'\n\nexport interface DragOptions {\n    /*\n    Stretchy vs orthogonal\n    fixed tangents, floppy tangents, unfixed tangents \n    */\n    distortion: DistortionOption;      // flip with \"shift\"\n    endTangents: EndTangentsOption;  // \"control\" flips to \"Unfixed\" or back\n}\nexport function dragOptionsWithModifierKeys(original:DragOptions, shift:boolean, control:boolean): DragOptions {\n    let d = {...original};\n    if (shift) {\n        if (d.distortion === DISTORTION_ORTHORGONAL) {\n            d.distortion = DISTORTION_STRETCHY;\n        } else if (d.distortion === DISTORTION_STRETCHY) {\n            d.distortion = DISTORTION_ORTHORGONAL;\n        }\n    }\n    if (control) {\n        if (d.endTangents === END_TANGENTS_FIXED) {\n            d.endTangents = END_TANGENTS_FLOPPY;\n        } else if (d.endTangents === END_TANGENTS_FREE) {\n            d.endTangents = END_TANGENTS_FLOPPY;\n        } else if (d.endTangents === END_TANGENTS_FLOPPY) {\n            d.endTangents = END_TANGENTS_FREE;\n        }\n    }\n    return d;\n}","import {Bounds, P} from \"../Bounds\";\nimport {\n    anglePreservingTransformation,\n    closestPoint,\n    dist,\n    intersectionOfLineSegments,\n    PRECISION_EPSILON,\n    PRECISION_PATH,\n    stretchTransformation\n} from \"./const\";\nimport {Angle, Point} from \"./Point\";\nimport {Chain} from \"./Chain\";\nimport {NPoint} from \"../Reacts/Mos\";\nimport {DISTORTION_STRETCHY, DistortionOption, DragOptions, END_TANGENTS_FIXED, END_TANGENTS_FREE} from \"./DragOptions\";\nimport {Segment} from \"./Segment\";\n// import {Chain} from \"./Chain\";\n// import {Segment} from \"./Segment\";\n\nvar idSeq:Record<string,number>={};\nfunction nextID(prefix:any):string {\n    let sPrefix = String(prefix);\n    let r = idSeq[sPrefix] || 0;\n    let result = r ? String(sPrefix)+\".\"+(r.toString(36)) : String(sPrefix);\n    r++;\n    idSeq[sPrefix]=r;\n    return result;\n}\nexport function nextIDFromHash(prefix:string, hasher:string):string {\n    let h=0;\n    for (let i=0;i<hasher.length;i++) {\n        h = (31*h+hasher.charCodeAt(i))%100;\n    }\n    return nextID(prefix+String(h%100));\n}\n\nexport interface Piece {\n    path: Path;\n    // in the owning Chain, parameter start and end for this piece\n    t1:number;\n    t2:number;\n}\n\nexport interface Ch {\n    segs:Piece[];\n}\n\nexport const singularity = Symbol(\"SINGULARITY\")\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type singularity = typeof singularity\n\nexport abstract class Path {\n    // private $splitNatural:WeakRef<[ChainSegment,ChainSegment]>;\n    private $splitNatural:[Piece,Piece]|singularity;\n    private $fragmentize: Chain; \n    protected $reversed: Path;\n    static IdReg:Record<string,string>={};\n    static IdSeq : number=0;\n    protected _id:string;\n    private $linearize: Chain;\n    debugClass: string;\n    private $bounds: Bounds;\n    private $totallyShatter: Path;\n    \n    abstract start():Point;\n    abstract end():Point;\n    // the value of the 'd' attribute of a <path> that would draw this path,\n    // assuming the pen is already at the start point\n    abstract svgPath():string;\n    \n    fullSvgPath():string {\n        return `M${this.start().svg()} ${this.svgPath()}`;\n    }\n    \n    // Two equivalent paths must have the same IDs.\n    id():string {\n        if (!this._id) this._id=Path.IdReg[this.fullSvgPath()];\n        if (!this._id) this._id=Path.IdReg[this.fullSvgPath()]= this.idPrefix() + (Path.IdSeq++);\n        return this._id;\n    }\n    \n    abstract idPrefix():string;\n    \n    // human-readable string;\n    abstract hString():string;\n    \n    \n    // heuristic; is it a no-op path within PRECISION_PATH?\n    isNoop(precision:number):boolean {\n        return this.start().equals(this.end())\n               && this.bounds().w<2*precision && this.bounds().h<2*precision;\n    }\n\n    /**\n     * Get the point at parameter t in [0,1]. Does not normalize points.\n     */\n    pointAt(t:number):Point {\n        if (t<=0) return this.start();\n        if (t>=1) return this.end();\n        let [a,b] =  this.split2(t);\n        if (b!==singularity) return b.start();\n        if (a!==singularity) return a.end();\n        // can't be split without collapsing.\n        return t<0.5 ? this.start() : this.end();\n    }\n\n    /**\n     * Exact split on parameter in [0,1]. Does not normalize points.\n     * May return singulariites on left or right\n     */\n    abstract split2(t:number):[Path|singularity, Path|singularity];\n\n\n\n    /**\n     * The impl must use the actual Point objects coming\n     * from the transform, not merely equivalent ones,\n     * at least for the starting and ending points.\n     */\n    abstract applyLinearTransform(f:(_:Point)=>Point):Path|singularity;\n\n    /**\n     * Split if the path strays too far from the straight\n     * segment from start() to end().  \"Too far\" is\n     * vaguely expressed by 'tolerance', where a value of 1\n     * means roughly the distance from start() to end().\n     * \n     * Note, we need this in front of mos.normalizePathEndpoints\n     * to prevent a nearly-closed loop from collapsing to a singularity.\n     * \n     * otherwise return [this].\n     * @param tolerance\n     * @param recursionLimit\n     */\n    splitErrant(tolerance: number, recursionLimit: number):Path[] {\n        \n        if (recursionLimit<=0) {\n            console.warn(\"Hit recursion limit on splitErrant\");\n            return [this];\n        }\n        if (!this.isErrant(tolerance)) return [this];\n        let split: [Piece, Piece] | singularity = this.splitNatural();\n        if (split===singularity) return [this];\n        let segs =split as [Piece, Piece];\n        let [{path:a1},{path:b1}] = segs;\n        // console.log(\"Splitting errant \"+this.hString()+\"\\nleft: \"+a1.hString()+\"\\nright: \"+b1.hString());\n        let a2 = a1.splitErrant(tolerance, recursionLimit - 1);\n        let b2 = b1.splitErrant(tolerance, recursionLimit - 1);\n        return  [...a2, ...b2];\n    }\n\n    /** Move and rotate rigidly. The result's start point must be exactly newStart without rounding errors.*/\n    moveRigidToStart(newStart:Point, newStartTangent:Angle):Path|singularity {\n        let a = this.startTangent();\n        let da = newStartTangent.minus(a);\n        let e = this.end();\n        let s = this.start();\n        if (s.equals(newStart) && Math.abs(da.radians()) < 0.00001)  return this;\n        let f:(_:Point)=>Point;\n        // If it's a closed loop, we need to do a rotation without translation\n        if (e.dist(s) < PRECISION_EPSILON) {\n            f = (p:Point) => {\n                if (p.equals(s)) return newStart; // To enforce no rounding errors on the endpoint.\n                let v = p.minus(s);\n                v = v.divideComplex(a.vector());\n                v = v.timesComplex(newStartTangent.vector());\n                return newStart.plus(v);\n            }    \n        } else {\n            let newDirection = e.minus(s).rotate(da);\n            let newEnd = newStart.plus(newDirection);\n            f = anglePreservingTransformation(s,newStart, e,newEnd);\n        }\n        let result = this.applyLinearTransform(f);\n        if (result===singularity) return singularity;\n        if (!result.start().equals(newStart) ) // exact\n            console.log (\"moveRigidToStart:start/end assertion failed\")\n        // if (!result.end().equals(newEnd) ) // exact\n        //     console.log (\"moveRigidToStart:start/end assertion failed\")\n        return result;\n    }\n    moveRigidToEnd(newEnd:Point, newEndTangent:Angle):Path|singularity {\n        let p = this.reverse().moveRigidToStart(newEnd, newEndTangent.reverse());\n        return p===singularity ? singularity : p.reverse();\n    }\n    \n    /** Create a spline transitioning from A to B as t goes from 0 to 1.\n     *  The start of the spline will be exactly A.start() without rounding errors,\n     *  and the end B.end(). */\n    static spline(A:Path,B:Path):Path {\n        let alin = A.linearize();\n        let blin = B.linearize();\n        let a = alin.segs.slice();\n        let b = blin.segs.slice();\n        // combine the corner points of both\n        let ts=[0];\n        let t=0;\n        while(a.length&&b.length) {\n            let da = a[0].t2 - a[0].t1;\n            let db = b[0].t2 - b[0].t1;\n            // If they both have only one segment left, then they must be the same...\n            if (a.length === 1 && b.length === 1 || Math.abs(da-db)<0.0000001) {\n                ts.push(t+da);\n                t+=da;\n                a.shift();\n                b.shift();\n            } else {\n                if (da > db) [a, b, da, db]=[b, a, db, da];\n                ts.push(t+da);\n                t+=da;\n                a.shift();\n                let {path,t1,t2} = b.shift();\n                t1 = t1+da;\n                if (t1<t2) b.unshift({path,t1,t2});\n            }\n        }\n        let Chain = require('./Chain').Chain;\n        let Segment = require('./Segment').Segment;\n        // If any remain in a or b, they can only be rounding errors; ignore them.\n        let newPoints=[A.start()]\n        for (let i=1;i<ts.length-1;i++) {\n            let t=ts[i];\n            let a = alin.pointAt(t);\n            let b = blin.pointAt(t);\n            // interpolates 0 to 1 with zero slope at 0,1;  y=3x^2-2x^3\n            // i.e. x(t) = (1-u(t))a(t) + u(t)b(b), where  u = 3t^2-2t^3 = t^2(3-2t)\n            // i.e. x(t) = a(t) + (b(t)-a(t))u(t)\n            // x'(t) = a'(t) + u(t)(b'(t)-a'(t)) + (b(t)-a(t))u'(t), where u'(t)=6t-6t^2 = 6t(1-t)\n            // x'    = a' +  (t^2(3-2t)) (b'-a') + (b-a)(6t(1-t))\n            let u = t * t * (3 - 2 * t);\n            let x = a.to(b, u);\n            newPoints.push(x);\n        }\n        newPoints.push(B.end());\n        let newSegs:Piece[]=[];\n        for (let i=1;i<ts.length;i++) {\n            newSegs.push({path:Segment.of(newPoints[i - 1], newPoints[i]),\n                             t1:ts[i - 1], t2:ts[i]});\n        }\n        return Chain.of(newSegs);\n    }\n\n    /**\n     * Bend and scale the curve as indicated.\n     * The new curve's endpoints must be exactly newStart,newEnd\n     * with no rounding errors.\n     */\n    bend(newStart: NPoint, newStartTangent: Angle,\n         newEndTangent: Angle, newEnd: NPoint,\n         stretch: DistortionOption = DISTORTION_STRETCHY)\n        : Path|singularity\n    {\n        let result=this._bend(newStart,newStartTangent,newEndTangent,newEnd,stretch);\n        if (result===singularity) return singularity\n        if (!result.start().equals(newStart)) console.log(\"bend contract failed\")\n        if (!result.end().equals(newEnd))     console.log(\"bend contract failed\")\n        return result;\n    }\n    \n    abstract _bend(newStart: NPoint, newStartTangent: Angle,\n         newEndTangent: Angle, newEnd: NPoint,\n         stretch: DistortionOption): Path|singularity;\n    // This was a generic implementation that was inefficient\n    // and can't handle some singular cases:\n    // {\n    //     let lin = this.linearize();\n    //     let A = lin.moveRigidToStart(newStart,newStartTangent);\n    //     let B = lin.moveRigidToEnd(newEnd,newEndTangent);\n    //     let C = Path.spline(A,B);\n    //     if (!C.start().equals(newStart) || !C.end().equals(newEnd))\n    //         console.log (\"bend: start/end assertion failed\")\n    //     return C;\n    // }\n\n    autoBend(newStart: NPoint, newEnd: NPoint,\n             looseStart: boolean, looseEnd: boolean,\n             dragOptions: DragOptions):Path|singularity\n    {\n        let path=this;\n\n        let result;\n\n        // This is wrong; it might be a loop!\n        // if (path.start().equals(path.end())) {\n        //     return path.applyLinearTransform(translation(path.start(),newStart));\n        // } \n    \n        let [o1,o2] = [dragOptions.distortion, dragOptions.endTangents];\n        if (o2===END_TANGENTS_FIXED) {\n            \n            // Use the bend algorithm, with or without initial scaling\n            let nst = path.startTangent();\n            let net = path.endTangent();\n            result = path.bend(newStart, nst, net, newEnd, o1);\n\n        } else if (o2===END_TANGENTS_FREE) {\n            \n            let f = (o1===DISTORTION_STRETCHY)\n                    ?  stretchTransformation(path.start(),newStart,path.end(),newEnd)\n                    : anglePreservingTransformation(path.start(),newStart,path.end(),newEnd)\n            result = path.applyLinearTransform(f);\n\n        } else {\n            // use the bend algorithm, with loose end behavior, with option o1\n            let nst = path.startTangent();\n            let net = path.endTangent();\n            let LOOSE_END_WAG = 0.7;\n            if (looseStart && looseEnd) {\n                let PQ = path.end().minus(path.start());\n                let RS = newEnd.minus(newStart);\n                let dth = new Angle(RS).minus(new Angle(PQ));\n                result = path.bend(newStart, nst.plus(dth), net.plus(dth), newEnd,o1);\n            } else if (looseEnd) {\n                // Don't preserve the original start tangent, let it flail\n                let PQ = path.end().minus(path.start());\n                let PR = newEnd.minus(newStart);\n                let rot = new Angle(PR).minus(new Angle(PQ));\n                let th = net.reverse();//new Angle(PQ).reverse();\n                th = th.plus(rot.times(1+LOOSE_END_WAG));\n                result = path.bend(newStart, nst, th.reverse(), newEnd,o1);\n            } else if (looseStart) {\n                let PQ = path.start().minus(path.end());\n                let PR = newStart.minus(newEnd);\n                let rot = new Angle(PR).minus(new Angle(PQ));\n                let th = nst;//new Angle(PQ).reverse();\n                th = th.plus(rot.times(1+LOOSE_END_WAG));\n                result = path.bend(newStart, th, net, newEnd,o1);\n            } else {\n                result = path.bend(newStart, nst, net, newEnd,o1);\n            }\n        } \n        if (!result) throw new Error(\"unhandled case\");\n        if (result!==singularity && !result.start().equals(newStart)) console.log('contract failed')\n        if (result!==singularity && !result.end().equals(newEnd)) console.log('contract failed')\n        return result;\n    }\n    \n    length():number {\n        return this.fragmentize().segs\n            .map(seg=>seg.path.length())\n            .reduce((a, b)=> a + b);\n    }\n\n    bounds():Bounds {\n        let r = this.$bounds || this.$reversed?.$bounds;\n        if (!r) {\n            r = this._bounds();\n            this.$bounds = r;\n        }\n        return r;\n    }\n\n    abstract _bounds():Bounds;\n\n\n    // Same path in the backwards direction\n    reverse():Path {\n        let r = this.$reversed;\n        if (!r) {\n            r = this._reverse();\n            r.$reversed = this;\n            this.$reversed = r;\n        }\n        return r;\n    }\n\n    abstract _reverse():Path;\n\n    /**\n     * Replace with a Path whose parameterization is linear with regard to distance\n     * along the curve.  For non-segments, this is done by fragmentizing.\n     */\n    linearize():Chain {\n        let v = this.$linearize\n        if (!v && this.$reversed?.$linearize) {\n            v = this.$reversed.$linearize.reverse();\n        }\n        if (!v) {\n            v =  this._linearize();\n            this.$linearize=v;\n        }\n        return v;\n    }\n\n    _linearize():Chain {\n        // @ts-ignore\n        // console.log(\"linearized 1to \"+this?.segs?.length+\" segs\")\n        let segs: Piece[] = this.fragmentize().segs;\n        // Make each one the right length\n        segs = segs.map((seg) => ({path: seg.path, t1: 0, t2: seg.path.start().dist(seg.path.end())}));\n        // this will stitch them together\n        let Chain = require('./Chain').Chain;\n        return Chain.of(segs);\n        // console.log(\"linearized to \"+v.segs.length+\" segs\")\n        // v.$fragmentize = v.$linearize = v;\n    }\n\n    smooth():Path {\n        let Chain = require('./Chain').Chain;\n        let Segment = require('./Segment').Segment;\n        let scale=20;\n        let threshold=1;\n        if (this.bounds().size()<scale) return this._smooth(threshold);\n        let n = this.splitNatural();\n        if (n===singularity) return this;\n        return Chain.of(n.map(piece => piece.path.smooth())\n                            .map(p => ({path: p, t1: 0, t2: 1})));\n    }\n    _smooth(threshold:number):Path {\n        let Chain = require('./Chain').Chain;\n        let Segment = require('./Segment').Segment;\n        let f: Path = this.fragmentize();\n        if (f.isSegment()) return this;\n        // It's a chain.\n        if (this.start().equals(this.end())) {\n            let n = this.splitNatural();\n            if (n===singularity) return this;\n            else {\n                return Chain.of(n.map(piece => piece.path.smooth())\n                                    .map(p => ({path: p, t1: 0, t2: 1})));\n            } \n        }\n        \n        let segs: Piece[] = (f as Chain).segs;\n        let points:Point[] = segs.map(seg => seg.path.end());\n        points.unshift(segs[0].path.start());\n        let RamerDouglasPeuckerSmoothing = require('./RDPSmoothing').RamerDouglasPeuckerSmoothing;\n        let smoothToCurves = require('./RDPSmoothing').smoothToCurves;\n        let a=points.length;\n        let ps: Point[] = RamerDouglasPeuckerSmoothing(points, threshold);\n        let b=ps.length;\n        console.log(\" smoothing \" + a + \" / \" + b);\n        let v: Path[] | singularity = smoothToCurves(ps);\n        if (v===singularity) {\n            console.log(\"singularity\");\n            return this; \n        } else {\n            let result = Chain.of(v.map(p => ({path: p, t1: 0, t2: 1})))\n            result = result.bend(this.start(), this.startTangent(),\n                                 this.endTangent(), this.end(),\n                                 \"DISTORTION_ORTHORGONAL\");\n            return result;\n        }\n        \n    }\n\n    /**\n     * Fragmentize and then subdivide more until all the segments are of length\n     * less than PRECISION_PATH/2\n     */\n    totallyShatter():Path {\n        let Chain = require('./Chain').Chain;\n        let Segment = require('./Segment').Segment;\n        let v:Path = this.$totallyShatter;\n        if (!v && this.$reversed?.$totallyShatter) {\n            v = this.$reversed.$totallyShatter.reverse();\n        }\n        if (!v) {\n            v = this.smooth();\n            this.$totallyShatter=v;\n        }\n        return v;\n    }\n\n    /**\n     * Recursively splitNatural() until the curve is entirely approximated by Segments\n     * within a precision of PRECISION_PATH.  All of the intermediate points\n     * will be exactly on the curve.\n     * The resulting Chain will be  properly parameterized from 0 to 1 such that\n     * frag(t) approximates path(t) (not necessarily linear with regard to distance\n     * along the curve)\n     */\n    // xxx recursionLimit was addeda\n    // Todo, recursionLimit isn't factored into the cache; it needs to be hardcoded\n    // todo, this actually returns Path\n    fragmentize(recursionLimit:number=1000):Chain {\n        let v = this.$fragmentize;\n        if (!v && this.$reversed?.$fragmentize) {\n            v = this.$reversed.$fragmentize.reverse();\n        }\n        if (!v) {\n            v = this._fragmentize(recursionLimit);\n            this.$fragmentize=v;\n        }\n        return v;\n    }\n    \n    // todo, this actually returns Path\n    _fragmentize(recursionLimit:number=1000):Chain {\n        let Chain = require('./Chain').Chain;\n        if (this.isSegment()) return Chain.of([{path:this,t1:0,t2:1}]);\n        // Here's where one of the pieces might be reduced to a Segment\n        let split=this.splitNatural();\n        if (split === singularity) {\n            return Chain.of([{path:this,t1:0,t2:1}]);\n        }\n        let [cs1, cs2]=split;\n        let recurse = (cs:Piece, recursionLimit:number):Piece[]=>{\n            if (cs.path.isSegment()) return [cs];\n            if (recursionLimit--<0) {\n                return [cs];\n            }\n            let frags = cs.path.fragmentize(recursionLimit).segs;\n            // map frags' parameters 0-1 to parent parameters cs.t1-cs.t2 \n            return  frags.map(f=>({path:f.path, t1:cs.t1 + (cs.t2-cs.t1)*f.t1,\n                                                t2:cs.t1 + (cs.t2-cs.t1)*f.t2}));\n        };\n        let c= Chain.of(recurse(cs1,recursionLimit).concat(recurse(cs2,recursionLimit)));\n        // console.log(\"fragmentized to \"+c.segs.length+\" segs\");\n        // c.$fragmentize=c;\n        return c;\n    }\n    \n    isSegment():boolean {\n        return false;\n    }\n    \n    isSingularity():singularity|false {\n        return false;\n    }\n    \n    /**\n     * Split exactly at some \"natural\" place (depending on type of path)\n     * suitable for the purpose of binary search or breaking apart\n     * into less complex pieces.  The resulting parameterization\n     * must be of the form [{... t1:0, t2:t}, {... t1:t, t2:1}].\n     * The resulting pieces may be approximated by segments within PRECISION_PATH.\n     * Returns SINGULARITY if the original segment was too small to be split.\n     */\n    splitNatural():[Piece,Piece]|singularity {\n        let v = this.$splitNatural;\n        if (!v) {\n            v = this._splitNatural();\n            this.$splitNatural = v;\n        }\n        return v;\n    }\n    \n    _splitNatural():[Piece,Piece]|singularity {\n        let [a,b] = this.split2(0.5);\n        if (a === singularity || b === singularity) return singularity;\n        return [{path:a,t1:0,t2:0.5},{path:b,t1:0.5,t2:1}];\n    }\n\n    /**\n     * Return it as a list of ChainSegment, even if it isn't a Chaina\n     */\n    unchainRecursive():Piece[] {\n        return [{path:this,t1:0,t2:1}]\n    }\n\n    // for debugging chains\n    innerPointsOfNaturalInterest():Point[] {\n        return []\n    }\n    \n    /**\n     * Heuristic.  True if the path strays by a factor of tolerance\n     * away from the straight line between start() and end()\n     */\n    isErrant(tolerance:number):boolean {\n        if (this.start().equals(this.end())) return this.bounds().w>0 || this.bounds().h>0;\n        let f: (xx: P) => P = anglePreservingTransformation(this.start(), Point.of(0,0),\n                                                            this.end(), Point.of(1,0));\n        let norm = this.applyLinearTransform((p) => Point.forP(f(p)));\n        if (norm === singularity) {\n            return false;\n        }\n        let bb=norm.bounds();\n        return  bb.y < -tolerance || bb.my > tolerance\n    }\n\n    abstract startTangent():Angle;\n    abstract endTangent():Angle;\n    \n    equals(other:Path):boolean {\n        return this===other \n               || this.start().equals(other.start()) \n               && this.svgPath()===other.svgPath();    \n    }\n\n    /**\n     * If the path goes through or near the given point (within the given radius)\n     * split it exactly at a point near the given point within radius, else return null\n     */\n    // xx\n    splitForPoint3(p: Point, radius: number): [Path|singularity, Path|singularity]|null {\n        // todo is this good?\n        // return this.genericSplitForPoint(p, precision, finePrecision, endpointPrecision);\n\n        let fp = this._findPoint2(p, radius);\n        if (!fp) return null;\n        if (fp.t<=0) return [singularity,this]; // maybe redundant\n        if (fp.t>=1) return [this,singularity];\n        return this.split2(fp.t);\n\n    }\n\n    /**\n     * \n     * Find the parameter at which the curve is nearest the given point, within the given radius, by fragmentizing\n     * and then obtaining an exact solution.  This could be improved by using recursion on the fragmentized version..\n     */\n    _findPoint2(p:Point, maxRadius:number):SplitWithPrecision|null {\n        if (!this.bounds().intersectsCircle(p, maxRadius))\n            return null;\n        let sps = this.fragmentize().segs.map(cs=>{\n            let seg = cs.path; \n            if (!seg.isSegment()) throw new Error('assertion failed, not a segment');\n            let pt= closestPoint(seg.start(), seg.end(), p);\n            let t = cs.t1 + (cs.t2-cs.t1)*pt.t;\n            return {t:t, precision:p.dist(pt)} as SplitWithPrecision;\n        });\n        let result = sps.reduce((sp1,sp2)=>sp1.precision < sp2.precision ? sp1 : sp2);\n        return result.precision < maxRadius ? result : null;\n    }\n    \n    \n}\nexport interface NearIntersection {\n    p1:P;  // point on first path\n    p2:P;  // point on second path\n    dist:number; // distance between them, exactly zero if they are the same\n}\nfunction reduceNearIntersections(precision:number, fs:(()=>NearIntersection)[]):NearIntersection|null {\n    let result:NearIntersection=null;\n    for (let f of fs) {\n        if (result === null) {\n            result = f();\n            if (result && result.dist>precision) result=null; \n            if (result && !result.dist) return result;\n        } else {\n            let r2 = f();\n            if (r2 && r2.dist>precision) r2=null;\n            if (r2) {\n                if (!r2.dist) return r2;\n                if (r2.dist<result.dist) result=r2;\n            }\n        }\n    }\n    return result;\n}\n\n/** Find intersection of paths made of segments.  This is an unused alterenative to findIntersection.\n * \n * NEEDS REVIEW FOR HANDLINLG OF PRECISION IF WE WANT TO USE IT.\n */\nexport function findFragsIntersection(p1:Path, p2:Path, excluded:Point[],prec:number, recursion:number):NearIntersection|null {\n    recursion++;\n    let b1 = p1.bounds();\n    let b2 = p2.bounds();\n    // if they don't even overlap at all, stop.   Note this is necessary for efficiency\n    // but prevents detection of close misses and narrow angles.\n    if (!b1.intersectsBounds(b2)) return null;\n    // If we're searching too close to the endpoints, stop\n    if (excluded.some(e=>(b1.isInsideCircle(e,prec) || b2.isInsideCircle(e,prec)))) {\n        return null;\n    }\n    // We know the bounds are overlapping.\n    // If we've narrowed it down to segments...\n    let f1 = p1.fragmentize().segs;\n    let f2 = p2.fragmentize().segs;\n    if (f1.length===1 && f2.length===1) {\n        // find exact intersection with segment\n        let seg1 = f1[0].path;\n        let seg2 = f2[0].path;\n        let i = intersectionOfLineSegments(seg1.start(), seg1.end(), seg2.start(), seg2.end());\n        if (i!=null) return {p1:i,p2:i,dist:0};\n        // No exact intersection, or the segments are parallel. \n        // Either way, a nearest approach can always be found at one of the endpoints.\n        return reduceNearIntersections(prec, [() => {\n                                            let x = seg2.start();\n                                            let p = closestPoint(seg1.start(), seg1.end(), x);\n                                            return p && {p1: p, p2: x, dist: dist(p, x)}\n                                        },\n                                        () => {\n                                            let x = seg2.end();\n                                            let p = closestPoint(seg1.start(), seg1.end(), x);\n                                            return p && {p1: p, p2: x, dist: dist(p, x)}\n                                        },\n                                        () => {\n                                            let x = seg1.start();\n                                            let p = closestPoint(seg2.start(), seg2.end(), x);\n                                            return p && {p1: x, p2: p, dist: dist(p, x)}\n                                        },\n                                        () => {\n                                            let x = seg1.end();\n                                            let p = closestPoint(seg2.start(), seg2.end(), x);\n                                            return p && {p1: x, p2: p, dist: dist(p, x)}\n                                        }]);\n    } else {\n        // let #1 be the longer one\n        if (f1.length<f2.length) {\n            [p1,p2,b1,b2,f1,f2] = [p2,p1,b2,b1,f2,f1];\n        }\n        // Split the longer one. We know the longer one has at least\n        // two segments in its frag, so it wasn't a segment and we can keep going.\n        let splitNatural = p1.splitNatural();\n        if (splitNatural===singularity)// I think this can't happen \n            return null; \n        let [q,r] = splitNatural;\n        // Alternate how we recurse on the split to avoid favoring ends of paths\n        if (recursion%4<2) [q,r] = [r,q];\n        return reduceNearIntersections(prec, [()=> findFragsIntersection(q.path, p2, excluded, prec, recursion),\n                                        ()=> findFragsIntersection(r.path, p2, excluded, prec, recursion)]);\n    }\n\n}\n\n// Todo, we didn't actually make the transition from the segment approximation\n// to the actual t-value and actual point.  No-no.\nexport function findPathInnerIntersection2(p1:Path, p2:Path, precision:number):Point {\n    let ni = findFragsIntersection(p1,p2,[p1.start(),p1.end(),p2.start(),p2.end()],precision,0);\n    return ni && ni.dist<=precision && Point.forP(ni.p1);\n}\n\n/**\n * Find an intersection point that doesn't lie on the endpoints.\n * We don't need to find near-intersection points (??)\n * This finds a point that lies on at least one of the curves and is within\n * precision of the other curve.\n */\nexport function findPathInnerIntersection(p1:Path, p2:Path, precision:number):Point {\n    let RECURSION_LIMIT=40;\n    \n    return _findPathInnerIntersections(p1,p2,\n                                       p1.start(),p1.end(),p2.start(),p2.end(),\n                                       precision,RECURSION_LIMIT);\n}\n// xxx todo, it would be better if this returned the parameterizations.\nexport function _findPathInnerIntersections(p1: Path, p2: Path,\n                                     s1:Point,e1:Point,s2:Point,e2:Point, /// original endpoints\n                                     precision: number, recursionLimit: number):Point \n{\n    if (recursionLimit--<0) {\n        console.warn(\"Hit recursion limit in _findPathInnerIntersections\")\n        return null;\n    }\n    let b1 = p1.bounds();\n    let b2 = p2.bounds();\n    \n    // if they don't even overlap at all, stop.   Note this is necessary for efficiency\n    // but prevents detection of close misses and narrow angles.\n    if (!b1.intersectsBounds(b2)) return null;\n    // if we try to make it more fuzzy, performance tanks.\n    // if (!b1.intersectsBoundsFuzzy(b2,PRECISION)) return null;\n    \n    // If we're searching too close to the endpoints, stop\n    if (b1.isInsideCircle(s1,precision)) return null;\n    if (b1.isInsideCircle(e1,precision)) return null;\n    if (b2.isInsideCircle(s2,precision)) return null;\n    if (b2.isInsideCircle(e2,precision)) return null;\n\n\n    // we know they're overlapping.  If they're small enough\n    // we're done.\n    let finePrecision = precision/16;  // somewhat arbitrary\n    // let u = b1.union(b2);\n    // if (Math.max(u.w,u.h)<finePrecision) {\n    //     return p1.start();\n    // } \n    if (b1.extentWith(b2)<finePrecision) {\n        return p1.start();\n    }\n    \n    // else keep chopping; favor the one with the smallest bounding box,\n    // as that seems to be more efficient for some reason????\n    let larger1:boolean = b1.w+b1.h>b2.w+b2.h;\n    if (larger1 != (recursionLimit%5===0)) {\n        // Assume p2 is larger. Swap so that p1 is larger.\n        [p1,p2,s1,s2,e1,e2,b1,b2] = [p2,p1,s2,s1,e2,e1,b2,b1];\n    }\n    // Assume p1 is larger. try to split p2 first.\n    let splitNatural = p2.splitNatural();\n    if (splitNatural===singularity) {\n        //xxx previously, we continued the recursion even though it was a singularith.a\n        // return null;\n        \n        // Didn't work out.  Choose the other one and try again\n        [p1,p2,s1,s2,e1,e2,b1,b2] = [p2,p1,s2,s1,e2,e1,b2,b1];\n        splitNatural = p2.splitNatural();\n        if (splitNatural===singularity) {\n            // They were both singularities upon splitting. \n            return null;\n        }\n    } \n    let [{path:c},{path:d}]= splitNatural;\n    // alternate the order so we're not favoring points close to endpoints\n    if (recursionLimit%4<2) {\n        return    _findPathInnerIntersections(p1,c,s1,e1,s2,e2,precision,recursionLimit) ||\n                  _findPathInnerIntersections(p1,d,s1,e1,s2,e2,precision,recursionLimit);\n    } else {\n        return _findPathInnerIntersections(p1, d, s1, e1, s2, e2, precision, recursionLimit) || \n               _findPathInnerIntersections(p1, c, s1, e1, s2, e2, precision, recursionLimit);\n    }\n     \n\n}\n\nexport interface SplitWithPrecision {\n    t:number;  // splitting parameter\n    precision:number; /// precision that was achieved\n}\n\n","import {P} from \"../Bounds\";\nimport {equalsfp, PRECISION_EPSILON} from \"./const\";\n\n\nexport class Point implements P {\n    static IdReg : Record<string,string>={};\n    static IdSeq : number=0;\n    readonly x: number;\n    readonly y: number;\n    private _id: string;\n    private _svg:string;\n\n    static of(x:number, y:number):Point {\n        return new Point(x,y);\n    }\n    protected constructor(x: number, y: number) {\n        this.x = x;\n        this.y = y;\n    }\n\n    static forP(p: P): Point {\n        return p instanceof Point ? p : Point.of(p.x, p.y);\n    }\n    hash():string {\n        let h=0;\n        let hasher=this.svg();\n        for (let i=0;i<hasher.length;i++) {\n            h = (31*h+hasher.charCodeAt(i))%100;\n        }\n        return (h%1000).toString(36);\n    }\n    id(): string {\n        if (!this._id) this._id=Point.IdReg[this.svg()];\n        if (!this._id) this._id=Point.IdReg[this.svg()]= `P${(Point.IdSeq++).toString(36)}.${this.hash()}`;\n        return this._id;\n    }\n\n    svg():string {\n        if (!this._svg) this._svg = this.x+\",\"+this.y;\n        return this._svg;\n    }\n    hString(): string {\n        return this.id()\n        // +`(${this.x},${this.y})`;\n    }\n\n    equals(other: P): boolean {\n        return other===this || other && other.x===this.x && other.y===this.y;\n    }\n\n    // distance squared\n    d2(other: P): number {\n        let dx = (this.x - other.x);\n        let dy = (this.y - other.y);\n        return dx * dx + dy * dy;\n    }\n\n    dist(other: P): number {\n        return Math.sqrt(this.d2(other));\n    }\n    \n    // Equals ignoring rounding errors\n    equalsfp(other:P) {\n        return equalsfp(this.x,other.x) && equalsfp(this.y,other.y)\n    }\n    \n    distxy(x:number,y:number):number {\n        let dx=this.x-x;\n        let dy=this.y-y;\n        return Math.sqrt(dx*dx+dy*dy);\n    }\n\n    to(P: Point, u: number): Point {\n        return Point.of(this.x + (P.x - this.x) * u,\n                         this.y + (P.y - this.y) * u);\n    }\n\n    plus(v:Vector): Point {\n        return Point.of(this.x + v.dx, this.y + v.dy);\n    }\n\n    minus(p: P): Vector {\n        return new Vector(this.x - p.x, this.y - p.y);\n    }\n    \n}\n\nexport class Vector {\n    constructor(public dx: number, public dy: number) {}\n    hString():string {\n        return `<${this.dx},${this.dy}>`\n    }\n    abs(): number {\n        return Math.sqrt(this.dx ** 2 + this.dy ** 2);\n    }\n    atan(): number {\n        return Math.atan2(this.dy, this.dx);\n    }\n    plus(other: Vector): Vector {\n        return new Vector(this.dx + other.dx, this.dy + other.dy);\n    }\n    minus(other: Vector): Vector {\n        return new Vector(this.dx - other.dx, this.dy - other.dy);\n    }\n    times(scalar:number): Vector {\n        return new Vector(this.dx*scalar, this.dy*scalar);\n    }\n    toLength(scalar: number): Vector {\n        const magnitude = this.abs();\n        return magnitude === 0 ? new Vector(0, 0)\n                               : new Vector(this.dx * scalar / magnitude, \n                                            this.dy * scalar / magnitude);\n    }\n    rotate(angle:Angle):Vector {\n        return this.timesComplex(angle.vector());\n    }\n    // Complex number multiplication\n    timesComplex(other: Vector): Vector {\n        return new Vector(this.dx * other.dx - this.dy * other.dy,\n                          this.dx * other.dy + this.dy * other.dx);\n    }\n    divideComplex(other: Vector): Vector {\n        const d = other.abs() ** 2;\n        return new Vector((this.dx * other.dx + this.dy * other.dy) / d,\n                          (this.dy * other.dx - this.dx * other.dy) / d);\n    }\n    unit(): Vector {\n        return this.toLength(1);\n    }\n    dot(other: Vector): number {\n        return this.dx * other.dx + this.dy * other.dy;\n    }\n    cross(other: Vector): number {\n        return this.dx * other.dy - this.dy * other.dx;\n    }\n}\n\nexport class Angle {\n    static PI:Angle = new Angle(new Vector(-1,0));\n    private readonly v:Vector;\n    \n    constructor(v:Vector) {\n        this.v=v.unit();\n    }\n    \n    static forAngle(theta:number) {\n        return new Angle(new Vector(Math.cos(theta), Math.sin(theta)));\n    }\n    hString() {\n        return String('∠'+Math.round(360*this.radians()/2/Math.PI)+\"°\");\n    }\n    radians():number {\n        return this.v.atan();\n    }\n    // Same as angle+PI\n    reverse():Angle {\n        return new Angle(this.v.times(-1));\n    }\n    plus(other:Angle):Angle {\n        return new Angle(this.v.timesComplex(other.v));\n    }\n    minus(other:Angle):Angle {\n        return new Angle(this.v.divideComplex(other.v));\n    }\n    times(scalar:number):Angle {\n        return Angle.forAngle(this.radians() * scalar);\n    }\n    vector():Vector {\n        return this.v;\n    }\n}","import {Point} from \"./Point\";\nimport {Path, singularity} from \"./Path\";\nimport {Segment} from \"./Segment\";\nimport {Cubic} from \"./Cubic\";\n\n\nexport function smoothToCurves(points:Point[]): Path[]|singularity {\n    // Whack any adjacent equivalent points\n    let p = points[0];\n    let p2 = [p];\n    for (let i=1;i<points.length;i++) {\n        let a = points[i];\n        if (!a.equalsfp(p)) {\n            p2.push(a);\n            p=a;\n        }\n    }\n    points = p2;\n    if (points.length<2) return singularity;\n    if (points.length===2) {\n        // we already checked for singularity\n        return [Segment.of(points[0],points[1])] as Segment[];\n    } \n    let curves:(Cubic|Segment)[]=[];\n    for (let i=1;i<points.length;i++) {\n        let a = i===1 ? null : points[i-2];\n        let b = points[i-1];\n        let c = points[i];\n        let d = i===points.length-1 ? null : points[i+1];\n        let s = b.dist(c)/3; // length of control points\n        let p,q:Point;  // control points\n        if (!a || a.equalsfp(c)) { // to prevent dbz\n            p = b;\n        } else {\n            p = b.plus(c.minus(a).toLength(s));\n        }\n        if (!d || d.equalsfp(b)) {\n            q = c;\n        } else {\n            q = c.plus(b.minus(d).toLength(s));\n        }\n        curves.push(Cubic.of(b,p,q,c) as Cubic|Segment);\n    }\n    return curves;\n}\n\nexport function RamerDouglasPeuckerSmoothing(points: Point[], tolerance: number): Point[] {\n    if (points.length <= 2) {\n        return points;\n    }\n    let maxDistance = 0;\n    let index = 0;\n    for (let i = 1; i < points.length - 1; i++) {\n        const distance = perpendicularDistance(points[i], points[0], points[points.length - 1]);\n        if (distance > maxDistance) {\n            maxDistance = distance;\n            index = i;\n        }\n    }\n    if (maxDistance > tolerance) {\n        const left = points.slice(0, index + 1);\n        const right = points.slice(index);\n        const simplifiedLeft = RamerDouglasPeuckerSmoothing(left, tolerance);\n        const simplifiedRight = RamerDouglasPeuckerSmoothing(right, tolerance);\n        return simplifiedLeft.slice(0, simplifiedLeft.length - 1).concat(simplifiedRight);\n    } else {\n        return [points[0], points[points.length - 1]];\n    }\n}\n\n// Calculate the perpendicular distance from a point to a line\nfunction perpendicularDistance(point: Point, lineStart: Point, lineEnd: Point): number {\n    const dx = lineEnd.x - lineStart.x;\n    const dy = lineEnd.y - lineStart.y;\n    const mag = dx * dx + dy * dy;\n    const u = ((point.x - lineStart.x) * dx + (point.y - lineStart.y) * dy) / mag;\n    const x = lineStart.x + u * dx;\n    const y = lineStart.y + u * dy;\n    const dx1 = x - point.x;\n    const dy1 = y - point.y;\n    return Math.sqrt(dx1 * dx1 + dy1 * dy1);\n}","import {Bounds, P} from \"../Bounds\";\nimport {closestPoint} from \"./const\";\nimport {Path, singularity, SplitWithPrecision} from \"./Path\";\nimport {Angle, Point} from \"./Point\";\nimport {Chain} from \"./Chain\";\nimport {NPoint} from \"../Reacts/Mos\";\nimport {DISTORTION_STRETCHY, DistortionOption} from \"./DragOptions\";\n\nexport class Segment extends Path {\n\n    readonly p1: Point;\n    readonly p2: Point;\n    private _svg: string;\n    private _hString: string;\n\n    /** returns a segment unless p1.equalsfp(p2) */\n    static of(p1:Point, p2:Point):Segment|singularity {\n        if (p1.equalsfp(p2)) return singularity;\n        return new Segment(p1,p2);\n    }\n    /** returns a segment without checking for singularity */\n    static ofNonsingular(p1:Point, p2:Point):Segment {\n        return new Segment(p1,p2);\n    };\n    \n    static dividedSegment(p1:Point, p2:Point, maxLength:number):Segment[] {\n        \n        let s = new Segment(p1,p2);\n        let d = s.length() / maxLength;\n        if (d<=1) return [s];\n        \n        // Todo divide the line segment (p1,p2)\n        // into d equal sized segments\n        const n = Math.ceil(d);\n        const deltaX = (p2.x - p1.x) / n;\n        const deltaY = (p2.y - p1.y) / n;\n        const segments: Segment[] = [];\n\n        for (let i = 0; i < n; i++) {\n            const start = Point.of(p1.x + deltaX * i, p1.y + deltaY * i);\n            const end = Point.of(p1.x + deltaX * (i + 1), p1.y + deltaY * (i + 1));\n            segments.push(new Segment(start, end));\n        }\n        return segments;\n    }    \n    private constructor(p1: Point, p2: Point) {\n        super();\n        this.p1 = p1;\n        this.p2 = p2;\n    }\n\n    \n    svgPath(): string { \n        if (!this._svg) this._svg=\"L\"+this.p2.svg();\n        return this._svg;\n    }\n\n    hString(): string {\n        if (!this._hString) this._hString = `${this.id()}[${this.p1.hString()},${this.p2.hString()}]`;\n        return this._hString;\n    }\n\n    idPrefix():string { return \"S\" }\n    \n    start(): Point { return this.p1; }\n\n    end(): Point { return this.p2; }\n\n    _reverse = (): Segment => {\n        return  Segment.ofNonsingular(this.p2, this.p1);\n    }\n\n    _bounds(): Bounds {\n            let x = Math.min(this.p1.x, this.p2.x);\n            let y = Math.min(this.p1.y, this.p2.y);\n            let x2 = Math.max(this.p1.x, this.p2.x);\n            let y2 = Math.max(this.p1.y, this.p2.y);\n            return new Bounds(x, y, x2 - x, y2 - y);\n    }\n\n    split2(t: number): [Segment|singularity, Segment|singularity]{\n        let x = this.p1.to(this.p2, t);\n        return [Segment.of(this.p1, x), Segment.of(x, this.p2)];\n    }\n\n    pointAt(t:number):Point {\n        return  this.p1.to(this.p2, t);\n    }\n\n    \n    _linearize():Chain {\n        let Chain = require('./Chain').Chain;\n        return Chain._of([{path:this,t1:0,t2:1}]);\n    }\n\n    _bend(newStart: NPoint, newStartTangent: Angle, newEndTangent: Angle, newEnd: NPoint, stretch: DistortionOption = DISTORTION_STRETCHY): Path|singularity \n    {\n        // xxx this was added\n        if (newStart.equalsfp(newEnd)) {\n            console.log(\"bending to a degenerate point\");\n            return Segment.of(newStart,newEnd);\n        }\n        \n        let Cubic = require('./Cubic').Cubic;\n        let cub: typeof Cubic | singularity = Cubic._of(this.p1, this.p1, this.p2, this.p2);\n        if (cub === singularity) return cub;\n        return cub.bend(newStart, newStartTangent, newEndTangent, newEnd, stretch);\n    }\n\n    length():number {\n        return this.p1.dist(this.p2);\n    }\n    isErrant(tolerance: number): boolean {\n        return false;\n    }\n\n    applyLinearTransform(f: (_: Point) => Point): Path|singularity {\n        return Segment.of(f(this.p1), f(this.p2));\n    }\n\n    // split within precision of the point and break\n    // into two pieces  \n    // or else return [this]\n    // xx\n    splitForPoint3(p: Point, maxRadius: number): [Path|singularity, Path|singularity]|null {\n        let x: Point = Point.forP(closestPoint(this.p1, this.p2, p));\n        // if (x.dist(this.p1) < endpointPrecision || x.dist(this.p2) < endpointPrecision) {\n        //     return [this];\n        // }\n        if (x.equals(this.p1)) return [singularity,this];\n        if (x.equals(this.p2)) return [this,singularity];\n        if (x.dist(p) < maxRadius) {\n            return [Segment.of(this.p1, x), Segment.of(x, this.p2)];\n        }\n        return null;\n    }\n\n    _findPoint(p: Point, coarsePrecision: number, finePrecision: number, recursionLimit: number): SplitWithPrecision {\n        let found = closestPoint(this.p1, this.p2, p);\n        let dist = p.dist(found);\n        if (dist <= coarsePrecision) return {precision: dist, t: found.t}\n        return null;\n    }\n\n    _findPoint2(p:Point, maxRadius:number):SplitWithPrecision|null {\n        let coarsePrecision=maxRadius;\n        let found = closestPoint(this.p1, this.p2, p);\n        let dist = p.dist(found);\n        if (dist <= coarsePrecision) return {precision: dist, t: found.t}\n        return null;\n    }\n    \n    startTangent(): Angle {\n        return new Angle(this.p2.minus(this.p1));\n    }\n\n    endTangent(): Angle {\n        return new Angle(this.p2.minus(this.p1));\n    }\n\n    static distancePointToLineSegment(point:P,segmentStart:P,segmentEnd:P): number {\n        const { x: px, y: py } = point;\n        const { x: ax, y: ay } = segmentStart;\n        const { x: bx, y: by } = segmentEnd;\n        const dx = bx - ax;\n        const dy = by - ay;\n        \n        // xxx this was added\n        if (dx===0&&dy===0) { \n            // degenerate segment\n            return Point.forP(point).dist(segmentStart);\n        }\n        if ((dx * dx + dy * dy)<0.0000001) {\n            // console.log('too small')\n        }\n        \n        \n        const t = ((px - ax) * dx + (py - ay) * dy) / (dx * dx + dy * dy);\n        if (t < 0) {\n            // P is closest to A\n            return Math.sqrt((px - ax) * (px - ax) + (py - ay) * (py - ay));\n        } else if (t > 1) {\n            // P is closest to B\n            return Math.sqrt((px - bx) * (px - bx) + (py - by) * (py - by));\n        } else {\n            // nearest point on the segment\n            const near = {x: ax + t * dx, y: ay + t * dy};\n            return Math.sqrt(\n                (px - near.x) * (px - near.x) +\n                (py - near.y) * (py - near.y)\n            );\n        }\n    }\n    isSegment():boolean {\n        return true;\n    }\n\n    isSingularity():singularity|false {\n        return this.p1.equals(this.p2) ? singularity : false;\n    }\n}","import {P} from \"../Bounds\";\nimport {Point} from \"./Point\";\n\nconst FRONT_SVG = \"displaySvg\";\nconst BACK_SVG = \"origSvg\";\n// both should have the same size\nconst CONTAINER_FRONT=\"svgParent\";\n\n// For checking equality\nexport const PRECISION_EPSILON = 10**-14 // note Number.EPSILON is around 2*10^-16\n// The minimum distance between any two path endpoints\nexport const PRECISION_PIXEL=1.0;\n// The precision to use for numerical estimation of intersections and nearest-points\nexport const PRECISION_NUMERICAL = PRECISION_PIXEL / 1024;\n// To define approximate equivalence of paths\nexport const PRECISION_PATH = PRECISION_PIXEL / 16;\n\nexport var OriginalSvgDocument:{svg:SVGSVGElement|null} = {svg:null };\n\nexport function equalsfp(a:number,b:number) {\n    return Math.abs(a-b)<PRECISION_EPSILON;\n}\n\nfunction container(): HTMLElement { \n    let e =  document.getElementById(CONTAINER_FRONT);\n    if (!e) throw new Error(\"unexpected\");\n    return e;\n}\n\nfunction svgFront():SVGSVGElement {\n    return document.getElementById(FRONT_SVG) as unknown as SVGSVGElement;\n}\nfunction svgBack():SVGSVGElement {\n    return document.getElementById(BACK_SVG) as unknown as SVGSVGElement;\n}\n\n\n/////////// math ////////////\n\nfunction minus(p:P, q:P):P {\n    return {x:p.x-q.x, y:p.y-q.y};\n}\nfunction dot(p:P, q:P):number {\n    return p.x*q.x+ p.y*q.y;\n}\nexport function dist(p:P, q:P):number {\n    return Math.sqrt(dot(p,q));\n}\nfunction plus(p:P, q:P):P {\n    return {x:p.x+q.x, y:p.y+q.y};\n}\nfunction atan(p:P, q:P):number {\n    return Math.atan2(q.y-p.y,q.x-p.x);\n}\nfunction rotate(p:P, theta:number):P {\n    return {x:p.x*Math.cos(theta) - p.y*Math.sin(theta),\n            y:p.x*Math.sin(theta) + p.y*Math.cos(theta)};\n}\nfunction scalarMultiply(a:number,p:P) {\n    return {x:a*p.x, y:a*p.y};\n}\n\nexport function translation(p:P,p2:P):(_:P)=>Point {\n    let dx=p2.x-p.x;\n    let dy=p2.y-p.y;\n    return (input:P)=>(Point.of(input.x+dx,input.y+dy));\n}\n\n// The linear transformation that preserves angles\n// and maps p to p2, q to q2.  no rounding errors on those particular points.\nexport function anglePreservingTransformation(p:Point, p2:Point, q:Point, q2:Point):(_:P)=>Point {\n    \n    // To enforce no rounding errors on the endpoints.\n    let sanitize = (f:(_:P)=>Point) => (x:P) => (p.equals(x) ? p2 : q.equals(x) ? q2 : f(x));\n\n    let d = minus(q,p);\n    if (dot(d,d)<.000000001) {\n        console.log(\"anglePreservingTransformation: element too small, not applying rotation: \"\n                    +Point.forP(p).hString()+\"-\"+Point.forP(q).hString());\n        return sanitize((input: P) => (Point.of(input.x + p2.x - p.x, input.y + p2.y - p.y)));\n    }\n    // Todo, rewrite in terms of Points and Vectors\n    let d2 = minus(q2,p2);\n    let r = Math.sqrt(dot(d2,d2)/dot(d,d));\n    let t = atan(p,q);\n    let t2 = atan(p2,q2);\n    let dt = t2-t;\n    return sanitize((input:P):Point=>{\n        let a = input;\n        a = minus(a,p);\n        a = scalarMultiply(r,a);\n        a = rotate(a, dt);\n        a = plus(a,p2);\n        return Point.forP(a);\n    });\n}\n\nexport function stretchTransformation(p:Point, p2:Point, q:Point, q2:Point):(_:P)=>Point {\n\n    // To enforce no rounding errors on the endpoints.\n    let sanitize = (f:(_:P)=>Point) => (x:P) => (p.equals(x) ? p2 : q.equals(x) ? q2 : f(x));\n\n    let pq = minus(q,p);\n    if (dot(pq,pq)<.000000001) {\n        console.log(\"stretchTransformation: element too small, not applying rotation: \"\n                    +Point.forP(p).hString()+\"-\"+Point.forP(q).hString());\n        return sanitize((input: P) => (Point.of(input.x + p2.x - p.x, input.y + p2.y - p.y)));\n    }\n    // Todo, rewrite in terms of Points and Vectors\n    let pq2 = minus(q2,p2);  // final distance\n    let r = Math.sqrt(dot(pq2,pq2)/dot(pq,pq));  // ratio of distances\n    let t = atan(p,q);   // original angle\n    let t2 = atan(p2,q2);  // final angle\n    let dt = t2-t;      // rotation\n    return sanitize((input:P):Point=>{\n        let a = input;\n        a = minus(a,p);  // translate to origin\n        a = rotate(a, -t);\n        a = Point.of(a.x*r, a.y) // not scalarMultiply(r,a);\n        a = rotate(a, t2);\n        a = plus(a,p2);\n        return Point.forP(a);\n    });\n}\n\n\n// Find the closest point to x on the line segment a->b, and the parameter\nexport function closestPoint(a:P, b:P, x:P): P & {t:number} {\n    let ab = minus(b,a);\n    let len2 = (dot(ab,ab));\n    let ax = minus(x,a);\n    let t = dot(ab,ax) / len2;\n    t = Math.max(0, Math.min(t, 1));\n    return {x: a.x + ab.x * t, y: a.y + ab.y * t, t:t};\n}\n\n\n//https://chat.openai.com/chat/2513291f-cbef-4472-a353-7b52b0d4cf77\n// Returns the point of intersection if the segments aren't parallel\nexport function intersectionOfLineSegments(a1: P, a2: P, b1: P, b2: P): P | null {\n    function dotProduct(p: P, q: P): number {\n        return p.x * q.x + p.y * q.y;\n    }\n\n    function subtract(p: P, q: P): P {\n        return { x: p.x - q.x, y: p.y - q.y };\n    }\n    const p = subtract(a2, a1);\n    const q = subtract(b2, b1);\n    const r = subtract(a1, b1);\n    const pq = dotProduct(p, q);\n    const pp = dotProduct(p, p);\n    const qq = dotProduct(q, q);\n    const rp = dotProduct(r, p);\n    const rq = dotProduct(r, q);\n    const denominator = pq * pq - pp * qq;\n\n    // Check if the two line segments are parallel\n    if (denominator === 0) {\n        return null;\n    }\n\n    const t = (rp * qq - rq * pq) / denominator;\n    const u = (rp * pq - rq * pp) / denominator;\n\n    // Check if the intersection point is within both line segments\n    if (t >= 0 && t <= 1 && u >= 0 && u <= 1) {\n        return { x: a1.x + t * p.x, y: a1.y + t * p.y };\n    } else {\n        return null;\n    }\n}\n\n\nexport function shapeColor(x:number):string {\n    // x = Math.max(0,Math.min(2,x))\n    x = Math.max(0,x);\n    x = 2*x/(x+1);\n    \n    let r, g, b;\n    if(x <= 1) {\n        x = 1-x;\n        r = 128*(1-x) + 127 * x;\n        g = 128*(1-x) + 0 * x;\n        b = 128*(1-x) + 0 * x;\n    } else {\n        x = x-1;\n        r = 128*(1-x) + 0 * x;\n        g = 128*(1-x) + 127 * x;\n        b = 128*(1-x) + 0 * x;\n    }\n    return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},0.6)`;\n}\n\nexport {FRONT_SVG};\nexport {BACK_SVG};\nexport {CONTAINER_FRONT};\nexport {container}\nexport {svgFront}\nexport {svgBack}\n","/* eslint-disable */\n \n/*\n// https://gist.github.com/timo22345/9413158\n\nRandom path and shape generator, flattener test base: https://jsfiddle.net/fjm9423q/embedded/result/\nBasic usage example: https://jsfiddle.net/nrjvmqur/embedded/result/\n\nBasic usage: flatten(document.getElementById('svg'));\n\nWhat it does: Flattens elements (converts elements to paths and flattens transformations).\nIf the argument element (whose id is above 'svg') has children, or it's descendants has children,\nthese children elements are flattened also.\n\nIf you want to modify path coordinates using non-affine methods (eg. perspective distort),\nyou can convert all segments to cubic curves using:\n\nflatten(document.getElementById('svg'), true);\n\nThere are also arguments 'toAbsolute' (convert coordinates to absolute) and 'dec',\nnumber of digits after decimal separator.\n*/\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2014 Timo (https://github.com/timo22345)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nSVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function (toElement) {\n    return toElement.getScreenCTM().inverse().multiply(this.getScreenCTM());\n};\n\n(function () {\n    var p2s = /,?([achlmqrstvxz]),?/gi;\n    var convertToString = function (arr) {\n        return arr.join(',').replace(p2s, '$1');\n    };\n\n    // Flattens transformations of element or it's children and sub-children\n    // elem: DOM element\n    // toCubics: converts all segments to cubics\n    // toAbsolute: converts all segments to Absolute\n    // dec: number of digits after decimal separator\n    // Returns: no return value\n    function flatten(elem, toCubics, toAbsolute, rectAsArgs, dec)\n    {\n        if (!elem) return;\n        if (typeof (rectAsArgs) == 'undefined') rectAsArgs = false;\n        if (typeof (toCubics) == 'undefined') toCubics = false;\n        if (typeof (toAbsolute) == 'undefined') toAbsolute = false;\n        if (typeof (dec) == 'undefined') dec = false;\n\n        if (elem && elem.children && elem.children.length)\n        {\n            for (var i = 0, ilen = elem.children.length; i < ilen; i++)\n            {\n                //console.log(elem.children[i]);\n                flatten(elem.children[i], toCubics, toAbsolute, rectAsArgs, dec);\n            }\n            elem.removeAttribute('transform');\n            return;\n        }\n        if (!(elem instanceof SVGCircleElement ||\n              elem instanceof SVGRectElement ||\n              elem instanceof SVGEllipseElement ||\n              elem instanceof SVGLineElement ||\n              elem instanceof SVGPolygonElement ||\n              elem instanceof SVGPolylineElement ||\n              elem instanceof SVGPathElement))\n        {\n            return;\n        }\n\n        path_elem = convertToPath(elem, rectAsArgs);\n        //console.log('path_elem', $(path_elem).wrap('<div />').parent().html() );\n        //$(path_elem).unwrap();\n\n        if (!path_elem || path_elem.getAttribute(d) == '') return 'M 0 0';\n\n        // Rounding coordinates to dec decimals\n        if (dec || dec === 0)\n        {\n            if (dec > 15) {\n                dec = 15;\n            } else if (dec < 0) dec = 0;\n        } else {\n            dec = false;\n        }\n\n        function r(num)\n        {\n            if (dec !== false) {\n                return Math.round(num * Math.pow(10, dec)) / Math.pow(10, dec);\n            } else {\n                return num;\n            }\n        }\n\n        var arr;\n        //var pathDOM = path_elem.node;\n        var pathDOM = path_elem;\n        var d = pathDOM.getAttribute('d').trim();\n\n        // If you want to retain current path commans, set toCubics to false\n        if (!toCubics)\n        { // Set to false to prevent possible re-normalization. \n            arr = parsePathString(d); // str to array\n            var arr_orig = arr;\n            arr = pathToAbsolute(arr); // mahvstcsqz -> uppercase\n        }\n            // If you want to modify path data using nonAffine methods,\n        // set toCubics to true\n        else {\n            arr = path2curve(d); // mahvstcsqz -> MC\n            var arr_orig = arr;\n        }\n        var svgDOM = pathDOM.ownerSVGElement;\n\n        // Get the relation matrix that converts path coordinates\n        // to SVGroot's coordinate space\n        var matrix = pathDOM.getTransformToElement(svgDOM);\n\n        // The following code can bake transformations\n        // both normalized and non-normalized data\n        // Coordinates have to be Absolute in the following\n        var i = 0,\n            j, m = arr.length,\n            letter = '',\n            letter_orig = '',\n            x = 0,\n            y = 0,\n            point, newcoords = [],\n            newcoords_orig = [],\n            pt = svgDOM.createSVGPoint(),\n            subpath_start = {}, prevX = 0,\n            prevY = 0;\n        subpath_start.x = null;\n        subpath_start.y = null;\n        for (; i < m; i++)\n        {\n            letter = arr[i][0].toUpperCase();\n            letter_orig = arr_orig[i][0];\n            newcoords[i] = [];\n            newcoords[i][0] = arr[i][0];\n\n            if (letter == 'A')\n            {\n                x = arr[i][6];\n                y = arr[i][7];\n\n                pt.x = arr[i][6];\n                pt.y = arr[i][7];\n                newcoords[i] = arc_transform(arr[i][1], arr[i][2], arr[i][3], arr[i][4], arr[i][5], pt, matrix);\n                // rounding arc parameters\n                // x,y are rounded normally\n                // other parameters at least to 5 decimals\n                // because they affect more than x,y rounding\n                newcoords[i][1] = newcoords[i][1]; //rx\n                newcoords[i][2] = newcoords[i][2]; //ry\n                newcoords[i][3] = newcoords[i][3]; //x-axis-rotation\n                newcoords[i][6] = newcoords[i][6]; //x\n                newcoords[i][7] = newcoords[i][7]; //y\n            } else if (letter != 'Z')\n            {\n                // parse other segs than Z and A\n                for (j = 1; j < arr[i].length; j = j + 2)\n                {\n                    if (letter == 'V') {\n                        y = arr[i][j];\n                    } else if (letter == 'H') {\n                        x = arr[i][j];\n                    } else {\n                        x = arr[i][j];\n                        y = arr[i][j + 1];\n                    }\n                    pt.x = x;\n                    pt.y = y;\n                    point = pt.matrixTransform(matrix);\n\n                    if (letter == 'V' || letter == 'H')\n                    {\n                        newcoords[i][0] = 'L';\n                        newcoords[i][j] = point.x;\n                        newcoords[i][j + 1] = point.y;\n                    } else {\n                        newcoords[i][j] = point.x;\n                        newcoords[i][j + 1] = point.y;\n                    }\n                }\n            }\n            if ((letter != 'Z' && subpath_start.x === null) || letter == 'M')\n            {\n                subpath_start.x = x;\n                subpath_start.y = y;\n            }\n            if (letter == 'Z')\n            {\n                x = subpath_start.x;\n                y = subpath_start.y;\n            }\n        }\n        // Convert all that was relative back to relative\n        // This could be combined to above, but to make code more readable\n        // this is made separately.\n        var prevXtmp = 0;\n        var prevYtmp = 0;\n        subpath_start.x = '';\n        for (i = 0; i < newcoords.length; i++)\n        {\n            letter_orig = arr_orig[i][0];\n            if (letter_orig == 'A' || letter_orig == 'M' || letter_orig == 'L' || letter_orig == 'C' || letter_orig == 'S' || letter_orig == 'Q' || letter_orig == 'T' || letter_orig == 'H' || letter_orig == 'V')\n            {\n                var len = newcoords[i].length;\n                var lentmp = len;\n                if (letter_orig == 'A')\n                {\n                    newcoords[i][6] = r(newcoords[i][6]);\n                    newcoords[i][7] = r(newcoords[i][7]);\n                } else {\n                    lentmp--;\n                    while (--lentmp) newcoords[i][lentmp] = r(newcoords[i][lentmp]);\n                }\n                prevX = newcoords[i][len - 2];\n                prevY = newcoords[i][len - 1];\n            } else if (letter_orig == 'a')\n            {\n                prevXtmp = newcoords[i][6];\n                prevYtmp = newcoords[i][7];\n                newcoords[i][0] = letter_orig;\n                newcoords[i][6] = r(newcoords[i][6] - prevX);\n                newcoords[i][7] = r(newcoords[i][7] - prevY);\n                prevX = prevXtmp;\n                prevY = prevYtmp;\n            } else if (letter_orig == 'm' || letter_orig == 'l' || letter_orig == 'c' || letter_orig == 's' || letter_orig == 'q' || letter_orig == 't' || letter_orig == 'h' || letter_orig == 'v')\n            {\n                var len = newcoords[i].length;\n                prevXtmp = newcoords[i][len - 2];\n                prevYtmp = newcoords[i][len - 1];\n                for (j = 1; j < len; j = j + 2)\n                {\n                    if (letter_orig == 'h' || letter_orig == 'v') {\n                        newcoords[i][0] = 'l';\n                    } else {\n                        newcoords[i][0] = letter_orig;\n                    }\n                    newcoords[i][j] = r(newcoords[i][j] - prevX);\n                    newcoords[i][j + 1] = r(newcoords[i][j + 1] - prevY);\n                }\n                prevX = prevXtmp;\n                prevY = prevYtmp;\n            }\n            if ((letter_orig.toLowerCase() != 'z' && subpath_start.x == '') || letter_orig.toLowerCase() == 'm')\n            {\n                subpath_start.x = prevX;\n                subpath_start.y = prevY;\n            }\n            if (letter_orig.toLowerCase() == 'z')\n            {\n                prevX = subpath_start.x;\n                prevY = subpath_start.y;\n            }\n        }\n        if (toAbsolute) newcoords = pathToAbsolute(newcoords);\n        path_elem.setAttribute('d', convertToString(newcoords));\n        path_elem.removeAttribute('transform');\n    }\n\n    // Converts all shapes to path retaining attributes.\n    // oldElem - DOM element to be replaced by path. Can be one of the following:\n    //   ellipse, circle, path, line, polyline, polygon and rect.\n    // rectAsArgs - Boolean. If true, rect roundings will be as arcs. Otherwise as cubics.\n    // Return value: path element.\n    // Source: https://github.com/duopixel/Method-Draw/blob/master/editor/src/svgcanvas.js\n    // Modifications: Timo (https://github.com/timo22345)\n    function convertToPath(oldElem, rectAsArgs)\n    {\n        if (!oldElem) return;\n        // Create new path element\n        var path = document.createElementNS(oldElem.ownerSVGElement.namespaceURI, 'path');\n\n        // All attributes that path element can have\n        var attrs = ['requiredFeatures', 'requiredExtensions', 'systemLanguage', 'id', 'xml:base', 'xml:lang', 'xml:space', 'onfocusin', 'onfocusout', 'onactivate', 'onclick', 'onmousedown', 'onmouseup', 'onmouseover', 'onmousemove', 'onmouseout', 'onload', 'alignment-baseline', 'baseline-shift', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cursor', 'direction', 'display', 'dominant-baseline', 'enable-background', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'image-rendering', 'kerning', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'mask', 'opacity', 'overflow', 'pointer-events', 'shape-rendering', 'stop-color', 'stop-opacity', 'stroke', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'unicode-bidi', 'visibility', 'word-spacing', 'writing-mode', 'class', 'style', 'externalResourcesRequired', 'transform', 'd', 'pathLength'];\n\n        // Copy attributes of oldElem to path\n        var attrName, attrValue;\n        for (var i = 0, ilen = attrs.length; i < ilen; i++)\n        {\n            var attrName = attrs[i];\n            var attrValue = oldElem.getAttribute(attrName);\n            if (attrValue) path.setAttribute(attrName, attrValue);\n        }\n\n        var d = '';\n\n        var valid = function (val) {\n            return !(typeof (val) !== 'number' || val == Infinity || val < 0);\n        }\n\n        // Possibly the cubed root of 6, but 1.81 works best\n        var num = 1.81;\n        var tag = oldElem.tagName;\n        switch (tag)\n        {\n            case 'ellipse':\n            case 'circle':\n                var rx = +oldElem.getAttribute('rx'),\n                    ry = +oldElem.getAttribute('ry'),\n                    cx = +oldElem.getAttribute('cx'),\n                    cy = +oldElem.getAttribute('cy');\n                if (tag == 'circle')\n                {\n                    rx = ry = +oldElem.getAttribute('r');\n                }\n\n                d += convertToString([\n                                         ['M', (cx - rx), (cy)],\n                                         ['C', (cx - rx), (cy - ry / num), (cx - rx / num), (cy - ry), (cx), (cy - ry)],\n                                         ['C', (cx + rx / num), (cy - ry), (cx + rx), (cy - ry / num), (cx + rx), (cy)],\n                                         ['C', (cx + rx), (cy + ry / num), (cx + rx / num), (cy + ry), (cx), (cy + ry)],\n                                         ['C', (cx - rx / num), (cy + ry), (cx - rx), (cy + ry / num), (cx - rx), (cy)],\n                                         ['Z']\n                                     ]);\n                break;\n            case 'path':\n                d = oldElem.getAttribute('d');\n                break;\n            case 'line':\n                var x1 = oldElem.getAttribute('x1'),\n                    y1 = oldElem.getAttribute('y1');\n                x2 = oldElem.getAttribute('x2');\n                y2 = oldElem.getAttribute('y2');\n                d = 'M' + x1 + ',' + y1 + 'L' + x2 + ',' + y2;\n                break;\n            case 'polyline':\n                d = 'M' + oldElem.getAttribute('points');\n                break;\n            case 'polygon':\n                d = 'M' + oldElem.getAttribute('points') + 'Z';\n                break;\n            case 'rect':\n                var rx = +oldElem.getAttribute('rx'),\n                    ry = +oldElem.getAttribute('ry'),\n                    b = oldElem.getBBox(),\n                    x = b.x,\n                    y = b.y,\n                    w = b.width,\n                    h = b.height;\n\n                // Validity checks from http://www.w3.org/TR/SVG/shapes.html#RectElement:\n                // If neither ‘rx’ nor ‘ry’ are properly specified, then set both rx and ry to 0. (This will result in square corners.)\n                if (!valid(rx) && !valid(ry)) {\n                    rx = ry = 0;\n                }// Otherwise, if a properly specified value is provided for ‘rx’, but not for ‘ry’, then set both rx and ry to the value of ‘rx’.\n                else if (valid(rx) && !valid(ry)) {\n                    ry = rx;\n                }// Otherwise, if a properly specified value is provided for ‘ry’, but not for ‘rx’, then set both rx and ry to the value of ‘ry’.\n                else if (valid(ry) && !valid(rx)) {\n                    rx = ry;\n                } else {\n                    // If rx is greater than half of ‘width’, then set rx to half of ‘width’.\n                    if (rx > w / 2) rx = w / 2;\n                    // If ry is greater than half of ‘height’, then set ry to half of ‘height’.\n                    if (ry > h / 2) ry = h / 2;\n                }\n\n                if (!rx && !ry)\n                {\n                    d += convertToString([\n                                             ['M', x, y],\n                                             ['L', x + w, y],\n                                             ['L', x + w, y + h],\n                                             ['L', x, y + h],\n                                             ['L', x, y],\n                                             ['Z']\n                                         ]);\n                } else if (rectAsArgs)\n                {\n                    d += convertToString([\n                                             ['M', x + rx, y],\n                                             ['H', x + w - rx],\n                                             ['A', rx, ry, 0, 0, 1, x + w, y + ry],\n                                             ['V', y + h - ry],\n                                             ['A', rx, ry, 0, 0, 1, x + w - rx, y + h],\n                                             ['H', x + rx],\n                                             ['A', rx, ry, 0, 0, 1, x, y + h - ry],\n                                             ['V', y + ry],\n                                             ['A', rx, ry, 0, 0, 1, x + rx, y]\n                                         ]);\n                } else {\n                    var num = 2.19;\n                    if (!ry) ry = rx\n                    d += convertToString([\n                                             ['M', x, y + ry],\n                                             ['C', x, y + ry / num, x + rx / num, y, x + rx, y],\n                                             ['L', x + w - rx, y],\n                                             ['C', x + w - rx / num, y, x + w, y + ry / num, x + w, y + ry],\n                                             ['L', x + w, y + h - ry],\n                                             ['C', x + w, y + h - ry / num, x + w - rx / num, y + h, x + w - rx, y + h],\n                                             ['L', x + rx, y + h],\n                                             ['C', x + rx / num, y + h, x, y + h - ry / num, x, y + h - ry],\n                                             ['L', x, y + ry],\n                                             ['Z']\n                                         ]);\n                }\n                break;\n            default:\n                //path.parentNode.removeChild(path);\n                break;\n        }\n\n        if (d) path.setAttribute('d', d);\n\n        // Replace the current element with the converted one\n        oldElem.parentNode.replaceChild(path, oldElem);\n        return path;\n    };\n\n    // This is needed to flatten transformations of elliptical arcs\n    // Note! This is not needed if Raphael.path2curve is used\n    function arc_transform(a_rh, a_rv, a_offsetrot, large_arc_flag, sweep_flag, endpoint, matrix, svgDOM)\n    {\n        function NEARZERO(B)\n        {\n            if (Math.abs(B) < 0.0000000000000001) {\n                return true;\n            } else {\n                return false;\n            }\n        }\n\n        var rh, rv, rot;\n\n        var m = []; // matrix representation of transformed ellipse\n        var s, c; // sin and cos helpers (the former offset rotation)\n        var A, B, C; // ellipse implicit equation:\n        var ac, A2, C2; // helpers for angle and halfaxis-extraction.\n        rh = a_rh;\n        rv = a_rv;\n\n        a_offsetrot = a_offsetrot * (Math.PI / 180); // deg->rad\n        rot = a_offsetrot;\n\n        s = parseFloat(Math.sin(rot));\n        c = parseFloat(Math.cos(rot));\n\n        // build ellipse representation matrix (unit circle transformation).\n        // the 2x2 matrix multiplication with the upper 2x2 of a_mat is inlined.\n        m[0] = matrix.a * +rh * c + matrix.c * rh * s;\n        m[1] = matrix.b * +rh * c + matrix.d * rh * s;\n        m[2] = matrix.a * -rv * s + matrix.c * rv * c;\n        m[3] = matrix.b * -rv * s + matrix.d * rv * c;\n\n        // to implict equation (centered)\n        A = (m[0] * m[0]) + (m[2] * m[2]);\n        C = (m[1] * m[1]) + (m[3] * m[3]);\n        B = (m[0] * m[1] + m[2] * m[3]) * 2.0;\n\n        // precalculate distance A to C\n        ac = A - C;\n\n        // convert implicit equation to angle and halfaxis:\n        if (NEARZERO(B))\n        {\n            a_offsetrot = 0;\n            A2 = A;\n            C2 = C;\n        } else {\n            if (NEARZERO(ac))\n            {\n                A2 = A + B * 0.5;\n                C2 = A - B * 0.5;\n                a_offsetrot = Math.PI / 4.0;\n            } else {\n                // Precalculate radical:\n                var K = 1 + B * B / (ac * ac);\n\n                // Clamp (precision issues might need this.. not likely, but better save than sorry)\n                if (K < 0) {\n                    K = 0;\n                } else {\n                    K = Math.sqrt(K);\n                }\n\n                A2 = 0.5 * (A + C + K * ac);\n                C2 = 0.5 * (A + C - K * ac);\n                a_offsetrot = 0.5 * Math.atan2(B, ac);\n            }\n        }\n\n        // This can get slightly below zero due to rounding issues.\n        // it's save to clamp to zero in this case (this yields a zero length halfaxis)\n        if (A2 < 0) {\n            A2 = 0;\n        } else {\n            A2 = Math.sqrt(A2);\n        }\n        if (C2 < 0) {\n            C2 = 0;\n        } else {\n            C2 = Math.sqrt(C2);\n        }\n\n        // now A2 and C2 are half-axis:\n        if (ac <= 0)\n        {\n            a_rv = A2;\n            a_rh = C2;\n        } else {\n            a_rv = C2;\n            a_rh = A2;\n        }\n\n        // If the transformation matrix contain a mirror-component \n        // winding order of the ellise needs to be changed.\n        if ((matrix.a * matrix.d) - (matrix.b * matrix.c) < 0)\n        {\n            if (!sweep_flag) {\n                sweep_flag = 1;\n            } else {\n                sweep_flag = 0;\n            }\n        }\n\n        // Finally, transform arc endpoint. This takes care about the\n        // translational part which we ignored at the whole math-showdown above.\n        endpoint = endpoint.matrixTransform(matrix);\n\n        // Radians back to degrees\n        a_offsetrot = a_offsetrot * 180 / Math.PI;\n\n        var r = ['A', a_rh, a_rv, a_offsetrot, large_arc_flag, sweep_flag, endpoint.x, endpoint.y];\n        return r;\n    }\n\n    // Parts of Raphaël 2.1.0 (MIT licence: http://raphaeljs.com/license.html)\n    // Contains eg. bugfixed path2curve() function\n\n    var R = {};\n    var has = 'hasOwnProperty';\n    var Str = String;\n    var array = 'array';\n    var isnan = {\n        'NaN': 1,\n        'Infinity': 1,\n        '-Infinity': 1\n    };\n    var lowerCase = Str.prototype.toLowerCase;\n    var upperCase = Str.prototype.toUpperCase;\n    var objectToString = Object.prototype.toString;\n    var concat = 'concat';\n    var split = 'split';\n    var apply = 'apply';\n    var math = Math,\n        mmax = math.max,\n        mmin = math.min,\n        abs = math.abs,\n        pow = math.pow,\n        PI = math.PI,\n        round = math.round,\n        toFloat = parseFloat,\n        toInt = parseInt;\n    var p2s = /,?([achlmqrstvxz]),?/gi;\n    var pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\n    var pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\n    R.is = function (o, type) {\n        type = lowerCase.call(type);\n        if (type == 'finite')\n        {\n            return !isnan[has](+o);\n        }\n        if (type == 'array')\n        {\n            return o instanceof Array;\n        }\n        return type == 'null' && o === null || type == typeof o && o !== null || type == 'object' && o === Object(o) || type == 'array' && Array.isArray && Array.isArray(o) || objectToString.call(o).slice(8, -1).toLowerCase() == type\n    };\n\n    function clone(obj)\n    {\n        if (Object(obj) !== obj)\n        {\n            return obj;\n        }\n        var res = new obj.constructor;\n        for (var key in obj)\n        {\n            if (obj[has](key))\n            {\n                res[key] = clone(obj[key]);\n            }\n        }\n        return res;\n    }\n\n    R._path2string = function () {\n        return this.join(',').replace(p2s, '$1');\n    };\n\n    function repush(array, item)\n    {\n        for (var i = 0, ii = array.length; i < ii; i++) {\n            if (array[i] === item)\n            {\n                return array.push(array.splice(i, 1)[0]);\n            }\n        }\n    }\n\n    var pathClone = function (pathArray) {\n        var res = clone(pathArray);\n        res.toString = R._path2string;\n        return res;\n    };\n    var paths = function (ps) {\n        var p = paths.ps = paths.ps ||\n            {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p)\n            {\n                if (p[has](key) && key != ps)\n                {\n                    p[key].sleep--;\n                    !p[key].sleep && delete p[key];\n                }\n            }\n        });\n        return p[ps];\n    };\n\n    function catmullRom2bezier(crp, z)\n    {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2)\n        {\n            var p = [\n                {\n                    x: +crp[i - 2],\n                    y: +crp[i - 1]\n                },\n                {\n                    x: +crp[i],\n                    y: +crp[i + 1]\n                },\n                {\n                    x: +crp[i + 2],\n                    y: +crp[i + 3]\n                },\n                {\n                    x: +crp[i + 4],\n                    y: +crp[i + 5]\n                }];\n            if (z)\n            {\n                if (!i)\n                {\n                    p[0] = {\n                        x: +crp[iLen - 2],\n                        y: +crp[iLen - 1]\n                    };\n                } else {\n                    if (iLen - 4 == i)\n                    {\n                        p[3] = {\n                            x: +crp[0],\n                            y: +crp[1]\n                        };\n                    } else {\n                        if (iLen - 2 == i)\n                        {\n                            p[2] = {\n                                x: +crp[0],\n                                y: +crp[1]\n                            };\n                            p[3] = {\n                                x: +crp[2],\n                                y: +crp[3]\n                            };\n                        }\n                    }\n                }\n            } else {\n                if (iLen - 4 == i)\n                {\n                    p[3] = p[2];\n                } else {\n                    if (!i)\n                    {\n                        p[0] = {\n                            x: +crp[i],\n                            y: +crp[i + 1]\n                        };\n                    }\n                }\n            }\n            d.push(['C', (-p[0].x + 6 * p[1].x + p[2].x) / 6, (-p[0].y + 6 * p[1].y + p[2].y) / 6, (p[1].x + 6 * p[2].x - p[3].x) / 6, (p[1].y + 6 * p[2].y - p[3].y) / 6, p[2].x, p[2].y])\n        }\n        return d\n    };\n    var parsePathString = function (pathString) {\n        if (!pathString) return null;\n        var pth = paths(pathString);\n        if (pth.arr) return pathClone(pth.arr)\n        var paramCounts = {\n            a: 7,\n            c: 6,\n            h: 1,\n            l: 2,\n            m: 2,\n            r: 4,\n            q: 4,\n            s: 4,\n            t: 2,\n            v: 1,\n            z: 0\n        }, data = [];\n        if (R.is(pathString, array) && R.is(pathString[0], array)) data = pathClone(pathString);\n        if (!data.length)\n        {\n            Str(pathString).replace(pathCommand, function (a, b, c) {\n                var params = [],\n                    name = b.toLowerCase();\n                c.replace(pathValues, function (a, b) {\n                    b && params.push(+b);\n                });\n                if (name == 'm' && params.length > 2)\n                {\n                    data.push([b][concat](params.splice(0, 2)));\n                    name = 'l';\n                    b = b == 'm' ? 'l' : 'L'\n                }\n                if (name == 'r') {\n                    data.push([b][concat](params))\n                } else {\n                    while (params.length >= paramCounts[name])\n                    {\n                        data.push([b][concat](params.splice(0, paramCounts[name])));\n                        if (!paramCounts[name]) break;\n                    }\n                }\n            })\n        }\n        data.toString = R._path2string;\n        pth.arr = pathClone(data);\n        return data;\n    };\n\n    function repush(array, item)\n    {\n        for (var i = 0, ii = array.length; i < ii; i++) {\n            if (array[i] === item)\n            {\n                return array.push(array.splice(i, 1)[0]);\n            }\n        }\n    }\n\n    var pathToAbsolute = cacher(function (pathArray) {\n        //var pth = paths(pathArray); // Timo: commented to prevent multiple caching\n        // for some reason only FF proceed correctly\n        // when not cached using cacher() around\n        // this function.\n        //if (pth.abs) return pathClone(pth.abs)\n        if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) {\n            pathArray = parsePathString(pathArray)\n        }\n        if (!pathArray || !pathArray.length) return [['M', 0, 0]];\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == 'M')\n        {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = ['M', x, y];\n        }\n        var crz = pathArray.length == 3 && pathArray[0][0] == 'M' && pathArray[1][0].toUpperCase() == 'R' && pathArray[2][0].toUpperCase() == 'Z';\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++)\n        {\n            res.push(r = []);\n            pa = pathArray[i];\n            if (pa[0] != upperCase.call(pa[0]))\n            {\n                r[0] = upperCase.call(pa[0]);\n                switch (r[0])\n                {\n                    case 'A':\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] + x);\n                        r[7] = +(pa[7] + y);\n                        break;\n                    case 'V':\n                        r[1] = +pa[1] + y;\n                        break;\n                    case 'H':\n                        r[1] = +pa[1] + x;\n                        break;\n                    case 'R':\n                        var dots = [x, y][concat](pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++)\n                        {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y\n                        }\n                        res.pop();\n                        res = res[concat](catmullRom2bezier(dots, crz));\n                        break;\n                    case 'M':\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y)\n                        }\n                }\n            } else {\n                if (pa[0] == 'R')\n                {\n                    dots = [x, y][concat](pa.slice(1));\n                    res.pop();\n                    res = res[concat](catmullRom2bezier(dots, crz));\n                    r = ['R'][concat](pa.slice(-2));\n                } else {\n                    for (var k = 0, kk = pa.length; k < kk; k++) {\n                        r[k] = pa[k]\n                    }\n                }\n            }\n            switch (r[0])\n            {\n                case 'Z':\n                    x = mx;\n                    y = my;\n                    break;\n                case 'H':\n                    x = r[1];\n                    break;\n                case 'V':\n                    y = r[1];\n                    break;\n                case 'M':\n                    mx = r[r.length - 2];\n                    my = r[r.length - 1];\n                default:\n                    x = r[r.length - 2];\n                    y = r[r.length - 1];\n            }\n        }\n        res.toString = R._path2string;\n        //pth.abs = pathClone(res);\n        return res;\n    });\n\n    function cacher(f, scope, postprocessor)\n    {\n        function newf()\n        {\n            var arg = Array.prototype.slice.call(arguments, 0),\n                args = arg.join('\\u2400'),\n                cache = newf.cache = newf.cache ||\n                    {}, count = newf.count = newf.count || [];\n            if (cache.hasOwnProperty(args))\n            {\n                for (var i = 0, ii = count.length; i < ii; i++) {\n                    if (count[i] === args)\n                    {\n                        count.push(count.splice(i, 1)[0]);\n                    }\n                }\n                return postprocessor ? postprocessor(cache[args]) : cache[args];\n            }\n            count.length >= 1E3 && delete cache[count.shift()];\n            count.push(args);\n            cache[args] = f.apply(scope, arg);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n\n        return newf;\n    }\n\n    var l2c = function (x1, y1, x2, y2) {\n            return [x1, y1, x2, y2, x2, y2];\n        },\n        q2c = function (x1, y1, ax, ay, x2, y2) {\n            var _13 = 1 / 3,\n                _23 = 2 / 3;\n            return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2]\n        },\n        a2c = cacher(function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n            var _120 = PI * 120 / 180,\n                rad = PI / 180 * (+angle || 0),\n                res = [],\n                xy,\n                rotate = cacher(function (x, y, rad) {\n                    var X = x * Math.cos(rad) - y * Math.sin(rad),\n                        Y = x * Math.sin(rad) + y * Math.cos(rad);\n                    return {\n                        x: X,\n                        y: Y\n                    };\n                });\n            if (!recursive)\n            {\n                xy = rotate(x1, y1, -rad);\n                x1 = xy.x;\n                y1 = xy.y;\n                xy = rotate(x2, y2, -rad);\n                x2 = xy.x;\n                y2 = xy.y;\n                var cos = Math.cos(PI / 180 * angle),\n                    sin = Math.sin(PI / 180 * angle),\n                    x = (x1 - x2) / 2,\n                    y = (y1 - y2) / 2;\n                var h = x * x / (rx * rx) + y * y / (ry * ry);\n                if (h > 1)\n                {\n                    h = Math.sqrt(h);\n                    rx = h * rx;\n                    ry = h * ry;\n                }\n                var rx2 = rx * rx,\n                    ry2 = ry * ry,\n                    k = (large_arc_flag == sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                    cx = k * rx * y / ry + (x1 + x2) / 2,\n                    cy = k * -ry * x / rx + (y1 + y2) / 2,\n                    f1 = Math.asin(((y1 - cy) / ry).toFixed(9)),\n                    f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n                f1 = x1 < cx ? PI - f1 : f1;\n                f2 = x2 < cx ? PI - f2 : f2;\n                f1 < 0 && (f1 = PI * 2 + f1);\n                f2 < 0 && (f2 = PI * 2 + f2);\n                if (sweep_flag && f1 > f2)\n                {\n                    f1 = f1 - PI * 2;\n                }\n                if (!sweep_flag && f2 > f1)\n                {\n                    f2 = f2 - PI * 2;\n                }\n            } else {\n                f1 = recursive[0];\n                f2 = recursive[1];\n                cx = recursive[2];\n                cy = recursive[3];\n            }\n            var df = f2 - f1;\n            if (Math.abs(df) > _120)\n            {\n                var f2old = f2,\n                    x2old = x2,\n                    y2old = y2;\n                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n                x2 = cx + rx * Math.cos(f2);\n                y2 = cy + ry * Math.sin(f2);\n                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy])\n            }\n            df = f2 - f1;\n            var c1 = Math.cos(f1),\n                s1 = Math.sin(f1),\n                c2 = Math.cos(f2),\n                s2 = Math.sin(f2),\n                t = Math.tan(df / 4),\n                hx = 4 / 3 * rx * t,\n                hy = 4 / 3 * ry * t,\n                m1 = [x1, y1],\n                m2 = [x1 + hx * s1, y1 - hy * c1],\n                m3 = [x2 + hx * s2, y2 - hy * c2],\n                m4 = [x2, y2];\n            m2[0] = 2 * m1[0] - m2[0];\n            m2[1] = 2 * m1[1] - m2[1];\n            if (recursive) {\n                return [m2, m3, m4].concat(res);\n            } else {\n                res = [m2, m3, m4].concat(res).join().split(',');\n                var newres = [];\n                for (var i = 0, ii = res.length; i < ii; i++) {\n                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x\n                }\n                return newres\n            }\n        });\n\n    var path2curve = cacher(function (path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) return pathClone(pth.curve)\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {\n                x: 0,\n                y: 0,\n                bx: 0,\n                by: 0,\n                X: 0,\n                Y: 0,\n                qx: null,\n                qy: null\n            },\n            attrs2 = {\n                x: 0,\n                y: 0,\n                bx: 0,\n                by: 0,\n                X: 0,\n                Y: 0,\n                qx: null,\n                qy: null\n            },\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path)\n                {\n                    return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in\n                    {\n                        T: 1,\n                        Q: 1\n                    }) && (d.qx = d.qy = null);\n                switch (path[0])\n                {\n                    case 'M':\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case 'A':\n                        path = ['C'][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\n                        break;\n                    case 'S':\n                        if (pcom == 'C' || pcom == 'S')\n                        {\n                            nx = d.x * 2 - d.bx;\n                            ny = d.y * 2 - d.by;\n                        } else {\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = ['C', nx, ny][concat](path.slice(1));\n                        break;\n                    case 'T':\n                        if (pcom == 'Q' || pcom == 'T')\n                        {\n                            d.qx = d.x * 2 - d.qx;\n                            d.qy = d.y * 2 - d.qy;\n                        } else {\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = ['C'][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case 'Q':\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = ['C'][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case 'L':\n                        path = ['C'][concat](l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case 'H':\n                        path = ['C'][concat](l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case 'V':\n                        path = ['C'][concat](l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case 'Z':\n                        path = ['C'][concat](l2c(d.x, d.y, d.X, d.Y));\n                        break\n                }\n                return path\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7)\n                {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length)\n                    {\n                        pcoms1[i] = 'A';\n                        p2 && (pcoms2[i] = 'A');\n                        pp.splice(i++, 0, ['C'][concat](pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == 'M' && path2[i][0] != 'M')\n                {\n                    path2.splice(i, 0, ['M', a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [],\n            pcoms2 = [],\n            pfirst = '',\n            pcom = '';\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++)\n        {\n            p[i] && (pfirst = p[i][0]);\n            if (pfirst != 'C')\n            {\n                pcoms1[i] = pfirst;\n                i && (pcom = pcoms1[i - 1]);\n            }\n            p[i] = processPath(p[i], attrs, pcom);\n            if (pcoms1[i] != 'A' && pfirst == 'C') pcoms1[i] = 'C';\n            fixArc(p, i);\n            if (p2)\n            {\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != 'C')\n                {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n                if (pcoms2[i] != 'A' && pfirst == 'C') pcoms2[i] = 'C'\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) pth.curve = pathClone(p);\n        return p2 ? [p, p2] : p\n    }, null, pathClone);\n\n    // Export function\n    window.flatten = flatten;\n\n})();","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import {Bounds} from \"../Bounds\";\nimport {BACK_SVG} from \"../Math/const\";\nimport {Path, singularity} from \"../Math/Path\";\nimport {Segment} from \"../Math/Segment\";\nimport {Point} from \"../Math/Point\";\nimport {Cubic} from \"../Math/Cubic\";\nimport {Chain} from \"../Math/Chain\";\n\nrequire(\"../flatten.js\")\n\nexport interface ImportedSVG{\n    paths:Path[],\n    viewBox:Bounds,\n    // background image etc\n    \n}\n\n/**\n * Insert the element into a dummy SVG container,\n * invoke the flatten library on it, parse all the path 'd' attributes\n * from it, and return the parsed Paths and viewBox.  The dummy SVG container\n * is cleaned up.\n */\nexport function scrapePathsFromParsedDom(svgDocumentLement: HTMLElement, breakChains:boolean=true) :ImportedSVG{\n    \n    let backContainer = document.getElementById('orig-svg-container')!\n    while (backContainer.firstChild) backContainer.removeChild(backContainer.firstChild);\n    // let svgDocumentLement: HTMLElement = new DOMParser().parseFromString(uploadedSvg, \"image/svg+xml\").documentElement;\n    backContainer.appendChild(svgDocumentLement);\n    \n    // Flatten the original SVG; the library does this in place.\n    // @ts-ignore\n    window.flatten(backContainer.getElementsByTagName(\"svg\")[0], true, true);\n\n    // Grab the viewBox and fix the width,height\n    let backSvg=backContainer.getElementsByTagName(\"svg\")[0];\n    // could be null; todo support that later\n    let originalViewBox = Bounds.forViewBox(backSvg.getAttribute(\"viewBox\") || \"0 0 500 500\");\n    backSvg.setAttribute(\"width\",\"100%\");\n    backSvg.setAttribute(\"height\",\"100%\");\n    backSvg.setAttribute(\"id\", BACK_SVG);\n\n    let paths:Path[] = pullPathDs(backContainer, breakChains); \n    \n    //while (backContainer.firstChild) backContainer.removeChild(backContainer.firstChild);\n\n    return {paths: paths,viewBox:originalViewBox};\n}\n\nfunction pullPathDs(fileContainer: HTMLElement, breakChains:boolean=true):Path[] {\n    let all:Path[] = [];\n    const pathElements = fileContainer.getElementsByTagName(\"path\");\n    for (let i = 0; i < pathElements.length; i++) {\n        let d = pathElements[i].getAttribute(\"d\");\n        if (!d) continue;\n        let paths:Path[] = parsePaths(d);\n        if (!breakChains && paths.length>1) {\n            all.push(Chain.of(paths.map(p => ({path: p, t1: 0, t2: 1}))));\n        } else {\n            all.push(...paths);\n        }\n    }\n    return all;\n}\n\nfunction parsePaths(d:string): Path[] {\n    let pathSegments = d.split(/(?=[MmLlHhVvCcSsQqTtAaZzn])/);\n    let pieces: Path[] = [];\n    let gather=(p:(Path|singularity)) => { if (p!==singularity) pieces.push(p); }\n    // cursor\n    let c = {x: 0, y: 0};\n    let subpathStart = {x: 0, y: 0};\n    let prevControl = null;\n    for (let i = 0; i < pathSegments.length; i++) {\n        let segment = pathSegments[i];\n        let command = segment[0];\n        let args: string[] = segment.substring(1).trim().split(/[\\s,]+/);\n        switch (command) {\n            case 'n':  // none\n                break;\n            case 'M':\n                subpathStart={x:c.x, y:c.y};\n                c.x = parseFloat(args.shift()!);\n                c.y = parseFloat(args.shift()!);\n                while (args.length>=2) {\n                    let x2 = parseFloat(args.shift()!);\n                    let y2 = parseFloat(args.shift()!);\n                    gather(Segment.of(Point.of(c.x, c.y), Point.of(c.x = x2, c.y = y2)));\n                }\n                prevControl = null;\n                break;\n            case 'm':\n                subpathStart={x:c.x, y:c.y};\n                c.x += parseFloat(args[0]);\n                c.y += parseFloat(args[1]);\n                while (args.length>=2) {\n                    let x2 = parseFloat(args.shift()!);\n                    let y2 = parseFloat(args.shift()!);\n                    gather(Segment.of(Point.of(c.x, c.y), Point.of(c.x += x2, c.y += y2)));\n                }\n                prevControl = null;\n                break;\n            case 'Z': case 'z': {\n                let x2 = subpathStart.x;\n                let y2 = subpathStart.y;\n                gather(Segment.of(Point.of(c.x, c.y), Point.of(c.x = x2, c.y = y2)));\n                subpathStart = {x:c.x, y:c.y};\n                }\n                prevControl = null;\n                break;\n            case 'L':\n                while (args.length>=2) {\n                    let x2 = parseFloat(args.shift()!);\n                    let y2 = parseFloat(args.shift()!);\n                    gather(Segment.of(Point.of(c.x, c.y), Point.of(c.x = x2, c.y = y2)));\n                }\n                prevControl = null;\n                break;\n            case 'l':\n                while (args.length>=2) {\n                    let x2 = parseFloat(args.shift()!);\n                    let y2 = parseFloat(args.shift()!);\n                    gather(Segment.of(Point.of(c.x, c.y), Point.of(c.x += x2, c.y += y2)));\n                }\n                prevControl = null;\n                break;\n            case 'H':\n                while (args.length) gather(Segment.of(Point.of(c.x, c.y), Point.of(c.x = parseFloat(args.shift()!), c.y)));\n                prevControl = null;\n                break;\n            case 'h':\n                while (args.length) gather(Segment.of(Point.of(c.x, c.y), Point.of(c.x += parseFloat(args.shift()!), c.y)));\n                prevControl = null;\n                break;\n            case 'V':\n                while (args.length) gather(Segment.of(Point.of(c.x, c.y), Point.of(c.x, c.y = parseFloat(args.shift()!))));\n                prevControl = null;\n                break;\n            case 'v':\n                while (args.length) gather(Segment.of(Point.of(c.x, c.y), Point.of(c.x, c.y += parseFloat(args.shift()!))));\n                prevControl = null;\n                break;\n            case 'C': \n                while (args.length >=6) {\n                    let c1 = Point.of(parseFloat(args.shift()!), parseFloat(args.shift()!));\n                    let c2 = Point.of(parseFloat(args.shift()!), parseFloat(args.shift()!));\n                    let p2 = Point.of(parseFloat(args.shift()!), parseFloat(args.shift()!));\n                    gather(Cubic.of(Point.of(c.x, c.y), c1, c2, p2));\n                    prevControl = c2;\n                    c={x:p2.x,y:p2.y};\n                }\n                break;\n\n            case 'c':\n                while (args.length >=6) {\n                    let c1 = Point.of(c.x + parseFloat(args.shift()!), c.y + parseFloat(args.shift()!));\n                    let c2 = Point.of(c.x + parseFloat(args.shift()!), c.y + parseFloat(args.shift()!));\n                    let p2 = Point.of(c.x + parseFloat(args.shift()!), c.y + parseFloat(args.shift()!));\n                    gather(Cubic.of(Point.of(c.x, c.y), c1, c2, p2));\n                    prevControl = c2;\n                    c={x:p2.x,y:p2.y};\n                }\n                break;\n            case 'S':\n                while (args.length >=4) {\n                    let c1 = prevControl ? Point.of(prevControl.x, prevControl.y) : Point.of(c.x, c.y);\n                    let c2 = Point.of(parseFloat(args.shift()!), parseFloat(args.shift()!));\n                    let p2 = Point.of(parseFloat(args.shift()!), parseFloat(args.shift()!));\n                    gather(Cubic.of(Point.of(c.x, c.y), c1, c2, p2));\n                    prevControl = c2;\n                    c={x:p2.x,y:p2.y};\n                }\n                break;\n            case 's':\n                while (args.length >=4) {\n                    let c1 = prevControl ? Point.of(prevControl.x, prevControl.y) : Point.of(c.x, c.y);\n                    let c2 = Point.of(c.x + parseFloat(args.shift()!), c.y + parseFloat(args.shift()!));\n                    let p2 = Point.of(c.x + parseFloat(args.shift()!), c.y + parseFloat(args.shift()!));\n                    gather(Cubic.of(Point.of(c.x, c.y), c1, c2, p2));\n                    prevControl = c2;\n                    c={x:p2.x,y:p2.y};\n                }\n                break;\n                // todo, quadratics and ellipticals\n                // https://www.w3.org/TR/SVG/paths.html#PathDataLinetoCommands\n            case 'a': case 'A': case 'Q': case 'q': case 'T': case 't':\n                throw new Error(\"Path elements a,q,t not supported\");                    \n        }\n    }\n    \n    return pieces;\n}\n\n","\nexport function memoizeWithWeakMaps2<T extends object, U extends object, V>(g: (arg1: T, arg2: U) => V): (arg1: T, arg2: U) => V {\n    const cache = new WeakMap<T, WeakMap<U, V>>();\n\n    return (arg1: T, arg2: U): V => {\n        if (!cache.has(arg1)) {\n            cache.set(arg1, new WeakMap<U, V>());\n        }\n\n        const innerCache = cache.get(arg1)!;\n        if (!innerCache.has(arg2)) {\n            innerCache.set(arg2, g(arg1, arg2));\n        }\n\n        return innerCache.get(arg2)!;\n    };\n}","// Modifiable styles\n//https://dev.to/karataev/set-css-styles-with-javascript-3nl5\nimport {P} from \"../Bounds\";\nimport {findPathInnerIntersection, Path, singularity} from \"../Math/Path\";\nimport {anglePreservingTransformation, PRECISION_NUMERICAL, PRECISION_PATH, PRECISION_PIXEL} from \"../Math/const\";\nimport {Angle, Point} from \"../Math/Point\";\nimport {Chain, Shape} from \"../Math/Chain\";\nimport {DragOptions} from \"../Math/DragOptions\";\nimport {memoizeWithWeakMaps2} from \"../Math/WeakMemoize\";\n\n\n// a normalized P\nexport interface NP extends P {\n}\n\nexport interface MosDiff {\n    left:Record<string,Path>,\n    right:Record<string,Path>,\n    size:number\n}\n\nexport interface StraightenIntersectionsReport {\n    tolerance:number;\n    totalCount:number;\n    // pois:string[];\n    autoFix:MosDiff;  // may not be complete\n    autoFixed:Mos;\n}\n\nexport interface LooseEndsReport {\n    totalCount:number;\n    pois:string[];\n    autoFix:MosDiff;  // may not be complete\n    autoFixed:Mos;\n}\n\nexport interface PointyCornersReport {\n    totalCount:number;\n    pois:string[];\n}\n\nexport interface TangentCornersReport {\n    totalCount:number;\n    pois:string[];\n}\n\nexport interface SnapResult { p:Point; poi?:POI; path?:Path}\n\n// a normalized Point, i.e. one that has an associated POI registered\n// in a particular State.  There should not be two equal NPoints with different IDs.\nexport class NPoint extends Point implements NP {\n    // normalInState:Mos;\n    static cast(p:Point,s:Mos):NPoint {\n        // (p as NPoint).normalInState=s;\n        return (p as NPoint);\n    }\n    // adjust by rigid transformation and scaling the endpoints.\n    // The result is NPath by definition of having NPoint endpoints\n    static adjustEndpoints(that:Path, p1: NPoint, p2: NPoint): NPath|singularity {\n        let result = this.adjustEndpointsUnnormal(that,p1,p2);\n        return result===singularity ? singularity : NPath.cast(result);\n    }\n    static adjustEndpointsUnnormal(that:Path, p1:Point, p2:Point):Path|singularity {\n        if (that.start().equals(p1) && that.end().equals(p2)) return that\n        let g: (_:Point)=>Point;\n        if (that.start().equals(p1) && that.end().equals(p2)) {\n            g = (x)=>x;\n        } else {\n\n            let t1 = that.start().dist(that.end());\n            let t2 = p1.dist(p2);\n            let t3 = that.bounds().w + that.bounds().h;\n            if ((t1/t2>1.1 || t1/t2<0.9) && t3 > 5*t1) {\n                console.error(\"serious distortion \")\n            }\n\n            g = anglePreservingTransformation(that.start(), p1, that.end(), p2)\n        }\n        let result = that.applyLinearTransform(g);\n        if (result===singularity) return singularity;\n        if (p1 !== result.start() || p2!== result.end())\n            throw new Error(\"applyLinearTransform contract failed\")\n        return result;\n        \n    }\n}\n\n\n// A Path where the ends are known to be normalized. There\n// can be two equal NPaths with different IDs.\nexport abstract class NPath extends Path {\n    abstract start():NPoint;\n    abstract end():NPoint;\n    static cast(path:Path):NPath {\n        // @ts-ignore\n        // if (!(path.start().normalInState && path.end().normalInState)) \n        //     throw new Error(\"Illegal cast\") \n        //  else \n            return (path as NPath);\n        \n    }\n\n}\n\n// oriented path\nexport class PathO {\n    pathID:string; \n    reversed:boolean;\n    constructor(pathID: string, reversed: boolean) {\n        this.pathID = pathID;\n        this.reversed = reversed;\n    }\n    id():string {\n        return this.pathID+\",\"+this.reversed;\n    }\n}\n\nexport\ninterface ComputedShapes {\n    shapes: Shape[];\n    // by pathO.id\n    shapeForPath: Record<string,Shape>\n}\n\n// @ts-ignore\nexport class POI {\n\n    p:NPoint;\n    \n    // ids of all normalized paths whose start() or (reversed) end() lies on this point.\n    star:PathO[]=[];\n    \n    // May only be called by State.norm()\n    constructor(p: NPoint) {\n        this.p = p;\n    }\n    \n    // To be used only by mos.clone()\n    clone():POI {\n        let poi = new POI(this.p);\n        poi.star = this.star.slice();\n        return poi;\n    }\n    hString():string {\n        return this.p.id()+\"*(\"+this.star.map(({pathID,reversed})=>(reversed?\"-\":\"\")+pathID)+\")\";\n    }\n    _addToStar(x:{pathID:string, reversed:boolean}) {\n        if (!this.star.some(el=>el.pathID===x.pathID && el.reversed===x.reversed)) {\n            this.star.push(new PathO(x.pathID,x.reversed));\n        }        \n    }\n    accept(path: NPath) {\n        if (path.start().equals(this.p)) {\n            this._addToStar({pathID:path.id(),reversed:false});\n        }\n        if (path.end().equals(this.p)) {\n            this._addToStar({pathID:path.id(),reversed:true});\n        }\n    }\n    remove(path:Path) {\n        // console.log(\"POI removing \"+path.id()+\"\\nstar before= \"+this.star.join(\", \"));\n        if (path.start().equals(this.p) || path.end().equals(this.p)) \n            this.star = this.star.filter(({pathID,reversed})=>!(pathID===path.id()));\n    }\n\n}\n\n\n\n\nexport class Mos {\n    // all POIs, by id\n    pois: Record<string, POI> = {};\n\n    // all paths, by id, not including reversals\n    paths: Record<string, NPath> = {};\n\n    private $looseEndsReport: LooseEndsReport;\n    private $straightenIntersectionsReport: StraightenIntersectionsReport;\n    private $pointyCornersReport: PointyCornersReport;\n    private $tangentCornersReport: TangentCornersReport;\n    private _shapes: Shape[] = null;\n\n    clone(): Mos {\n        let mos = new Mos();\n        Object.assign(mos.pois, this.pois);\n        Object.keys(this.pois).forEach(key => {\n            mos.pois[key] = this.pois[key].clone();\n        });\n        Object.assign(mos.paths, this.paths);\n        return mos;\n    }\n\n    hString(): string {\n        let poiString = (poi: POI): string => {\n            return poi.p.id() + \" * \" + poi.star.map(({pathID, reversed}) => {\n                return reversed ? pathID + \"=>\" + this.paths[pathID]?.start()?.id()\n                                : pathID + \"=>\" + this.paths[pathID]?.end()?.id();\n            });\n        };\n        return \"Mos: pois=\\n\" + Object.values(this.pois).map(poi => poiString(poi)).join(\"\\n\") + \"\\npaths=\\n\"\n               + Object.keys(this.paths).map(key => {\n                return key + \"=\" + this.paths[key]?.hString()\n            }).join(\"\\n\");\n    }\n\n    // Given a normalized path, make a turn\n    // to the immediate left if possible, or return null \n    _turnLeft(coming: PathO): PathO | null {\n        let comingPath = this.paths[coming.pathID];\n        let point = coming.reversed ? comingPath.start() : comingPath.end();\n        // From the POI, leading back the way we came\n        let reverseTangent = coming.reversed ? comingPath.startTangent() : comingPath.endTangent().reverse();\n        let reverseTangentRadians = reverseTangent.radians();\n        let poi = this.pois[point.id()];\n        let star = poi.star;\n        let smallest: [PathO, number] | null = null;\n        for (let pathO of star) {\n            if (pathO.pathID === coming.pathID) continue;\n            let path2 = this.paths[pathO.pathID];\n            // The direction of the new path\n            let newDirectionRadians = pathO.reversed ? path2.endTangent().reverse().radians() \n                                                     : path2.startTangent().radians();\n            // The angle of turn. Zero means going back the way we came.\n            let dr = newDirectionRadians - reverseTangentRadians;\n            let roundingError = 0.0001;\n            if (dr < roundingError && dr > -roundingError \n                || dr < 2*Math.PI + roundingError && dr > 2*Math.PI - roundingError) \n            {\n                // same tangent within rounding error.  Can't traverse\n                return null;\n            }\n            if (dr < 0) dr += Math.PI * 2;\n            if (dr < roundingError && dr > -roundingError\n                || dr < 2*Math.PI + roundingError && dr > 2*Math.PI - roundingError) {\n                // same tangent within rounding error.  Can't traverse\n                \n                return null;\n            }\n            if (!smallest || smallest[1] > dr) {\n                smallest = [pathO, dr];\n            }\n        }\n        if (!smallest) {\n            return null;\n            \n        }\n        return smallest[0];\n    }\n\n    // Given a normalized path, continue traversing by turning left (or reversed, turning right) until \n    // a closed shape is reached. Special case; if the path itself is a closed loop\n    // we assume it can't intersect anything else, and return that.\n    _traverseLeft(coming: PathO): PathO[] | null {\n        let comingPath = this.paths[coming.pathID];\n        if (comingPath.start().equals(comingPath.end())) return [coming];\n        let c: PathO[] = [];\n        let visited: Record<string, any> = {};\n        visited[coming.pathID] = 1;\n        let here = coming;\n        let limit = 1000;\n        while (true) {\n            if (limit-- < 0) {\n                console.error(\"traverseLeft limit reached\");\n                return null;\n            }\n            c.push(here);\n            let next = this._turnLeft(here);\n            if (!next) {\n                console.log('no next')\n                return null;\n            }\n            if (visited[next.pathID]) break;\n            visited[next.pathID]=1;\n            here = next;\n        }\n        return c;\n    }\n\n    hStringO(pO:PathO):string {\n        return \"<\"+this.paths[pO.pathID].hString()+\",\"+pO.reversed+\">\";\n    }\n\n    // Compute all of the Shapes defined by the edges,\n    // along with a mapping of edge to Shape\n    _computeShapes(): Shape[] {\n    \n        // ID of seed pathO to Shape\n        let result: Record<string, Shape> = {};\n        // whether pathO is already known to be in a shape (side specific)\n        let handled: Record<string, Shape> = {};\n        for (let reversed of [false, true]) {\n            for (let path of Object.values(this.paths)) {\n                let id = path.id() + \",\" + reversed;\n                if (handled[id]) {\n                    console.log('handled')\n                    continue;\n                }\n                let segs = this._traverseLeft(new PathO(path.id(),reversed));\n                \n                if (!segs) {\n                    console.log('!segs')\n                    continue;\n                }\n                \n                let segs2: Path[] = segs.map(x => {\n                    let path1 = this.paths[x.pathID];\n                    return x.reversed ? path1.reverse() : path1; \n                });\n                let shape = new Shape(segs2);\n                if (shape.estimatedArea()>0) { // if it's not the exterior infinite shape \n                    result[id] = shape;\n                }\n                segs.forEach(path0 => {\n                    // let id2 = path0.pathID + \",\" + path0.reversed;\n                    let id2 = path0.id();\n                    handled[id2] = shape;\n                });\n            }\n        }\n        let final = Object.values(result);\n        return final;\n       \n    }\n    \n    shapes() {\n        if (!this._shapes) {\n            this._shapes = this._computeShapes();\n        }\n        return this._shapes;\n    }\n    \n    acceptSyncAndReChain(paths:Path[]) {\n        let oldPaths = {...this.paths};\n        for (let path of paths) {\n            this.acceptSync(path.unchainRecursive().map(s=>s.path), false, true)\n        }\n        let newPaths = {...this.paths};\n        for (let k in oldPaths) delete newPaths[k];\n        this.makeChains(Object.keys(newPaths));\n    }\n    \n    makeChains(pathIDs:string[]) {\n        let mos=this;\n        for (let pathID of pathIDs) {\n            let path = mos.paths[pathID];\n            if (path) {\n                let consumed:Record<string,any>={}\n                consumed[path.id()]=1;\n                consumed[path.reverse().id()]=1;\n                let {result} = mos._extendChain(path, consumed);\n                let newChain = Chain.of(result.map(({path,reversed})=>({path:reversed?path.reverse():path,t1:0,t2:1})));\n                Object.keys(consumed).forEach(key=>mos._remove(mos.paths[key]));\n                mos.accept(newChain.splitErrant(1,5), false);\n            }\n        }\n    }\n    \n    withToggleChain(pathID:string):Mos {\n        console.log(\"withToggleChain\");\n        let mos = this.clone();\n        let path = mos.paths[pathID];\n        if (path) {\n            let unchained = path.unchainRecursive();\n            if (unchained.length>1) {\n                // it was a chain.  Convert it to a list of paths.\n                mos._remove(path);\n                let newChains = unchained.map(cs => cs.path);\n                mos.accept(newChains, false);\n            } else {\n                // It was a simple path.  We need to expand it sideways\n                // into its enclosing chain, if it has one\n                let consumed:Record<string,any>={}\n                consumed[path.id()]=1;\n                consumed[path.reverse().id()]=1;\n                let {result} = mos._extendChain(path, consumed);\n                // Todo, parameterize it better according to lengths\n                let newChain = Chain.of(result.map(({path,reversed})=>({path:reversed?path.reverse():path,t1:0,t2:1})));\n                Object.keys(consumed).forEach(key=>mos._remove(mos.paths[key]));\n                mos.accept(newChain.splitErrant(1,5), false);\n            }\n            \n        }\n        return mos;\n    }\n\n\n    isLooseEnd(p:Point):boolean {\n        let id=p.id();\n        return !this.pois[id] || this.pois[id].star.length<2;\n    }\n    movePOI(poi: POI, dest: Point, dragOptions: DragOptions) {\n        this.movePOIs({[poi.p.id()]:dest} as Record<string,Point>, dragOptions);\n    }\n\n    movePOIs(movedPoints: Record<string, Point> /* to here */, dragOptions: DragOptions) {            \n        let mos=this;\n        let pathsToRemove:Path[]=[];\n        let pathsToAdd:Path[]=[];\n        Object.keys(mos.paths).forEach(k=>{\n            let path = mos.paths[k];\n                let s=path.start();\n                let e=path.end();\n                s = movedPoints[s.id()]||s;\n                e = movedPoints[e.id()]||e;\n                if (!s.equals(path.start()) || !e.equals(path.end())) {\n                    let looseStart = !s.equals(path.start())  && mos.pois[path.start().id()]?.star?.length === 1;\n                    let looseEnd =  !e.equals(path.end()) && mos.pois[path.end().id()]?.star?.length === 1;\n                    let result = path.autoBend(s,e,looseStart,looseEnd,dragOptions);\n                    pathsToRemove.push(path);\n                    if (result!==singularity) pathsToAdd.push(result);\n                }\n        });\n        pathsToRemove.forEach(path=>mos._remove(path));\n        mos.cleanPOIs();\n        // Todo, we can't add this yet because makeChains reprocesses the whole Mos\n        // pathsToAdd = pathsToAdd.flatMap(path=>path.unchainRecursive().map(s=>s.path));\n        mos.acceptSync(pathsToAdd, false, true);\n    }\n\n    // /**\n    //  * Pois that are actually endpoints\n    //  */\n    // endpoints():Record<string,POI> {\n    //    \n    // }\n    \n    /**\n     * Return the NPoint that lies within PRECISION of the input point,\n     * or if none exists, then normalize the input point and register it,\n     * returning the same point normalized.  This is the only method\n     * that should normalize and register a point.\n     */\n    norm(p:Point):POI {\n        // Find one nearby\n        let found = this.isLikeNormal(p);\n        if (found) return found;\n        // Bless this point\n        let np:NPoint = NPoint.cast(p,this);\n        this.pois[np.id()]=new POI(np);\n        return this.pois[np.id()];\n    }\n\n    /**\n     * Return the existing NPoint to which this would be normalized,\n     * i.e. the nearest normalized point to this one that lies \n     * within PRECISION.  If there is none, return null.\n     */\n    isLikeNormal(p:Point):POI|null {\n        let n = this.closestPOITo(p);\n        return (n && n.p.dist(p) < PRECISION_PIXEL) ? n : null;\n    }\n\n    closestPOITo(p:Point):POI|null {\n        let poi = this.pois[p.id()];\n        if (poi) return poi;\n        let v = Object.keys(this.pois);\n        if (!v.length) return null;\n        return v.map(k=>this.pois[k])\n            .reduce((nearest,current)=> p.d2(nearest.p) < p.d2(current.p) ? nearest : current);\n    }\n    \n    // accept a new Path that has already been checked\n    // and needs no further work. start and end must already\n    // have been normalized.  This doesn't register\n    // the reverse path (and shouldn't)\n    _accept(path:NPath) {\n        if (!this.paths[path.id()]) {\n            let start = path.start();\n            let end = path.end();\n            let s2 = this.norm(start);\n            let e2 = this.norm(end);\n            if (!start.equals(s2.p) || !end.equals(e2.p)) {\n                console.log(\"unexpected not already normalized\")\n            }\n            s2.accept(path);\n            e2.accept(path);\n            this.paths[path.id()]=path;\n        }\n    }\n    prunePOI(key:string) {\n        if (key && this.pois[key] && 0===this.pois[key].star.length) \n            delete this.pois[key]\n    }\n    _remove(path:Path) {\n        if (path && this.paths[path.id()]) {\n            let start = path.start();\n            let end = path.end();\n            let poiStart = this.norm(start);\n            let poiEnd = this.norm(end);\n            poiStart.remove(path);\n            poiEnd.remove(path);\n            delete this.paths[path.id()];\n            this.prunePOI(poiStart.p.id());\n            this.prunePOI(poiEnd.p.id());\n        }\n    }\n\n    /**\n     * mutation\n     * async:  https://chat.openai.com/chat/a308cedf-4e72-4d27-ace2-640eef0b1763\n     *\n     * @param all paths to injest\n     * @param makeChains  Whether to finish by making chains and re-accepting them\n     * @param adjustEndpointsFirst  If true, new endpoints will be adjusted to existing curves \n     *                              rather than vice versa. This is for edits; it's too inefficient\n     *                              for loading.\n     * @param setProgress  if present, internally uses await to yield, and uses this callback to update prog bar\n     */\n    async accept(all: Path[], makeChains: boolean, adjustEndpointsFirst: boolean = false, setProgress?: (progress: number) => void) {\n        let estDuration = all.length;\n        let progress = 0;\n        let lastYield=0;\n        let seen:Record<string,boolean> = {}\n        for (let path of all) {\n            progress++;\n            if (setProgress && Date.now()>lastYield+250) {\n                lastYield=Date.now();\n                setProgress((progress/estDuration)**2);\n                await new Promise(resolve => setTimeout(resolve, 1));\n            }\n            if (seen[path.id()] || seen[path.reverse().id()]) continue;\n            seen[path.id()]=true;\n            seen[path.reverse().id()]=true;\n            path = this._acceptpath(path, adjustEndpointsFirst);\n        }\n        if (setProgress) {\n            lastYield=Date.now();\n            setProgress(0.9);  // the remainder is small\n            await new Promise(resolve => setTimeout(resolve, 1));\n        }\n        estDuration = 1;\n        this._acceptFinish(makeChains);\n    }\n\n    acceptSync(all: Path[], makeChains: boolean, adjustEndpointsFirst: boolean = false) {\n        for (let path of all) {\n            path = this._acceptpath(path, adjustEndpointsFirst);\n        }\n        this._acceptFinish(makeChains);\n    }\n    \n    private _acceptpath(path: Path, adjustEndpointsFirst: boolean) {\n        // path = path.simplify();\n\n        let pathsToCheckForIntersectionWithNewEndpoint: string[] = [];\n        if (adjustEndpointsFirst) {\n            let s = this.locateNewEndpoint(path.start(), pathsToCheckForIntersectionWithNewEndpoint);\n            let e = this.locateNewEndpoint(path.end(), pathsToCheckForIntersectionWithNewEndpoint);\n            let adj = NPoint.adjustEndpointsUnnormal(path, s, e);\n            if (adj===singularity) return;\n            path = adj;\n        }\n\n        // Any path that strays from its baseline\n        // farther than Nx the distance from start to finish\n        // probably needs to be cut down\n        let p2: Path[] = path.splitErrant(1, 5);\n\n        let nps: NPath[] = this.normalizePathEndpoints(p2);\n\n        nps = this.filterNoops(nps);\n        nps = this.skipNearDuplicatesToExisting(nps);\n\n        nps = this.splitOnGivenPoints(this.allPois(), nps);\n        nps = this.filterNoops(nps);\n\n\n        if (adjustEndpointsFirst) {\n            for (const nPath of nps) {\n                for (const aPoint of [nPath.start(),nPath.end()]) {\n                    for (const affected of pathsToCheckForIntersectionWithNewEndpoint) {\n                        let more = this._splitExistingPathOn(affected, aPoint);\n                        let moreids = (more||[]).map((path)=>path.id())\n                        pathsToCheckForIntersectionWithNewEndpoint\n                            =pathsToCheckForIntersectionWithNewEndpoint.concat(moreids);\n                    }\n                }\n            }\n        } else {\n            for (const nPath of nps) {\n                this.splitExistingPathsOn(nPath.start());\n                this.splitExistingPathsOn(nPath.end());\n            }\n        }\n\n        // do this before checking for interior intersections\n        // to avoid seeing intersections on duplicates\n        nps = this.skipNearDuplicatesToExisting(nps);\n\n        let newBreakpoints: POI[] = this.splitExistingPathsOnInteriorIntersectionsWith(nps);\n        nps = this.splitOnGivenPoints(newBreakpoints, nps);\n        nps = this.filterNoops(nps);\n\n        nps = this.skipNearDuplicatesToExisting(nps);\n\n        nps.forEach(nPath => this._accept(nPath));\n        return path;\n    }\n    private _acceptFinish(makeChains: boolean) {\n\n        this.cleanPOIs();\n        if (makeChains) {\n            console.log(\"making chains\");\n            let pathKeys = Object.keys(this.paths);\n            let chains: Path[] = [];\n            let discards: Record<string, any> = {};\n            for (const key of pathKeys) {\n                // console.log(\"processing \",key,\"discards=\\n\",Object.keys(discards).join(\",\"));\n                if (!discards[key]) {\n                    let {result} = this._extendChain(this.paths[key], discards);\n                    let newChain: Path = Chain.of(result.map(({path, reversed}) => \n                                     ({path: reversed ? path.reverse() : path, t1:0,t2:1})));\n                    chains.push(newChain);\n                }\n            }\n            // No more paths are left, only chains.  We can \n            // wipe out the existing pois and register the new chains.\n            this.paths = {};\n            this.pois = {};\n            // for (let poid of Object.keys(this.pois)) {\n            //     this.pois[poid].star=[];\n            // }\n            // this.accept(chains, false);\n            // await this.accept(chains, false, /* ?*/ false, setProgress);\n            for (let chain of chains) {\n                // console.log(\"blind accepting chain \"+chain.hString());\n                this._accept(chain);\n            }\n        }\n    }\n\n    smoothAll():Mos {\n        let mos = this.clone();\n        let frags = Object.values(mos.paths).map(p=>p.fragmentize().smooth());\n        mos.paths={};\n        mos.pois={};\n        for (let c of frags) mos._accept(c);\n        return mos;\n    }\n    \n    fragmentizeAll():Mos {\n        let mos = this.clone();\n        let frags = Object.values(mos.paths).map(p=>p.fragmentize());\n        mos.paths={};\n        mos.pois={};\n        for (let c of frags) mos._accept(c);\n        return mos;\n    }\n\n    linearizeAll():Mos {\n        let mos = this.clone();\n        let frags = Object.values(mos.paths).map(p=>p.linearize());\n        mos.paths={};\n        mos.pois={};\n        for (let c of frags) mos._accept(c);\n        return mos;\n    }\n\n// Non-mutating\n    // Extend this path in both directions by\n    // following it through stars (junctions) that don't split.\n    // The resulting chain contains only registered segments\n    // but some of them might be reversed.\n    _extendChain(p: Path, consumed: Record<string, any>):{ result: { path: Path; reversed: boolean }[] } {\n        consumed[p.id()]=1;\n        consumed[p.reverse().id()]=1;\n        let c1:{path:Path, reversed:boolean}[] = this._extendChainRight(p,false, consumed);\n        let c2:{path:Path, reversed:boolean}[] = this._extendChainRight(p,true, consumed);\n        c2.shift();\n        c2 = c2.map(({path,reversed})=>({path:path,reversed:!reversed}));\n        while (c2.length) c1.unshift(c2.shift());\n        return {result:c1};\n    }\n    // Extend this registered path np (or its reverse) as much as possible to the right \n    // before reaching a star (junction) that doesn't split.\n    // Return the resulting chain as a list of paths beginning \n    // with the given path. The resulting chain contains only registered segments\n    // but some of them might be backward.\n    _extendChainRight(np:Path, isReverse:boolean, consumed:Record<string,any>):{path:Path, reversed:boolean}[] \n    {\n        let result = [{path:np,reversed:isReverse}];\n        if (!this.paths[np.id()].equals(np)) {\n            throw new Error(\"assertion failed\");\n            \n        }\n        let nextP = isReverse ? np.start() : np.end();\n        let nextPoi = this.pois[nextP.id()];\n        if (!nextPoi) {\n\n            console.log('nextP='+nextP.hString())\n            console.log('nextPoi='+nextPoi?.hString())\n            console.log(\"mos=\"+this.hString())\n            throw new Error(\"asssertion failed\");\n        }\n        let nextSteps = nextPoi.star.filter(({pathID,reversed}) =>!(pathID===np.id()));\n        if (nextSteps.length!==1) {\n            return result;\n        }\n        let [{pathID:nextPathId,reversed:nextReversed}] = nextSteps;\n        let rev = this.paths[nextPathId].reverse().id();\n        // now, nextPathId is the one leading out (or leading in, if nextReversed).\n        if (consumed[nextPathId] || consumed[rev]) {\n            return result;\n        }\n        consumed[nextPathId]=1;\n        consumed[rev]=1;\n        let nextChain = this._extendChainRight(this.paths[nextPathId], nextReversed, consumed);\n        result.push(...nextChain);\n        return result;\n    }\n\n\n    cleanPOIs() {\n        Object.keys(this.pois).forEach(key=>{\n            let poi = this.pois[key];\n            if (0===poi.star.length) {\n                delete this.pois[key];\n            }\n        });\n    }\n    \n    normalizePathEndpoints(paths:Path[]):NPath[] {\n        return paths.map(path=> this.normalizeEndpoints(path))\n            .filter(p=>p!==singularity).map(p=>p as Path);\n    }\n    filterNoops(paths:NPath[]):NPath[] {\n        return paths.filter(path=>{\n            if (path.isNoop(PRECISION_PATH))\n            {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    }\n\n\n    private skipNearDuplicatesToExisting(inputs:NPath[]):NPath[] {\n        return inputs.filter(nPath => !this.isNearDuplicate2(this.pois[nPath.start().id()], nPath)\n                                    && !this.isNearDuplicate2(this.pois[nPath.end().id()], nPath));\n    }\n    private isNearDuplicate2(poi: POI, input: NPath) {\n        let reverse = input.reverse();\n        return poi?.star?.map(({pathID,reversed})=>this.paths[pathID])?.some(existing=>\n                   existing && (isNearDuplicateHeuristicNormalized(existing,input) \n                             || isNearDuplicateHeuristicNormalized(existing,reverse))) || false;\n\n    }\n\n    private allPois() {\n        return Object.keys(this.pois).map(k => this.pois[k]);\n    }\n\n    /**\n     * Find where the given unnormal point should snap to; the result isn't normalized.\n     */\n    getSnapTo(given:Point, maxSnapDistance:number):SnapResult {\n        \n        if (maxSnapDistance<=0) return {p:given};\n        // we have both a near curve and a near POI. Give \n        // preference to the POI by a factor of two\n        let factor = 2;\n        \n        let poi = this.closestPOITo(given);\n        if (!poi) {\n            // The graph is empty\n            return {p:given};\n        }\n        let dPoi = given.dist(poi.p);\n        \n        let curveSnap = dPoi<maxSnapDistance ? dPoi/factor : maxSnapDistance;\n        \n        let q = this.getClosestNonNormalExistingPathPointWithinPrecisionOf(given, curveSnap,curveSnap);\n        let dCurve = q.nearestPoint ? given.dist(q.nearestPoint) : null;\n        // console.log(\"dPoi=\"+dPoi+\", dCurve=\"+dCurve);\n        \n        \n        if (dPoi >= maxSnapDistance) {\n            return q.nearestPoint ? {p:q.nearestPoint, path:this.paths[q.nearestPathId]} \n                                  : {p:given};\n        }\n        if (!q.nearestPoint) {\n            return {p:poi.p, poi:poi};\n        }\n        return dCurve*factor < dPoi ? {p:q.nearestPoint, path:this.paths[q.nearestPathId]} \n                                    :{p:poi.p, poi:poi};\n    }\n    \n    // Given a new unnormal point, find the best place for it to be\n    // normalized to, either a curve breakpoint within\n    // PRECISION or an existing normal point.  Expose all existing paths\n    // that might have to be recomputed by adding them to the badPaths list.\n    locateNewEndpoint(given:Point, badPaths:string[]):Point {\n        let q = this.getClosestNonNormalExistingPathPointWithinPrecisionOf(given, PRECISION_PIXEL);\n        badPaths.push(...q.nearPathIds);\n        let n = this.isLikeNormal(given)?.p;\n        // There are edge cases where the given point, if moved to \n        // a nearby curve, would move farther than if it moved to the\n        // nearest POI.  I'm not overly worried about that...\n        let nearest = q.nearestPoint;\n        let nNearest = nearest ? this.isLikeNormal(nearest)?.p : null;\n        if (n && nNearest) {\n            return given.d2(n)<given.d2(nNearest) ? n : nearest;\n        } else if (n) {\n            return n;\n        } else if (nearest) {\n            return nearest;\n        } else {\n            return given;\n        }\n    }\n    \n    // Find all curves approaching the point within precision,\n    // and indicate the curve and distance that is the nearest.\n    // todo, figure out endpointPrec \n    getClosestNonNormalExistingPathPointWithinPrecisionOf(given: Point, prec:number, endpointPrec:number=prec/2):\n        { nearestPathId:string, nearestPoint:Point, nearestApproach:number, nearPathIds:string[]} \n    {\n        let result:{ nearestPathId:string, nearestPoint:Point, nearestApproach:number, nearPathIds:string[]}\n            = {nearestPathId:null, nearestPoint:null, nearestApproach:null, nearPathIds:[]};\n        for (let key of Object.keys(this.paths).slice()) {\n            let existing = this.paths[key];\n            \n            // xxx this conditional was addeaa\n            if (existing.start().dist(given)>endpointPrec && existing.end().dist(given)>endpointPrec) {\n\n                let fp = existing._findPoint2(given, prec);\n                if (fp) {\n                    let splitpoint=existing.pointAt(fp.t);\n                    if (!result.nearestPathId) {\n                        result.nearestPathId=key;\n                        result.nearestApproach = splitpoint.dist(given);\n                        result.nearestPoint = splitpoint;\n                        result.nearPathIds.push(key);\n                    } else {\n                        if (splitpoint.dist(given)<result.nearestApproach) {\n                            result.nearestPathId=key;\n                            result.nearestApproach = splitpoint.dist(given);\n                            result.nearestPoint = splitpoint;\n                            result.nearPathIds.push(key);\n                        }\n                    }\n                }\n            }\n            \n            \n            // let [_,b] = existing.splitForPoint(given, prec, prec/16, endpointPrec);\n            // if (b) {\n            //     let splitpoint=b.start();\n            //     if (!result.nearestPathId) {\n            //         result.nearestPathId=key;\n            //         result.nearestApproach = splitpoint.dist(given);\n            //         result.nearestPoint = splitpoint;\n            //         result.nearPathIds.push(key);\n            //     } else {\n            //         if (splitpoint.dist(given)<result.nearestApproach) {\n            //             result.nearestPathId=key;\n            //             result.nearestApproach = splitpoint.dist(given);\n            //             result.nearestPoint = splitpoint;\n            //             result.nearPathIds.push(key);\n            //         }\n            //     }\n            // }\n        }\n        return result;\n    }\n\n\n    private splitExistingPathsOn(point: NPoint) {\n        Object.keys(this.paths).slice() // snapshot\n            .forEach(k=> this._splitExistingPathOn(k, point));\n    }\n    \n    private splitOnGivenPoints(pois: POI[], input: NPath[]):NPath[] {\n        let output = [];\n        for (let poi of pois) {\n            for (let nPath of input) {\n                let s = this.splitOnExistingPOI(nPath, poi);\n                output.push(...s);\n            }\n            input = output;\n            output=[];\n        }\n        return input;\n    }\n\n    \n    // splitOnExistingPOI gets called a lot with the same input\n    // when doing the LooseEndReport if things haven't changed much.\n    // For now it's worth memoizing.\n    static  splitForPointPrecisionPixel = memoizeWithWeakMaps2((path:Path,point:Point)=> path.splitForPoint3(point, PRECISION_PIXEL))\n    \n    private splitOnExistingPOI(path: NPath, poi:POI):NPath[] {\n        // let paths1 = path.splitForPoint3(poi.p, PRECISION_PIXEL);  // todo xxx \n        let paths1 = Mos.splitForPointPrecisionPixel(path,poi.p);\n        if (!paths1) return [path];\n        let [a, b] = paths1;\n        if (a===singularity||b===singularity) return [path];\n        let na = this.normalizeEndpoints(a);\n        let nb = this.normalizeEndpoints(b);\n        if (na===singularity && nb===singularity) return [path];\n        if (na===singularity) return [nb as NPath];\n        if (nb===singularity) return [na as NPath];\n        return [na,nb];\n    }\n\n\n    /** Find all the breakpoints where existing paths intersect with inputs\n     * (excluding endpoints).  Break the existing paths.  Return the list of breakpoints.\n     */\n    private splitExistingPathsOnInteriorIntersectionsWith(inputs: NPath[]):POI[] {\n        type Break = {pathId:string, poi:POI};\n        let breaks:Break[] = [];\n        for (let input of inputs) {\n            for (let pathId of Object.keys(this.paths)) {\n                let nExisting = this.paths[pathId];\n                // xxx todo, this should be PRECISION_NUMERIC but that's too inefficient\n                let bp = findPathInnerIntersection(nExisting, input, PRECISION_PATH);\n                if (bp) {\n                    let nbp: POI =this.norm(bp);\n                    breaks.push({pathId:pathId,poi:nbp});\n                }\n            }\n        }\n\n        // split the existing paths on all the new breakpoints.\n        for (let b of breaks) {\n            this._splitExistingPathOn(b.pathId,b.poi.p);\n        }\n        return breaks.map(b=>b.poi);\n\n    }\n\n    // returns null or the new paths\n    private _splitExistingPathOn(existingPathId: string, point: NPoint):Path[] {\n        let existing:NPath = this.paths[existingPathId];\n        if (!existing) return;  // possible if a curve was getting broken more than once?\n        if (existing.start().equals(point) || existing.end().equals(point)) return;\n        \n        // Try to split; the result isn't normalized\n        // Todo, can we try to find the closest approach?\n        let ab = existing.splitForPoint3(point, PRECISION_PATH);\n        if (!ab) return;\n        let [a,b]=ab;\n        if (a===singularity || b===singularity) return;\n\n        console.log(\"positive _splitExistingPathOn\");\n        this._remove(existing);\n        let x = this.norm(a.start()).p;\n        let y = this.norm(a.end()).p;\n        let z = this.norm(b.end()).p;\n        let na = NPoint.adjustEndpoints(a, x, y);\n        let nb = NPoint.adjustEndpoints(b, y, z);\n        let result:Path[]=[];\n        if (na!==singularity && !na.isNoop(PRECISION_PATH)) {result.push(na);this._accept(na);}\n        if (nb!==singularity && !nb.isNoop(PRECISION_PATH)) {result.push(nb);this._accept(nb);}\n        return result;\n    }\n\n    normalizeEndpoints(path: Path):NPath|singularity {\n        let a = path.start();\n        let b = path.end();\n        let na = this.norm(a).p;\n        let nb = this.norm(b).p;\n        if (!a.equals(na) || !b.equals(nb)) {\n            let nPath = NPoint.adjustEndpoints(path, na, nb);\n            return nPath;\n        }\n        return path as NPath; \n    }\n\n\n    \n    \n    \n    \n    \n    \n    \n    /////////////////////////////////////////////\n\n\n    acceptExperimental(all:Path[], makeChains:boolean) {\n\n        // if (makeChains) all = Chain.chains(all);\n\n        for (let path of all) {\n\n            let result = this.acceptExperimental2(path, 2);\n        }\n    }\n    acceptExperimental2(path:Path, recursionLimit:number) : NPath[] {\n        if (recursionLimit--<0) {\n            console.error(\"accept: hit recursion limit on \"+path.hString());\n        }\n\n        // Any path that strays from its baseline\n        // farther than 2x the distance from start to finish\n        // probably needs to be cut down; do this before normalization\n        // so that if start is near end, we won't see big shifts\n        // in the rest of the curve\n        let errant:Path[] = path.splitErrant(2,3);\n        if (errant.length>1) {\n            return errant.flatMap(path=>this.acceptExperimental2(path, recursionLimit))\n        }\n\n        // Normalize the start and end.  If we aren't at a pre-normalized point,\n        // use a small amount of leeway to position it \"EXACTLY\" on an existing curve\n        // before normalizing, so that the existing curve would not have to be\n        // distorted.  We basically do this by adding a POI at the split point\n        // and reprocessing the existing curve.  Note we're only going\n        // to hit at most 1 existing curve at a given point, because if there were 2 existing curves\n        // passing through the point, they should already have been split or de-duped.\n        {\n            let experimentalSplitExistingCurveAt=(p:Point)=> {\n                let allPaths = Object.values(this.paths).slice();\n                for (let existing of allPaths) {\n                    let s = existing.splitForPoint3(p, PRECISION_NUMERICAL);\n                    \n                    if (s&&s[0]!==singularity&&s[1]!==singularity) {\n                        if (!this.isLikeNormal(s[0].end())) {\n                            // There's an edge case where \"EXACTLY\" includes a small amount of error\n                            // such that even though the new point isn't near an NPoint, the new\n                            // splitpoint of the existing curve might be, in which case\n                            // the curve might actually get distorted. Instead, bless\n                            // the new input point so that the breakpoint ends up there instead.\n                            this.norm(p);\n                        } else {\n                            // All is good, the exact breakpoint will be a completely new NPoint\n                        }\n                        this._remove(existing);\n                        s.flatMap(p=>this.acceptExperimental2(p as Path, recursionLimit));\n\n                    }\n                }\n            }\n\n            // If we're not at an existing endpoint,  See how close we can come\n            // to an existing curve.  If there is one, split the existing\n            // curve exactly, which will cause a normalized point to appear,\n            // and then continue with normalization.\n            if (!this.isLikeNormal(path.start())) experimentalSplitExistingCurveAt(path.start());\n            if (!this.isLikeNormal(path.end())) experimentalSplitExistingCurveAt(path.end());\n        }\n\n        // The endpoints will be registered as POIs.\n        let np = this.normalizeEndpoints(path);\n\n        if (np===singularity || np.isNoop(PRECISION_PATH)) {\n            return [];\n        }\n\n        // At this point, we are guaranteed that if the endpoints\n        // were near any existing endpoints, then they have\n        // been normalized into exact matches.  If the endpoint\n        // was on an existing curve, that's been handled and normalized too.\n        // The only possible intersections are:\n        // 1. existing endpoint hits new inner curve\n        // 2. existing inner curve hits new inner curve\n        //\n        // Check for (1)\n        {\n            let pois = this.allPois();\n            for (let poi of pois) {\n                if (poi.star.length) {\n                    let s =np.splitForPoint3(poi.p, PRECISION_NUMERICAL);\n                    if (s&&s[0]!==singularity&&s[1]!==singularity) {\n                        return s.flatMap(p=>this.acceptExperimental2(p as Path, recursionLimit));\n                    }\n                }\n            }\n        }\n\n        // Before looking for inner intersections, look for duplicates\n        {\n            for (let oldpath of Object.values(this.paths)) {\n                if (isNearDuplicateHeuristicNormalized(oldpath,np)) {\n                    return;\n                }\n            }\n        }\n\n        // Finally we arrive at the tough spot, inner intersections.\n        // Look for them with high precision.\n        // We could actually have multiple intersections, but that will come out\n        // in the recursion.\n        {\n            for (let oldpath of Object.values(this.paths)) {\n                let i = findPathInnerIntersection(oldpath, np, PRECISION_NUMERICAL);\n                if (i) {\n                    let ops = oldpath.splitForPoint3(i, PRECISION_NUMERICAL);\n                    let nps = np.splitForPoint3(i, PRECISION_NUMERICAL);\n                    if (!ops || ops[0]===singularity || ops[1]===singularity ||\n                        !nps || nps[0]===singularity || nps[1]===singularity ) {\n                        console.error(\"Couldn't find split for known intersection\");\n                        // ignore it, we can't recurse\n                    } else {\n                        this._remove(oldpath);\n                        return [...ops,...nps].flatMap(p=>this.acceptExperimental2(p as Path, recursionLimit));\n                    }\n                }\n            }\n        }\n\n        this._accept(np);\n        return [np];\n\n    }\n\n    pointyCornersReport():PointyCornersReport {\n        if (!this.$pointyCornersReport) {\n            let bads = this._cornersReport(30 * Math.PI/180.0);\n\n            this.$pointyCornersReport= {pois:bads,totalCount:bads.length}\n        }\n        return this.$pointyCornersReport;\n    }\n\n    tangentCornersReport():TangentCornersReport {\n        if (!this.$tangentCornersReport) {\n            let bads = this._cornersReport(0.01);\n\n            this.$tangentCornersReport= {pois:bads,totalCount:bads.length}\n        }\n        return this.$tangentCornersReport;\n    }\n\n    private _cornersReport(tolerance:number) {\n        let bads: string[] = [];\n        STARS: for (let k of Object.keys(this.pois)) {\n            let poi: POI = this.pois[k];\n            let s: PathO[] = poi.star;\n            let p1: PathO;\n            let p2: PathO;\n            for (p1 of s) {\n                for (p2 of s) {\n                    if (p1 !== p2) {\n                        let a1 = this.paths[p1.pathID];\n                        let a2 = this.paths[p2.pathID];\n                        let r1: Angle = p1.reversed ? a1.reverse().startTangent()\n                                                    : a1.startTangent();\n                        let r2: Angle = p2.reversed ? a2.reverse().startTangent()\n                                                    : a2.startTangent();\n                        let dr = r1.minus(r2).radians();\n                        if (dr < tolerance && dr > -tolerance) {\n                            bads.push(poi.p.id());\n                            continue STARS;\n                        }\n                    }\n                }\n            }\n        }\n        return bads;\n    }\n\n\n    // For a given angle leading out from the POI, look \n    // for an incoming angle that is nearly opposite,\n    // and if found, adjust the given angle so that the two\n    // angles are opposite.\n    tweakToAlign(poi:POI, tolerance: number, angle: Angle):Angle|null {\n        let smallest:[Angle,/*dr*/number] = null;\n        for (let pathO of this.pois[poi.p.id()].star) {\n            let pO:Path = this.paths[pathO.pathID];\n            // the other angle which should be in opposition\n            let r = pathO.reversed ? pO.endTangent().reverse(): pO.startTangent();\n            let dr = r.reverse().minus(angle).radians();\n            if (smallest===null || smallest[1]>Math.abs(dr)) {\n                smallest = [r, Math.abs(dr)];\n            }\n        }\n        if (smallest!==null && smallest[1]<tolerance) {\n            return smallest[0].reverse();\n        }\n        return null;\n    }\n    \n    autoStraightenEdges(tolerance:number) {\n        let pathids = Object.keys(this.paths);\n        for (let pathid of pathids) {\n            let path = this.paths[pathid];\n            if (path) { // we may have already deleted it\n                let poi1 = this.pois[path.start().id()];\n                let poi2 = this.pois[path.end().id()];\n                let tangent1:Angle = this.tweakToAlign(poi1, tolerance, path.startTangent());\n                let tangent2:Angle = this.tweakToAlign(poi2, tolerance, path.endTangent().reverse());\n                if (tangent1 || tangent2) {\n                    if (!tangent1) tangent1 = path.startTangent();\n                    if (!tangent2) tangent2 = path.endTangent().reverse();\n                    let path2 = path.bend(path.start(), tangent1, tangent2.reverse(), path.end(), \"DISTORTION_STRETCHY\")\n                    if (path2!==singularity) {\n                        this._remove(path);\n                        this.acceptSync([path2],false);\n                        \n                    }\n                }\n            }\n        }\n    }\n    straightenIntersectionsReport(tolerance:number):StraightenIntersectionsReport {\n        if (!this.$straightenIntersectionsReport || this.$straightenIntersectionsReport.tolerance!==tolerance) {\n            let mos = this.clone();\n            mos.autoStraightenEdges(tolerance);\n            let diff = this.diff(mos);\n            this.$straightenIntersectionsReport ={\n                tolerance:tolerance,\n                autoFix:diff,\n                autoFixed:mos,\n                totalCount:diff.size\n            };\n        }\n        return this.$straightenIntersectionsReport;\n        \n    }\n    looseEndsReport():LooseEndsReport {\n        if (!this.$looseEndsReport) {\n            let pois = Object.keys(this.pois);\n            let loosePois=[];\n            for (let k of pois) {\n                let poi = this.pois[k];\n                if (!poi || !poi.star.length) delete this.pois[k];\n                else if (poi.star.length<2) loosePois.push(k);\n            }\n            let diff;\n            let report:LooseEndsReport;\n            if (loosePois.length) {\n                let mos = this.clone();\n                mos.autoFixLooseEnds(20);\n                diff = this.diff(mos);\n                report = {autoFix:diff,autoFixed:mos,\n                    pois:loosePois,totalCount:loosePois.length}\n            } else {\n                report = {autoFix: {size:0,left:{},right:{}},\n                        autoFixed:this, pois:[],totalCount:0}\n            }\n            this.$looseEndsReport =report;\n        }\n        return this.$looseEndsReport;\n    }\n    \n    // todo remove\n    numberOfLooseEnds():number {\n        let pois = Object.keys(this.pois);\n        let count=0;\n        for (let k of pois) {\n            let poi = this.pois[k];\n            if (!poi || !poi.star.length) delete this.pois[k];\n            else if (poi.star.length<2) count++;\n        }\n        return count;\n    }\n\n    autoFixLooseEnds(patchLimit:number) {\n        // list all the loose ends\n        let loose = Object.keys(this.pois).filter(k=> this.pois[k] && this.pois[k].star.length === 1);\n        let snap = 10;  // todo honor snapping or use a slider\n        let dragOptions:DragOptions = {endTangents:\"END_TANGENTS_FLOPPY\", distortion:\"DISTORTION_STRETCHY\"};\n        for (let key of loose) {\n            if (!this.pois[key]) continue;\n            let poi = this.pois[key];\n            if (poi.star.length!==1) continue;\n            let dest=null;\n            // Do the snap using a temporary copy;\n            {\n                let mos2 = this.clone();\n                let poisToPrune: string[] = []\n                for (const {pathID} of poi.star) {\n                    let toRemove = mos2.paths[pathID];\n                    mos2._remove(toRemove)\n                }\n                mos2.prunePOI(poi.p.id());\n                for (let e of poisToPrune) {\n                    mos2.prunePOI(e);\n                }\n                dest = mos2.getSnapTo(poi.p, snap).p;\n            }\n            if (!dest.equals(poi.p)) {\n                if (patchLimit--<0) break;\n                this.movePOI(poi, dest, dragOptions)\n            }\n        }\n    }\n    \n    /**\n     * They are equal if they have the same set of paths.\n     */\n    equals(other: Mos) {\n        let paths1 = new Set(Object.keys(this.paths));\n        let paths2 = Object.keys(other.paths);\n        return paths1.size===paths2.length && paths2.every(k=>paths1.has(k));\n    }\n\n    /**\n     * Return path IDs present in this but not that, and that but not this\n     * @param that\n     */\n    diff(that:Mos): MosDiff {\n        let left:Record<string,Path>={};\n        let right:Record<string,Path>={};\n        let paths1 = Object.keys(this.paths);\n        let paths2 = Object.keys(that.paths);\n        let set1 = new Set(Object.keys(this.paths));\n        let set2 = new Set(Object.keys(that.paths));\n        let size:number=0;\n        for (let k of paths1) if (!set2.has(k)) {size++;left[k]=this.paths[k];}\n        for (let k of paths2) if (!set1.has(k)) {size++;right[k]=that.paths[k];}\n        return {left,right,size};\n    }\n\n}\n\n// Doesn't assume are normalized\n// private isNearDuplicateHeuristic(p1:Path,p2:Path) {\n//     if (p1===p2) return true;  // Doesn't account for equivalents but that's OK\n//     if (p1.start().dist(p2.start())>PRECISION) return false;\n//     if (p1.end().dist(p2.end())>PRECISION) return false;\n//     if (Math.abs(p1.startTangent().minus(p2.startTangent()).radians()) < 0.01) return false;\n//     if (Math.abs(p1.endTangent().minus(p2.endTangent()).radians()) < 0.01) return false;\n//     let a = p1.split(0.5)[0].end();\n//     let b = p2.split(0.5)[0].end();\n//     if (a.dist(b)>PRECISION) return false;\n//     return true;\n// }\n\nvar tcount=0;\nvar tcount2=0;\n// assumes endpoints are normalized\n// Todo this is really sucky.\nfunction _isNearDuplicateHeuristicNormalized(p1:Path,p2:Path):boolean {\n    // console.log(\"h:\"+(tcount++)+\",\"+(tcount2));\n    if (p1.equals(p2)) return true;\n    if (!p1.start().equals(p2.start())) return false;\n    if (!p1.end().equals(p2.end())) return false;\n    // console.log(\"h:\"+(tcount)+\",\"+(tcount2++));\n\n    // The case of two paths with the same start and end, but not equal, is rare enough\n    // that we can do a little more work.\n    if (1 /* more exact method */) {\n        let f1 = p1.linearize();\n        let f2 = p2.linearize();\n        let d1 = f1.length();\n        let d2 = f2.length();\n        if (Math.abs(d1-d2)>PRECISION_PIXEL) return false;\n        for (let t=0;t<d1 && t<d2; t+=PRECISION_PIXEL) {\n            if (f1.pointAt(t).dist(f2.pointAt(t))>PRECISION_PIXEL) return false;\n        }\n        console.log(\"_isNearDuplicateHeuristicNormalized: near and not equal\");\n        return true;\n    } else { // old cheaper method\n        // if (Math.abs(p1.startTangent().minus(p2.startTangent()).a()) > 0.01) return false;\n        // if (Math.abs(p1.endTangent().minus(p2.endTangent()).a()) > 0.01) return false;\n        let p1s = p1.split2(0.5);\n        let p2s = p2.split2(0.5);\n        if (p1s[0]===singularity) return false;\n        if (p2s[0]===singularity) return false;\n        let a = (p1s[0] as Path).end();\n        let b = (p2s[0] as Path).end();\n        if (a.dist(b)>PRECISION_PIXEL) return false;\n        console.log(\"_isNearDuplicateHeuristicNormalized: near and not equal\");\n        return true;\n    }\n    \n}\n\nconst isNearDuplicateHeuristicNormalized:(p1:Path,p2:Path)=>boolean = memoizeWithWeakMaps2(_isNearDuplicateHeuristicNormalized); ","\nconst sampleFiles= {\n\n    simple: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n            \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n            \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 864 576\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n            \"    <path d=\\\"M275,270C243.375,264.678 227.075,252.93 207.306,239.092\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M261,286L198.562,250.303\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M190,261L228.5,212\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <g transform=\\\"matrix(0.794216,0,0,1.03613,-148.522,-2.77018)\\\">\\n\" +\n            \"        <path d=\\\"M262.551,301.863C260.007,263.95 322.496,241.562 438.825,195.699\\\" style=\\\"fill:none;stroke:black;stroke-width:1.08px;\\\"/>\\n\" +\n            \"    </g>\\n\" +\n            \"    <g transform=\\\"matrix(1.36135,0,0,1.59097,-308.018,-252.257)\\\">\\n\" +\n            \"        <path d=\\\"M428.51,301.863C366.052,283.126 367.837,288.48 342.854,251.005\\\" style=\\\"fill:none;stroke:black;stroke-width:0.68px;\\\"/>\\n\" +\n            \"    </g>\\n\" +\n            \"</svg>\\n\\n\",\n     web: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n          \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n          \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 3300 2550\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n          \"    <path d=\\\"M842.688,355.946C833.933,387.214 816.101,427.311 807.687,458.726C796.429,500.753 787.454,546.613 780.519,588.453C773.321,631.875 766.089,699.861 762.161,744.75C755.262,823.603 755.194,898.856 758.687,973.217C761.861,1040.81 767.978,1107.66 774.579,1175.81C779.677,1228.43 785.771,1290.38 790.317,1345.48C794.241,1393.07 798.723,1444.74 805.348,1497.4C810.733,1540.2 817.533,1583.65 826.601,1626.09C836.198,1671 848.336,1714.77 864.022,1755.41C874.702,1783.08 887.028,1809.31 901.317,1833.46C902.855,1836.06 904.416,1838.63 906.001,1841.19C918.768,1861.75 934.104,1881.23 951.361,1899.58C993.37,1944.23 1046.76,1982.15 1102.16,2012.43C1136.15,2031.01 1170.9,2046.71 1204.24,2059.33C1234.15,2070.66 1265.02,2078.39 1296.44,2083.63C1343.86,2091.53 1392.51,2093.72 1440.95,2093.93C1471.75,2094.07 1502.45,2093.41 1532.71,2092.89C1545.89,2092.67 1559.08,2092.33 1572.26,2091.93C1624.73,2090.32 1677.15,2087.68 1729.67,2087.18C1739.27,2087.09 1748.99,2087.01 1758.81,2086.93C1807.25,2086.53 1858.1,2086.07 1909.55,2083.63C1958.27,2081.32 2007.54,2077.24 2055.83,2069.78C2121.5,2059.64 2185.37,2043.25 2243.61,2016.55C2290.57,1995.02 2333.86,1966.79 2371.49,1929.73C2381.59,1919.78 2391.01,1909.73 2399.8,1899.58C2454.23,1836.67 2484.41,1769.78 2501.11,1699.43C2515.84,1637.38 2520.09,1572.64 2521.24,1505.58C2522.14,1453.07 2521.14,1399.14 2521.8,1343.96C2521.83,1341.44 2521.86,1338.92 2521.9,1336.39C2522.63,1292.46 2525.09,1248.16 2527.53,1203.74C2530.85,1143.31 2534.12,1082.67 2532.92,1022.47C2532.12,982.517 2529.36,942.762 2523.34,903.391C2520.95,887.773 2517.49,872.465 2513.4,857.332C2504.84,825.601 2493.54,794.639 2483.71,763.198C2475.15,735.794 2467.5,706.698 2459.33,677.313C2439.71,606.76 2417.08,534.538 2371.49,480.055C2366.74,474.388 2361.75,468.912 2356.49,463.65C2328.42,435.582 2269.16,405.554 2205.11,380.732C2139.9,355.46 2069.73,335.583 2022.47,328.662C2015.92,327.703 2009.82,326.993 2004.22,326.551C1949.59,322.239 1896.23,330.974 1841.66,332.793C1759.4,335.535 1775.06,334.653 1692.77,334.653C1651.9,334.653 1536.57,331.918 1474.51,336.737C1464.01,337.552 1455.04,338.584 1448.21,339.881C1409.32,347.265 1370.43,361.549 1332.71,380.799C1291.43,401.858 1251.55,428.862 1214.55,459.28C1158.74,505.158 1109.51,558.802 1072,611.534C1069.78,614.647 1067.61,617.757 1065.47,620.862C1046.37,648.685 1031.01,678.65 1018.32,709.891C1004.96,742.787 994.567,777.097 985.885,811.808C976.344,849.955 968.874,888.587 961.817,926.36C956.463,955.018 951.826,983.261 948.011,1011.11C940.269,1067.6 935.908,1122.46 935.805,1175.81C935.706,1227.12 939.545,1277.04 948.102,1325.68C956.217,1371.8 968.573,1416.78 985.836,1460.71C1001.76,1501.25 1021.87,1540.9 1046.68,1579.73C1070.72,1617.38 1099.19,1654.27 1132.55,1690.47C1138.1,1696.5 1143.79,1702.5 1149.61,1708.49C1172.03,1731.53 1194.88,1754.98 1218.91,1777.07C1246.5,1802.42 1275.66,1825.98 1307.54,1845.11C1335.12,1861.66 1364.13,1875.07 1394.13,1885.87C1424.33,1896.75 1455.54,1904.99 1487.3,1911.14C1574.73,1928.08 1666.38,1929.22 1752.87,1926.04C1754.82,1925.97 1756.8,1925.9 1758.81,1925.83C1793.58,1924.62 1838.49,1923.59 1886.36,1920.6C1929.65,1917.9 1975.36,1913.6 2018.18,1906.13C2065.39,1897.9 2109.08,1885.83 2142.15,1867.81C2153.76,1861.48 2164.06,1854.42 2172.74,1846.54C2220.8,1802.92 2250.26,1761.51 2275.07,1714.54C2290.76,1684.82 2304.58,1652.88 2320.07,1616.74C2325.66,1603.71 2331.88,1591.07 2338.29,1578.57C2357.88,1540.36 2379.24,1503.44 2389.58,1460.71C2389.87,1459.48 2390.16,1458.25 2390.45,1457.02C2401.8,1408.18 2404.22,1357.98 2402.87,1307.77C2401.92,1272.94 2399.16,1238.11 2396.29,1203.74C2395.72,1196.91 2395.14,1190.09 2394.57,1183.3C2390.96,1139.91 2391.36,1095.74 2389.8,1052.11C2389.66,1048.23 2389.51,1044.36 2389.34,1040.49C2386.91,986.357 2382.77,950.072 2373.79,918.249C2361.52,874.773 2340.23,839.625 2301.99,778.669C2300.18,775.8 2298.39,772.948 2296.61,770.115C2268.97,726.153 2243.12,686.448 2205.11,649.306C2203.61,647.839 2202.04,646.223 2200.42,644.487C2180.61,623.314 2152.5,584.249 2136.92,579.053C2128.84,572.698 2110.41,561.189 2090.62,549.283C2067.24,535.222 2041.95,520.609 2029.57,513.279C2008.28,500.681 1982.4,490.827 1953.7,483.377C1916.68,473.771 1874.97,468.163 1832.35,465.825C1793.15,463.674 1753.18,464.291 1715.38,467.107C1667.57,470.671 1623.25,477.757 1588.4,487.216C1529.07,503.32 1478.3,522.685 1434.29,546.682C1398.26,566.323 1366.77,589.068 1338.84,615.666C1278.56,673.062 1234.83,748.405 1197.81,849.243C1190.61,868.857 1184.15,888.291 1178.41,907.677C1164.26,955.454 1154.45,1002.94 1148.55,1052.11C1145.49,1077.57 1143.49,1103.47 1142.47,1130.11C1141.89,1145.33 1141.42,1160.57 1141.19,1175.81C1140.5,1220.16 1141.81,1264.43 1148.21,1307.77C1154.95,1353.41 1167.34,1398.03 1189.01,1440.6C1198.76,1459.78 1212.15,1478.83 1227.86,1497.4C1259.06,1534.27 1299.44,1569.24 1338.84,1599.52C1362.23,1617.5 1385.28,1633.83 1405.84,1647.92C1436.25,1668.75 1465.99,1684.41 1495.93,1696.28C1541.82,1714.47 1588.18,1723.76 1638.13,1729.13C1667.94,1732.34 1699.02,1734.15 1732.05,1735.63C1740.82,1736.02 1749.76,1736.44 1758.81,1736.81C1801.8,1738.56 1847.21,1739.13 1888.19,1729.91C1899.66,1727.33 1911.58,1724.04 1923.75,1720.1C1952.76,1710.74 1983.24,1697.78 2012.61,1682.37C2060.8,1657.09 2106.03,1625.21 2136.92,1591.74C2151.62,1575.82 2163.74,1559.08 2173.88,1541.65C2204.29,1489.4 2216.93,1430.97 2228.12,1369.88C2229.54,1362.08 2230.95,1354.23 2232.36,1346.35C2242.5,1289.88 2252.64,1228.95 2257.69,1167.36C2260.85,1128.8 2262.01,1089.99 2259.93,1051.85C2256.58,990.42 2244.8,930.751 2219.37,876.758C2202.15,840.179 2178.66,806.205 2147.27,776.052C2134.8,764.068 2121.96,752.727 2108.76,742.062C2080.21,718.988 2049.98,699.078 2018.18,682.666C1958.59,651.909 1893.47,633.434 1823.45,629.433C1795.01,627.808 1765.01,626.796 1736.45,631.646C1729.32,632.856 1722.29,634.432 1715.38,636.454C1654.93,654.174 1598.19,690.582 1544.2,723.142C1541.12,725.004 1538.04,726.854 1534.97,728.687C1482.26,760.156 1426.83,796.338 1385.61,843.635C1370.77,860.665 1357.77,879.136 1347.41,899.346C1330.09,933.114 1323.45,970.354 1322.39,1009.99C1320.9,1065.39 1330.35,1124.42 1337.03,1175.81C1337.66,1180.67 1338.27,1185.47 1338.84,1190.21C1342.21,1218.2 1347.29,1245.75 1354.63,1272.44C1365.33,1311.3 1380.82,1348.35 1402.88,1382.33C1412.14,1396.61 1422.57,1410.36 1434.29,1423.46C1448.78,1439.69 1464.56,1455.58 1481.4,1470.45C1507.17,1493.2 1535.42,1513.54 1565.39,1528.95C1570.51,1531.58 1575.69,1534.07 1580.9,1536.4C1610.17,1549.49 1641.48,1561.52 1673.52,1569.81C1694.91,1575.35 1716.62,1579.21 1738.28,1580.6C1743.03,1580.91 1747.78,1581.09 1752.52,1581.15C1785.72,1581.57 1820.49,1575 1855,1562.8C1881.6,1553.39 1908.25,1540.56 1932.68,1525.42C1970.38,1502.07 2003.97,1472.82 2028.75,1440.49C2034.33,1433.22 2039.46,1425.78 2044.09,1418.23C2060.95,1390.71 2071.93,1358.5 2080.6,1325.68C2087.74,1298.62 2093.31,1271.14 2099.31,1245.55C2105.3,1219.99 2110.19,1193.8 2113.47,1167.36C2117.06,1138.49 2118.72,1109.33 2117.78,1080.39C2116.29,1034.08 2108.15,988.316 2090.62,945.189C2085.44,932.437 2079.43,919.915 2072.53,907.677C2055.66,877.749 2031.66,854.393 2003.16,837.019C1969.62,816.577 1929.86,804.366 1888.19,799.53C1846.78,794.724 1803.48,797.198 1762.51,805.908C1724.21,814.05 1687.62,827.383 1656.84,845.743C1644.03,853.387 1632.51,862.152 1621.84,871.379C1597.1,892.789 1577.62,924.413 1563.39,961.41C1553.23,987.815 1545.75,1016.96 1540.94,1047.07C1534.15,1089.69 1532.71,1134.27 1536.63,1175.81C1540.45,1216.3 1549.37,1253.91 1563.39,1284.01C1567.05,1291.88 1571.07,1299.24 1575.43,1306C1593.32,1333.73 1620,1352.01 1650,1364.03C1655.85,1366.38 1661.83,1368.49 1667.9,1370.39C1690.39,1377.42 1714.42,1382.39 1738.28,1382.77C1757.14,1383.07 1775.89,1380.51 1793.69,1373.84C1800.47,1371.3 1807.41,1367.9 1814.15,1363.94C1854.95,1339.94 1893.65,1291.7 1917.47,1239.98C1936.88,1197.83 1946.3,1153.42 1938.65,1118.09C1937.13,1111.09 1935.12,1104.5 1932.68,1098.33C1919.36,1064.65 1893.16,1043.27 1863.83,1034.15C1842.02,1027.37 1818.48,1027.37 1797.23,1034.15C1770.95,1042.53 1748.17,1061.26 1736.45,1090.32C1732.42,1100.3 1729.7,1111.5 1728.6,1123.92C1727.01,1141.64 1733.15,1158.63 1736.45,1175.81\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <rect x=\\\"588.267\\\" y=\\\"188.918\\\" width=\\\"2123.47\\\" height=\\\"2057.69\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1736.45,1175.81L1917.47,1239.98L2080.6,1325.68L2228.12,1369.88L2390.45,1457.02L2521.24,1505.58L2711.73,1608.81\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1934.45,1103.11L2117.78,1080.39L2259.93,1051.85L2389.79,1051.85L2532.92,1022.47L2711.73,989.563\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1863.83,1034.15L2003.16,837.019L2108.76,742.062L2199.46,643.46L2372.96,481.837L2584.46,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1797.23,1034.15L1762.51,805.908L1736.45,631.646L1713.55,467.246L1692.77,334.653L1667.99,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1736.45,1090.32L1563.39,961.41L1385.61,843.635L1248,736.466L1072,611.534L842.688,355.946L805.175,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1736.45,1175.81L588.267,1175.81\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1736.45,1175.81L1650,1364.03L1565.39,1528.95L1495.93,1696.28L1393.89,1885.79C1393.89,1885.79 1296.44,1996.86 1296.44,2029.89L1296.44,2083.63L1270.81,2246.61\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1814.15,1363.94L1932.68,1525.42L2012.61,1682.37L2142.15,1867.81L2243.61,2016.55L2386.31,2246.61\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1738.28,1382.77L1738.28,1580.6L1758.81,1736.81L1758.81,2246.61\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2028.75,1440.49L2173.88,1541.65L2275.07,1714.54L2400.21,1899.09L2711.73,2100.06\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2338.29,1578.57L2501.11,1699.43L2711.73,1815.21\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2113.47,1167.36L2257.69,1167.36L2396.29,1203.74L2527.53,1203.74L2711.73,1233.13\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2402.87,1307.77L2521.9,1336.39L2711.73,1385.87\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2090.62,945.189L2219.37,876.758L2295.48,770.759L2459.33,677.313L2711.73,440.497\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2373.79,918.249L2513.49,857.665L2711.73,754.246\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1888.19,799.53L1895.83,639.004L1954.52,483.591L2022.47,328.662L2043.66,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2011.09,679.076L2090.66,549.309L2201.24,379.241L2332.64,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1832.18,465.816L1841.66,332.793L1841.66,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1595.92,692.02L1541.07,501.365L1474.26,336.121L1420.29,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1494.33,753.83L1339.25,615.276L1214.55,459.28L1011.59,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1434.29,546.678L1332.71,380.799L1263.41,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1543.8,723.385L1656.84,845.743\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1540.94,1047.07L1322.39,1009.99L1178.92,905.984L985.885,811.808L762.161,744.75L588.267,744.75\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1148.13,1055.65L948.011,1011.11L761.006,973.556L588.267,948.277\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1018.32,709.891L780.519,588.453L588.267,588.453\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1562.55,1282.18L1402.88,1382.33L1224.78,1493.72L1046.68,1579.73L864.253,1755.35L588.267,1827.6\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1354.63,1272.44L1148.24,1307.99L948.102,1325.68L790.317,1345.48L588.267,1398.26\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M985.239,1459.19L805.625,1497.28L588.267,1592.29\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M827.045,1625.93L588.267,1707.88\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1481.4,1470.45L1340.02,1600.42L1218.91,1777.07L1102.16,2012.43L1052.87,2246.61\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1132.42,1690.34L951.361,1899.58L891.867,2246.61\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1673.52,1569.81L1638.13,1729.13L1572.26,1922.93L1572.26,2246.61\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1855,1562.8L1923.75,1720.1L2018.18,1906.13L2055.83,2069.78L2097.32,2246.61\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1486.19,1910.93L1440.95,2093.93L1420.29,2246.61\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1886.36,1920.6L1907.62,2083.72L1907.62,2246.61\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2322.4,2143.57L2533.19,1984.88L2711.73,1815.21\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2489.51,2246.61L2648.66,2059.38\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M653.366,1810.56L755.631,1967.96L922.716,2066.67L1075.79,2137.7\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M901.32,1833.46L755.631,1967.96L588.267,2054.65\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M830.602,2012.25L722.605,2246.61\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M807.687,458.726L588.267,382.7\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M827.495,288.299L588.267,275.365\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M926.897,449.807L1131.43,348.554L1281.54,239.117\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M1011.59,188.918L842.688,355.946\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2663.33,779.498L2580.19,563.919L2470.51,346.733L2332.64,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    <path d=\\\"M2527.55,267.745L2711.73,440.497\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"</svg>\\n\",\n    basicShapes1: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n                 \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n                 \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 1800 1200\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n                 \"    <g transform=\\\"matrix(2.08333,0,0,2.08333,0,0)\\\">\\n\" +\n                 \"        <circle cx=\\\"147.377\\\" cy=\\\"120.961\\\" r=\\\"36.805\\\" style=\\\"fill:rgb(235,235,235);stroke:rgb(0,137,160);stroke-width:1px;\\\"/>\\n\" +\n                 \"        <g transform=\\\"matrix(1,0,0,1,101.717,0)\\\">\\n\" +\n                 \"            <circle cx=\\\"147.377\\\" cy=\\\"120.961\\\" r=\\\"36.805\\\" style=\\\"fill:rgb(235,235,235);stroke:rgb(0,137,160);stroke-width:1px;\\\"/>\\n\" +\n                 \"        </g>\\n\" +\n                 \"        <rect x=\\\"118.602\\\" y=\\\"183.195\\\" width=\\\"66.027\\\" height=\\\"66.027\\\" style=\\\"fill:rgb(235,235,235);stroke:rgb(0,137,160);stroke-width:1px;\\\"/>\\n\" +\n                 \"        <g transform=\\\"matrix(1,0,0,1,92.7944,0)\\\">\\n\" +\n                 \"            <rect x=\\\"118.602\\\" y=\\\"183.195\\\" width=\\\"66.027\\\" height=\\\"66.027\\\" style=\\\"fill:rgb(235,235,235);stroke:rgb(0,137,160);stroke-width:1px;\\\"/>\\n\" +\n                 \"        </g>\\n\" +\n                 \"        <g transform=\\\"matrix(0.712405,-0.701769,0.701769,0.712405,78.3564,168.579)\\\">\\n\" +\n                 \"            <rect x=\\\"118.602\\\" y=\\\"183.195\\\" width=\\\"66.027\\\" height=\\\"66.027\\\" style=\\\"fill:rgb(235,235,235);stroke:rgb(0,137,160);stroke-width:1px;\\\"/>\\n\" +\n                 \"        </g>\\n\" +\n                 \"        <path d=\\\"M128.417,310.787c10.212,-6.841 30.634,-20.522 46.397,-20.522c15.763,0 30.725,20.522 48.182,20.522c18.886,-0 44.018,-20.522 65.134,-20.522c21.117,0 48.083,13.681 61.566,20.522\\\" style=\\\"fill:none;stroke:rgb(0,137,160);stroke-width:1px;\\\"/>\\n\" +\n                 \"        <path d=\\\"M125.74,352.723l49.074,-16.06l48.182,23.198l73.165,-23.198l52.643,23.198\\\" style=\\\"fill:none;stroke:rgb(0,137,160);stroke-width:1px;\\\"/>\\n\" +\n                 \"        <path d=\\\"M130.202,407.151c67.811,-26.768 54.427,-30.337 87.44,-9.815c33.014,20.522 -37.474,40.152 33.014,20.522c70.488,-19.629 66.919,-18.737 82.979,-10.707\\\" style=\\\"fill:none;stroke:rgb(0,137,160);stroke-width:1px;\\\"/>\\n\" +\n                 \"        <path d=\\\"M264.932,61.849l0.088,388.131\\\" style=\\\"fill:none;stroke:rgb(0,137,160);stroke-width:1px;\\\"/>\\n\" +\n                 \"        <path d=\\\"M223.888,65.418l41.044,384.562\\\" style=\\\"fill:none;stroke:rgb(0,137,160);stroke-width:1px;\\\"/>\\n\" +\n                 \"    </g>\\n\" +\n                 \"</svg>\",\n    \"test2\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n            \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n            \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 3300 2550\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n            \"    <g transform=\\\"matrix(1,0,0,1,1.00839,1.48858)\\\">\\n\" +\n            \"        <g transform=\\\"matrix(0.0739936,-0.940825,0.933727,-0.051114,49.1551,3319.98)\\\">\\n\" +\n            \"            <path d=\\\"M2992.19,454.531L2683.7,785.036\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"        </g>\\n\" +\n            \"        <g transform=\\\"matrix(0.0739936,-0.940825,0.933727,-0.051114,2134.19,4434.79)\\\">\\n\" +\n            \"            <path d=\\\"M2992.19,454.531L2683.7,785.036\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"        </g>\\n\" +\n            \"        <g transform=\\\"matrix(1,0,0,1,-1.00839,-1.48858)\\\">\\n\" +\n            \"            <path d=\\\"M809.631,369.987C819.442,389.61 813.406,454.051 813.782,475.416C815.395,566.911 814.383,658.31 813.782,749.809C811.78,1054.79 806.775,1362.95 827.244,1667.34C834.581,1776.45 839.893,1892.52 868.007,1998.73C878.657,2038.96 901.014,2093.57 944.122,2109.06C992.505,2126.46 1031.82,2071.85 1054.71,2038.23C1118.34,1944.78 1152.68,1839.32 1171.84,1728.61C1196.48,1586.23 1197.26,1441.23 1201.15,1297.21C1206.77,1089.44 1212.99,881.275 1252.48,676.713C1263.91,617.533 1294.98,390.448 1371,380.052C1417.44,373.7 1451.16,426.353 1469.51,460.822C1521.67,558.843 1543.18,673.067 1555.56,782.268C1593.2,1114.21 1540.93,1447.27 1550.4,1779.57C1553.01,1871.16 1564.98,2066.56 1667.03,2110.2C1696.51,2122.8 1728.45,2120.89 1758.24,2110.57C1905.52,2059.56 1957.06,1861.88 1980.55,1726.6C1998.84,1621.24 2000.57,1514.07 2001.81,1407.42C2004.05,1213.59 1994.14,1019.56 2000.55,825.798C2005.66,671.375 2011.64,516.904 2180.46,457.929C2455.87,361.715 2502.01,580.726 2500.52,803.027C2499.85,903.217 2495.36,1003.71 2485.93,1103.46C2476.09,1207.56 2459.31,1311.09 2454.35,1415.6C2449.62,1515.16 2454.8,1614.93 2463.28,1714.14C2473.88,1838.13 2474.82,1981.99 2604.06,2041.88C2627.43,2052.71 2652.88,2050.18 2677.28,2044.15C2771.36,2020.9 2814.63,1952.76 2850.4,1867.88C2950.22,1631.05 2883.57,1327.36 2850.52,1079.56C2819.51,846.963 2866.21,615.025 2879.46,383.198\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"        </g>\\n\" +\n            \"        <g transform=\\\"matrix(1,0,0,1,-1.00839,-1.48858)\\\">\\n\" +\n            \"            <path d=\\\"M3028.92,655.325C2892.26,655.325 2755.24,661.566 2618.53,663.126C2405.73,665.553 2192.97,664.164 1980.17,665.642C1708.24,667.53 1436.43,669.832 1164.54,674.197C1024.72,676.442 882.559,670.321 743.326,685.645C652.181,695.677 548.572,718.619 480.509,785.036C452.564,812.304 420.27,857.949 444.527,897.132C471.651,940.948 536.937,958.983 582.792,972.493C711.358,1010.37 848.814,1025.81 982.115,1034.64C1181.69,1047.86 1382.31,1043.17 1582.11,1038.92C1886.91,1032.43 2191.59,1019.85 2496.24,1008.35C2651.34,1002.5 2845.37,979.106 2997.6,1002.94C3054.92,1011.91 3134.57,1040.83 3132.97,1110.63C3131.1,1192.19 3060.23,1228.12 2992.19,1253.93C2833.81,1314.02 2661.2,1340.55 2493.22,1354.08C1988.37,1394.71 1482.31,1360.17 977.082,1383.01C864.917,1388.08 560.418,1392.52 496.36,1504.42C415.381,1645.88 683.473,1731.42 772.262,1752.52C989.044,1804.01 1212.86,1808.41 1434.53,1805.86C1600.6,1803.95 1766.52,1798.35 1932.23,1787.37C2170.97,1771.54 2405.22,1738.73 2642.43,1720.81C2758.74,1712.03 2894.71,1690.45 3009.8,1722.2\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"        </g>\\n\" +\n            \"        <g transform=\\\"matrix(1,0,0,1,-1.00839,-1.48858)\\\">\\n\" +\n            \"            <path d=\\\"M2992.19,454.531L2683.7,785.036\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"        </g>\\n\" +\n            \"        <g transform=\\\"matrix(1,0,0,1,-2023.11,1163.75)\\\">\\n\" +\n            \"            <path d=\\\"M2992.19,454.531L2683.7,785.036\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"        </g>\\n\" +\n            \"    </g>\\n\" +\n            \"</svg>\\n\",\n    test4:\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n          \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n          \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 1500 1000\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n          \"    <g transform=\\\"matrix(0.411635,0,0,0.411635,-188.947,52.3085)\\\">\\n\" +\n          \"        <path d=\\\"M1943.1,169.939C1895.43,169.939 1760.95,166.75 1688.59,172.37C1676.35,173.32 1665.88,174.523 1657.92,176.035\\\" style=\\\"fill:none;stroke:black;stroke-width:1.17px;\\\"/>\\n\" +\n          \"    </g>\\n\" +\n          \"    <g transform=\\\"matrix(0.48,0,0,0.48,-201.632,-38.372)\\\">\\n\" +\n          // \"        <path d=\\\"M1541.07,501.365L1474.26,336.121L1420.29,188.918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"        <path d=\\\"M1541.07,501.365L1474.26,336.121\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n          \"    </g>\\n\" +\n          \"</svg>\\n\",\n    \n    test5:\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n          \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n          \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 576 384\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n          \"    <path d=\\\"M274.111,208.193C287.163,198.66 360.731,182.784 373.361,182.523C372.671,167.687 372.447,152.361 372.688,137.028C362.041,135.293 291.232,128.188 276.795,127.765C261.469,127.316 196.244,131.94 188.445,133.52L188.445,188.876C203.308,185.813 268.048,199.237 274.111,208.193\\\" style=\\\"fill:rgb(175,182,186);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.48px;\\\"/>\\n\" +\n          \"    <path d=\\\"M387.555,277.641C384.311,267.813 374.041,197.1 373.361,182.523C360.731,182.784 287.163,198.66 274.111,208.193C278.605,214.833 279.684,268.296 276.697,277.641L387.555,277.641\\\" style=\\\"fill:rgb(161,199,160);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.48px;\\\"/>\\n\" +\n          // \"    <path d=\\\"M188.445,277.641L276.697,277.641C279.684,268.296 278.605,214.833 274.111,208.193C268.048,199.237 203.308,185.813 188.445,188.876L188.445,277.641\\\" style=\\\"fill:rgb(188,155,179);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.48px;\\\"/>\\n\" +\n          \"</svg>\\n\",\n    \n    ee: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n        \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n        \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 649 649\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n        \"    <path d=\\\"M574.415,611.658C566.545,611.602 558.624,611.547 550.688,611.491C546.191,611.46 554.313,601.048 551.176,598.286C547.585,595.125 539.82,595.57 536.324,598.847C533.424,601.566 541.69,611.429 537.191,611.397C527.111,611.327 517.04,611.256 507.051,611.186C498.074,611.123 489.096,611.06 480.119,610.996C475.619,610.965 483.617,600.72 480.266,597.441C476.614,593.867 468.92,593.335 465.508,596.699C462.24,599.923 471.119,610.933 466.619,610.901C456.419,610.829 446.218,610.757 436.018,610.685C435.724,614.408 435.534,618.132 435.44,621.855C435.327,626.355 424.89,618.238 421.409,621.709C417.806,625.303 417.502,632.819 421.028,636.23C424.55,639.638 435.356,630.854 435.513,635.354C435.663,639.63 435.93,643.905 436.304,648.18L577.364,648.18C577.158,644.356 576.927,640.581 576.672,636.882C576.354,632.251 587.125,639.455 589.429,636.222C592.228,632.293 591.325,624.372 587.87,621.166C585.131,618.626 575.998,627.739 575.607,623.4C575.24,619.318 574.842,615.389 574.415,611.658\\\" style=\\\"fill:rgb(183,158,187);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M505.744,0.18C507.294,16.812 512.478,33.959 519.157,48.182C521.064,52.243 528.564,42.482 531.765,43.831C534.967,45.18 539.462,53.651 538.367,56.274C537.271,58.897 523.093,56.066 525.194,59.57C530.575,68.544 536.429,75.429 541.919,78.879C547.337,69.592 555.844,63.078 566.078,61.604C569.537,61.106 572.969,61.216 576.299,61.865C578.801,53.433 580.832,44.766 582.381,35.858C583.149,31.444 593.22,42.036 596.568,39.241C600.301,36.125 600.372,27.595 597.312,23.394C594.834,19.992 583.799,26.97 584.329,22.437C585.179,15.172 585.722,7.754 585.952,0.18L505.744,0.18\\\" style=\\\"fill:rgb(158,163,179);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M70.764,77.292C78.9,79.999 87.699,83.618 96.16,88.087C100.16,90.2 87.603,94.855 88.774,98.478C90.225,102.965 97.2,106.909 101.963,106.037C105.778,105.339 104.084,92.504 107.827,94.99C119.46,102.719 129.338,112.222 134.285,123.303C138.686,122.312 143.202,122.359 147.029,122.831C152.874,123.551 159.427,128.372 162.785,129.434C161.564,124.586 162.941,119.255 161.853,115.925C157.126,115.576 152.156,117.113 150.085,113.383C146.164,106.322 152.725,102.77 154.738,94.679C162.857,96.573 169.009,92.351 173.508,99.059C175.884,102.601 173.514,107.114 171.671,111.482C174.14,113.966 178.25,114.381 182.009,117.677C182.594,114.204 181.288,106.174 183.31,100.643C185.606,94.361 189.989,86.812 197.381,83.201C193.683,73.506 190.472,63.683 188.103,53.639C175.322,57.406 161.354,57.475 147.083,55.657C142.7,55.098 152.777,46.07 150.102,42.038C147.351,37.893 140.06,36.265 136.08,39.075C132.023,41.94 138.288,54.361 133.873,53.499C114.052,49.627 94.171,43.221 76.547,39.026C76.015,43.43 75.432,47.872 74.798,52.337C74.168,56.772 73.489,61.229 72.762,65.693C72.132,69.557 71.466,73.427 70.764,77.292\\\" style=\\\"fill:rgb(170,195,179);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M252.737,395.673C257.914,395.955 264.736,397.18 271.789,398.844C276.125,399.867 265.483,407.349 267.602,411.111C270.109,415.564 277.534,418.857 281.817,416.653C285.89,414.556 280.549,401.056 284.731,402.294C290.799,404.089 296.36,405.988 300.411,407.63C302.628,395.568 304.313,383.353 307.053,371.866C308.101,367.475 315.123,377.937 318.417,375.978C322.463,373.573 325.156,366.472 323.238,362.243C321.574,358.574 309.302,363.191 310.745,359.062C313.529,351.102 317.214,343.721 322.434,337.27C320.125,335.804 315.331,332.856 312.588,331.452C308.875,329.552 320.251,323.467 318.575,318.936C316.86,314.298 310.254,311.119 305.727,312.9C301.206,314.679 304.955,327.258 300.465,326.061C295.149,324.644 292.973,324.096 287.767,322.708C283.76,321.639 279.646,320.724 275.484,319.999C271.054,319.228 266.57,318.673 262.101,318.38C257.788,318.098 253.49,318.06 249.269,318.308C250.451,328.083 251.326,337.88 251.923,347.682C252.197,352.177 261.517,345.262 264.034,347.742C266.551,350.222 268.937,360.325 267.027,362.562C265.116,364.8 252.412,356.673 252.571,361.168C252.979,372.681 253.019,384.191 252.737,395.673\\\" style=\\\"fill:rgb(179,152,158);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M510.161,272.443C504.489,270.016 498.733,267.6 492.5,265.34C488.358,263.838 499.793,256.241 497.715,252.797C495.196,248.625 487.024,246.579 482.427,248.651C478.81,250.281 484.006,262.406 479.328,261.085C474.272,259.657 468.835,258.359 462.872,257.246C462.169,262.082 459.413,266.388 453.706,268.905C452.976,269.228 458.129,259.279 451.268,255.437C444.809,251.822 434.661,255.546 440.149,263.534C445.576,271.434 439.179,274.677 438.53,274.738C438.352,283.012 435.905,291.592 432.527,300.474C430.959,304.596 424.727,292.883 420.331,294.507C415.623,296.246 411.969,302.882 413.694,307.432C415.45,312.063 429.191,308.783 427.355,313.034C423.723,321.445 419.829,330.109 416.708,339.021C421.283,339.579 426.689,340.22 432.24,340.901C436.697,341.447 436.39,328.136 440.376,326.061C444.362,323.986 455.295,325.694 456.155,328.449C457.014,331.204 441.246,342.018 445.533,342.59C450.957,343.315 455.96,344.041 459.821,344.722C463.889,345.439 467.789,346.19 471.516,346.984C477.039,333.469 483.21,322.707 489.43,312.122C491.712,308.24 476.916,308.216 475.824,304.824C474.732,301.432 479.469,292.503 482.876,291.769C486.283,291.035 494,304.382 496.266,300.42C501.096,291.974 505.823,283.059 510.161,272.443\\\" style=\\\"fill:rgb(189,163,165);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M74.204,397.679C73.475,400.283 73.151,402.97 73.281,405.707C73.464,409.585 74.541,413.278 76.373,416.7C78.106,419.937 80.515,422.932 83.481,425.613C86.596,428.428 90.326,430.895 94.534,432.932C99.994,435.575 106.261,437.492 113.033,438.499C113.033,438.499 117.737,424.388 117.123,420.652C116.579,417.337 109.35,416.081 109.35,416.081C109.35,416.081 118.165,404.999 116.535,402.421C114.906,399.843 102.217,402.406 99.572,400.611C97.084,398.921 97.676,391.931 100.672,391.653C103.882,391.356 110.472,391.515 117.984,391.941C122.274,392.184 126.865,392.515 131.299,392.897C140.618,393.701 149.247,394.735 152.941,395.673C155.861,396.414 154.691,403.639 151.852,404.648C148.235,405.932 133.901,401.419 131.237,403.383C128.574,405.348 135.874,416.435 135.874,416.435C135.874,416.435 127.033,416.576 126.107,419.904C125.057,423.684 129.571,439.113 129.571,439.113C133.465,438.84 137.239,438.283 140.85,437.475C145.478,436.44 149.837,434.992 153.837,433.2C158.672,431.034 162.982,428.366 166.607,425.315C174.641,418.555 179.314,409.919 178.88,400.721C178.653,395.929 177.061,391.418 174.367,387.353C174.823,385.736 175.907,381.801 176.981,377.244C177.215,376.247 169.175,378.634 168.38,377.178C167.584,375.722 170.532,369.611 172.206,368.507C173.881,367.403 178.284,371.285 178.426,370.554C179.721,363.842 180.395,357.485 178.661,356.216C177.188,355.138 172.869,356.929 168.045,359.589C164.27,361.671 160.186,364.286 156.914,366.475C153.862,368.517 151.516,370.189 150.787,370.712C144.987,368.757 138.554,367.535 131.753,367.211C129.338,367.095 126.877,367.093 124.38,367.211C120.511,367.393 116.751,367.856 113.144,368.567C112.924,368.324 111.678,366.948 109.867,365.046C107.478,362.538 104.107,359.115 100.812,356.169C96.567,352.372 92.448,349.368 90.721,350.132C88.987,350.9 88.229,356.103 87.937,361.939C87.912,362.432 93.265,362.593 94.572,364.209C95.879,365.825 96.91,370.764 95.777,371.637C94.645,372.51 87.775,368.415 87.777,369.446C87.785,373.919 87.947,377.78 88.014,379.178C81.068,384.285 76.166,390.677 74.204,397.679\\\" style=\\\"fill:rgb(160,153,193);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M0.18,147.04C4.422,147.721 8.865,148.55 13.452,149.515C17.661,150.401 7.565,158.031 9.646,161.046C12.386,165.014 20.221,167.522 24.411,165.389C27.804,163.661 21.991,151.403 26.403,152.514C33.978,154.422 41.79,156.65 49.627,159.166C53.67,148.038 57.426,135.617 60.803,122.663C61.935,118.322 70.297,129.558 74.32,127.183C78.738,124.576 81.036,116.658 78.473,112.234C76.067,108.082 63.025,113.921 64.068,109.488C66.583,98.804 68.831,87.939 70.764,77.292C63.1,74.742 54.674,72.746 46.251,71.211C41.675,70.377 52.361,60.935 49.628,57.291C46.682,53.362 38.711,52.542 34.466,55.495C30.664,58.14 37.1,69.679 32.647,69.102C19.836,67.444 8.042,66.79 0.18,66.79L0.18,147.04\\\" style=\\\"fill:rgb(198,165,157);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M507.051,611.186C517.04,611.256 527.111,611.327 537.191,611.397C541.69,611.429 533.424,601.566 536.324,598.847C539.82,595.57 547.585,595.125 551.176,598.286C554.313,601.048 546.191,611.46 550.688,611.491C558.624,611.547 566.545,611.602 574.415,611.658C573.308,601.972 572.006,593.117 570.545,584.975C570.359,583.943 570.171,582.923 569.981,581.913C568.77,575.495 567.459,569.532 566.064,563.963C564.896,559.303 577.756,565.181 579.846,561.268C582.239,556.79 579.996,548.673 575.633,546.05C571.816,543.755 563.671,554.918 562.397,550.775C560.451,544.444 558.392,538.674 556.259,533.341C552.332,523.523 548.152,515.18 543.949,507.525C540.111,511.189 534.339,511.188 527.416,507.733C520.898,504.479 517.189,492.413 509.21,494.11C510.606,498.689 512.221,503.886 513.762,509.477C514.89,513.572 515.978,517.879 516.909,522.31C518.928,531.914 520.21,542.101 519.572,551.981C526.968,553.418 527.607,556.649 529.316,561.896C532.451,571.517 527.835,582.472 518.044,585.662C515.109,586.618 512.111,586.818 509.267,586.37C507.539,594.445 506.916,602.74 507.051,611.186\\\" style=\\\"fill:rgb(156,160,158);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M648.18,577.937L648.18,511.184C634.623,511.184 621.488,512.248 608.914,514.505C604.433,515.31 610.203,503.47 606.084,500.561C602.075,497.729 594.839,498.981 592.437,502.867C589.839,507.072 600.022,516.266 595.69,517.379C581.657,520.984 568.442,526.24 556.259,533.341C558.392,538.674 560.451,544.444 562.397,550.775C563.671,554.918 571.816,543.755 575.633,546.05C579.996,548.673 582.239,556.79 579.846,561.268C577.756,565.181 564.896,559.303 566.064,563.963C567.459,569.532 568.77,575.495 569.981,581.913C570.171,582.923 570.359,583.943 570.545,584.975C578.793,582.508 588.778,580.51 599.091,579.114C603.545,578.511 596.158,589.534 599.445,592.156C603.249,595.19 611.038,594.876 614.307,591.25C617.289,587.943 608.06,578.02 612.523,577.651C625.902,576.547 638.809,576.547 648.18,577.937\\\" style=\\\"fill:rgb(153,179,175);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M491.936,500.536C489.72,490.72 487.73,483.758 486.836,483.371C480.21,480.498 483.379,493.708 481.24,496.279C478.864,499.134 472.155,503.881 469.616,503.732C467.078,503.583 468.105,497.273 466.009,495.386C463.912,493.499 456.983,493.955 457.036,492.413C457.089,490.871 463.749,488.84 466.325,486.131C469.683,482.598 477.251,474.799 477.187,471.217C477.122,467.635 470.007,466.155 465.936,464.639C457.247,461.4 453.814,458.195 451.133,455.592C449.531,454.037 448.214,450.065 449.849,449.018C451.484,447.971 458.315,450.463 460.944,449.312C463.565,448.165 463.76,442.178 465.624,442.115C467.489,442.052 470.477,446.263 472.133,448.933C474.185,452.24 480.347,455.454 485.427,453.902C488.273,453.034 493.832,450.09 495.3,446.178C496.965,441.743 494.325,430.231 495.416,427.289C496.177,425.242 500.124,427.191 501.851,428.528C503.594,429.88 503.816,434.17 505.883,435.396C507.95,436.622 512.369,434.807 514.253,435.887C516.137,436.967 517.926,439.777 517.189,441.874C515.546,446.549 502.862,459.605 504.394,463.934C505.926,468.264 521.678,466.03 526.383,467.853C529.303,468.984 533.123,473.29 532.627,474.872C532.131,476.455 524.881,476.241 523.407,477.348C522.293,478.185 522.889,480.319 523.785,481.513C524.804,482.869 524.837,487.94 522.86,487.512C519.318,486.748 504.409,473.036 505.705,480.681C506.261,483.968 507.588,488.584 509.21,494.11C517.189,492.413 520.898,504.479 527.416,507.733C534.339,511.188 540.111,511.189 543.949,507.525C547.994,503.663 549.915,495.616 548.659,482.966C553.09,475.162 555.143,468.812 555.217,463.934C555.248,461.903 554.936,460.127 554.309,458.607C552.285,453.702 547.008,451.363 539.279,451.715C533.837,451.964 522.86,460.162 521.351,456.467C519.954,453.047 531.269,447.141 534.511,442.764C539.116,436.547 540.119,430.862 537.177,426.446C534.076,421.792 526.485,418.503 513.809,417.543C504.013,409.443 496.264,406.547 490.801,407.75C485.619,408.89 482.399,413.681 481.404,421.355C480.704,426.756 485.741,440.009 482.662,441.587C479.515,443.2 475.509,428.448 471.761,424.496C466.438,418.881 461.014,416.906 456.155,419.036C451.031,421.282 446.474,428.186 443.329,440.503C434.385,448.118 430.122,454.784 429.712,460.162C429.678,460.604 429.671,461.037 429.689,461.462C429.912,466.763 434.071,470.765 441.455,473.078C446.652,474.706 460.944,470.204 461.599,475.352C462.271,480.638 447.417,480.115 442.874,483.119C436.42,487.388 433.533,492.386 434.787,497.541C436.109,502.976 442.118,508.663 453.701,513.9C456.945,519.426 460.153,523.532 463.247,526.34C466.29,529.1 469.223,530.606 471.972,530.972C477.231,531.672 481.895,528.272 485.455,521.402C488.342,515.831 485.427,506.499 491.936,500.536\\\" style=\\\"fill:rgb(156,181,156);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M648.18,62.918L648.18,0.18L585.952,0.18C585.722,7.754 585.179,15.172 584.329,22.437C583.799,26.97 594.834,19.992 597.312,23.394C600.372,27.595 600.301,36.125 596.568,39.241C593.22,42.036 583.149,31.444 582.381,35.858C580.832,44.766 578.801,53.433 576.299,61.865C580.222,62.629 584.004,64.141 587.521,66.288C591.282,68.584 576.739,72.189 577.194,77.034C577.675,82.154 584.306,87.222 589.444,86.768C594.07,86.358 594.741,71.606 597.746,75.216C599.852,77.744 601.735,80.56 603.344,83.618C608.457,79.92 613.704,76.71 618.982,73.949C623.071,71.809 615.311,62.898 617.141,59.453C618.971,56.009 627.611,51.802 629.964,53.28C632.317,54.758 627.179,69.939 631.259,68.319C637.001,66.04 642.685,64.256 648.18,62.918\\\" style=\\\"fill:rgb(188,162,161);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M164.889,209.018C163.007,213.43 161.39,217.194 159.975,220.528C157.721,225.837 151.242,212.613 146.859,214.548C141.81,216.777 137.873,224.562 139.782,229.441C141.543,233.943 155.98,230.057 154.494,234.067C152.801,238.637 151.44,242.935 150.032,248.264C153.419,253.05 156.849,258.376 160.17,264.209C162.333,268.01 171.038,256.091 174.367,257.246C177.695,258.402 181.455,267.974 180.141,271.141C178.826,274.308 164.45,272.026 166.478,276.25C169.321,282.169 171.99,288.497 174.368,295.208C178.75,293.928 183.021,292.833 187.205,291.885C189.788,291.3 192.339,290.771 194.861,290.288C200.528,289.203 206.052,288.357 211.494,287.646C216.019,287.054 208.883,298.173 212.412,300.98C216.478,304.214 224.626,304.303 227.756,300.582C230.74,297.035 220.488,286.557 224.934,286.095C231.245,285.44 237.512,284.855 243.836,284.176C243.33,281.639 242.801,279.104 242.249,276.573C241.292,272.185 253.463,278.251 255.373,274.792C257.775,270.441 255.909,262.009 251.856,259.17C248.601,256.89 240.263,267.806 239.162,263.438C238.114,259.284 237,255.141 235.818,251.009C234.565,246.629 233.235,242.262 231.825,237.909C228.647,228.095 225.064,218.351 221.047,208.697C213.71,208.769 205.977,209.674 198.184,210.378C193.702,210.784 199.825,222.898 197.381,225.377C194.936,227.856 185.62,227.614 183.514,225.251C181.408,222.888 189.201,211.123 184.744,211.199C177.948,211.315 171.254,210.82 164.889,209.018\\\" style=\\\"fill:rgb(196,198,166);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M68.717,252.661C69.791,242.936 71.315,233.852 73.263,225.377C66.336,222.925 58.469,220.783 49.39,219.045C45.195,218.242 54.425,210.236 51.943,206.69C49.063,202.576 41.857,200.038 37.871,202.591C33.958,205.099 40.742,217.525 36.002,216.904C25.55,215.534 13.706,214.629 0.18,214.288L0.18,297.525C9.165,295.736 17.875,294.371 26.252,293.439C30.87,292.925 23.275,304.91 26.728,307.375C30.603,310.142 38.488,308.276 41.754,304.505C44.355,301.502 35.387,292.542 39.793,292.293C49.368,291.752 58.418,291.84 66.841,292.574C66.804,288.496 66.829,284.506 66.917,280.602C67.021,275.959 54.976,281.192 52.68,278.096C50.384,274.999 50.674,263.866 53.141,262.022C55.609,260.179 67.211,271.438 67.485,267.036C67.792,262.095 68.205,257.305 68.717,252.661\\\" style=\\\"fill:rgb(153,187,160);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M221.047,208.697C225.064,218.351 228.647,228.095 231.825,237.909C238.159,236.65 244.043,235.623 249.537,234.809C254.226,234.115 243.275,224.316 244.994,221.905C246.713,219.495 256.886,218.465 259.852,220.345C262.818,222.224 258.631,233.576 262.79,233.182C267.16,232.768 271.26,232.514 275.132,232.406C276.705,232.363 278.24,232.342 279.74,232.342C279.47,221.508 278.281,211.329 276.333,201.758C275.421,197.278 267.362,205.933 264.729,204.093C262.097,202.253 259.14,193.28 260.538,190.716C261.935,188.153 274.343,192.931 273.114,188.712C270.648,180.241 267.576,172.287 264.034,164.812C262.284,161.119 253.481,139.807 247.797,132.532C245.117,133.87 239.66,136.504 237.021,137.901C233.049,140.002 245.869,147.308 244.994,150.397C244.119,153.487 235.076,157.447 231.77,156.436C228.464,155.425 229.11,142.158 225.158,144.33C220.706,146.777 216.24,149.245 211.697,151.677C213.068,153.917 213.745,156.542 213.421,158.753C212.829,162.799 208.721,168.571 203.453,172.149C206.316,177.348 209.035,182.581 211.614,187.846C213.597,191.893 222.659,182.161 225.877,183.877C229.095,185.593 232.35,195.448 230.923,198.142C229.496,200.836 215.497,195.958 217.317,200.041C218.6,202.918 219.843,205.803 221.047,208.697\\\" style=\\\"fill:rgb(170,194,163);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M349.217,105.449C350.751,110.69 352.717,116.271 355.102,121.85C356.858,125.954 365.388,115.207 368.555,116.598C371.721,117.988 375.355,127.288 374.104,130.192C372.852,133.096 358.84,130.057 361.045,134.022C363.026,137.583 365.187,141.033 367.523,144.272C374.383,153.778 382.757,161.462 392.556,164.812C396.472,155.857 404.852,149.287 415.792,150.588C419.932,139.208 428.341,132.425 439.933,127.664C444.001,125.993 439.362,138.714 442.823,140.168C447.499,142.133 456.026,139.743 458.636,135.522C460.629,132.299 448.46,124.572 453.264,123.287C464.558,120.268 477.758,118.01 492.254,115.066C491.102,110.016 489.424,104.537 487.586,98.988C486.178,94.738 498.976,98.977 501.09,94.543C503.217,90.083 500.553,83.215 496.092,81.149C491.783,79.152 484.676,90.447 483.247,86.276C481.875,82.272 480.569,78.379 479.476,74.741C470.319,77.269 461.191,79.747 452.118,82.17C447.77,83.332 452.679,71.643 449.005,69.863C444.639,67.749 437.128,69.776 434.655,73.714C432.605,76.978 443.434,84.481 439.113,85.616C433.703,87.038 428.317,88.44 422.963,89.819C415.249,91.807 404.38,94.232 393.104,96.622C388.722,97.55 394.653,85.53 390.737,83.042C386.514,80.359 378.914,81.809 376.214,85.889C373.68,89.718 384.278,98.474 379.934,99.364C370.103,101.378 360.783,103.222 353.843,104.573C352.301,104.865 350.758,105.158 349.217,105.449\\\" style=\\\"fill:rgb(173,154,171);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M438.53,274.738C433.532,275.204 430.475,272.8 428.663,269.093C426.858,265.403 426.287,260.422 426.262,255.696C426.244,252.313 426.506,249.06 426.796,246.506C427.658,238.901 430.732,231.86 427.107,230.054L427.02,230.012C423.245,228.267 420.058,235.527 414.602,240.871C407.625,247.705 394.796,257.634 386.987,246.506C379.714,251.495 371.56,258.62 364.493,267.125C360.623,271.783 357.043,276.758 354.04,281.816C351.565,285.985 365.956,283.936 367.123,287.13C368.291,290.324 364.241,299.775 361.045,300.98C357.849,302.186 349.481,290.211 347.947,294.365C344.862,302.721 344.005,310.783 346.676,317.495C347.735,320.157 349.349,322.606 351.6,324.777C354.416,327.494 343.073,331.813 344.22,336.46C345.432,341.372 351.706,345.667 356.45,344.425C361.19,343.183 358.227,329.774 363.193,331.489C367.728,333.056 373.226,334.151 379.808,334.676C395.719,336.353 402.977,337.348 416.708,339.021C419.829,330.109 423.723,321.445 427.355,313.034C429.191,308.783 415.45,312.063 413.694,307.432C411.969,302.882 415.623,296.246 420.331,294.507C424.727,292.883 430.959,304.596 432.527,300.474C435.905,291.592 438.352,283.012 438.53,274.738\\\" style=\\\"fill:rgb(180,166,190);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M348.951,430.857C350.798,423.687 352.747,416.517 354.798,409.347C356.033,405.027 342.763,409.745 341.324,406.796C339.884,403.847 343.278,393.388 346.159,391.653C349.041,389.918 357.305,400.707 358.614,396.387C360.498,390.17 361.16,389.141 363.196,382.924C364.615,378.592 367.367,369.072 368.859,364.74C370.32,360.5 377.078,371.305 380.807,369.342C384.999,367.136 387.492,360.246 385.627,355.915C383.959,352.042 371.816,356.259 373.348,352.019C375.436,346.238 377.589,340.457 379.808,334.676C373.226,334.151 367.728,333.056 363.193,331.489C358.227,329.774 361.19,343.183 356.45,344.425C351.706,345.667 345.432,341.372 344.22,336.46C343.073,331.813 354.416,327.494 351.6,324.777C349.349,322.606 347.735,320.157 346.676,317.495C337.443,321.622 329.444,328.607 322.434,337.27C317.214,343.721 313.529,351.102 310.745,359.062C309.302,363.191 321.574,358.574 323.238,362.243C325.156,366.472 322.463,373.573 318.417,375.978C315.123,377.937 308.101,367.475 307.053,371.866C304.313,383.353 302.628,395.568 300.411,407.63C300.51,407.67 300.608,407.71 300.705,407.75C307.907,410.701 313.397,413.723 318.444,416.66C322.454,418.994 310.453,423.449 311.699,426.952C313.328,431.53 320.316,435.855 324.959,434.973C328.58,434.285 326.184,421.275 330.27,423.426C335.48,426.168 341.267,428.698 348.951,430.857\\\" style=\\\"fill:rgb(183,195,163);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M443.329,440.503C446.474,428.186 451.031,421.282 456.155,419.036C461.014,416.906 466.438,418.881 471.761,424.496C475.509,428.448 479.639,443.137 482.662,441.587C485.741,440.009 480.704,426.756 481.404,421.355C482.399,413.681 485.619,408.89 490.801,407.75C496.264,406.547 504.013,409.443 513.809,417.543C518.434,409.614 521.551,402.557 523.255,396.255C524.636,391.152 534.664,401.418 538.367,398.174C541.972,395.015 541.49,387.232 538.065,383.281C534.967,379.706 525.09,386.545 524.669,382.371C523.999,375.734 521.116,370.193 516.221,365.501C512.398,361.836 507.349,358.689 501.169,355.941C497.189,354.171 497.953,370.243 494.445,371.866C490.936,373.489 481.218,369.14 480.119,365.679C479.02,362.218 492.741,352.568 487.849,351.098C482.857,349.598 477.403,348.238 471.516,346.984C467.789,346.19 463.889,345.439 459.821,344.722C454.738,356.61 448.174,370.002 440.244,381.792C437.737,385.52 433.833,371.472 429.434,372.268C424.727,373.119 420.697,380.166 421.418,385.199C422.032,389.49 435.093,389.088 432.317,392.398C426.329,399.535 419.723,405.471 412.537,409.222C416.529,412.304 419.768,416.081 422.142,420.108C424.54,424.176 411.017,425.052 411.188,429.569C411.371,434.394 417.871,439.233 422.873,439.41C426.868,439.551 428.169,427.129 431.196,430.277C434.995,434.227 438.911,437.725 443.329,440.503\\\" style=\\\"fill:rgb(161,185,193);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M79.955,0.18C79.724,4.626 79.428,9.177 79.066,13.812C78.72,18.241 69.548,9.669 66.649,12.443C63.173,15.77 62.36,23.404 65.16,27.12C67.504,30.23 78.315,22.746 77.851,27.31C77.458,31.177 77.023,35.086 76.547,39.026C94.171,43.221 114.052,49.627 133.873,53.499C138.288,54.361 132.023,41.94 136.08,39.075C140.06,36.265 147.351,37.893 150.102,42.038C152.777,46.07 142.7,55.098 147.083,55.657C161.354,57.475 175.322,57.406 188.103,53.639C186.944,48.725 185.986,43.758 185.272,38.727C184.646,34.321 196.316,42.017 199.42,38.431C202.608,34.749 201.884,27.266 198.024,23.997C194.271,20.817 184.206,29.866 183.981,25.354C183.572,17.163 183.869,8.786 185.039,0.18L79.955,0.18\\\" style=\\\"fill:rgb(174,171,161);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M214.973,84.236C211.397,81.714 206.704,80.576 202.115,81.564C200.415,81.929 198.839,82.489 197.381,83.201C189.989,86.812 185.606,94.361 183.31,100.643C181.288,106.174 182.594,114.204 182.009,117.677C178.25,114.381 174.14,113.966 171.671,111.482C173.514,107.114 175.884,102.601 173.508,99.059C169.009,92.351 162.857,96.573 154.738,94.679C152.725,102.77 146.164,106.322 150.085,113.383C152.156,117.113 157.126,115.576 161.853,115.925C162.941,119.255 161.564,124.586 162.785,129.434C159.427,128.372 152.874,123.551 147.029,122.831C143.202,122.359 138.686,122.312 134.285,123.303C129.545,124.37 124.939,126.64 121.478,130.878C117.509,135.734 116.834,142.486 119.205,147.731C120.189,149.906 121.697,151.822 123.711,153.236C125.605,154.566 127.595,155.624 129.666,156.436C131.01,156.962 130.003,146.824 132.545,145.573C135.088,144.322 143.418,146.763 144.921,148.929C146.425,151.096 140.073,158.567 141.566,158.572C147.297,158.588 153.366,157.378 159.554,155.327C167.702,152.628 174.368,147.504 174.368,147.504L182.132,151.237C182.132,151.237 178.492,160.181 177.875,164.397C177.163,169.262 180.935,174.715 185.039,176.111C189.141,177.506 196.771,176.267 202.493,172.769C202.817,172.571 203.137,172.364 203.453,172.149C208.721,168.571 212.829,162.799 213.421,158.753C213.745,156.542 213.068,153.917 211.697,151.677C210.411,149.573 208.513,147.806 206.258,147.04C202.224,145.668 192.73,145.04 192.73,145.04L192.944,136.428C192.944,136.428 200.416,132.623 206.532,126.599C208.842,124.322 210.954,121.979 212.813,119.568C213.577,118.577 214.298,117.576 214.973,116.564C215.671,115.515 204.566,116.198 203.488,113.383C202.409,110.569 205.722,100.973 208.501,99.677C211.28,98.381 219.686,107.308 220.163,105.609C221.237,101.78 221.572,97.821 221,93.739C220.452,89.822 218.155,86.481 214.973,84.236\\\" style=\\\"fill:rgb(195,196,170);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M412.537,409.222C419.723,405.471 426.329,399.535 432.317,392.398C435.093,389.088 422.032,389.49 421.418,385.199C420.697,380.166 424.727,373.119 429.434,372.268C433.833,371.472 437.737,385.52 440.244,381.792C448.174,370.002 454.738,356.61 459.821,344.722C455.96,344.041 450.957,343.315 445.533,342.59C441.246,342.018 457.014,331.204 456.155,328.449C455.295,325.694 444.362,323.986 440.376,326.061C436.39,328.136 436.697,341.447 432.24,340.901C426.689,340.22 421.283,339.579 416.708,339.021C402.977,337.348 395.719,336.353 379.808,334.676C377.589,340.457 375.436,346.238 373.348,352.019C371.816,356.259 383.959,352.042 385.627,355.915C387.492,360.246 384.999,367.136 380.807,369.342C377.078,371.305 370.32,360.5 368.859,364.74C367.367,369.072 364.615,378.592 363.196,382.924C370.752,385.496 379.359,389.605 385.183,392.897C389.393,395.277 375.628,400.754 377.002,405.327C378.419,410.045 385.927,412.992 390.852,411.767C394.934,410.752 392.88,398.307 396.7,400.428C402.968,403.909 407.492,405.327 412.537,409.222\\\" style=\\\"fill:rgb(152,167,163);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M415.792,150.588C418.778,150.944 421.216,153.03 423.224,155.819C425.867,159.49 427.765,164.378 429.188,168.131C431.269,173.62 434.631,183.269 440.149,187.148C442.352,188.696 441.281,170.643 452.139,175.661L452.265,175.72C462.884,180.764 448.564,191.565 451.16,192.236C457.69,193.926 467.218,190.235 472.747,188.263C479.398,185.891 489.679,182.361 494.789,187.097C497.468,178.537 498.486,168.995 498.321,158.858C498.249,154.391 509.643,162.025 512.696,158.341C515.765,154.638 514.406,147.346 510.596,144.047C507.112,141.03 497.946,149.809 497.455,145.145C496.646,137.467 495.325,129.566 493.674,121.589C493.226,119.421 492.751,117.245 492.254,115.066C477.758,118.01 464.558,120.268 453.264,123.287C448.46,124.572 460.629,132.299 458.636,135.522C456.026,139.743 447.499,142.133 442.823,140.168C439.362,138.714 444.001,125.993 439.933,127.664C428.341,132.425 419.932,139.208 415.792,150.588\\\" style=\\\"fill:rgb(196,164,178);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M501.363,206.768C512.767,209.649 522.378,213.476 530.351,218.084C534.597,213.633 540.025,206.827 545.437,197.99C547.658,194.361 532.403,194.262 531.377,190.945C530.35,187.628 535.84,178.895 539.279,178.088C542.717,177.28 549.877,190.391 552.01,186.1C557.19,175.68 561.862,163.371 564.838,149.496C560.771,148.165 556.912,146.027 553.409,143.219C550.053,140.53 562.743,139.063 562.643,135.149C562.523,130.488 557.478,125.006 552.93,124.575C549.144,124.217 547.024,137.226 544.452,133.427C540.504,127.593 537.633,120.594 536.314,112.863L493.674,121.589C495.325,129.566 496.646,137.467 497.455,145.145C497.946,149.809 507.112,141.03 510.596,144.047C514.406,147.346 515.765,154.638 512.696,158.341C509.643,162.025 498.249,154.391 498.321,158.858C498.486,168.995 497.468,178.537 494.789,187.097C500.738,192.611 502.538,199.835 501.363,206.768\\\" style=\\\"fill:rgb(163,181,161);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M287.767,322.708C292.973,324.096 295.149,324.644 300.465,326.061C304.955,327.258 301.206,314.679 305.727,312.9C310.254,311.119 316.86,314.298 318.575,318.936C320.251,323.467 308.875,329.552 312.588,331.452C315.331,332.856 320.125,335.804 322.434,337.27C329.444,328.607 337.443,321.622 346.676,317.495C344.005,310.783 344.862,302.721 347.947,294.365C349.481,290.211 357.849,302.186 361.045,300.98C364.241,299.775 368.291,290.324 367.123,287.13C365.956,283.936 351.565,285.985 354.04,281.816C357.043,276.758 360.623,271.783 364.493,267.125C360.766,263.425 357.133,260.054 353.503,257.005C349.945,254.016 362.251,251.31 361.57,247.166C360.755,242.21 354.949,236.735 350.244,237.184C345.974,237.592 346.389,251.337 342.75,248.961C339.515,246.85 336.215,244.979 332.788,243.344C326.052,240.129 318.932,237.701 311.091,235.88C305.64,249.485 301.298,263.231 297.472,278.096C296.343,282.485 288.762,271.773 285.399,273.901C281.007,276.68 277.703,284.792 279.904,289.212C281.797,293.014 295.258,286.972 294.203,291.582C291.973,301.328 289.875,311.624 287.767,322.708\\\" style=\\\"fill:rgb(195,158,176);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M0.18,147.04L0.18,214.288C13.706,214.629 25.55,215.534 36.002,216.904C40.742,217.525 33.958,205.099 37.871,202.591C41.857,200.038 49.063,202.576 51.943,206.69C54.425,210.236 45.195,218.242 49.39,219.045C58.469,220.783 66.336,222.925 73.263,225.377C74.792,218.728 76.582,212.454 78.621,206.538C80.139,202.135 86.125,213.334 90.274,211.686C94.984,209.815 99.101,203.4 97.465,199.053C95.792,194.61 81.795,197.93 83.584,193.917C86.402,187.596 89.549,181.752 93.006,176.36C88.755,174.296 84.373,172.308 79.903,170.404C75.798,168.655 87.975,161.496 86.054,157.845C83.856,153.666 75.773,151.804 71.11,153.688C67.485,155.151 71.62,166.978 67.4,165.378C61.525,163.15 55.57,161.074 49.627,159.166C41.79,156.65 33.978,154.422 26.403,152.514C21.991,151.403 27.804,163.661 24.411,165.389C20.221,167.522 12.386,165.014 9.646,161.046C7.565,158.031 17.661,150.401 13.452,149.515C8.865,148.55 4.422,147.721 0.18,147.04\\\" style=\\\"fill:rgb(161,196,165);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M429.712,460.162C430.122,454.784 434.385,448.118 443.329,440.503C438.911,437.725 434.995,434.227 431.196,430.277C428.169,427.129 426.868,439.551 422.873,439.41C417.871,439.233 411.371,434.394 411.188,429.569C411.017,425.052 424.54,424.176 422.142,420.108C419.768,416.081 416.529,412.304 412.537,409.222C407.492,405.327 402.968,403.909 396.7,400.428C392.88,398.307 394.934,410.752 390.852,411.767C385.927,412.992 378.419,410.045 377.002,405.327C375.628,400.754 389.393,395.277 385.183,392.897C379.359,389.605 370.752,385.496 363.196,382.924C361.16,389.141 360.498,390.17 358.614,396.387C357.305,400.707 349.041,389.918 346.159,391.653C343.278,393.388 339.884,403.847 341.324,406.796C342.763,409.745 356.033,405.027 354.798,409.347C352.747,416.517 350.798,423.687 348.951,430.857C347.399,436.882 345.917,442.907 344.508,448.933C352.732,451.867 359.29,455.031 365.057,458.236C369.358,460.627 356.449,465.349 357.636,469.914C358.923,474.862 365.364,479.159 370.205,478.03C374.825,476.952 373.218,463.04 377.002,465.398C384.848,470.288 392.362,474.94 402.779,478.658C406.191,469.125 414.321,461.288 429.712,460.162\\\" style=\\\"fill:rgb(160,155,181);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M272.476,83.783C270.533,80.514 268.479,77.305 266.315,74.175C263.753,70.469 276.227,70.92 276.557,66.882C276.932,62.297 272.413,56.704 267.814,55.837C263.844,55.089 261.036,66.873 258.164,63.416C254.938,59.532 251.517,55.824 247.901,52.333C245.057,55.781 242.064,59.106 239,62.295C235.806,65.619 234.443,51.309 230.137,51.406C225.443,51.512 220.441,57.618 220.224,62.719C220.039,67.066 232.534,68.796 229.271,71.812C224.386,76.328 219.522,80.484 214.973,84.236C218.155,86.481 220.452,89.822 221,93.739C221.572,97.821 221.237,101.78 220.163,105.609C219.686,107.308 211.28,98.381 208.501,99.677C205.722,100.973 202.409,110.569 203.488,113.383C204.566,116.198 215.671,115.515 214.973,116.564C214.298,117.576 213.577,118.577 212.813,119.568C210.954,121.979 208.842,124.322 206.532,126.599C200.416,132.623 192.944,136.428 192.944,136.428L192.73,145.04C192.73,145.04 202.224,145.668 206.258,147.04C208.513,147.806 210.411,149.573 211.697,151.677C216.24,149.245 220.706,146.777 225.158,144.33C229.11,142.158 228.464,155.425 231.77,156.436C235.076,157.447 244.119,153.487 244.994,150.397C245.869,147.308 233.049,140.002 237.021,137.901C239.66,136.504 245.117,133.87 247.797,132.532C253.234,129.819 255.977,128.513 261.737,126.186C265.892,124.507 254.594,117.663 255.904,115.066C257.215,112.468 266.486,109.518 269.598,110.6C272.71,111.683 270.158,122.954 274.575,121.561C277.971,120.49 283.253,118.84 286.845,117.975C283.134,106.011 281.408,99.725 275.062,88.286C274.223,86.774 273.361,85.271 272.476,83.783\\\" style=\\\"fill:rgb(185,198,185);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M187.205,291.885C183.021,292.833 178.75,293.928 174.368,295.208C171.266,296.114 168.11,297.111 164.889,298.216C160.652,299.668 156.305,301.304 151.83,303.155C147.836,304.806 161.276,309.916 160.5,312.613C159.723,315.31 150.666,320 147.171,319.338C143.676,318.677 143.74,306.628 139.529,308.643C134.236,311.175 128.76,314.011 123.076,317.195C126.265,321.278 128.771,325.869 130.529,330.98C131.921,335.026 120.41,329.889 118.446,333.382C116.155,337.458 117.657,344.605 121.363,347.284C124.515,349.564 132.844,339.397 133.268,344.099C133.896,351.07 133.425,358.769 131.753,367.211C138.554,367.535 144.987,368.757 150.787,370.712C151.516,370.189 153.862,368.517 156.914,366.475C160.186,364.286 164.27,361.671 168.045,359.589C172.869,356.929 177.188,355.138 178.661,356.216C180.395,357.485 179.721,363.842 178.426,370.554C178.284,371.285 173.881,367.403 172.206,368.507C170.532,369.611 167.584,375.722 168.38,377.178C169.175,378.634 177.215,376.247 176.981,377.244C175.907,381.801 174.823,385.736 174.367,387.353C177.061,391.418 178.653,395.929 178.88,400.721C193.493,400.721 203.387,399.43 212.981,398.138C213.029,386.102 210.878,375.354 207.736,364.545C206.54,360.433 216.976,364.746 218.182,361.945C219.388,359.145 217.372,349.382 214.973,347.742C212.573,346.103 205.202,356.313 203.786,352.109C198.042,335.053 191.034,316.631 187.205,291.885\\\" style=\\\"fill:rgb(196,200,172);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M570.545,584.975C572.006,593.117 573.308,601.972 574.415,611.658C574.842,615.389 575.24,619.318 575.607,623.4C575.998,627.739 585.131,618.626 587.87,621.166C591.325,624.372 592.228,632.293 589.429,636.222C587.125,639.455 576.354,632.251 576.672,636.882C576.927,640.581 577.158,644.356 577.364,648.18L648.18,648.18L648.18,577.937C638.809,576.547 625.902,576.547 612.523,577.651C608.06,578.02 617.289,587.943 614.307,591.25C611.038,594.876 603.249,595.19 599.445,592.156C596.158,589.534 603.545,578.511 599.091,579.114C588.778,580.51 578.793,582.508 570.545,584.975\\\" style=\\\"fill:rgb(171,194,177);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M73.263,225.377C71.315,233.852 69.791,242.936 68.717,252.661C78.22,253.089 87.477,253.148 96.533,252.906C101.119,252.784 94.781,240.516 97.465,237.922C100.149,235.327 110.524,234.94 112.638,237.339C114.751,239.738 105.654,252.585 110.144,252.318C123.8,251.506 137.038,250.069 150.032,248.264C151.44,242.935 152.801,238.637 154.494,234.067C155.98,230.057 141.543,233.943 139.782,229.441C137.873,224.562 141.81,216.777 146.859,214.548C151.242,212.613 157.721,225.837 159.975,220.528C161.39,217.194 163.007,213.43 164.889,209.018C156.289,206.584 148.099,202.736 140.362,198.142C136.465,195.828 149.008,191.871 148.132,187.516C147.123,182.503 141.104,177.288 136.326,178.088C131.745,178.855 132.683,193.324 129.022,190.716C118.14,182.966 108.323,174.294 99.716,166.936C97.532,169.701 95.444,172.607 93.457,175.661C93.306,175.893 93.156,176.126 93.006,176.36C89.549,181.752 86.402,187.596 83.584,193.917C81.795,197.93 95.792,194.61 97.465,199.053C99.101,203.4 94.984,209.815 90.274,211.686C86.125,213.334 80.139,202.135 78.621,206.538C76.582,212.454 74.792,218.728 73.263,225.377\\\" style=\\\"fill:rgb(162,166,171);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M509.267,586.37C504.186,585.572 499.597,582.705 496.737,578.388C495.857,577.059 509.612,579.316 511.215,576.72C512.818,574.125 509.27,564.201 506.356,562.816C503.442,561.431 493.733,569.541 493.734,568.409C493.735,566.494 494.042,564.608 494.624,562.816C495.736,559.39 497.848,556.304 500.732,554C500.2,547.212 499.049,538.733 497.623,530.039C496.897,525.614 496.1,521.132 495.278,516.791C494.173,510.964 493.023,505.388 491.936,500.536C485.427,506.499 488.342,515.831 485.455,521.402C481.895,528.272 477.231,531.672 471.972,530.972C469.223,530.606 466.29,529.1 463.247,526.34C459.829,532.027 456.77,537.715 454.047,543.402C452.066,547.541 446.188,535.677 442.087,537.322C437.381,539.21 433.59,546.329 435.225,550.954C436.734,555.222 450.262,551.68 448.626,555.819C445.866,562.805 443.585,569.791 441.74,576.777C440.834,580.204 439.68,585.754 438.98,589.182C438.073,593.619 429.663,584.093 425.597,586.824C421.441,589.615 419.704,596.624 422.353,600.346C425.141,604.264 437.332,598.056 436.748,602.492C436.295,605.931 436.289,607.247 436.018,610.685C446.218,610.757 456.419,610.829 466.619,610.901C471.119,610.933 462.24,599.923 465.508,596.699C468.92,593.335 476.614,593.867 480.266,597.441C483.617,600.72 475.619,610.965 480.119,610.996C489.096,611.06 498.074,611.123 507.051,611.186C506.916,602.74 507.539,594.445 509.267,586.37\\\" style=\\\"fill:rgb(166,187,181);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M382.509,549.104C390.369,556.412 397.48,567.96 398.793,574.343\\\" style=\\\"fill:none;stroke:black;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M576.311,396.753C574.998,386.55 572.523,376.854 568.118,367.931C566.138,363.922 579.257,365.428 580.239,360.78C581.228,356.098 576.899,350.301 572.074,349.205C567.557,348.179 563.769,360.069 560.94,356.396C555.44,349.257 548.474,344.099 537.297,339.402C534.985,342.883 533.952,344.14 531.362,347.558C528.667,351.115 525.828,354.632 522.858,358.092C520.712,360.593 518.498,363.064 516.221,365.501C521.116,370.193 523.999,375.734 524.669,382.371C525.09,386.545 534.967,379.706 538.065,383.281C541.49,387.232 541.972,395.015 538.367,398.174C534.664,401.418 524.636,391.152 523.255,396.255C521.551,402.557 518.434,409.614 513.809,417.543C526.485,418.503 534.076,421.792 537.177,426.446C540.119,430.862 539.116,436.547 534.511,442.764C531.269,447.141 519.966,453.073 521.351,456.467C522.858,460.162 533.837,451.964 539.279,451.715C547.008,451.363 552.285,453.702 554.309,458.607C554.936,460.127 555.248,461.903 555.217,463.934L576.158,464.491C576.337,457.135 576.69,444.591 577.002,437.296C577.198,432.73 589.972,439.899 592.437,437.573C594.902,435.248 594.283,425.658 591.792,423.345C589.301,421.031 577.378,428.19 577.49,423.693C577.766,412.634 577.631,407.023 576.311,396.753\\\" style=\\\"fill:rgb(179,187,200);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M479.476,74.741C476.14,63.637 473.062,53.179 470.485,43.519C469.24,38.851 481.495,44.843 483.515,41.192C485.966,36.764 484.383,28.581 480.286,25.806C476.772,23.426 468.113,34.37 467.13,30.091C464.473,18.527 462.872,8.445 462.872,0.18L408.018,0.18C407.167,12.342 407.04,25.639 408.157,38.645C408.546,43.173 396.851,36.536 394.143,40.346C391.48,44.092 393.409,50.955 397.323,53.885C400.885,56.55 409.086,47.666 409.799,52.064C412.113,66.341 416.25,79.613 422.963,89.819C428.317,88.44 433.703,87.038 439.113,85.616C443.434,84.481 432.605,76.978 434.655,73.714C437.128,69.776 444.639,67.749 449.005,69.863C452.679,71.643 447.77,83.332 452.118,82.17C461.191,79.747 470.319,77.269 479.476,74.741\\\" style=\\\"fill:rgb(169,181,171);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M367.523,144.272C365.187,141.033 363.026,137.583 361.045,134.022C358.84,130.057 372.852,133.096 374.104,130.192C375.355,127.288 371.721,117.988 368.555,116.598C365.388,115.207 356.858,125.954 355.102,121.85C352.717,116.271 350.751,110.69 349.217,105.449C342.525,106.715 335.848,107.977 329.206,109.263C324.76,110.124 329.385,98.8 326.51,97.326C323.635,95.853 313.722,97.997 311.956,100.424C310.191,102.85 320.328,110.996 315.918,111.887C305.487,113.995 296.97,115.537 286.845,117.975C283.253,118.84 277.971,120.49 274.575,121.561C270.158,122.954 272.71,111.683 269.598,110.6C266.486,109.518 257.215,112.468 255.904,115.066C254.594,117.663 265.892,124.507 261.737,126.186C255.977,128.513 253.234,129.819 247.797,132.532C253.481,139.807 262.284,161.119 264.034,164.812C273.673,162.818 282.413,161.938 290.252,162.038C295.368,162.103 285.336,171.884 287.993,174.778C291.502,178.599 300.174,180.156 304.288,177.323C307.583,175.055 300.101,162.586 304.449,163.448C314.95,165.53 323.214,169.827 329.24,175.811C335.503,170.086 338.07,166.877 343.543,162.328C347.132,159.345 347.032,173.343 351.744,173.893C356.553,174.455 362.274,169.527 362.776,164.575C363.257,159.838 350.541,156.603 353.754,154.088C357.51,151.147 364.325,146.616 367.523,144.272\\\" style=\\\"fill:rgb(166,163,187);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M275.132,232.406C271.26,232.514 267.16,232.768 262.79,233.182C258.631,233.576 262.818,222.224 259.852,220.345C256.886,218.465 246.713,219.495 244.994,221.905C243.275,224.316 254.226,234.115 249.537,234.809C244.043,235.623 238.159,236.65 231.825,237.909C233.235,242.262 234.565,246.629 235.818,251.009C237,255.141 238.114,259.284 239.162,263.438C240.263,267.806 248.601,256.89 251.856,259.17C255.909,262.009 257.775,270.441 255.373,274.792C253.463,278.251 241.292,272.185 242.249,276.573C242.801,279.104 243.33,281.639 243.836,284.176C244.748,288.755 245.585,293.344 246.35,297.939C247.089,302.381 247.76,306.829 248.367,311.282C248.685,313.623 248.986,315.964 249.269,318.308C253.49,318.06 257.788,318.098 262.101,318.38C266.57,318.673 271.054,319.228 275.484,319.999C279.646,320.724 283.76,321.639 287.767,322.708C289.875,311.624 291.973,301.328 294.203,291.582C295.258,286.972 281.797,293.014 279.904,289.212C277.703,284.792 281.007,276.68 285.399,273.901C288.762,271.773 296.343,282.485 297.472,278.096C301.298,263.231 305.64,249.485 311.091,235.88C301.995,233.768 292.06,232.342 279.74,232.342C278.24,232.342 276.705,232.363 275.132,232.406\\\" style=\\\"fill:rgb(177,164,175);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M392.556,164.812C382.757,161.462 374.383,153.778 367.523,144.272C364.325,146.616 357.51,151.147 353.754,154.088C350.541,156.603 363.257,159.838 362.776,164.575C362.274,169.527 356.553,174.455 351.744,173.893C347.032,173.343 347.132,159.345 343.543,162.328C338.07,166.877 335.503,170.086 329.24,175.811C333.783,180.321 337.053,185.791 339.051,191.994C340.33,195.966 328.631,189.779 326.51,193.011C323.935,196.934 325.049,204.75 328.753,207.685C331.899,210.179 341.088,200.238 341.324,204.752C341.929,216.357 339.085,229.556 332.788,243.344C336.215,244.979 339.515,246.85 342.75,248.961C346.389,251.337 345.974,237.592 350.244,237.184C354.949,236.735 360.755,242.21 361.57,247.166C362.251,251.31 349.945,254.016 353.503,257.005C357.133,260.054 360.766,263.425 364.493,267.125C371.56,258.62 379.714,251.495 386.987,246.506C386.612,245.973 385.997,240.772 395.531,239.786C405.17,238.79 398.881,230.596 391.942,228.02C384.571,225.283 380.333,235.655 380.105,234.89C378.855,230.694 379.218,227.035 380.661,223.958C382.515,220.004 386.152,217.01 390.44,215.072C394.36,213.3 398.825,212.411 402.968,212.478C413.873,212.654 427.203,213.506 426.83,208.506C426.496,204.035 422.301,202.509 419.017,201.523C415.334,200.417 410.86,199.25 406.558,197.583C402.33,195.946 398.266,193.826 395.28,190.809C393.306,188.815 391.802,186.429 391.033,183.531C389.372,177.275 390.047,170.553 392.556,164.812\\\" style=\\\"fill:rgb(159,155,184);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M203.453,172.149C203.137,172.364 202.817,172.571 202.493,172.769C196.771,176.267 189.141,177.506 185.039,176.111C180.935,174.715 177.163,169.262 177.875,164.397C178.492,160.181 182.132,151.237 182.132,151.237L174.368,147.504C174.368,147.504 167.702,152.628 159.554,155.327C153.366,157.378 147.297,158.588 141.566,158.572C140.073,158.567 146.425,151.096 144.921,148.929C143.418,146.763 135.088,144.322 132.545,145.573C130.003,146.824 131.01,156.962 129.666,156.436C127.595,155.624 125.605,154.566 123.711,153.236C121.697,151.822 120.189,149.906 119.205,147.731C112.067,153.182 105.547,159.553 99.716,166.936C108.323,174.294 118.14,182.966 129.022,190.716C132.683,193.324 131.745,178.855 136.326,178.088C141.104,177.288 147.123,182.503 148.132,187.516C149.008,191.871 136.465,195.828 140.362,198.142C148.099,202.736 156.289,206.584 164.889,209.018C171.254,210.82 177.948,211.315 184.744,211.199C189.201,211.123 181.408,222.888 183.514,225.251C185.62,227.614 194.936,227.856 197.381,225.377C199.825,222.898 193.702,210.784 198.184,210.378C205.977,209.674 213.71,208.769 221.047,208.697C219.843,205.803 218.6,202.918 217.317,200.041C215.497,195.958 229.496,200.836 230.923,198.142C232.35,195.448 229.095,185.593 225.877,183.877C222.659,182.161 213.597,191.893 211.614,187.846C209.035,182.581 206.316,177.348 203.453,172.149\\\" style=\\\"fill:rgb(157,184,162);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M501.363,206.768C502.538,199.835 500.738,192.611 494.789,187.097C489.679,182.361 479.398,185.891 472.747,188.263C467.218,190.235 457.69,193.926 451.16,192.236C448.564,191.565 462.884,180.764 452.265,175.72L452.139,175.661C441.281,170.643 442.352,188.696 440.149,187.148C434.631,183.269 431.269,173.62 429.188,168.131C427.765,164.378 425.867,159.49 423.224,155.819C421.216,153.03 418.778,150.944 415.792,150.588C404.852,149.287 396.472,155.857 392.556,164.812C390.047,170.553 389.372,177.275 391.033,183.531C391.802,186.429 393.306,188.815 395.28,190.809C398.266,193.826 402.33,195.946 406.558,197.583C410.86,199.25 415.334,200.417 419.017,201.523C422.301,202.509 426.496,204.035 426.83,208.506C427.203,213.506 413.873,212.654 402.968,212.478C398.825,212.411 394.36,213.3 390.44,215.072C386.152,217.01 382.515,220.004 380.661,223.958C379.218,227.035 378.855,230.694 380.105,234.89C380.333,235.655 384.571,225.283 391.942,228.02C398.881,230.596 405.17,238.79 395.531,239.786C385.997,240.772 386.612,245.973 386.987,246.506C394.796,257.634 407.625,247.705 414.602,240.871C420.058,235.527 423.245,228.267 427.02,230.012L427.107,230.054C430.732,231.86 427.658,238.901 426.796,246.506C426.506,249.06 426.244,252.313 426.262,255.696C426.287,260.422 426.858,265.403 428.663,269.093C430.475,272.8 433.532,275.204 438.53,274.738C439.179,274.677 445.576,271.434 440.149,263.534C434.661,255.546 444.809,251.822 451.268,255.437C458.129,259.279 452.976,269.228 453.706,268.905C459.413,266.388 462.169,262.082 462.872,257.246C463.877,250.343 460.699,242.36 455.96,236.969C448.76,228.778 438.972,218.348 443.023,215.391C446.644,212.748 451.025,215.784 453.905,217.647C456.621,219.404 459.733,221.559 463.068,223.507C466.964,225.782 471.165,227.776 475.396,228.523C478.875,229.137 482.374,228.909 485.741,227.302C493.986,223.366 499.92,215.286 501.363,206.768\\\" style=\\\"fill:rgb(186,168,198);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M41.432,395.725C51.674,395.389 61.626,395.463 74.204,397.679C76.166,390.677 81.068,384.285 88.014,379.178C87.947,377.78 87.785,373.919 87.777,369.446C87.775,368.415 94.645,372.51 95.777,371.637C96.91,370.764 95.879,365.825 94.572,364.209C93.265,362.593 87.912,362.432 87.937,361.939C88.229,356.103 88.987,350.9 90.721,350.132C92.448,349.368 96.567,352.372 100.812,356.169C104.107,359.115 107.478,362.538 109.867,365.046C111.678,366.948 112.924,368.324 113.144,368.567C116.751,367.856 120.511,367.393 124.38,367.211C126.877,367.093 129.338,367.095 131.753,367.211C133.425,358.769 133.896,351.07 133.268,344.099C132.844,339.397 124.515,349.564 121.363,347.284C117.657,344.605 116.155,337.458 118.446,333.382C120.41,329.889 131.921,335.026 130.529,330.98C128.771,325.869 126.265,321.278 123.076,317.195C119.044,312.035 113.92,307.689 107.833,304.135C104.13,301.974 114.563,297.096 113.068,293.276C111.335,288.846 105.245,285.103 100.898,286.415C96.833,287.643 100.07,300.105 95.683,298.526C87.219,295.478 77.535,293.505 66.841,292.574C66.841,315.558 63.964,330.367 60.147,341.415C58.321,346.698 46.764,333.899 43.252,335.513C39.74,337.127 37.244,347.822 39.074,351.098C40.905,354.374 56.28,351.122 54.235,355.168C47.959,367.587 41.65,376.45 41.432,395.725\\\" style=\\\"fill:rgb(182,187,198);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M509.21,494.11C507.588,488.584 506.261,483.968 505.705,480.681C504.409,473.036 519.318,486.748 522.86,487.512C524.837,487.94 524.804,482.869 523.785,481.513C522.889,480.319 522.293,478.185 523.407,477.348C524.881,476.241 532.131,476.455 532.627,474.872C533.123,473.29 529.303,468.984 526.383,467.853C521.678,466.03 505.926,468.264 504.394,463.934C502.862,459.605 515.546,446.549 517.189,441.874C517.926,439.777 516.137,436.967 514.253,435.887C512.369,434.807 507.95,436.622 505.883,435.396C503.816,434.17 503.594,429.88 501.851,428.528C500.124,427.191 496.177,425.242 495.416,427.289C494.325,430.231 496.965,441.743 495.3,446.178C493.832,450.09 488.273,453.034 485.427,453.902C480.347,455.454 474.185,452.24 472.133,448.933C470.477,446.263 467.489,442.052 465.624,442.115C463.76,442.178 463.565,448.165 460.944,449.312C458.315,450.463 451.484,447.971 449.849,449.018C448.214,450.065 449.531,454.037 451.133,455.592C453.814,458.195 457.247,461.4 465.936,464.639C470.007,466.155 477.122,467.635 477.187,471.217C477.251,474.799 469.683,482.598 466.325,486.131C463.749,488.84 457.089,490.871 457.036,492.413C456.983,493.955 463.912,493.499 466.009,495.386C468.105,497.273 467.078,503.583 469.616,503.732C472.155,503.881 478.864,499.134 481.24,496.279C483.379,493.708 480.21,480.498 486.836,483.371C487.73,483.758 489.72,490.72 491.936,500.536C493.023,505.388 494.173,510.964 495.278,516.791C496.1,521.132 496.897,525.614 497.623,530.039C499.049,538.733 500.2,547.212 500.732,554C497.848,556.304 495.736,559.39 494.624,562.816C494.042,564.608 493.735,566.494 493.734,568.409C493.733,569.541 503.442,561.431 506.356,562.816C509.27,564.201 512.818,574.125 511.215,576.72C509.612,579.316 495.857,577.059 496.737,578.388C499.597,582.705 504.186,585.572 509.267,586.37C512.111,586.818 515.109,586.618 518.044,585.662C527.835,582.472 532.451,571.517 529.316,561.896C527.607,556.649 526.968,553.418 519.572,551.981C520.21,542.101 518.928,531.914 516.909,522.31C515.978,517.879 514.89,513.572 513.762,509.477C512.221,503.886 510.606,498.689 509.21,494.11\\\" style=\\\"fill:rgb(157,154,168);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M648.18,350.491L648.18,284.411C631.998,283.616 619.791,280.261 607.644,276.498C603.349,275.167 605.029,287.386 601.733,288.855C598.437,290.324 589.057,288.048 587.87,285.313C586.682,282.579 599.061,273.785 594.607,272.447C585.038,269.572 574.704,266.901 561.887,265.378C562.55,272.899 561.952,280.781 560.249,288.855C559.077,294.408 557.384,300.053 555.217,305.733C576.888,313.591 591.204,323.798 604.718,332.55C608.501,335 607.122,322.624 611.026,321.994C615.587,321.259 621.713,325.237 622.962,329.607C624.003,333.251 612.221,337.336 616.022,339.474C625.496,344.805 635.474,348.908 648.18,350.491\\\" style=\\\"fill:rgb(190,155,159);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M332.788,243.344C339.085,229.556 341.929,216.357 341.324,204.752C341.088,200.238 331.899,210.179 328.753,207.685C325.049,204.75 323.935,196.934 326.51,193.011C328.631,189.779 340.33,195.966 339.051,191.994C337.053,185.791 333.783,180.321 329.24,175.811C323.214,169.827 314.95,165.53 304.449,163.448C300.101,162.586 307.583,175.055 304.288,177.323C300.174,180.156 291.502,178.599 287.993,174.778C285.336,171.884 295.368,162.103 290.252,162.038C282.413,161.938 273.673,162.818 264.034,164.812C267.576,172.287 270.648,180.241 273.114,188.712C274.343,192.931 261.935,188.153 260.538,190.716C259.14,193.28 262.097,202.253 264.729,204.093C267.362,205.933 275.421,197.278 276.333,201.758C278.281,211.329 279.47,221.508 279.74,232.342C292.06,232.342 301.995,233.768 311.091,235.88C318.932,237.701 326.052,240.129 332.788,243.344\\\" style=\\\"fill:rgb(180,162,162);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M648.18,284.411L648.18,215.27C633.765,215.421 616.863,217.485 599.826,221.905C595.463,223.037 606.397,231.61 603.917,235.415C601.306,239.419 593.676,240.333 589.385,237.922C585.79,235.902 591.092,224.324 586.751,225.772C575.405,229.557 564.268,234.447 554.045,240.577C558.578,248.159 561.107,256.518 561.887,265.378C574.704,266.901 585.038,269.572 594.607,272.447C599.061,273.785 586.682,282.579 587.87,285.313C589.057,288.048 598.437,290.324 601.733,288.855C605.029,287.386 603.349,275.167 607.644,276.498C619.791,280.261 631.998,283.616 648.18,284.411\\\" style=\\\"fill:rgb(173,155,195);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M93.006,176.36C93.156,176.126 93.306,175.893 93.457,175.661C95.444,172.607 97.532,169.701 99.716,166.936C105.547,159.553 112.067,153.182 119.205,147.731C116.834,142.486 117.509,135.734 121.478,130.878C124.939,126.64 129.545,124.37 134.285,123.303C129.338,112.222 119.46,102.719 107.827,94.99C104.084,92.504 105.778,105.339 101.963,106.037C97.2,106.909 90.225,102.965 88.774,98.478C87.603,94.855 100.16,90.2 96.16,88.087C87.699,83.618 78.9,79.999 70.764,77.292C68.831,87.939 66.583,98.804 64.068,109.488C63.025,113.921 76.067,108.082 78.473,112.234C81.036,116.658 78.738,124.576 74.32,127.183C70.297,129.558 61.935,118.322 60.803,122.663C57.426,135.617 53.67,148.038 49.627,159.166C55.57,161.074 61.525,163.15 67.4,165.378C71.62,166.978 67.485,155.151 71.11,153.688C75.773,151.804 83.856,153.666 86.054,157.845C87.975,161.496 75.798,168.655 79.903,170.404C84.373,172.308 88.755,174.296 93.006,176.36\\\" style=\\\"fill:rgb(154,186,199);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M270.188,0.18L185.039,0.18C183.869,8.786 183.572,17.163 183.981,25.354C184.206,29.866 194.271,20.817 198.024,23.997C201.884,27.266 202.608,34.749 199.42,38.431C196.316,42.017 184.646,34.321 185.272,38.727C185.986,43.758 186.944,48.725 188.103,53.639C190.472,63.683 193.683,73.506 197.381,83.201C198.839,82.489 200.415,81.929 202.115,81.564C206.704,80.576 211.397,81.714 214.973,84.236C219.522,80.484 224.386,76.328 229.271,71.812C232.534,68.796 220.039,67.066 220.224,62.719C220.441,57.618 225.443,51.512 230.137,51.406C234.443,51.309 235.806,65.619 239,62.295C242.064,59.106 245.057,55.781 247.901,52.333C252.073,47.272 255.924,41.946 259.21,36.39C261.539,32.453 248.15,35.29 246.767,31.04C245.158,26.098 248.153,18.321 252.775,16.623C257.04,15.056 263.583,28.401 265.257,24.247C268.359,16.547 270.188,8.496 270.188,0.18\\\" style=\\\"fill:rgb(177,199,188);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M66.841,292.574C77.535,293.505 87.219,295.478 95.683,298.526C100.07,300.105 96.833,287.643 100.898,286.415C105.245,285.103 111.335,288.846 113.068,293.276C114.563,297.096 104.13,301.974 107.833,304.135C113.92,307.689 119.044,312.035 123.076,317.195C128.76,314.011 134.236,311.175 139.529,308.643C143.74,306.628 143.676,318.677 147.171,319.338C150.666,320 159.723,315.31 160.5,312.613C161.276,309.916 147.836,304.806 151.83,303.155C156.305,301.304 160.652,299.668 164.889,298.216C168.11,297.111 171.266,296.114 174.368,295.208C171.99,288.497 169.321,282.169 166.478,276.25C164.45,272.026 178.826,274.308 180.141,271.141C181.455,267.974 177.695,258.402 174.367,257.246C171.038,256.091 162.333,268.01 160.17,264.209C156.849,258.376 153.419,253.05 150.032,248.264C137.038,250.069 123.8,251.506 110.144,252.318C105.654,252.585 114.751,239.738 112.638,237.339C110.524,234.94 100.149,235.327 97.465,237.922C94.781,240.516 101.119,252.784 96.533,252.906C87.477,253.148 78.22,253.089 68.717,252.661C68.205,257.305 67.792,262.095 67.485,267.036C67.211,271.438 55.609,260.179 53.141,262.022C50.674,263.866 50.384,274.999 52.68,278.096C54.976,281.192 67.021,275.959 66.917,280.602C66.829,284.506 66.804,288.496 66.841,292.574\\\" style=\\\"fill:rgb(200,164,168);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M358.946,0.18C359.337,19.194 356.108,26.773 353.683,46.503C353.139,50.927 363.734,43.754 366.696,47.164C369.895,50.847 370.019,58.204 366.481,61.235C362.894,64.307 352.673,55.26 352.351,59.453C351.438,71.327 350.943,96.038 353.843,104.573C360.783,103.222 370.103,101.378 379.934,99.364C384.278,98.474 373.68,89.718 376.214,85.889C378.914,81.809 386.514,80.359 390.737,83.042C394.653,85.53 388.722,97.55 393.104,96.622C404.38,94.232 415.249,91.807 422.963,89.819C416.25,79.613 412.113,66.341 409.799,52.064C409.086,47.666 400.885,56.55 397.323,53.885C393.409,50.955 391.48,44.092 394.143,40.346C396.851,36.536 408.546,43.173 408.157,38.645C407.04,25.639 407.167,12.342 408.018,0.18L358.946,0.18\\\" style=\\\"fill:rgb(176,191,169);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M70.764,77.292C71.466,73.427 72.132,69.557 72.762,65.693C73.489,61.229 74.168,56.772 74.798,52.337C75.432,47.872 76.015,43.43 76.547,39.026C77.023,35.086 77.458,31.177 77.851,27.31C78.315,22.746 67.504,30.23 65.16,27.12C62.36,23.404 63.173,15.77 66.649,12.443C69.548,9.669 78.72,18.241 79.066,13.812C79.428,9.177 79.724,4.626 79.955,0.18L0.18,0.18L0.18,66.79C8.042,66.79 19.836,67.444 32.647,69.102C37.1,69.679 30.664,58.14 34.466,55.495C38.711,52.542 46.682,53.362 49.628,57.291C52.361,60.935 41.675,70.377 46.251,71.211C54.674,72.746 63.1,74.742 70.764,77.292\\\" style=\\\"fill:rgb(172,186,179);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M322.654,0.18L270.188,0.18C270.188,8.496 268.359,16.547 265.257,24.247C263.583,28.401 257.04,15.056 252.775,16.623C248.153,18.321 245.158,26.098 246.767,31.04C248.15,35.29 261.539,32.453 259.21,36.39C255.924,41.946 252.073,47.272 247.901,52.333C251.517,55.824 254.938,59.532 258.164,63.416C261.036,66.873 263.844,55.089 267.814,55.837C272.413,56.704 276.932,62.297 276.557,66.882C276.227,70.92 263.753,70.469 266.315,74.175C268.479,77.305 270.533,80.514 272.476,83.783C273.361,85.271 274.223,86.774 275.062,88.286L275.344,88.178C287.271,83.562 296.729,76.367 303.959,67.359C306.724,63.915 309.162,60.205 311.289,56.274C313.451,52.277 315.29,48.051 316.821,43.641C317.415,41.927 304.873,43.535 302.911,40.379C300.949,37.223 302.174,26.166 305.047,24.705C307.921,23.243 319.951,32.556 320.152,31.611C322.272,21.643 323.06,11.022 322.654,0.18Z\\\" style=\\\"fill:rgb(160,183,170);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M322.654,0.18C323.06,11.022 322.272,21.643 320.152,31.611C319.951,32.556 307.921,23.243 305.047,24.705C302.174,26.166 300.949,37.223 302.911,40.379C304.873,43.535 317.415,41.927 316.821,43.641C315.29,48.051 313.451,52.277 311.289,56.274C309.162,60.205 306.724,63.915 303.959,67.359C296.672,76.438 287.123,83.675 275.062,88.286C281.408,99.725 283.134,106.011 286.845,117.975C296.97,115.537 305.487,113.995 315.918,111.887C320.328,110.996 310.191,102.85 311.956,100.424C313.722,97.997 323.635,95.853 326.51,97.326C329.385,98.8 324.76,110.124 329.206,109.263C335.848,107.977 342.525,106.715 349.217,105.449C350.758,105.158 352.301,104.865 353.843,104.573C350.943,96.038 351.438,71.327 352.351,59.453C352.673,55.26 362.894,64.307 366.481,61.235C370.019,58.204 369.895,50.847 366.696,47.164C363.734,43.754 353.139,50.927 353.683,46.503C356.108,26.773 359.337,19.194 358.946,0.18L322.654,0.18\\\" style=\\\"fill:rgb(172,185,158);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M368.555,648.18L324.18,648.18C324.018,642.865 323.913,637.549 323.865,632.234C323.824,627.734 333.723,636.068 336.936,632.982C340.597,629.466 341.777,621.731 338.509,618.169C335.303,614.674 323.823,623.234 323.863,618.734C323.892,615.559 323.94,612.384 324.008,609.209C324.178,601.349 324.471,593.489 324.887,585.63C325.124,581.138 314.142,586.164 311.956,583.294C309.771,580.424 309.479,570.266 311.773,568.409C314.067,566.553 325.402,576.647 325.721,572.155C326.285,564.188 326.976,556.221 327.793,548.254C328.316,543.151 328.892,538.047 329.519,532.943C337.357,533.434 344.643,534.332 351.307,535.689C356.024,536.65 345.004,545.334 347.505,549.043C350.155,552.975 357.661,553.858 361.91,551.417C365.505,549.352 360.43,537.841 364.5,539.28C371.556,541.776 377.603,545.018 382.509,549.104C386.439,552.758 390.182,557.472 393.106,562.07C396.008,566.633 398.104,571.081 398.778,574.268L398.793,574.343C393.94,575.546 389.746,577.407 386.148,579.865C382.374,582.441 379.257,585.674 376.724,589.491C375.742,590.971 388.902,591.194 390.127,594.723C391.353,598.251 387.227,609.578 384.077,610.664C380.928,611.749 371.524,600.315 371.231,601.234C367.3,613.578 366.781,629.34 368.472,647.322L368.555,648.18Z\\\" style=\\\"fill:rgb(156,158,151);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M398.793,574.343C393.94,575.546 389.746,577.407 386.148,579.865C382.374,582.441 379.257,585.674 376.724,589.491C375.742,590.971 388.902,591.194 390.127,594.723C391.353,598.251 387.227,609.578 384.077,610.664C380.928,611.749 371.524,600.315 371.231,601.234C367.237,613.774 366.766,629.84 368.555,648.18L436.304,648.18C435.93,643.905 435.663,639.63 435.513,635.354C435.356,630.854 424.55,639.638 421.028,636.23C417.502,632.819 417.806,625.303 421.409,621.709C424.89,618.238 435.327,626.355 435.44,621.855C435.534,618.132 435.724,614.408 436.018,610.685C436.289,607.247 436.295,605.931 436.748,602.492C437.332,598.056 425.141,604.264 422.353,600.346C419.704,596.624 421.441,589.615 425.597,586.824C429.663,584.093 438.073,593.619 438.98,589.182C439.68,585.754 440.834,580.204 441.74,576.777C434.307,574.91 427.547,573.713 421.409,573.138C412.646,572.317 405.154,572.765 398.793,574.343\\\" style=\\\"fill:rgb(194,151,183);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M382.509,549.104C382.509,549.104 387.559,544.847 392.561,537.42C394.967,533.847 397.362,529.54 399.178,524.62C399.697,523.216 406.321,531.79 409.213,530.419C412.106,529.047 417.737,519.283 416.533,516.391C415.33,513.498 401.867,514.122 401.993,513.064C402.532,508.565 402.464,503.743 401.516,498.656C400.321,492.239 400.484,485.066 402.779,478.658L402.292,478.483C392.127,474.795 384.726,470.212 377.002,465.398C373.218,463.04 374.825,476.952 370.205,478.03C365.364,479.159 358.923,474.862 357.636,469.914C356.449,465.349 369.358,460.627 365.057,458.236C359.29,455.031 352.732,451.867 344.508,448.933C341.984,459.725 339.69,470.518 337.627,481.311C336.156,489.006 334.802,496.701 333.566,504.396C332.852,508.842 345.359,501.537 348.195,505.347C351.243,509.44 349.92,517.67 345.756,520.767C341.906,523.631 332.177,513.288 331.541,517.734C330.816,522.804 330.142,527.874 329.519,532.943C337.357,533.434 344.643,534.332 351.307,535.689C356.024,536.65 345.004,545.334 347.505,549.043C350.155,552.975 357.661,553.858 361.91,551.417C365.505,549.352 360.43,537.841 364.5,539.28C371.556,541.776 377.603,545.018 382.509,549.104Z\\\" style=\\\"fill:rgb(163,187,193);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M382.509,549.104C386.439,552.758 390.182,557.472 393.106,562.07C396.008,566.633 398.104,571.081 398.778,574.268L398.793,574.343C409.605,571.669 423.712,572.249 441.74,576.777C443.585,569.791 445.866,562.805 448.626,555.819C450.262,551.68 436.734,555.222 435.225,550.954C433.59,546.329 437.381,539.21 442.087,537.322C446.188,535.677 452.066,547.541 454.047,543.402C456.77,537.715 459.829,532.027 463.247,526.34C460.153,523.532 456.945,519.426 453.701,513.9C442.118,508.663 436.109,502.976 434.787,497.541C433.533,492.386 436.42,487.388 442.874,483.119C447.417,480.115 462.271,480.638 461.599,475.352C460.944,470.204 446.652,474.706 441.455,473.078C434.071,470.765 429.912,466.763 429.689,461.462C429.671,461.037 429.678,460.604 429.712,460.162C414.321,461.288 406.191,469.125 402.779,478.658C400.484,485.066 400.321,492.239 401.516,498.656C402.464,503.743 402.532,508.565 401.993,513.064C401.867,514.122 415.33,513.498 416.533,516.391C417.737,519.283 412.106,529.047 409.213,530.419C406.321,531.79 399.697,523.216 399.178,524.62C397.362,529.54 394.967,533.847 392.561,537.42C387.559,544.847 382.509,549.104 382.509,549.104Z\\\" style=\\\"fill:rgb(156,158,151);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M530.753,217.66L530.351,218.084C533.299,219.788 536.023,221.598 538.531,223.507C540.273,224.834 526.934,231.817 526.841,235.534C526.748,239.252 534.368,246.262 537.973,245.812C541.579,245.363 547.21,231.36 548.474,232.839C550.589,235.313 552.442,237.896 554.045,240.577L554.524,240.29C564.616,234.295 575.582,229.498 586.751,225.772C591.092,224.324 585.79,235.902 589.385,237.922C593.676,240.333 601.306,239.419 603.917,235.415C606.397,231.61 595.463,223.037 599.826,221.905C616.863,217.485 633.765,215.421 648.18,215.27L648.18,177.427C637.65,177.505 626.678,175.395 617.141,171.454C612.895,169.7 624.182,165.165 623.086,161.035C621.816,156.246 616.328,151.307 612.058,152.298C607.642,153.323 608.933,167.583 605.422,165.135C598.264,160.143 592.977,153.776 590.967,146.3C587.336,148.586 583.284,150.133 578.918,150.761C574.106,151.454 569.345,150.971 564.838,149.496C561.862,163.371 557.19,175.68 552.01,186.1C549.877,190.391 542.717,177.28 539.279,178.088C535.84,178.895 530.35,187.628 531.377,190.945C532.403,194.262 547.658,194.361 545.437,197.99C540.194,206.551 534.936,213.206 530.753,217.66Z\\\" style=\\\"fill:rgb(161,186,196);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M560.249,288.855C561.952,280.781 562.55,272.899 561.887,265.378C561.107,256.518 558.578,248.159 554.045,240.577C552.442,237.896 550.589,235.313 548.474,232.839C547.21,231.36 541.579,245.363 537.973,245.812C534.368,246.262 526.748,239.252 526.841,235.534C526.934,231.817 540.273,224.834 538.531,223.507C536.023,221.598 533.299,219.788 530.351,218.084C522.378,213.476 512.767,209.649 501.363,206.768C499.92,215.286 493.986,223.366 485.741,227.302C482.374,228.909 478.875,229.137 475.396,228.523C471.165,227.776 466.964,225.782 463.068,223.507C459.733,221.559 456.621,219.404 453.905,217.647C451.025,215.784 446.644,212.748 443.023,215.391C438.972,218.348 448.76,228.778 455.96,236.969C460.699,242.36 463.877,250.343 462.872,257.246C468.835,258.359 474.272,259.657 479.328,261.085C484.006,262.406 478.81,250.281 482.427,248.651C487.024,246.579 495.196,248.625 497.715,252.797C499.793,256.241 488.358,263.838 492.5,265.34C498.733,267.6 504.489,270.016 510.161,272.443L532.796,279.86C532.796,279.86 522.4,288.777 523.461,291.79C524.522,294.803 535.832,299.345 539.163,297.939C542.494,296.532 543.448,283.35 543.448,283.35L560.249,288.855\\\" style=\\\"fill:rgb(162,179,200);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M555.723,305.918L555.217,305.733C552.507,312.839 549.058,320.002 544.969,327.115C544.471,327.98 535.125,316.691 531.829,317.195C528.534,317.7 523.787,327.204 525.194,330.141C526.602,333.078 540.965,333.736 540.274,334.816C539.331,336.289 538.289,337.898 537.579,338.975L537.297,339.402C548.474,344.099 555.44,349.257 560.94,356.396C563.769,360.069 567.557,348.179 572.074,349.205C576.899,350.301 581.228,356.098 580.239,360.78C579.257,365.428 566.138,363.922 568.118,367.931C572.523,376.854 574.998,386.55 576.311,396.753C587.384,394.932 596.873,394.724 605.638,395.087C610.351,395.281 602.48,384.695 605.842,381.753C609.612,378.454 617.358,378.328 620.718,381.89C623.903,385.266 614.855,395.641 619.284,396.003C628.818,396.782 638.005,397.572 648.18,396.753L648.18,350.491C635.474,348.908 625.496,344.805 616.022,339.474C612.221,337.336 624.003,333.251 622.962,329.607C621.713,325.237 615.587,321.259 611.026,321.994C607.122,322.624 608.501,335 604.718,332.55C591.31,323.866 577.111,313.75 555.723,305.918Z\\\" style=\\\"fill:rgb(180,153,172);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M560.137,289.376L560.249,288.855L543.448,283.35C543.448,283.35 542.494,296.532 539.163,297.939C535.832,299.345 524.522,294.803 523.461,291.79C522.4,288.777 532.796,279.86 532.796,279.86L510.161,272.443L509.958,272.939C505.675,283.337 501.021,292.106 496.266,300.42C494,304.382 486.283,291.035 482.876,291.769C479.469,292.503 474.732,301.432 475.824,304.824C476.916,308.216 491.712,308.24 489.43,312.122C483.21,322.707 477.039,333.469 471.516,346.984C477.403,348.238 482.857,349.598 487.849,351.098C492.741,352.568 479.02,362.218 480.119,365.679C481.218,369.14 490.936,373.489 494.445,371.866C497.953,370.243 497.189,354.171 501.169,355.941C507.349,358.689 512.398,361.836 516.221,365.501C518.498,363.064 520.712,360.593 522.858,358.092C525.828,354.632 528.667,351.115 531.362,347.558C533.952,344.14 534.985,342.883 537.297,339.402C537.989,338.36 539.196,336.499 540.274,334.816C540.965,333.736 526.602,333.078 525.194,330.141C523.787,327.204 528.534,317.7 531.829,317.195C535.125,316.691 544.471,327.98 544.969,327.115C549.058,320.002 552.507,312.839 555.217,305.733C557.316,300.23 558.971,294.76 560.137,289.376Z\\\" style=\\\"fill:rgb(162,179,200);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.32px;\\\"/>\\n\" +\n        \"    <path d=\\\"M648.18,511.184L648.18,466.405L624.349,465.771C624.349,465.771 630.08,452.593 628.032,449.957C625.984,447.321 614.725,447.376 612.063,449.957C609.402,452.538 612.063,465.445 612.063,465.445L555.217,463.934C555.143,468.812 553.09,475.162 548.659,482.966C549.915,495.616 547.994,503.663 543.949,507.525C548.152,515.18 552.332,523.523 556.259,533.341C568.442,526.24 581.657,520.984 595.69,517.379C600.022,516.266 589.839,507.072 592.437,502.867C594.839,498.981 602.075,497.729 606.084,500.561C610.203,503.47 604.433,515.31 608.914,514.505C621.488,512.248 634.623,511.184 648.18,511.184Z\\\" style=\\\"fill:rgb(167,197,159);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M648.18,466.405L648.18,396.753C638.005,397.572 628.818,396.782 619.284,396.003C614.855,395.641 623.903,385.266 620.718,381.89C617.358,378.328 609.612,378.454 605.842,381.753C602.48,384.695 610.351,395.281 605.638,395.087C596.873,394.724 587.384,394.932 576.311,396.753C577.631,407.023 577.766,412.634 577.49,423.693C577.378,428.19 589.301,421.031 591.792,423.345C594.283,425.658 594.902,435.248 592.437,437.573C589.972,439.899 577.198,432.73 577.002,437.296C576.69,444.591 576.337,457.135 576.158,464.491L612.063,465.445C612.063,465.445 609.402,452.538 612.063,449.957C614.725,447.376 625.984,447.321 628.032,449.957C630.08,452.593 624.349,465.771 624.349,465.771L648.18,466.405\\\" style=\\\"fill:rgb(164,197,169);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M603.344,83.618C606.062,88.781 607.999,94.631 608.908,100.939C609.247,103.293 609.43,105.627 609.468,107.925C609.487,109.102 601.71,103.432 598.91,105.754C596.109,108.075 593.658,118.525 595.69,120.886C597.721,123.247 608.528,118.972 608.071,120.886C606.986,125.43 605.298,129.669 603.098,133.449C599.99,138.791 595.86,143.218 590.967,146.3C592.977,153.776 598.264,160.143 605.422,165.135C608.933,167.583 607.642,153.323 612.058,152.298C616.328,151.307 621.816,156.246 623.086,161.035C624.182,165.165 612.895,169.7 617.141,171.454C626.678,175.395 637.65,177.505 648.18,177.427L648.18,62.918C642.685,64.256 637.001,66.04 631.259,68.319C627.179,69.939 632.317,54.758 629.964,53.28C627.611,51.802 618.971,56.009 617.141,59.453C615.311,62.898 623.071,71.809 618.982,73.949C613.704,76.71 608.457,79.92 603.344,83.618Z\\\" style=\\\"fill:rgb(172,184,154);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M542.047,78.662L541.919,78.879C540.929,80.576 540.043,82.367 539.267,84.236C538.841,85.263 552.301,83.214 553.797,86.276C555.293,89.339 551.197,101.02 548.245,102.611C545.294,104.201 536.362,93.968 536.088,95.818C535.35,100.793 535.315,106.056 536.088,111.427C536.158,111.908 536.233,112.387 536.314,112.863C537.633,120.594 540.504,127.593 544.452,133.427C547.024,137.226 549.144,124.217 552.93,124.575C557.478,125.006 562.523,130.488 562.643,135.149C562.743,139.063 550.053,140.53 553.409,143.219C556.912,146.027 560.771,148.165 564.838,149.496C569.345,150.971 574.106,151.454 578.918,150.761C583.284,150.133 587.336,148.586 590.967,146.3C595.86,143.218 599.99,138.791 603.098,133.449C605.298,129.669 606.986,125.43 608.071,120.886C608.528,118.972 597.216,123.408 595.69,120.886C594.163,118.364 596.613,107.914 598.91,105.754C601.206,103.593 609.487,109.102 609.468,107.925C609.43,105.627 609.247,103.293 608.908,100.939C607.999,94.631 606.062,88.781 603.344,83.618C601.735,80.56 599.852,77.744 597.746,75.216C594.741,71.606 594.07,86.358 589.444,86.768C584.306,87.222 577.675,82.154 577.194,77.034C576.739,72.189 591.282,68.584 587.521,66.288C584.004,64.141 580.222,62.629 576.299,61.865C572.969,61.216 569.537,61.106 566.078,61.604C555.924,63.067 547.469,69.49 542.047,78.662Z\\\" style=\\\"fill:rgb(172,188,169);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M541.919,78.879C536.429,75.429 530.575,68.544 525.194,59.57C523.093,56.066 537.271,58.897 538.367,56.274C539.462,53.651 534.967,45.18 531.765,43.831C528.564,42.482 521.064,52.243 519.157,48.182C512.478,33.959 507.294,16.812 505.744,0.18L462.872,0.18C462.872,8.445 464.473,18.527 467.13,30.091C468.113,34.37 476.772,23.426 480.286,25.806C484.383,28.581 485.966,36.764 483.515,41.192C481.495,44.843 469.24,38.851 470.485,43.519C473.062,53.179 476.14,63.637 479.476,74.741C480.569,78.379 481.875,82.272 483.247,86.276C484.676,90.447 491.783,79.152 496.092,81.149C500.553,83.215 503.217,90.083 501.09,94.543C498.976,98.977 486.178,94.738 487.586,98.988C489.424,104.537 491.102,110.016 492.254,115.066C492.751,117.245 493.226,119.421 493.674,121.589L536.314,112.863C536.233,112.387 536.158,111.908 536.088,111.427C535.315,106.056 535.35,100.793 536.088,95.818C536.362,93.968 545.294,104.201 548.245,102.611C551.197,101.02 555.293,89.339 553.797,86.276C552.301,83.214 538.841,85.263 539.267,84.236C540.043,82.367 540.929,80.576 541.919,78.879\\\" style=\\\"fill:rgb(185,179,163);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M173.47,417.959C170.371,422.318 166.061,426.236 160.836,429.49C156.995,431.881 152.659,433.914 147.948,435.498C142.296,437.399 136.102,438.655 129.571,439.113C129.571,439.113 125.057,423.683 126.108,419.903C127.033,416.575 135.874,416.434 135.874,416.434C135.874,416.434 128.575,405.347 131.238,403.383C133.901,401.418 148.235,405.932 151.852,404.647C154.691,403.638 155.862,396.414 152.941,395.672C148.759,394.611 138.254,393.426 127.582,392.591C122.896,392.225 118.178,391.926 113.949,391.734C108.163,391.472 103.292,391.411 100.672,391.653C97.677,391.93 97.084,398.921 99.573,400.61C102.217,402.405 114.906,399.842 116.536,402.421C118.165,404.999 109.35,416.08 109.35,416.08C109.35,416.08 116.579,417.336 117.123,420.651C117.737,424.387 113.033,438.498 113.033,438.498C101.42,436.772 91.296,432.37 84.167,426.218C82.398,426.741 78.403,427.973 74.314,429.582C69.718,431.39 65.002,433.675 63.195,435.962C62.022,437.445 62.074,438.93 64.175,440.287C71.593,445.077 79.36,448.858 87.323,451.645C82.404,457.637 82.173,463.839 83.25,467.591C83.25,467.591 88.138,465.565 89.786,465.927C91.373,466.276 93.14,469.763 93.14,469.763C93.14,469.763 96.101,466.206 97.922,466.418C99.758,466.631 105.9,471.04 105.9,471.04C108.145,468.959 102.922,458.509 105.588,456.265C108.254,454.021 119.373,454.875 121.895,457.577C124.417,460.278 118.555,470.157 120.72,472.474C120.72,472.474 126.932,469.157 128.778,469.076C130.625,468.996 134.54,472.239 134.54,472.239C134.54,472.239 136.606,468.885 138.233,468.649C139.903,468.406 144.56,470.782 144.56,470.782C145.844,467.279 144.783,461.896 140.674,455.937C143.913,455.361 147.133,454.633 150.324,453.754C154.826,452.516 159.27,450.978 163.632,449.144C167.388,447.564 171.082,445.765 174.698,443.748C182.735,439.264 182.842,455.902 176.981,455.937C156.514,456.059 150.505,474.352 174.424,470.709C179.784,469.893 186.693,467.746 191.591,463.82C192.598,463.014 193.52,462.132 194.325,461.171C196.628,458.426 198.134,455.339 199.01,452.169C200.331,447.394 200.227,442.428 199.277,438.149C198.435,434.356 196.929,431.102 195.163,428.997C189.931,422.761 176.55,418.805 173.47,417.959\\\" style=\\\"fill:rgb(156,192,167);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M138.362,542.72C138.447,537.351 138.607,531.981 138.844,526.646C139.177,519.111 139.662,511.648 140.297,504.358C140.711,499.612 128.627,507.214 126.388,504.461C124.149,501.708 124.306,490.188 126.863,487.839C129.42,485.491 141.188,494.94 141.729,490.37C142.533,483.583 143.477,477.023 144.56,470.782C144.56,470.782 139.903,468.406 138.233,468.649C136.606,468.885 134.54,472.239 134.54,472.239C134.54,472.239 130.625,468.996 128.778,469.076C126.932,469.157 120.72,472.474 120.72,472.474C118.555,470.157 124.417,460.278 121.895,457.577C119.373,454.875 108.254,454.021 105.588,456.265C102.922,458.509 108.145,468.959 105.9,471.04C105.9,471.04 99.758,466.631 97.922,466.418C96.101,466.206 93.14,469.763 93.14,469.763C93.14,469.763 91.373,466.276 89.786,465.927C88.138,465.565 83.25,467.591 83.25,467.591C80.144,467.41 76.951,467.259 73.7,467.139C74.177,476.121 73.562,483.121 72.513,489.386C71.69,494.309 84.368,488.378 86.054,491.158C87.74,493.937 85.379,504.021 82.631,506.061C79.882,508.101 70.599,498.778 69.562,503.397C67.579,512.229 65.792,521.612 66.442,535.773C77.27,536.09 88.112,536.779 98.59,537.725C103.323,538.152 96.552,525.522 98.992,523.893C101.433,522.264 110.977,525.406 113.234,527.95C115.49,530.493 107.981,538.632 112.531,539.154C121.673,540.202 130.377,541.419 138.362,542.72\\\" style=\\\"fill:rgb(198,172,151);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M144.56,470.782C143.477,477.023 142.533,483.583 141.729,490.37C141.188,494.94 129.42,485.491 126.863,487.839C124.306,490.188 124.149,501.708 126.388,504.461C128.627,507.214 140.711,499.612 140.297,504.358C139.662,511.648 139.177,519.111 138.844,526.646C156.482,527.773 171.859,526.579 184.795,523.326C189.622,522.112 182.394,534.556 184.744,536.072C187.093,537.587 196.642,535.29 198.892,532.418C201.143,529.545 194.11,520.611 198.248,518.837C209.311,514.094 217.877,507.399 223.769,499.011C220.031,496.922 216.653,494.576 213.551,491.987C209.935,488.969 224.812,487.042 224.868,481.973C224.925,476.837 219.072,471.444 213.779,471.44C208.741,471.436 206.695,485.62 203.695,481.959C199.279,476.569 195.387,470.502 191.591,463.82C186.693,467.746 179.784,469.893 174.424,470.709C150.505,474.352 156.514,456.059 176.981,455.937C182.842,455.902 182.735,439.264 174.698,443.748C171.082,445.765 167.388,447.564 163.632,449.144C159.27,450.978 154.826,452.516 150.324,453.754C147.133,454.633 143.913,455.361 140.674,455.937C144.783,461.896 145.844,467.279 144.56,470.782\\\" style=\\\"fill:rgb(195,177,157);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M64.429,596.094C74.218,588.944 85.272,584.366 97.174,581.47C101.732,580.362 95.171,592.721 98.968,595.244C103.303,598.126 111.458,597.098 114.516,592.996C117.316,589.238 106.415,579.499 111.198,578.834C120.12,577.593 129.394,577.037 138.867,576.841C138.349,565.714 138.181,554.22 138.362,542.72C130.377,541.419 121.673,540.202 112.531,539.154C107.981,538.632 115.49,530.493 113.234,527.95C110.977,525.406 101.433,522.264 98.992,523.893C96.552,525.522 103.323,538.152 98.59,537.725C88.112,536.779 77.27,536.09 66.442,535.773C54.948,535.436 43.469,535.519 32.454,536.157C27.763,536.428 35.913,524.509 32.241,521.466C28.452,518.327 20.694,519.645 17.3,523.599C14.208,527.203 23.155,536.801 18.667,537.285C12.226,537.98 6.029,538.904 0.18,540.089L0.18,581.606C11.327,579.309 21.253,578.522 29.892,579.115C35.119,579.474 23.499,589.332 26.167,593.054C29.389,597.548 38.285,599.934 42.78,597.091C46.749,594.579 39.874,580.338 44.144,581.679C53.076,584.485 59.882,589.377 64.429,596.094\\\" style=\\\"fill:rgb(175,182,186);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M149.512,648.18C147.08,640.808 145.045,632.009 143.407,622.207C142.661,617.743 132.626,627.617 128.371,624.598C124.298,621.709 123.248,614.073 126.388,610.133C129.649,606.042 141.996,613.071 141.414,608.232C140.225,598.352 139.377,587.774 138.867,576.841C129.394,577.037 120.12,577.593 111.198,578.834C106.415,579.499 117.316,589.238 114.516,592.996C111.458,597.098 103.303,598.126 98.968,595.244C95.171,592.721 101.732,580.362 97.174,581.47C85.272,584.366 74.218,588.944 64.429,596.094C67.8,601.074 69.929,607.057 70.761,613.937C71.304,618.42 58.522,609.023 54.781,612.717C50.767,616.68 50.72,625.842 54.706,629.788C58.428,633.473 71.296,623.284 70.722,628.5C70.052,634.596 68.609,641.171 66.369,648.18L149.512,648.18\\\" style=\\\"fill:rgb(161,199,160);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M0.18,648.18L66.369,648.18C68.609,641.171 70.052,634.596 70.722,628.5C71.296,623.284 58.428,633.473 54.706,629.788C50.72,625.842 50.767,616.68 54.781,612.717C58.522,609.023 71.304,618.42 70.761,613.937C69.929,607.057 67.8,601.074 64.429,596.094C59.882,589.377 53.076,584.485 44.144,581.679C39.874,580.338 46.749,594.579 42.78,597.091C38.285,599.934 29.389,597.548 26.167,593.054C23.499,589.332 35.119,579.474 29.892,579.115C21.253,578.522 11.327,579.309 0.18,581.606L0.18,648.18\\\" style=\\\"fill:rgb(188,155,179);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M66.442,535.773C65.792,521.612 67.579,512.229 69.562,503.397C70.599,498.778 79.882,508.101 82.631,506.061C85.379,504.021 87.74,493.937 86.054,491.158C84.368,488.378 71.69,494.309 72.513,489.386C73.562,483.121 74.177,476.121 73.7,467.139C62.996,466.745 51.624,466.688 40.539,467.011C35.783,467.15 45.442,478.236 42.043,482.037C38.64,485.843 30.812,485.834 26.928,482.235C23.176,478.758 31.08,467.358 26.505,467.639C16.939,468.228 7.933,469.136 0.18,470.393L0.18,540.089C6.029,538.904 12.226,537.98 18.667,537.285C23.155,536.801 14.208,527.203 17.3,523.599C20.694,519.645 28.452,518.327 32.241,521.466C35.913,524.509 27.763,536.428 32.454,536.157C43.469,535.519 54.948,535.436 66.442,535.773\\\" style=\\\"fill:rgb(189,157,176);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M187.205,291.885C191.034,316.631 198.042,335.053 203.786,352.109C205.202,356.313 212.573,346.103 214.973,347.742C217.372,349.382 219.388,359.145 218.182,361.945C216.976,364.746 206.54,360.433 207.736,364.545C210.878,375.354 213.029,386.102 212.981,398.138C215.945,397.739 218.883,397.34 221.928,396.979C226.037,396.492 219.39,407.351 222.827,410.015C226.631,412.964 234.06,412.324 237.143,408.775C239.924,405.574 230.34,396.073 235.16,395.818C240.299,395.546 246.027,395.46 252.737,395.673C253.019,384.191 252.979,372.681 252.571,361.168C252.412,356.673 265.116,364.8 267.027,362.562C268.937,360.325 266.551,350.222 264.034,347.742C261.517,345.262 252.197,352.177 251.923,347.682C251.326,337.88 250.451,328.083 249.269,318.308C248.986,315.964 248.685,313.623 248.367,311.282C247.76,306.829 247.089,302.381 246.35,297.939C245.585,293.344 244.748,288.755 243.836,284.176C237.512,284.855 231.245,285.44 224.934,286.095C220.488,286.557 230.74,297.035 227.756,300.582C224.626,304.303 216.478,304.214 212.412,300.98C208.883,298.173 216.019,287.054 211.494,287.646C206.052,288.357 200.528,289.203 194.861,290.288C192.339,290.771 189.788,291.3 187.205,291.885\\\" style=\\\"fill:rgb(176,178,195);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M0.18,394.563L0.18,470.393C7.933,469.136 16.939,468.228 26.505,467.639C31.08,467.358 23.176,478.758 26.928,482.235C30.812,485.834 38.64,485.843 42.043,482.037C45.442,478.236 35.783,467.15 40.539,467.011C51.624,466.688 62.996,466.745 73.7,467.139C76.951,467.259 80.144,467.41 83.25,467.591C82.173,463.839 82.404,457.637 87.323,451.645C79.36,448.858 71.593,445.077 64.175,440.287C62.074,438.93 62.022,437.445 63.195,435.962C65.002,433.675 69.718,431.39 74.314,429.582C78.403,427.973 82.398,426.741 84.167,426.218C83.935,426.018 83.707,425.816 83.481,425.612C80.515,422.932 78.107,419.937 76.374,416.7C74.541,413.277 73.464,409.584 73.281,405.706C73.152,402.969 73.475,400.282 74.204,397.679C61.626,395.463 51.675,395.389 41.433,395.724L41.432,395.724L41.432,395.725C38.551,395.819 35.651,395.932 32.669,396.017C28.498,396.137 35.043,406.927 32.647,408.775C30.252,410.623 20.485,409.221 18.295,407.106C16.104,404.991 24.167,396.202 19.504,396.086C13.689,395.942 7.359,395.516 0.18,394.563Z\\\" style=\\\"fill:rgb(183,168,194);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M0.18,394.563C7.359,395.516 13.689,395.942 19.504,396.086C24.167,396.202 16.104,404.991 18.295,407.106C20.485,409.221 30.252,410.623 32.647,408.775C35.043,406.927 28.498,396.137 32.669,396.017C35.651,395.932 38.551,395.819 41.432,395.725C41.65,376.45 47.959,367.587 54.235,355.168C56.28,351.122 40.905,354.374 39.074,351.098C37.244,347.822 39.74,337.127 43.252,335.513C46.764,333.899 58.321,346.698 60.147,341.415C63.964,330.367 66.841,315.558 66.841,292.574C58.418,291.84 49.368,291.752 39.793,292.293C35.387,292.542 44.355,301.502 41.754,304.505C38.488,308.276 30.603,310.142 26.728,307.375C23.275,304.91 30.87,292.925 26.252,293.439C17.875,294.371 9.165,295.736 0.18,297.525L0.18,394.563\\\" style=\\\"fill:rgb(182,169,170);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M207.593,648.18C209.316,642.044 211.05,635.806 212.782,629.474C213.959,625.17 225.714,633.639 229.58,631.07C233.419,628.521 233.573,620.785 230.923,616.434C228.693,612.772 215.135,620.822 216.306,616.434C218.035,609.955 219.753,603.387 221.449,596.737C222.555,592.396 223.652,588.02 224.735,583.611L224.736,583.611L224.736,583.611C209.551,582.394 199.322,581.1 190.862,579.963C185.595,579.256 193.643,591.63 189.797,594.54C185.325,597.925 176.337,597.614 172.975,593.5C169.873,589.703 181.013,578.609 176.346,578.081C166.577,576.975 156.438,576.388 138.867,576.841C139.377,587.774 140.225,598.352 141.414,608.232C141.996,613.071 129.649,606.042 126.388,610.133C123.248,614.073 124.298,621.709 128.371,624.598C132.626,627.617 142.661,617.743 143.407,622.207C145.045,632.009 147.08,640.808 149.512,648.18L207.593,648.18Z\\\" style=\\\"fill:rgb(200,160,171);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M221.449,596.737C219.753,603.387 218.035,609.955 216.306,616.434C215.135,620.822 228.693,612.772 230.923,616.434C233.573,620.785 233.419,628.521 229.58,631.07C225.714,633.639 213.959,625.17 212.782,629.474C211.05,635.806 209.316,642.044 207.593,648.18L324.18,648.18C324.018,642.865 323.913,637.549 323.865,632.234C323.824,627.734 333.723,636.068 336.936,632.982C340.597,629.466 341.777,621.731 338.509,618.169C335.303,614.674 323.823,623.234 323.863,618.734C323.892,615.559 323.94,612.384 324.008,609.209C304.431,609.209 291.204,604.978 278.408,599.873C274.24,598.21 278.195,611.216 274.319,612.649C269.948,614.264 263.047,610.815 260.927,606.333C259.131,602.539 270.119,596.455 265.838,594.723C254.512,590.14 242.074,585.719 224.735,583.611C223.652,588.02 222.555,592.396 221.449,596.737\\\" style=\\\"fill:rgb(180,177,196);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M224.735,583.611C225.534,580.359 226.326,577.089 227.11,573.802C228.145,569.459 229.164,565.086 230.166,560.685C230.448,559.444 230.729,558.201 231.009,556.955C231.252,555.87 240.423,564.756 243.579,563.014C246.735,561.272 249.505,549.778 247.879,546.625C246.252,543.472 232.932,547.896 233.283,546.248C234.717,539.51 236.639,530.561 237.962,523.713L237.962,523.713L237.962,523.713C239.09,517.87 240.173,511.989 241.204,506.075C234.588,504.213 228.847,501.849 223.769,499.011C217.877,507.399 209.311,514.094 198.248,518.837C194.11,520.611 201.143,529.545 198.892,532.418C196.642,535.29 187.093,537.587 184.744,536.072C182.394,534.556 189.622,522.112 184.795,523.326C171.859,526.579 156.482,527.773 138.844,526.646C138.607,531.981 138.447,537.351 138.362,542.72C138.181,554.22 138.349,565.714 138.867,576.841C156.438,576.388 166.577,576.975 176.346,578.081C181.013,578.609 169.873,589.703 172.975,593.5C176.337,597.614 185.325,597.925 189.797,594.54C193.643,591.63 185.595,579.256 190.862,579.963C199.322,581.1 209.551,582.394 224.735,583.611Z\\\" style=\\\"fill:rgb(179,169,153);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M224.735,583.611C242.074,585.719 254.512,590.14 265.838,594.723C270.119,596.455 259.131,602.539 260.927,606.333C263.047,610.815 269.948,614.264 274.319,612.649C278.195,611.216 274.24,598.21 278.408,599.873C291.204,604.978 304.431,609.209 324.008,609.209C324.178,601.349 324.471,593.489 324.887,585.63C325.124,581.138 314.142,586.164 311.956,583.294C309.771,580.424 309.479,570.266 311.773,568.409C314.067,566.553 325.402,576.647 325.721,572.155C326.285,564.188 326.976,556.221 327.793,548.254C311.748,545.834 299.974,541.946 288.537,537.848C284.296,536.328 295.119,529.737 293.19,525.51C291.11,520.954 284.539,517.699 280.219,519.621C275.859,521.56 280.102,534.78 275.753,533.267C265.076,529.553 253.468,526.051 237.962,523.713C236.639,530.561 234.717,539.51 233.283,546.248C232.932,547.896 246.163,543.831 247.879,546.625C249.595,549.419 246.391,561.292 243.579,563.014C240.767,564.736 231.252,555.87 231.009,556.955C230.729,558.201 230.448,559.444 230.166,560.685C229.164,565.086 228.145,569.459 227.11,573.802C226.326,577.089 225.534,580.359 224.735,583.611\\\" style=\\\"fill:rgb(170,174,165);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M247.465,464.402C246.984,468.261 246.023,474.481 245.488,478.32C245.357,479.263 257.091,476.992 258.66,479.999C260.229,483.007 257.366,494.715 254.902,496.366C252.438,498.018 244.154,488.138 243.877,489.908C243.032,495.322 242.14,500.711 241.204,506.073L241.204,506.073C240.173,511.988 239.09,517.869 237.962,523.713C253.468,526.051 265.076,529.553 275.753,533.267C280.102,534.78 275.859,521.56 280.219,519.621C284.539,517.699 291.11,520.954 293.19,525.51C295.119,529.737 284.296,536.328 288.537,537.848C299.974,541.946 311.748,545.834 327.793,548.254C328.316,543.151 328.892,538.047 329.519,532.943C330.142,527.874 330.816,522.804 331.541,517.734C332.177,513.288 341.906,523.631 345.756,520.767C349.92,517.67 351.243,509.44 348.195,505.347C345.359,501.537 332.852,508.842 333.566,504.396C334.802,496.701 336.156,489.006 337.627,481.311C325.904,479.858 315.779,477.636 305.583,475.225C301.308,474.215 306.55,486.551 302.436,488.873C298.287,491.214 291.447,488.774 288.988,484.59C286.732,480.751 297.022,473.171 292.599,472.137C279.718,469.125 265.686,466.195 247.465,464.402Z\\\" style=\\\"fill:rgb(193,179,167);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M247.465,464.402L247.465,464.402C248.22,458.348 248.908,452.27 249.521,446.173C249.639,444.994 259.15,450.799 261.844,448.933C264.538,447.066 267.564,437.3 265.683,434.973C263.802,432.646 250.416,436.653 250.559,434.973C250.858,431.448 251.131,427.917 251.376,424.381C251.687,419.896 251.954,415.404 252.174,410.905C252.236,409.646 252.294,408.386 252.348,407.125L252.353,407.006L252.389,406.149L252.424,405.293L252.434,405.057L252.466,404.246L252.496,403.436L252.505,403.2L252.536,402.342L252.566,401.485L252.57,401.366L252.601,400.437C252.611,400.12 252.621,399.802 252.631,399.485L252.659,398.558L252.662,398.426L252.687,397.579L252.71,396.727L252.716,396.476L252.737,395.673L252.737,395.673L252.737,395.673L252.737,395.673C246.027,395.46 240.299,395.546 235.16,395.818C230.34,396.073 239.924,405.574 237.143,408.775C234.06,412.324 226.631,412.964 222.827,410.015C219.39,407.351 226.037,396.492 221.928,396.979C218.883,397.34 215.945,397.739 212.981,398.138L212.981,398.138C203.387,399.43 193.493,400.721 178.88,400.721C179.169,406.846 177.194,412.721 173.47,417.959C176.55,418.805 189.931,422.761 195.163,428.997C196.929,431.102 198.435,434.356 199.277,438.149C200.227,442.428 200.331,447.394 199.01,452.169C198.134,455.339 196.628,458.426 194.325,461.171C193.52,462.132 192.598,463.014 191.591,463.82C195.387,470.502 199.279,476.569 203.695,481.959C206.695,485.62 208.741,471.436 213.779,471.44C219.072,471.444 224.925,476.837 224.868,481.973C224.812,487.042 209.935,488.969 213.551,491.987C216.653,494.576 220.031,496.922 223.769,499.011C228.847,501.849 234.588,504.213 241.204,506.075L241.204,506.073C242.14,500.711 243.032,495.322 243.877,489.908C244.154,488.138 252.438,498.018 254.902,496.366C257.366,494.715 260.229,483.007 258.66,479.999C257.091,476.992 245.357,479.263 245.488,478.32C246.023,474.481 246.984,468.261 247.465,464.402Z\\\" style=\\\"fill:rgb(179,153,151);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"    <path d=\\\"M348.951,430.857C341.267,428.698 335.48,426.168 330.27,423.426C326.184,421.275 328.58,434.285 324.959,434.973C320.316,435.855 313.328,431.53 311.699,426.952C310.453,423.449 322.454,418.994 318.444,416.66C313.397,413.723 307.907,410.701 300.705,407.75C300.608,407.71 300.51,407.67 300.411,407.63C296.36,405.988 290.799,404.089 284.731,402.294C280.549,401.056 285.89,414.556 281.817,416.653C277.534,418.857 270.109,415.564 267.602,411.111C265.483,407.349 276.125,399.867 271.789,398.844C264.736,397.18 257.914,395.955 252.737,395.673C252.611,400.757 252.423,405.835 252.174,410.905C251.954,415.404 251.687,419.896 251.376,424.381C251.131,427.917 250.858,431.448 250.559,434.973C250.416,436.653 263.802,432.646 265.683,434.973C267.564,437.3 264.538,447.066 261.844,448.933C259.15,450.799 249.639,444.994 249.521,446.173C248.908,452.27 248.22,458.348 247.465,464.402C265.686,466.195 279.718,469.125 292.599,472.137C297.022,473.171 286.732,480.751 288.988,484.59C291.447,488.774 298.287,491.214 302.436,488.873C306.55,486.551 301.308,474.215 305.583,475.225C315.779,477.636 325.904,479.858 337.627,481.311C339.69,470.518 341.984,459.725 344.508,448.933C345.917,442.907 347.399,436.882 348.951,430.857\\\" style=\\\"fill:rgb(170,192,151);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.36px;\\\"/>\\n\" +\n        \"</svg>\\n\",\n    \n    \"test6\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n            \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n            \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 576 384\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n            \"    <path d=\\\"M52.289,15.321C43.928,23.682 35.012,31.148 27.864,40.711C25.724,43.573 21.43,48.595 22.166,52.573C22.63,55.079 26.332,55.89 28.331,56.488C34.807,58.424 41.546,59.537 48.082,61.28C55.068,63.143 62.975,65.025 68.739,69.636C82.397,80.563 92.403,99.75 113.295,93.915C127.854,89.849 144.712,62.231 132.783,48.833C120.549,35.093 99.765,39.5 84.457,32.179C73.457,26.918 66.936,14.2 54.188,12.312\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M82.704,34.035C83.09,34.228 82.993,36.195 83.011,36.534C83.152,39.142 83.243,41.727 82.867,44.322C81.227,55.615 70.101,61.293 65.933,71.524\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M79.154,56.347C79.867,61.337 88.075,66.837 92.23,68.246C100.485,71.044 109.939,70.43 118.526,71.542C123.946,72.244 129.084,73.247 132.996,77.337\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M81.689,48.741C78.252,45.686 73.158,45.197 68.885,44.286C57.267,41.808 43.683,42.539 33.624,35.574\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M151.599,23.27L153.628,23.27C168.975,28.516 180.2,38.474 186.081,54.538L169.347,91.71\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M57.657,111.249L59.685,111.249C75.033,116.495 86.257,126.453 92.139,142.517L75.405,179.688\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M140.69,108.202L142.719,108.202C158.066,113.448 169.291,123.406 175.173,139.47L158.439,176.641\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M216,21.731C202.967,30.137 193.197,39.942 189.631,52.405L211.863,82.691\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M119.784,111.249C106.751,119.655 96.981,129.46 93.415,141.924L115.647,172.21\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"    <path d=\\\"M201.968,108.749C188.935,117.155 179.037,127.103 175.471,139.566L197.831,169.71\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n            \"</svg>\\n\",\n    cat:\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n        \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n        \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 184 164\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n        \"    <path d=\\\"M15.943,63.796C14.971,67.267 14.54,70.85 14.713,74.499C14.957,79.67 16.393,84.594 18.836,89.157C21.147,93.473 24.358,97.466 28.313,101.04C32.466,104.793 37.439,108.084 43.05,110.799C50.331,114.323 58.686,116.879 67.716,118.222C67.716,118.222 73.987,99.408 73.169,94.426C72.443,90.006 62.805,88.331 62.805,88.331C62.805,88.331 74.558,73.556 72.385,70.118C70.213,66.681 53.294,70.098 49.768,67.705C46.45,65.452 47.24,56.131 51.234,55.761C55.514,55.365 64.3,55.576 74.318,56.145C80.037,56.469 86.158,56.91 92.07,57.42C104.496,58.492 116,59.87 120.926,61.121C124.82,62.109 123.26,71.742 119.474,73.087C114.651,74.8 95.539,68.782 91.988,71.401C88.437,74.021 98.17,88.803 98.17,88.803C98.17,88.803 86.382,88.991 85.148,93.429C83.748,98.469 89.766,119.041 89.766,119.041C94.959,118.677 99.991,117.934 104.805,116.857C110.975,115.477 116.788,113.546 122.122,111.157C128.567,108.269 134.314,104.711 139.148,100.644C149.86,91.63 156.09,80.116 155.511,67.852C155.209,61.462 153.086,55.448 149.494,50.028C150.102,47.871 151.548,42.625 152.979,36.549C153.292,35.219 142.572,38.402 141.511,36.461C140.45,34.519 144.381,26.372 146.613,24.9C148.846,23.428 154.717,28.604 154.906,27.629C156.633,18.68 157.532,10.203 155.22,8.511C153.255,7.073 147.497,9.461 141.066,13.009C136.032,15.785 130.586,19.271 126.223,22.19C122.154,24.913 119.026,27.141 118.054,27.84C110.321,25.233 101.744,23.604 92.675,23.171C89.455,23.017 86.174,23.014 82.845,23.171C77.686,23.414 72.673,24.031 67.863,24.98C67.571,24.656 65.909,22.821 63.494,20.285C60.31,16.94 55.815,12.376 51.422,8.448C45.761,3.386 40.268,-0.62 37.966,0.4C35.654,1.423 34.644,8.361 34.254,16.142C34.221,16.799 41.358,17.014 43.101,19.169C44.843,21.324 46.218,27.909 44.708,29.073C43.198,30.237 34.038,24.777 34.041,26.152C34.052,32.116 34.268,37.264 34.357,39.128C25.095,45.937 18.559,54.459 15.943,63.796\\\" style=\\\"fill:rgb(160,153,193);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.48px;\\\"/>\\n\" +\n        \"    <path d=\\\"M148.298,90.835C144.166,96.648 138.419,101.872 131.453,106.209C126.331,109.398 120.551,112.109 114.269,114.221C106.733,116.755 98.475,118.43 89.766,119.041C89.766,119.041 83.748,98.467 85.149,93.427C86.382,88.99 98.17,88.802 98.17,88.802C98.17,88.802 88.438,74.019 91.989,71.401C95.54,68.781 114.652,74.799 119.474,73.086C123.26,71.741 124.821,62.109 120.926,61.119C115.351,59.704 101.343,58.125 87.114,57.012C80.866,56.523 74.576,56.124 68.937,55.869C61.222,55.519 54.727,55.437 51.234,55.761C47.241,56.13 46.45,65.451 49.769,67.703C53.294,70.097 70.213,66.679 72.386,70.118C74.558,73.555 62.805,88.33 62.805,88.33C62.805,88.33 72.444,90.005 73.169,94.425C73.988,99.406 67.716,118.221 67.716,118.221C52.232,115.919 38.733,110.05 29.228,101.847C26.869,102.544 21.543,104.188 16.09,106.333C9.962,108.744 3.674,111.789 1.264,114.839C-0.299,116.817 -0.23,118.797 2.572,120.606C12.462,126.993 22.818,132.034 33.436,135.75C26.877,143.739 26.569,152.009 28.005,157.011C28.005,157.011 34.522,154.31 36.72,154.793C38.836,155.258 41.192,159.907 41.192,159.907C41.192,159.907 45.14,155.165 47.568,155.447C50.016,155.731 58.205,161.61 58.205,161.61C61.198,158.835 54.234,144.902 57.789,141.91C61.344,138.918 76.169,140.057 79.532,143.659C82.894,147.261 75.078,160.433 77.965,163.522C77.965,163.522 86.248,159.099 88.709,158.991C91.172,158.885 96.392,163.209 96.392,163.209C96.392,163.209 99.146,158.737 101.316,158.422C103.542,158.098 109.752,161.266 109.752,161.266C111.464,156.595 110.049,149.418 104.57,141.473C108.889,140.704 113.182,139.733 117.437,138.562C123.439,136.911 129.366,134.86 135.181,132.415C140.189,130.309 145.115,127.91 149.936,125.221C160.652,119.242 160.794,141.426 152.979,141.473C125.69,141.635 117.678,166.026 149.57,161.169C156.717,160.081 165.929,157.218 172.46,151.983C173.802,150.909 175.032,149.733 176.105,148.451C179.176,144.791 181.183,140.676 182.352,136.448C184.113,130.082 183.974,123.461 182.708,117.755C181.585,112.698 179.578,108.359 177.222,105.553C170.246,97.238 152.405,91.963 148.298,90.835\\\" style=\\\"fill:rgb(156,192,167);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.48px;\\\"/>\\n\" +\n        \"</svg>\\n\",\n    \"test5b\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n             \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n             \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 576 384\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n             \"    <g id=\\\"Layer1\\\">\\n\" +\n             \"        <path d=\\\"M320,200C329.958,192.726 356.176,181.181 373.655,176C364.044,164.627 359.759,148.667 360,133.333\\\" style=\\\"fill:rgb(175,182,186);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.48px;\\\"/>\\n\" +\n             \"        <path d=\\\"M400,226.667C396.757,216.838 387.346,187.911 386.667,173.333C374.036,173.594 333.052,190.466 320,200\\\" style=\\\"fill:rgb(161,199,160);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.48px;\\\"/>\\n\" +\n             \"    </g>\\n\" +\n             \"</svg>\\n\",\n    \"test5c\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n             \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n             \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 237 260\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n             \"    <path d=\\\"M139.942,165.963C138.192,152.359 134.892,139.43 129.018,127.533C126.378,122.187 143.87,124.196 145.179,117.998C146.498,111.756 140.726,104.027 134.293,102.565C128.27,101.197 123.219,117.05 119.447,112.153C112.115,102.634 102.826,95.757 87.923,89.495C84.841,94.136 83.463,95.812 80.01,100.369C76.417,105.112 72.632,109.801 68.672,114.415C65.811,117.749 62.859,121.044 59.823,124.294C66.348,130.55 70.193,137.937 71.086,146.786C71.648,152.352 84.816,143.233 88.948,148C93.514,153.268 94.157,163.646 89.35,167.857C84.413,172.182 71.042,158.495 69.201,165.299C66.928,173.701 62.772,183.111 56.607,193.683C73.508,194.963 83.629,199.348 87.764,205.554C91.686,211.442 90.349,219.021 84.209,227.311C79.887,233.147 64.815,241.056 66.662,245.582C68.672,250.508 83.311,239.577 90.566,239.246C100.872,238.776 107.908,241.895 110.606,248.435C111.442,250.462 111.858,252.83 111.817,255.538L139.738,256.28C139.977,246.472 140.447,229.747 140.864,220.02C141.124,213.932 158.157,223.49 161.444,220.39C164.73,217.29 163.905,204.503 160.583,201.418C157.262,198.334 141.364,207.878 141.514,201.882C141.882,187.137 141.702,179.655 139.942,165.963\\\" style=\\\"fill:rgb(179,187,200);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.48px;\\\"/>\\n\" +\n             \"    <path d=\\\"M112.492,44.849L111.817,44.603C108.203,54.077 103.605,63.628 98.153,73.111C97.489,74.265 85.028,59.213 80.633,59.886C76.239,60.558 69.91,73.231 71.787,77.146C73.663,81.062 92.815,81.94 91.893,83.379C90.635,85.344 89.246,87.489 88.3,88.925L87.923,89.495C102.826,95.757 112.115,102.634 119.447,112.153C123.219,117.05 128.27,101.197 134.293,102.565C140.726,104.027 146.498,111.756 145.179,117.998C143.87,124.196 126.378,122.187 129.018,127.533C134.892,139.43 138.192,152.359 139.942,165.963C154.706,163.534 167.358,163.258 179.045,163.741C185.329,164 174.835,149.885 179.317,145.963C184.344,141.564 194.672,141.396 199.152,146.146C203.398,150.647 191.334,164.48 197.239,164.962C209.952,166.001 222.201,167.054 235.768,165.963L235.768,104.28C218.826,102.169 205.523,96.698 192.89,89.59C187.822,86.739 203.532,81.294 202.143,76.435C200.478,70.608 192.31,65.304 186.229,66.284C181.024,67.124 182.862,83.625 177.818,80.358C159.94,68.78 141.009,55.292 112.492,44.849Z\\\" style=\\\"fill:rgb(180,153,172);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.48px;\\\"/>\\n\" +\n             \"    <path d=\\\"M118.377,22.793L118.526,22.099L96.125,14.759C96.125,14.759 94.853,32.334 90.412,34.21C85.97,36.085 70.89,30.03 69.475,26.012C68.06,21.994 81.922,10.105 81.922,10.105L51.743,0.216L51.471,0.877C45.761,14.741 39.555,26.433 33.215,37.519C30.195,42.801 19.905,25.006 15.362,25.984C10.819,26.963 4.503,38.868 5.96,43.39C7.416,47.913 27.143,47.945 24.101,53.122C15.807,67.234 7.58,81.583 0.216,99.604C8.065,101.276 15.337,103.089 21.993,105.089C28.515,107.049 10.22,119.916 11.686,124.531C13.152,129.146 26.109,134.944 30.787,132.779C35.465,130.615 34.446,109.187 39.753,111.546C47.992,115.21 54.725,119.407 59.823,124.294C62.859,121.044 65.811,117.749 68.672,114.415C72.632,109.801 76.417,105.112 80.01,100.369C83.463,95.812 84.841,94.136 87.923,89.495C88.846,88.105 90.456,85.624 91.893,83.379C92.815,81.94 73.663,81.062 71.787,77.146C69.91,73.231 76.239,60.558 80.633,59.886C85.028,59.213 97.489,74.265 98.153,73.111C103.605,63.628 108.203,54.077 111.817,44.603C114.615,37.265 116.822,29.972 118.377,22.793Z\\\" style=\\\"fill:rgb(162,179,200);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.43px;\\\"/>\\n\" +\n             \"    <path d=\\\"M235.768,258.832L235.768,165.963C222.201,167.054 209.952,166.001 197.239,164.962C191.334,164.48 203.398,150.647 199.152,146.146C194.672,141.396 184.344,141.564 179.317,145.963C174.835,149.885 185.329,164 179.045,163.741C167.358,163.258 154.706,163.534 139.942,165.963C141.702,179.655 141.882,187.137 141.514,201.882C141.364,207.878 157.262,198.334 160.583,201.418C163.905,204.503 164.73,217.29 161.444,220.39C158.157,223.49 141.124,213.932 140.864,220.02C140.447,229.747 139.977,246.472 139.738,256.28L187.612,257.552C187.612,257.552 184.063,240.343 187.612,236.901C191.16,233.459 206.173,233.387 208.904,236.901C211.634,240.416 203.993,257.987 203.993,257.987L235.768,258.832\\\" style=\\\"fill:rgb(164,197,169);fill-opacity:0.4;stroke:black;stroke-opacity:0.8;stroke-width:0.48px;\\\"/>\\n\" +\n             \"</svg>\\n\",\n    testInners:\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n               \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n               \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 481 441\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n               \"    <path d=\\\"M272.871,320.317C259.667,319.028 246.464,320.118 233.26,323.386\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M214.619,329.425C245.687,317.02 276.755,316.142 307.823,329.425\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M233.26,267.464C248.794,263.619 264.328,262.788 279.862,265.3\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M214.619,273.503C245.687,261.097 276.755,260.219 307.823,273.503\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M93.454,324.607L28.211,324.607\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M0.25,324.607L149.376,324.607\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M28.211,268.685L93.454,268.685\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M0.25,268.685L149.376,268.685\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M272.871,210.486C253.454,208.591 234.036,211.841 214.619,219.595\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M214.619,219.595C245.687,207.189 276.755,206.311 307.823,219.595\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M214.619,126.549C236.367,117.865 258.114,114.83 279.862,118.346\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M279.862,160.446C258.114,156.929 236.367,159.965 214.619,168.648\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M214.619,126.549C245.687,114.143 276.755,113.265 307.823,126.549\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M307.823,168.648C276.755,155.365 245.687,156.243 214.619,168.648\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M214.619,65.808C245.687,53.403 276.755,52.525 307.823,65.808\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M214.619,380.372C236.367,371.688 258.114,368.652 279.862,372.169\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M214.619,420.299C236.367,411.615 258.114,408.58 279.862,412.096\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M307.823,65.808C276.755,52.525 245.687,53.403 214.619,65.808\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M307.823,380.372C286.075,371.073 264.328,368.714 242.58,372.39\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M242.58,412.318C264.328,408.641 286.075,411.001 307.823,420.299\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M214.619,9.886C245.687,-2.519 276.755,-3.397 307.823,9.886\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M214.619,9.886C245.687,-2.519 276.755,-3.397 307.823,9.886\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M93.454,214.777L0.25,214.777\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M0.25,214.777L149.376,214.777\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M0.25,121.731L93.454,121.731\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M93.454,163.83L0.25,163.83\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M0.25,121.731L149.376,121.731\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M149.376,163.83L0.25,163.83\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M93.454,65.808L0.25,65.808\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M93.454,380.372L28.211,380.372\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M28.211,420.299L93.454,420.299\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M0.25,65.808L93.454,65.808\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M0.25,380.372L65.493,380.372\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M0.25,420.299L65.493,420.299\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M0.25,9.886L93.454,9.886\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M0.25,9.886L93.454,9.886\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M373.066,9.886L466.269,9.886\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M359.085,177.653L480.25,177.653\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M359.085,345.42L480.25,345.42\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M359.085,401.342L480.25,401.342\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M359.085,382.702C398.389,332.68 439.554,333.306 480.25,382.702\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M359.085,440.488C398.389,390.467 439.554,391.093 480.25,440.488\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M373.066,89.109L466.269,89.109\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M359.085,256.876L480.25,256.876\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M373.066,9.886C466.185,9.886 446.013,42.843 466.269,65.808\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M387.046,177.653C480.165,177.653 459.993,210.61 480.25,233.575\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M466.269,145.032C446.013,122.067 466.185,89.109 373.066,89.109\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"    <path d=\\\"M480.25,312.799C459.993,289.834 480.165,256.876 387.046,256.876\\\" style=\\\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\\\"/>\\n\" +\n               \"</svg>\\n\",\n    \n    \"t\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n        \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n        \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 481 441\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n       \n                '    <path d=\"M100,200L200,200 M300,200L400,200 M500,200L600,200 \" style=\"fill:none;stroke:black;stroke-opacity:0.5;stroke-width:0.5px;\"/>\\n' +\n      \n        \n        \"</svg>\\n\",\n    testCross:\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n              \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n              \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 864 576\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n              \"    <path d=\\\"M100,200L200,200\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n              \"    <path d=\\\"M200,200L300,200\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n              \"    <path d=\\\"M300,200L400,200\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n              \"    <path d=\\\"M360,80L360,300\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n              \"</svg>\\n\",\n    \"DECO-1000\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n                \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n                \"<svg width=\\\"2258px\\\" height=\\\"1768px\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n                \"    <g id=\\\"Pieces-sized-to-photo---dup--hacked-to-match-cut-file\\\" serif:id=\\\"Pieces sized to photo - dup, hacked to match cut file\\\">\\n\" +\n                \"        <path d=\\\"M0.476,49.549C11.902,45.257 26.184,40.677 30.51,42.284C34.837,43.891 24.669,56.232 26.433,59.19C28.197,62.146 38.605,62.787 41.096,60.025C43.586,57.264 36.79,40.455 41.375,42.62C46.317,44.954 66.956,55.628 70.749,74.028C90.037,70.191 101.54,59.617 107.392,44.223C107.797,43.158 94.135,44.569 92.483,41.062C90.83,37.555 94.393,24.945 97.476,23.183C100.559,21.42 110.559,33.071 110.979,30.486C112.442,21.486 112.623,11.402 111.794,0.476L0.476,0.476L0.476,49.549\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M141.126,105.844C140.324,83.775 137.908,59.352 143.509,49.949C149.11,40.545 169.303,57.669 174.731,49.424C177.126,45.784 177.934,34.537 177.973,26.328C177.979,24.841 162.629,30.815 159.527,28.971C156.424,27.126 156.37,17.425 159.356,15.259C162.343,13.094 177.563,17.683 177.446,15.976C177.046,10.152 176.495,4.666 176.075,0.476L111.794,0.476C112.623,11.402 112.442,21.486 110.979,30.486C110.559,33.071 100.559,21.42 97.476,23.183C94.393,24.945 90.83,37.555 92.483,41.062C94.135,44.569 107.797,43.158 107.392,44.223C101.54,59.617 90.037,70.191 70.749,74.028C71.695,78.618 72.279,83.688 72.509,89.225C72.55,90.226 62.48,84.134 60.014,86.54C57.55,88.947 55.629,101.5 57.717,103.664C59.806,105.827 72.583,98.379 72.548,99.519C72.349,106.069 71.746,113.154 70.749,120.759C80.772,118.309 91.056,115.921 101.614,113.634C102.999,113.334 96.857,127.67 100.079,130.12C103.3,132.572 118.734,131.502 120.944,128.341C123.155,125.181 112.208,111.392 113.343,111.159C122.406,109.298 131.665,107.52 141.126,105.844\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M258.322,93.474C259.598,86.819 261.358,81.325 263.722,77.943C271.964,66.146 285.723,79.209 304.053,78.321C304.198,82.757 304.559,87.115 305.123,91.371C305.672,95.502 306.411,99.538 307.33,103.452C309.184,111.343 311.766,118.748 314.985,125.48C305.866,136.339 306.648,150.595 308.406,166.185C308.522,167.215 319.077,162.488 321.239,165.287C323.399,168.087 323.307,181.061 321.372,182.981C319.437,184.902 309.517,175.758 309.631,176.81C311.027,189.649 311.774,203.043 307.33,215.943C302.032,215.061 296.234,214.456 290.007,214.098C288.88,214.033 293.69,197.716 291.452,194.513C289.214,191.309 278.516,191.672 276.58,194.876C274.645,198.079 280.978,213.753 279.839,213.734C275.402,213.664 270.792,213.697 266.03,213.825C261.058,191.16 257.896,171.493 256.416,154.853C256.255,153.039 268.672,161.658 271.052,158.347C273.432,155.036 273.297,138.526 270.696,134.986C268.096,131.446 255.479,139.126 255.448,137.107C255.373,132.159 255.404,126.949 255.575,121.734C255.902,111.734 256.742,101.714 258.322,93.474\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M159.7,102.828C160.661,125.633 154.736,142.101 144.15,153.758C141.352,156.838 138.229,159.583 134.821,162.02C123.892,169.833 110.038,174.479 94.613,176.888C93.276,177.097 103.26,159.093 100.351,156.992C97.441,154.891 79.952,160.741 77.157,164.278C74.361,167.816 85.122,178.084 83.577,178.219C68.331,179.56 52.433,173.965 35.613,177.582C32.443,164.174 30.147,148.952 28.842,131.675C34.326,130.169 39.896,128.665 45.555,127.171C46.661,126.879 43.027,144.705 45.852,146.914C48.676,149.125 60.937,144.141 62.504,140.429C64.07,136.718 54.134,124.933 55.25,124.646C60.346,123.337 65.512,122.04 70.749,120.759C80.772,118.309 91.056,115.921 101.614,113.634C102.999,113.334 96.857,127.67 100.079,130.12C103.3,132.572 118.734,131.502 120.944,128.341C123.155,125.181 112.208,111.392 113.343,111.159C122.406,109.298 131.665,107.52 141.126,105.844C143.283,105.462 145.451,105.086 147.629,104.715C150.668,104.198 154.797,103.554 159.7,102.828\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M258.322,93.474C256.742,101.714 255.902,111.734 255.575,121.734C255.404,126.949 255.373,132.159 255.448,137.107C255.479,139.126 268.096,131.446 270.696,134.986C273.297,138.526 273.432,155.036 271.052,158.347C268.672,161.658 256.255,153.039 256.416,154.853C257.896,171.493 261.058,191.16 266.03,213.825C259.367,214.004 252.407,214.367 245.204,214.894C238.458,215.387 231.501,216.022 224.379,216.78C216.63,202.808 209.018,181.281 204.849,158.661C204.59,157.258 220.579,161.284 222.715,157.016C224.85,152.746 221.07,135.89 217.662,133.045C214.254,130.199 202.478,142.33 202.264,139.944C200.884,124.502 201.51,109.374 205.178,96.584C212.01,95.697 221.154,94.556 225.336,94.029C226.982,93.821 222.497,109.232 224.976,111.705C227.454,114.177 238.223,112.043 240.208,108.865C242.193,105.686 235.909,93.08 236.888,92.63C243.602,89.54 255.115,91.279 258.322,93.474\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M155.909,226.627C154.348,216.954 152.787,207.282 151.226,197.608C150.911,195.653 140.298,206.306 137.662,203.996C135.026,201.684 133.578,187.465 135.411,183.742C137.242,180.02 148.924,183.343 148.653,181.662C147.151,172.36 145.651,163.059 144.15,153.758C154.736,142.101 160.661,125.633 159.7,102.828C164.219,102.158 169.395,101.418 174.982,100.639C175.949,100.504 166.208,85.236 168.074,82.113C169.941,78.99 183.302,79.053 186.179,81.903C189.055,84.753 184.102,99.383 185.334,99.216C191.749,98.346 198.466,97.455 205.178,96.584C201.51,109.374 200.884,124.502 202.264,139.944C202.478,142.33 214.254,130.199 217.662,133.045C221.07,135.89 224.85,152.746 222.715,157.016C220.579,161.284 204.59,157.258 204.849,158.661C209.018,181.281 216.63,202.808 224.379,216.78C215.441,217.732 206.244,218.877 196.881,220.18C195.299,220.4 197.573,204.194 194.438,201.574C191.303,198.956 180.027,201.017 178.07,204.462C176.114,207.908 184.287,222.008 182.7,222.25C173.847,223.6 164.892,225.069 155.909,226.627\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M425.586,113.856C426.793,110.97 427.912,107.99 428.922,104.923C431.626,96.713 433.597,87.881 434.689,78.591C435.116,74.952 435.397,71.338 435.538,67.761C414.978,60.714 394.418,55.422 373.855,52.988C372.652,52.846 378.004,68.048 375.242,69.888C372.481,71.728 359.347,67.014 357.289,64.027C355.231,61.04 364.175,52.054 362.894,51.968C343.601,50.67 324.306,52.058 305.001,57.045C304.174,64.083 303.831,71.557 304.053,78.321C304.198,82.757 304.559,87.115 305.123,91.371C305.672,95.502 306.411,99.538 307.33,103.452C326.827,103.492 345.603,104.173 363.61,105.575C364.664,105.657 360.523,93.241 362.844,91.013C365.163,88.784 375.611,89.624 377.532,92.206C379.453,94.788 373.01,106.377 374.367,106.505C392.254,108.212 409.344,110.646 425.586,113.856\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M425.586,113.856C418.32,131.22 407.627,145.137 395.167,153.765C394.215,154.424 395.161,142.198 392.507,140.885C389.852,139.573 380.501,142.792 379.241,145.888C377.981,148.985 386.624,158.744 384.945,159.464C381.607,160.898 378.184,161.966 374.704,162.64C375.682,170.12 376.381,177.111 376.812,183.631C389.932,186.776 402.184,191.661 413.21,199.01C414.496,199.867 405.319,211.065 405.965,215.714C406.611,220.363 413.941,228.169 417.085,226.904C420.229,225.639 423.358,206.773 424.831,208.126C431.973,214.683 438.433,222.612 444.082,232.168C447.114,223.951 449.934,215.205 452.564,205.98C453.369,203.154 463.194,211.375 466.406,208.147C469.617,204.919 473.297,190.176 471.831,186.614C470.365,183.053 457.252,188.242 457.607,186.779C462.211,167.77 466.156,147.107 469.592,125.163C470.176,121.431 470.745,117.66 471.301,113.856C466.08,111.961 460.69,110.326 455.119,108.976C454.019,108.709 455.097,122.65 452.623,124.498C450.149,126.345 441.609,123.012 440.276,120.064C438.944,117.117 446.028,107.053 444.626,106.815C439.543,105.947 434.312,105.311 428.922,104.923C427.912,107.99 426.793,110.97 425.586,113.856\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M425.586,113.856C418.32,131.22 407.627,145.137 395.167,153.765C394.215,154.424 395.161,142.198 392.507,140.885C389.852,139.573 380.501,142.792 379.241,145.888C377.981,148.985 386.624,158.744 384.945,159.464C381.607,160.898 378.184,161.966 374.704,162.64C369.462,163.655 364.089,163.774 358.675,162.898C340.09,159.887 324.665,145.724 314.985,125.48C311.766,118.748 309.184,111.343 307.33,103.452C326.827,103.492 345.603,104.173 363.61,105.575C364.664,105.657 360.523,93.241 362.844,91.013C365.163,88.784 375.611,89.624 377.532,92.206C379.453,94.788 373.01,106.377 374.367,106.505C392.254,108.212 409.344,110.646 425.586,113.856\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M374.704,162.64C375.682,170.12 376.381,177.111 376.812,183.631C377.681,196.738 377.47,207.944 376.272,217.411C376.126,218.563 389.332,218.75 390.865,222.423C392.398,226.096 388.495,237.568 385.47,239.446C382.445,241.325 373.419,231.599 372.716,233.697C368.58,246.034 361.781,253.681 352.771,257.432C350.108,249.563 346.801,242.458 342.709,236.484C341.526,234.758 335.485,249.806 330.806,249.736C326.126,249.667 314.606,240.313 314.63,236.067C314.654,231.82 332.296,225.207 330.95,224.259C327.961,222.15 324.702,220.468 321.151,219.273C317.047,217.891 312.419,216.789 307.33,215.943C311.774,203.043 311.027,189.649 309.631,176.81C309.517,175.758 319.437,184.902 321.372,182.981C323.307,181.061 323.399,168.087 321.239,165.287C319.077,162.488 308.522,167.215 308.406,166.185C306.648,150.595 305.866,136.339 314.985,125.48C324.665,145.724 340.09,159.887 358.675,162.898C364.089,163.774 369.462,163.655 374.704,162.64\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M144.15,153.758C145.651,163.059 147.151,172.36 148.653,181.662C148.924,183.343 137.242,180.02 135.411,183.742C133.578,187.465 135.026,201.684 137.662,203.996C140.298,206.306 150.911,195.653 151.226,197.608C152.787,207.282 154.348,216.954 155.909,226.627C141.404,229.142 126.829,231.889 112.5,234.74C109.834,235.27 107.178,235.804 104.532,236.34C103.209,236.608 106.29,222.407 103.383,220.38C100.475,218.352 89.213,221.035 87.087,224.173C84.961,227.31 92.625,238.78 90.626,239.203C86.093,240.164 74.633,242.591 69.434,243.719C61.237,235.712 54,225.716 47.947,213.261C47.302,211.936 64.147,213.2 65.911,210.267C67.676,207.333 62.394,197.182 58.532,195.664C54.67,194.145 43.222,202.425 42.74,201.154C40.026,193.997 37.64,186.161 35.613,177.582C52.433,173.965 68.331,179.56 83.577,178.219C85.122,178.084 74.361,167.816 77.157,164.278C79.952,160.741 97.441,154.891 100.351,156.992C103.26,159.093 93.276,177.097 94.613,176.888C110.038,174.479 123.892,169.833 134.821,162.02C138.229,159.583 141.352,156.838 144.15,153.758\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M70.749,74.028C66.956,55.628 46.317,44.954 41.375,42.62C36.79,40.455 43.586,57.264 41.096,60.025C38.605,62.787 28.197,62.146 26.433,59.19C24.669,56.232 34.837,43.891 30.51,42.284C26.184,40.677 11.902,45.257 0.476,49.549L0.476,139.669C9.667,137.026 19.119,134.347 28.842,131.675C34.326,130.169 39.896,128.665 45.555,127.171C46.661,126.879 43.027,144.705 45.852,146.914C48.676,149.125 60.937,144.141 62.504,140.429C64.07,136.718 54.134,124.933 55.25,124.646C60.346,123.337 65.512,122.04 70.749,120.759C71.746,113.154 72.349,106.069 72.548,99.519C72.583,98.379 59.806,105.827 57.717,103.664C55.629,101.5 57.55,88.947 60.014,86.54C62.48,84.134 72.55,90.226 72.509,89.225C72.279,83.688 71.695,78.618 70.749,74.028\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M35.613,177.582C32.443,164.174 30.147,148.952 28.842,131.675C19.119,134.347 9.667,137.026 0.476,139.669L0.476,259.327C5.841,258.082 11.539,256.761 17.522,255.382C18.479,255.161 13.276,242.084 14.905,238.541C16.534,234.998 25.542,231.622 27.296,234.125C29.05,236.629 24.419,253.795 25.428,253.564C31.398,252.196 37.612,250.781 44.027,249.339C52.198,247.501 60.695,245.616 69.434,243.719C61.237,235.712 54,225.716 47.947,213.261C47.302,211.936 64.147,213.2 65.911,210.267C67.676,207.333 62.394,197.182 58.532,195.664C54.67,194.145 43.222,202.425 42.74,201.154C40.026,193.997 37.64,186.161 35.613,177.582\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M205.178,96.584C210.881,76.703 219.814,53.861 228.087,34.216C228.75,32.641 236.977,43.469 240.686,41.498C244.395,39.527 251.354,26.137 250.343,22.389C249.331,18.641 233.848,20.768 234.617,19.009C237.734,11.876 240.563,5.558 242.84,0.476L176.075,0.476C176.495,4.666 177.046,10.152 177.446,15.976C177.563,17.683 162.343,13.094 159.356,15.259C156.37,17.425 156.424,27.126 159.527,28.971C162.629,30.815 177.979,24.841 177.973,26.328C177.934,34.537 177.126,45.784 174.731,49.424C169.303,57.669 149.11,40.545 143.509,49.949C137.908,59.352 140.324,83.775 141.126,105.844C143.283,105.462 145.451,105.086 147.629,104.715C150.668,104.198 154.797,103.554 159.7,102.828C164.219,102.158 169.395,101.418 174.982,100.639C175.949,100.504 166.208,85.236 168.074,82.113C169.941,78.99 183.302,79.053 186.179,81.903C189.055,84.753 184.102,99.383 185.334,99.216C191.749,98.346 198.466,97.455 205.178,96.584\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M258.322,93.474C259.598,86.819 261.358,81.325 263.722,77.943C271.964,66.146 285.723,79.209 304.053,78.321C303.831,71.557 304.174,64.083 305.001,57.045C306.242,46.811 308.552,37.139 311.733,28.248C311.994,27.518 314.135,37.268 316.793,36.105C319.533,34.906 328.344,24.001 328.171,21.052C327.998,18.102 315.48,18.994 315.752,18.405C318.783,11.848 322.309,5.835 326.244,0.476L242.84,0.476C240.563,5.558 237.734,11.876 234.617,19.009C233.848,20.768 249.331,18.641 250.343,22.389C251.354,26.137 244.395,39.527 240.686,41.498C236.977,43.469 228.75,32.641 228.087,34.216C219.814,53.861 210.881,76.703 205.178,96.584C212.01,95.697 221.154,94.556 225.336,94.029C226.982,93.821 222.497,109.232 224.976,111.705C227.454,114.177 238.223,112.043 240.208,108.865C242.193,105.686 235.909,93.08 236.888,92.63C243.602,89.54 255.115,91.279 258.322,93.474\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M305.001,57.045C324.306,52.058 343.601,50.67 362.894,51.968C364.175,52.054 355.231,61.04 357.289,64.027C359.347,67.014 372.481,71.728 375.242,69.888C378.004,68.048 372.652,52.846 373.855,52.988C394.418,55.422 414.978,60.714 435.538,67.761C435.988,56.389 435.023,45.391 432.843,35.159C432.504,33.566 422.37,37.107 419.72,34.755C417.07,32.403 415.245,22.819 416.947,21.046C418.648,19.275 430.319,25.344 429.931,24.123C427.158,15.39 423.443,7.41 418.937,0.476L326.244,0.476C322.309,5.835 318.783,11.848 315.752,18.405C315.48,18.994 327.998,18.102 328.171,21.052C328.344,24.001 319.533,34.906 316.793,36.105C314.135,37.268 311.994,27.518 311.733,28.248C308.552,37.139 306.242,46.811 305.001,57.045\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M428.922,104.923C434.312,105.311 439.543,105.947 444.626,106.815C446.028,107.053 438.944,117.117 440.276,120.064C441.609,123.012 450.149,126.345 452.623,124.498C455.097,122.65 454.019,108.709 455.119,108.976C460.69,110.326 466.08,111.961 471.301,113.856C474.859,89.491 477.841,63.681 480.441,36.908C480.486,36.443 480.62,35.023 480.794,33.167C480.822,32.876 480.938,31.631 481.091,29.987C481.175,29.086 490.777,32.828 493,30.658C495.222,28.488 496.238,18.933 494.425,16.967C492.613,15.001 482.094,19.2 482.125,18.863C482.671,12.775 483.2,6.644 483.714,0.476L418.937,0.476C423.443,7.41 427.158,15.39 429.931,24.123C430.319,25.344 418.648,19.275 416.947,21.046C415.245,22.819 417.07,32.403 419.72,34.755C422.37,37.107 432.504,33.566 432.843,35.159C435.023,45.391 435.988,56.389 435.538,67.761C435.397,71.338 435.116,74.952 434.689,78.591C433.597,87.881 431.626,96.713 428.922,104.923\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M65.387,346.921C67.587,328.063 66.712,311.987 63.988,298.096C63.747,296.867 53.838,306.565 51.066,304.098C48.295,301.631 45.926,287.033 47.357,283.296C48.789,279.558 60.545,284.331 59.657,281.672C55.428,269.023 49.758,258.468 44.027,249.339C37.612,250.781 31.398,252.196 25.428,253.564C24.419,253.795 29.05,236.629 27.296,234.125C25.542,231.622 16.534,234.998 14.905,238.541C13.276,242.084 18.479,255.161 17.522,255.382C11.539,256.761 5.841,258.082 0.476,259.327L0.476,380.546C7.747,376.1 16.96,370.857 27.325,365.386C28.628,364.697 17.701,349.972 20.001,346.494C22.303,343.015 37.877,342.412 41.132,344.514C44.387,346.617 38.038,359.858 39.532,359.11C47.79,354.978 56.517,350.838 65.387,346.921\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M44.027,249.339C49.758,258.468 55.428,269.023 59.657,281.672C60.545,284.331 48.789,279.558 47.357,283.296C45.926,287.033 48.295,301.631 51.066,304.098C53.838,306.565 63.747,296.867 63.988,298.096C66.712,311.987 67.587,328.063 65.387,346.921C72.702,343.691 80.115,340.613 87.445,337.816C88.962,337.238 81.33,319.777 84.152,315.789C86.973,311.801 102.212,310.807 104.372,313.889C106.531,316.971 96.248,334.582 97.112,334.28C107.963,330.491 118.443,327.469 127.933,325.655C128.324,309.997 127.129,294.216 124.337,278.43C124.149,277.367 139.189,282.483 141.396,279.588C143.605,276.693 140.812,263.164 137.584,261.06C134.357,258.957 122.379,268.519 122.029,266.964C119.597,256.2 116.421,245.446 112.5,234.74C109.834,235.27 107.178,235.804 104.532,236.34C103.209,236.608 106.29,222.407 103.383,220.38C100.475,218.352 89.213,221.035 87.087,224.173C84.961,227.31 92.625,238.78 90.626,239.203C86.093,240.164 74.633,242.591 69.434,243.719C60.695,245.616 52.198,247.501 44.027,249.339\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M127.933,325.655C128.324,309.997 127.129,294.216 124.337,278.43C124.149,277.367 139.189,282.483 141.396,279.588C143.605,276.693 140.812,263.164 137.584,261.06C134.357,258.957 122.379,268.519 122.029,266.964C119.597,256.2 116.421,245.446 112.5,234.74C126.829,231.889 141.404,229.142 155.909,226.627C158.087,240.363 160.683,266.433 172.664,276.608C173.754,277.534 182.053,280.942 183.109,281.331C190.107,283.915 195.193,288.866 198.827,295.5C204.652,306.136 206.741,321.102 206.98,337.585C207.002,339.085 218.301,331.339 221.07,333.472C223.839,335.603 225.979,347.192 223.593,350.376C221.207,353.561 206.785,351.848 206.756,352.578C206.599,356.465 206.376,360.388 206.108,364.313C200.022,364.309 193.98,364.4 187.984,364.589C186.971,364.621 192.915,354.773 190.886,353.028C188.858,351.283 177.711,352.138 175.813,354.12C173.915,356.104 180.539,364.874 179.498,364.924C172.874,365.239 166.307,365.676 159.801,366.243C160.586,362.565 161.604,357.786 162.437,352.807C162.59,351.884 149.183,356.088 146.287,354.715C143.59,353.438 142.402,345.972 145.056,344.574C147.916,343.067 163.365,346.422 163.45,345.671C164.489,336.426 164.183,327.979 159.801,326.156C152.105,322.955 140.95,323.168 127.933,325.655\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M252.868,273.346C251.875,265.773 250.883,258.198 249.889,250.624C249.734,249.445 265.013,254.657 267.837,251.71C270.661,248.764 270.094,235.191 266.832,232.947C263.57,230.702 248.463,239.746 248.266,238.246C247.246,230.462 246.225,222.678 245.204,214.894C238.458,215.387 231.501,216.022 224.379,216.78C215.441,217.732 206.244,218.877 196.881,220.18C195.299,220.4 197.573,204.194 194.438,201.574C191.303,198.956 180.027,201.017 178.07,204.462C176.114,207.908 184.287,222.008 182.7,222.25C173.847,223.6 164.892,225.069 155.909,226.627C158.087,240.363 160.683,266.433 172.664,276.608C173.754,277.534 182.053,280.942 183.109,281.331C190.107,283.915 195.193,288.866 198.827,295.5C206.574,291.349 213.812,287.76 220.553,284.715C222.147,283.995 220.792,304.762 224.728,306.982C228.664,309.203 242.65,302.673 244.167,298.038C245.685,293.404 232.302,279.756 233.832,279.177C240.817,276.529 247.156,274.594 252.868,273.346\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M245.204,214.894C246.225,222.678 247.246,230.462 248.266,238.246C248.463,239.746 263.57,230.702 266.832,232.947C270.094,235.191 270.661,248.764 267.837,251.71C265.013,254.657 249.734,249.445 249.889,250.624C250.883,258.198 251.875,265.773 252.868,273.346C281.303,267.138 294.218,277.994 294.141,303.14C301.762,300.53 309.384,297.919 317.005,295.308C318.875,294.668 315.367,308.807 318.783,310.789C322.199,312.771 335.612,310.529 337.503,307.2C339.393,303.871 328.923,291.225 330.124,290.814C339.629,287.558 349.134,284.301 358.639,281.046C357.161,272.712 355.244,264.742 352.771,257.432C350.108,249.563 346.801,242.458 342.709,236.484C341.526,234.758 335.485,249.806 330.806,249.736C326.126,249.667 314.606,240.313 314.63,236.067C314.654,231.82 332.296,225.207 330.95,224.259C327.961,222.15 324.702,220.468 321.151,219.273C317.047,217.891 312.419,216.789 307.33,215.943C302.032,215.061 296.234,214.456 290.007,214.098C288.88,214.033 293.69,197.716 291.452,194.513C289.214,191.309 278.516,191.672 276.58,194.876C274.645,198.079 280.978,213.753 279.839,213.734C275.402,213.664 270.792,213.697 266.03,213.825C259.367,214.004 252.407,214.367 245.204,214.894\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M376.812,183.631C389.932,186.776 402.184,191.661 413.21,199.01C414.496,199.867 405.319,211.065 405.965,215.714C406.611,220.363 413.941,228.169 417.085,226.904C420.229,225.639 423.358,206.773 424.831,208.126C431.973,214.683 438.433,222.612 444.082,232.168C441.818,238.305 439.436,244.146 436.928,249.67C431.666,261.259 425.848,271.451 419.396,280.048C415.425,285.339 411.213,290.025 406.742,294.06C405.168,295.481 402.638,279.952 398.885,279.165C395.133,278.378 385.549,285.036 384.226,289.341C382.903,293.645 393.002,303.961 390.946,304.993C382.229,309.363 372.685,311.654 362.22,311.63C361.515,301.251 360.385,290.894 358.639,281.046C357.161,272.712 355.244,264.742 352.771,257.432C361.781,253.681 368.58,246.034 372.716,233.697C373.419,231.599 382.445,241.325 385.47,239.446C388.495,237.568 392.398,226.096 390.865,222.423C389.332,218.75 376.126,218.563 376.272,217.411C377.47,207.944 377.681,196.738 376.812,183.631\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M483.714,0.476C483.2,6.644 482.671,12.775 482.125,18.863C482.094,19.2 492.613,15.001 494.425,16.967C496.238,18.933 495.222,28.488 493,30.658C490.777,32.828 481.175,29.086 481.091,29.987C480.938,31.631 480.822,32.876 480.794,33.167C480.62,35.023 480.486,36.443 480.441,36.908C477.841,63.681 474.859,89.491 471.301,113.856C470.745,117.66 470.176,121.431 469.592,125.163C474.854,126.869 480,128.682 485.026,130.604C486.087,131.01 484.177,119.307 486.752,117.992C489.328,116.677 499.283,120.016 500.477,122.713C501.671,125.41 492.858,133.727 493.915,134.171C500.496,136.938 506.858,139.907 512.995,143.081C513.6,138.58 514.215,134.115 514.839,129.69C515.375,125.89 515.917,122.12 516.464,118.379C517.732,109.712 519.028,101.208 520.337,92.89C520.626,91.054 510.264,93.466 508.381,90.299C506.499,87.13 506.674,75.808 509.044,73.884C511.413,71.959 522.36,80.23 522.602,78.749C524.526,66.923 526.46,55.525 528.352,44.63C529.354,38.864 530.344,33.238 531.316,27.765C531.549,26.458 520.98,29.273 518.73,27.117C516.481,24.961 515.433,16.336 517.818,14.828C520.204,13.321 532.856,19.132 533.046,18.07C534.136,11.991 535.194,6.12 536.213,0.476L483.714,0.476\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M436.928,249.67C446.666,252.029 456.404,254.389 466.141,256.748C467.061,256.971 460.812,243.224 463.501,241.404C466.192,239.585 480.377,242.923 482.28,245.834C484.183,248.746 473.97,258.645 474.918,258.875C483.612,260.981 492.308,263.088 501.002,265.195C501.967,248.135 503.266,231.193 504.817,214.495C505.715,204.835 506.697,195.256 507.746,185.785C507.913,184.278 495.828,190.161 493.537,186.814C491.247,183.468 491.374,168.142 494.003,165.707C496.63,163.272 509.129,173.689 509.305,172.204C510.475,162.355 511.71,152.637 512.995,143.081C506.858,139.907 500.496,136.938 493.915,134.171C492.858,133.727 501.671,125.41 500.477,122.713C499.283,120.016 489.328,116.677 486.752,117.992C484.177,119.307 486.087,131.01 485.026,130.604C480,128.682 474.854,126.869 469.592,125.163C466.156,147.107 462.211,167.77 457.607,186.779C457.252,188.242 470.365,183.053 471.831,186.614C473.297,190.176 469.617,204.919 466.406,208.147C463.194,211.375 453.369,203.154 452.564,205.98C449.934,215.205 447.114,223.951 444.082,232.168C441.818,238.305 439.436,244.146 436.928,249.67\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M499.72,293.678C500.035,284.099 500.463,274.724 501.002,265.195C492.308,263.088 483.612,260.981 474.918,258.875C473.97,258.645 484.183,248.746 482.28,245.834C480.377,242.923 466.192,239.585 463.501,241.404C460.812,243.224 467.061,256.971 466.141,256.748C456.404,254.389 446.666,252.029 436.928,249.67C431.666,261.259 425.848,271.451 419.396,280.048C434.439,288.897 443.788,303.517 448.315,323.029C448.859,325.379 429.687,322.74 426.322,326.587C422.959,330.436 423.993,343.465 428.132,346.115C432.27,348.764 450.989,340.209 451.154,342.482C452.379,359.363 451.029,378.854 447.474,400.582C453.964,402.254 460.475,403.972 467.005,405.73C468.829,406.221 462.556,393.1 465.958,390.85C469.361,388.6 484.601,389.026 487.419,392.23C490.237,395.433 481.329,409.643 482.868,410.071C489.667,411.961 496.485,413.893 503.322,415.863C502.931,412.103 502.57,408.329 502.237,404.543C501.195,392.692 500.434,380.726 499.924,368.688C499.855,367.061 512.392,368.798 514.616,365.2C516.839,361.603 515.789,348.613 513.267,347.101C510.744,345.588 499.509,357.072 499.483,356.126C498.903,335.458 499.036,314.44 499.72,293.678\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M419.396,280.048C434.439,288.897 443.788,303.517 448.315,323.029C448.859,325.379 429.687,322.74 426.322,326.587C422.959,330.436 423.993,343.465 428.132,346.115C432.27,348.764 450.989,340.209 451.154,342.482C452.379,359.363 451.029,378.854 447.474,400.582C437.85,398.101 428.272,395.718 418.744,393.442C411.372,391.681 404.03,389.985 396.721,388.357C395.486,388.081 398.915,405.718 395.46,408.528C392.006,411.336 378.329,409.124 375.994,405.21C373.659,401.297 383.485,385.475 381.452,385.047C375.112,383.712 368.796,382.431 362.508,381.207C362.833,371.238 363.225,359.231 363.249,346.304C363.251,345.042 379.03,354.987 382.183,352.008C385.335,349.028 385.33,331.182 382.162,328.428C378.995,325.674 363.196,336.746 363.177,335.483C363.054,327.669 362.764,319.643 362.22,311.63C372.685,311.654 382.229,309.363 390.946,304.993C393.002,303.961 382.903,293.645 384.226,289.341C385.549,285.036 395.133,278.378 398.885,279.165C402.638,279.952 405.168,295.481 406.742,294.06C411.213,290.025 415.425,285.339 419.396,280.048\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M294.141,303.14C301.762,300.53 309.384,297.919 317.005,295.308C318.875,294.668 315.367,308.807 318.783,310.789C322.199,312.771 335.612,310.529 337.503,307.2C339.393,303.871 328.923,291.225 330.124,290.814C339.629,287.558 349.134,284.301 358.639,281.046C360.385,290.894 361.515,301.251 362.22,311.63C362.764,319.643 363.054,327.669 363.177,335.483C363.196,336.746 378.995,325.674 382.162,328.428C385.33,331.182 385.335,349.028 382.183,352.008C379.03,354.987 363.251,345.042 363.249,346.304C363.225,359.231 362.833,371.238 362.508,381.207C353.286,379.414 344.122,377.743 335.02,376.207C330.188,375.39 325.373,374.612 320.576,373.872C319.99,373.782 328.748,357.631 327.258,354.384C325.766,351.135 313.844,351.301 311.629,354.384C309.415,357.465 314.805,373 313.969,372.877C302.076,371.127 290.298,369.623 278.644,368.384C282.744,357.327 286.068,347.123 288.571,337.823C289.033,336.108 270.012,341.73 267.546,338.221C265.079,334.712 269.75,319.028 273.772,316.771C277.794,314.513 291.438,325.882 291.68,324.674C293.289,316.63 294.122,309.437 294.141,303.14\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M198.827,295.5C206.574,291.349 213.812,287.76 220.553,284.715C222.147,283.995 220.792,304.762 224.728,306.982C228.664,309.203 242.65,302.673 244.167,298.038C245.685,293.404 232.302,279.756 233.832,279.177C240.817,276.529 247.156,274.594 252.868,273.346C281.303,267.138 294.218,277.994 294.141,303.14C294.122,309.437 293.289,316.63 291.68,324.674C291.438,325.882 277.794,314.513 273.772,316.771C269.75,319.028 265.079,334.712 267.546,338.221C270.012,341.73 289.033,336.108 288.571,337.823C286.068,347.123 282.744,357.327 278.644,368.384C275.2,368.019 271.767,367.675 268.345,367.357C262.007,366.766 255.706,366.258 249.445,365.835C242.606,365.373 235.815,365.012 229.074,364.758C221.352,364.467 213.696,364.317 206.108,364.313C206.376,360.388 206.599,356.465 206.756,352.578C206.785,351.848 221.207,353.561 223.593,350.376C225.979,347.192 223.839,335.603 221.07,333.472C218.301,331.339 207.002,339.085 206.98,337.585C206.741,321.102 204.652,306.136 198.827,295.5\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M159.801,366.243C160.586,362.565 161.604,357.786 162.437,352.807C162.59,351.884 149.183,356.088 146.287,354.715C143.59,353.438 142.402,345.972 145.056,344.574C147.916,343.067 163.365,346.422 163.45,345.671C164.489,336.426 164.183,327.979 159.801,326.156C152.105,322.955 140.95,323.168 127.933,325.655C118.443,327.469 107.963,330.491 97.112,334.28C96.248,334.582 106.531,316.971 104.372,313.889C102.212,310.807 86.973,311.801 84.152,315.789C81.33,319.777 88.962,337.238 87.445,337.816C80.115,340.613 72.702,343.691 65.387,346.921C56.517,350.838 47.79,354.978 39.532,359.11C38.038,359.858 44.387,346.617 41.132,344.514C37.877,342.412 22.303,343.015 20.001,346.494C17.701,349.972 28.628,364.697 27.325,365.386C16.96,370.857 7.747,376.1 0.476,380.546L0.476,416.276C5.17,413.341 13.944,407.118 14.75,407.885C16.262,409.325 9.199,420.361 10.851,421.789C12.503,423.217 22.576,419.533 24.663,416.453C26.749,413.374 22.301,403.854 23.367,403.309C28.363,400.755 33.423,398.342 38.547,396.062C43.51,393.82 52.864,388.896 53.584,389.773C54.936,391.418 46.782,401.363 48.274,403.015C49.765,404.669 60.146,402.452 62.535,399.693C64.925,396.934 61.497,386.849 62.612,386.46C67.835,384.64 73.56,382.738 78.881,381.207C104.604,373.548 131.64,368.693 159.801,366.243\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M0.476,486.563C9.659,484.318 18.48,482.78 26.971,481.891C27.531,481.832 22.319,494.842 24.249,497.432C26.178,500.022 36.729,500.133 38.547,497.432C40.366,494.731 34.318,481.275 35.158,481.227C47.467,480.523 59.068,481.209 70.061,483.085C70.023,478.413 70.039,473.78 70.108,469.189C70.198,463.307 70.374,457.494 70.636,451.759C70.695,450.46 59.035,457.415 57.142,455.154C55.249,452.893 56.919,440.679 59.276,438.192C61.633,435.705 71.223,441.139 71.284,440.232C71.646,434.816 72.086,429.476 72.603,424.218C74.084,409.15 76.19,394.761 78.881,381.207C73.56,382.738 67.835,384.64 62.612,386.46C61.497,386.849 64.925,396.934 62.535,399.693C60.146,402.452 49.765,404.669 48.274,403.015C46.782,401.363 54.936,391.418 53.584,389.773C52.864,388.896 43.51,393.82 38.547,396.062C33.423,398.342 28.363,400.755 23.367,403.309C22.301,403.854 26.749,413.374 24.663,416.453C22.576,419.533 12.503,423.217 10.851,421.789C9.199,420.361 16.262,409.325 14.75,407.885C13.944,407.118 5.17,413.341 0.476,416.276L0.476,486.563\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M72.603,424.218C77.162,422.524 81.75,421.065 86.365,419.838C87.438,419.554 82.691,432.472 85.289,434.141C87.886,435.81 100.073,432.625 101.952,429.855C103.829,427.085 95.385,417.742 96.555,417.519C129.501,411.256 163.857,416.592 199.533,432.78C200.802,421.997 201.985,410.917 203.081,399.526C203.242,397.85 189.546,404.122 186.912,400.974C184.277,397.827 184.354,383.321 187.272,380.645C190.191,377.968 204.256,386.821 204.423,384.916C205.015,378.155 205.577,371.287 206.108,364.313C200.022,364.309 193.98,364.4 187.984,364.589C186.971,364.621 192.915,354.773 190.886,353.028C188.858,351.283 177.711,352.138 175.813,354.12C173.915,356.104 180.539,364.874 179.498,364.924C172.874,365.239 166.307,365.676 159.801,366.243C131.64,368.693 104.604,373.548 78.881,381.207C77.074,390.312 75.53,399.794 74.262,409.606C73.642,414.4 73.089,419.273 72.603,424.218\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M206.108,566.807C208.158,561.671 210.049,556.297 211.79,550.698C212.984,546.858 214.108,542.913 215.163,538.867C215.63,537.078 229.989,538.537 233.43,534.431C236.872,530.325 238.303,515.834 235.811,514.23C233.32,512.627 218.205,526.102 218.48,524.81C227.955,480.229 230.404,425.166 229.074,364.758C221.352,364.467 213.696,364.317 206.108,364.313C205.577,371.287 205.015,378.155 204.423,384.916C204.256,386.821 190.191,377.968 187.272,380.645C184.354,383.321 184.277,397.827 186.912,400.974C189.546,404.122 203.242,397.85 203.081,399.526C201.985,410.917 200.802,421.997 199.533,432.78C196.874,455.382 193.842,476.674 190.466,496.756C189.16,504.519 187.804,512.101 186.397,519.509C186.107,521.037 176.969,509.179 172.674,509.561C168.38,509.942 158.753,518.06 160.63,521.8C162.509,525.541 184.239,530.554 183.944,532.005C182.7,538.143 181.419,544.155 180.105,550.048C188.918,555.247 197.589,560.833 206.108,566.807\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M229.074,364.758C229.526,385.261 229.542,405.148 228.995,424.218C227.932,461.336 224.739,495.36 218.48,524.81C218.205,526.102 233.32,512.627 235.811,514.23C238.303,515.834 236.872,530.325 233.43,534.431C229.989,538.537 215.63,537.078 215.163,538.867C214.108,542.913 212.984,546.858 211.79,550.698C226.7,557.117 245.689,556.774 265.481,551.759C264.598,530.606 263.209,509.056 261.471,487.235C261.34,485.578 249.04,495.546 246.701,491.816C244.362,488.086 245.161,467.883 247.436,464.858C249.711,461.833 260.452,474.848 260.351,473.668C257.318,438.194 253.459,402.075 249.445,365.835C242.606,365.373 235.815,365.012 229.074,364.758\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M249.445,365.835C253.459,402.075 257.318,438.194 260.351,473.668C260.452,474.848 249.711,461.833 247.436,464.858C245.161,467.883 244.362,488.086 246.701,491.816C249.04,495.546 261.34,485.578 261.471,487.235C263.209,509.056 264.598,530.606 265.481,551.759C271.23,550.301 276.981,548.844 282.73,547.387C283.513,547.188 278.425,562.067 280.629,564.446C282.832,566.826 294.14,564.881 295.954,561.666C297.769,558.452 290.38,545.448 291.517,545.16C297.026,543.764 302.536,542.367 308.045,540.971C307.798,537.88 307.528,534.779 307.234,531.667C306.743,526.468 306.188,521.24 305.565,515.987C305.299,513.733 315.646,519.768 317.662,515.987C319.677,512.208 320.123,496.633 317.662,493.307C315.2,489.98 303.252,498.424 302.894,496.029C300.915,482.79 298.568,469.879 295.889,457.356C291.413,436.437 288.144,425.295 282.962,409.376C282.549,408.11 297.173,410.188 299.328,407.496C301.483,404.803 299.125,394.46 295.889,393.225C292.652,391.989 280.187,400.924 279.911,400.085C275.086,385.455 276.94,373.909 278.644,368.384C275.2,368.019 271.767,367.675 268.345,367.357C262.007,366.766 255.706,366.258 249.445,365.835\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M335.02,376.207C330.188,375.39 325.373,374.612 320.576,373.872C319.99,373.782 328.748,357.631 327.258,354.384C325.766,351.135 313.844,351.301 311.629,354.384C309.415,357.465 314.805,373 313.969,372.877C302.076,371.127 290.298,369.623 278.644,368.384C276.94,373.909 275.086,385.455 279.911,400.085C280.187,400.924 292.652,391.989 295.889,393.225C299.125,394.46 301.483,404.803 299.328,407.496C297.173,410.188 282.549,408.11 282.962,409.376C288.144,425.295 291.413,436.437 295.889,457.356C305.467,460.203 315.044,463.048 324.622,465.894C326.31,466.396 319.426,450.053 322.027,448.028C324.628,446.004 337.754,450.163 340.229,453.747C342.704,457.332 335.344,469.079 336.874,469.535C348.66,473.036 360.446,476.538 372.232,480.04C376.92,452.787 375.542,434.192 359.423,430.298C333.729,424.093 331.635,404.091 335.02,376.207\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M335.02,376.207C332.312,398.514 333.111,415.776 346.693,424.966C350.089,427.264 354.284,429.057 359.423,430.298C375.542,434.192 376.92,452.787 372.232,480.04C381.17,482.696 390.109,485.352 399.048,488.008C399.341,485.927 400.067,484.084 401.319,482.53C405.805,476.959 415.201,473.362 426.962,471.081C424.539,462.96 422.649,453.31 421.294,442.116C421.112,440.607 434.786,448.798 437.014,445.389C439.242,441.979 437.572,425.493 434.662,421.66C431.752,417.826 419.717,425.082 419.556,422.389C419.027,413.483 418.755,403.836 418.744,393.442C411.372,391.681 404.03,389.985 396.721,388.357C395.486,388.081 398.915,405.718 395.46,408.528C392.006,411.336 378.329,409.124 375.994,405.21C373.659,401.297 383.485,385.475 381.452,385.047C375.112,383.712 368.796,382.431 362.508,381.207C353.286,379.414 344.122,377.743 335.02,376.207\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M418.744,393.442C418.755,403.836 419.027,413.483 419.556,422.389C419.717,425.082 431.752,417.826 434.662,421.66C437.572,425.493 439.242,441.979 437.014,445.389C434.786,448.798 421.112,440.607 421.294,442.116C422.649,453.31 424.539,462.96 426.962,471.081C429.177,470.652 431.477,470.269 433.843,469.928C440.706,468.941 448.131,468.31 455.703,467.927C457.234,467.85 454.194,481.024 456.781,483.453C459.368,485.88 469.177,485.156 471.225,482.497C473.274,479.836 467.445,467.518 469.068,467.491C484.611,467.23 499.754,467.749 510.953,468.134C510.522,465.888 510.103,463.634 509.697,461.373C509.475,460.132 521.204,461.692 522.934,458.9C524.664,456.109 522.63,446.254 520.081,444.623C517.531,442.993 507.861,450.538 507.638,449.118C505.918,438.178 504.489,427.08 503.322,415.863C496.485,413.893 489.667,411.961 482.868,410.071C481.329,409.643 490.237,395.433 487.419,392.23C484.601,389.026 469.361,388.6 465.958,390.85C462.556,393.1 468.829,406.221 467.005,405.73C460.475,403.972 453.964,402.254 447.474,400.582C437.85,398.101 428.272,395.718 418.744,393.442\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M460.889,557.339C470.813,552.921 479.836,547.437 485.248,540.393C485.906,539.537 468.001,533.981 466.894,529.64C465.787,525.298 474.777,514.117 478.607,514.346C482.437,514.573 489.527,532.434 489.872,531.008C495.573,507.466 498.676,492.027 516.633,494.06C514.528,485.553 512.64,476.904 510.953,468.134C499.754,467.749 484.611,467.23 469.068,467.491C467.445,467.518 473.274,479.836 471.225,482.497C469.177,485.156 459.368,485.88 456.781,483.453C454.194,481.024 457.234,467.85 455.703,467.927C448.131,468.31 440.706,468.941 433.843,469.928C431.477,470.269 429.177,470.652 426.962,471.081C415.201,473.362 405.805,476.959 401.319,482.53C400.067,484.084 399.341,485.927 399.048,488.008C398.569,491.405 399.244,495.44 400.665,499.892C401.165,501.456 412.032,492.868 416.021,495.135C420.011,497.403 426.209,510.438 424.602,513.497C422.995,516.558 405.714,512.144 406.378,513.497C409.308,519.478 412.746,525.757 416.021,531.977C417.742,535.245 419.418,538.497 420.951,541.679C439.193,533.255 452.701,539.027 460.889,557.339\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M372.232,480.04C360.446,476.538 348.66,473.036 336.874,469.535C335.344,469.079 342.704,457.332 340.229,453.747C337.754,450.163 324.628,446.004 322.027,448.028C319.426,450.053 326.31,466.396 324.622,465.894C315.044,463.048 305.467,460.203 295.889,457.356C298.568,469.879 300.915,482.79 302.894,496.029C303.252,498.424 315.2,489.98 317.662,493.307C320.123,496.633 319.677,512.208 317.662,515.987C315.646,519.768 305.299,513.733 305.565,515.987C306.188,521.24 306.743,526.468 307.234,531.667C314.192,531.687 321.15,531.707 328.108,531.727C329.847,531.731 325.129,548.121 328.108,551.398C331.088,554.677 343.574,554.671 345.982,551.398C348.391,548.127 341.016,531.764 342.559,531.768C367.047,531.837 391.534,531.907 416.021,531.977C412.746,525.757 409.308,519.478 406.378,513.497C405.714,512.144 422.995,516.558 424.602,513.497C426.209,510.438 420.011,497.403 416.021,495.135C412.032,492.868 401.165,501.456 400.665,499.892C399.244,495.44 398.569,491.405 399.048,488.008C390.109,485.352 381.17,482.696 372.232,480.04\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M416.021,531.977C391.534,531.907 367.047,531.837 342.559,531.768C341.016,531.764 348.391,548.127 345.982,551.398C343.574,554.671 331.088,554.677 328.108,551.398C325.129,548.121 329.847,531.731 328.108,531.727C321.15,531.707 314.192,531.687 307.234,531.667C307.528,534.779 307.798,537.88 308.045,540.971C309.566,559.979 310.216,578.57 310.054,596.533C321.102,596.159 335.8,595.661 351.079,594.478C364.976,593.401 379.355,591.757 391.904,589.121C396.831,588.087 402.371,586.482 407.617,584.458C408.906,583.961 399.69,574.257 400.367,570.439C401.044,566.622 408.716,560.044 411.678,561.554C414.64,563.064 416.988,580.174 418.141,579.499C422.157,577.148 425.367,574.533 427.057,571.771C431.899,563.865 426.687,553.586 420.951,541.679C419.418,538.497 417.742,535.245 416.021,531.977\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M305.389,663.308C291.868,664.001 273.177,624.344 255.748,607.672C251.532,603.638 247.267,599.715 242.953,595.901C241.957,595.021 253.143,587.458 252.248,583.619C251.354,579.78 240.788,572.233 237.588,572.864C234.387,573.497 234.451,588.575 233.046,587.408C224.251,580.095 220.107,577.007 206.108,566.807C208.158,561.671 210.049,556.297 211.79,550.698C226.7,557.117 245.689,556.774 265.481,551.759C271.23,550.301 276.981,548.844 282.73,547.387C283.513,547.188 278.425,562.067 280.629,564.446C282.832,566.826 294.14,564.881 295.954,561.666C297.769,558.452 290.38,545.448 291.517,545.16C297.026,543.764 302.536,542.367 308.045,540.971C309.566,559.979 310.216,578.57 310.054,596.533C309.999,602.687 309.848,608.768 309.605,614.766C309.513,617.042 299.216,606.949 296.674,609.145C294.132,611.341 292.356,624.151 294.351,627.939C296.346,631.726 308.775,630.046 308.644,631.873C307.865,642.678 306.775,653.175 305.389,663.308\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M132.584,586.313C138.813,590.682 144.359,596.65 149.332,603.961C150.342,605.448 150.896,592.223 154.401,592.711C157.906,593.198 170.02,603.003 170.357,606.884C170.694,610.766 155.876,614.933 156.424,615.998C161.057,625.007 165.123,635.347 168.747,646.725C171.428,644.888 174.143,643.119 176.889,641.413C179.329,639.896 181.795,638.429 184.283,637.008C187.416,635.22 190.586,633.504 193.79,631.856C195.317,631.071 185.533,623.271 186.987,620.225C188.442,617.179 199.466,612.569 202.518,613.578C205.569,614.586 204.376,626.699 205.299,626.279C209.889,624.181 214.537,622.202 219.235,620.322C231.832,615.103 240.909,619.704 255.748,607.672C251.532,603.638 247.267,599.715 242.953,595.901C241.957,595.021 253.143,587.458 252.248,583.619C251.354,579.78 240.788,572.233 237.588,572.864C234.387,573.497 234.451,588.575 233.046,587.408C224.251,580.095 220.107,577.007 206.108,566.807C197.589,560.833 188.918,555.247 180.105,550.048C174.732,546.878 169.306,543.853 163.83,540.971C154.49,559.241 144.096,574.419 132.584,586.313\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M72.603,424.218C77.162,422.524 81.75,421.065 86.365,419.838C87.438,419.554 82.691,432.472 85.289,434.141C87.886,435.81 100.073,432.625 101.952,429.855C103.829,427.085 95.385,417.742 96.555,417.519C129.501,411.256 163.857,416.592 199.533,432.78C196.874,455.382 193.842,476.674 190.466,496.756C185.62,494.48 180.773,492.338 175.927,490.326C174.954,489.922 182.975,476.128 181.033,472.57C179.089,469.013 167.006,466.764 164.27,468.981C161.534,471.198 165.978,486.38 164.614,485.874C133.113,474.164 101.611,468.242 70.108,469.189C70.198,463.307 70.374,457.494 70.636,451.759C70.695,450.46 59.035,457.415 57.142,455.154C55.249,452.893 56.919,440.679 59.276,438.192C61.633,435.705 71.223,441.139 71.284,440.232C71.646,434.816 72.086,429.476 72.603,424.218\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M70.108,469.189C101.611,468.242 133.113,474.164 164.614,485.874C165.978,486.38 161.534,471.198 164.27,468.981C167.006,466.764 179.089,469.013 181.033,472.57C182.975,476.128 174.954,489.922 175.927,490.326C180.773,492.338 185.62,494.48 190.466,496.756C189.16,504.519 187.804,512.101 186.397,519.509C186.107,521.037 176.969,509.179 172.674,509.561C168.38,509.942 158.753,518.06 160.63,521.8C162.509,525.541 184.239,530.554 183.944,532.005C182.7,538.143 181.419,544.155 180.105,550.048C174.732,546.878 169.306,543.853 163.83,540.971C157.21,537.487 150.515,534.215 143.75,531.154C142.56,530.616 142.294,546.568 139.109,548.329C135.923,550.09 125.569,545.324 124.638,541.721C123.708,538.119 134.745,527.22 133.527,526.713C113.159,518.223 92.186,511.616 70.715,506.911C70.342,498.871 70.125,490.923 70.061,483.085C70.023,478.413 70.039,473.78 70.108,469.189\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M70.061,483.085C59.068,481.209 47.467,480.523 35.158,481.227C34.318,481.275 40.366,494.731 38.547,497.432C36.729,500.133 26.178,500.022 24.249,497.432C22.319,494.842 27.531,481.832 26.971,481.891C18.48,482.78 9.659,484.318 0.476,486.563L0.476,579.419C5.862,579.901 11.247,580.097 16.633,580.027C17.333,580.018 13.998,565.561 15.152,562.466C16.284,559.436 22.296,558.567 23.563,561.461C24.83,564.356 22.012,579.872 22.754,579.835C28.019,579.573 33.283,579.064 38.547,578.328C45.165,577.323 50.522,576.241 55.849,575.307C56.541,575.185 52.478,561.278 53.446,558.003C54.371,554.877 60.254,552.968 61.661,555.656C63.069,558.345 61.159,574.289 61.89,574.133C67.075,573.028 70.959,571.915 76.618,569.312C75.882,564.155 75.203,558.95 74.582,553.7C74.049,549.208 73.566,544.733 73.129,540.279C72.992,538.877 87.381,544.314 89.763,541.772C92.146,539.23 90.362,527.138 87.423,525.03C84.485,522.922 72.242,530.485 72.131,529.126C71.527,521.652 71.056,514.244 70.715,506.911C70.342,498.871 70.125,490.923 70.061,483.085\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M163.83,540.971C154.49,559.241 144.096,574.419 132.584,586.313C125.869,593.252 118.774,599.072 111.284,603.739C110.402,604.289 110.409,588.685 107.553,586.941C104.698,585.198 95.048,589.645 94.149,593.28C93.252,596.915 103.216,608.25 102.166,608.753C96.592,611.425 90.815,613.501 84.829,614.966C81.614,600.262 78.857,585.009 76.618,569.312C75.882,564.155 75.203,558.95 74.582,553.7C74.049,549.208 73.566,544.733 73.129,540.279C72.992,538.877 87.381,544.314 89.763,541.772C92.146,539.23 90.362,527.138 87.423,525.03C84.485,522.922 72.242,530.485 72.131,529.126C71.527,521.652 71.056,514.244 70.715,506.911C92.186,511.616 113.159,518.223 133.527,526.713C134.745,527.22 123.708,538.119 124.638,541.721C125.569,545.324 135.923,550.09 139.109,548.329C142.294,546.568 142.56,530.616 143.75,531.154C150.515,534.215 157.21,537.487 163.83,540.971\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M76.618,569.312C70.959,571.915 67.075,573.028 61.89,574.133C61.159,574.289 63.069,558.345 61.661,555.656C60.254,552.968 54.371,554.877 53.446,558.003C52.478,561.278 56.541,575.185 55.849,575.307C50.522,576.241 45.165,577.323 38.547,578.328C33.283,579.064 28.019,579.573 22.754,579.835C22.012,579.872 24.83,564.356 23.563,561.461C22.296,558.567 16.284,559.436 15.152,562.466C13.998,565.561 17.333,580.018 16.633,580.027C11.247,580.097 5.862,579.901 0.476,579.419L0.476,664.653C5.477,662.257 12.192,660.043 17.338,658.174C18.006,657.931 17.396,674.832 19.889,677.546C22.381,680.261 31.05,678.194 32.295,674.46C33.538,670.724 26.636,655.369 27.352,655.137C32.432,653.495 73.374,641.408 89.937,636.4C88.126,629.398 86.422,622.25 84.829,614.966C81.614,600.262 78.857,585.009 76.618,569.312\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M132.584,586.313C138.813,590.682 144.359,596.65 149.332,603.961C150.342,605.448 150.896,592.223 154.401,592.711C157.906,593.198 170.02,603.003 170.357,606.884C170.694,610.766 155.876,614.933 156.424,615.998C161.057,625.007 165.123,635.347 168.747,646.725C160.365,652.466 152.31,658.866 144.652,666.063C143.304,667.33 142.411,652.115 138.961,651.953C135.509,651.79 124.847,660.853 123.948,665.089C123.049,669.324 134.713,676.098 133.567,677.366C126.179,685.54 119.238,694.614 112.816,704.735C107.802,692.928 103.118,680.33 98.822,667.044C95.638,657.193 92.668,646.963 89.937,636.4C88.126,629.398 86.422,622.25 84.829,614.966C90.815,613.501 96.592,611.425 102.166,608.753C103.216,608.25 93.252,596.915 94.149,593.28C95.048,589.645 104.698,585.198 107.553,586.941C110.409,588.685 110.402,604.289 111.284,603.739C118.774,599.072 125.869,593.252 132.584,586.313\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M188.485,742.189C161.455,735.277 143.598,730.387 132.584,744.318C129.194,738.57 125.893,732.5 122.693,726.128C122.316,725.375 111.484,737.304 108.695,735.737C105.906,734.169 104.371,719.864 105.958,716.722C107.546,713.579 118.932,718.408 118.22,716.882C116.38,712.934 114.578,708.883 112.816,704.735C119.238,694.614 126.179,685.54 133.567,677.366C134.713,676.098 123.049,669.324 123.948,665.089C124.847,660.853 135.509,651.79 138.961,651.953C142.411,652.115 143.304,667.33 144.652,666.063C152.31,658.866 160.365,652.466 168.747,646.725C171.428,644.888 174.143,643.119 176.889,641.413C186.813,665.774 195.009,697.181 188.485,742.189\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M188.485,742.189C195.009,697.181 186.813,665.774 176.889,641.413C179.329,639.896 181.795,638.429 184.283,637.008C187.416,635.22 190.586,633.504 193.79,631.856C195.317,631.071 185.533,623.271 186.987,620.225C188.442,617.179 199.466,612.569 202.518,613.578C205.569,614.586 204.376,626.699 205.299,626.279C209.889,624.181 214.537,622.202 219.235,620.322C221,624.499 222.763,628.695 224.498,632.922C225.056,634.283 236.728,624.113 240.724,626.511C244.719,628.908 250.343,644.13 248.472,647.303C246.601,650.475 229.095,644.477 229.5,645.545C239.883,672.935 250.615,718.043 245.676,753.03C235.484,752.089 226.029,750.603 217.268,748.885C216.032,748.642 225.824,736.448 224.052,733.255C222.279,730.062 209.45,727.48 206.632,729.728C203.813,731.976 207.989,746.935 207.143,746.745C200.487,745.243 194.275,743.668 188.485,742.189\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M305.389,663.308C302.613,683.613 298.648,702.461 293.618,719.419C292.537,723.062 291.407,726.618 290.229,730.083C288.076,736.416 285.763,742.444 283.297,748.139C282.46,750.071 281.606,751.965 280.734,753.82C279.742,755.932 278.727,757.993 277.691,760.001C277.691,760.001 273.949,756.987 271.827,756.139C269.335,755.144 265.812,754.395 262.74,754.03C258.382,753.512 251.15,753.536 245.676,753.03C250.615,718.043 239.883,672.935 229.5,645.545C229.095,644.477 246.601,650.475 248.472,647.303C250.343,644.13 244.719,628.908 240.724,626.511C236.728,624.113 225.056,634.283 224.498,632.922C222.763,628.695 221,624.499 219.235,620.322C231.832,615.103 240.909,619.704 255.748,607.672C273.177,624.344 291.868,664.001 305.389,663.308\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M369.194,711.869C360.25,686.475 355.101,671.373 352.602,638.376C352.491,636.906 367.85,642.468 370.627,639.586C373.404,636.705 372.427,623.773 369.267,621.086C366.105,618.4 351.761,625.45 351.66,623.466C351.42,618.781 351.228,599.271 351.079,594.478C335.8,595.661 321.102,596.159 310.054,596.533C309.999,602.687 309.848,608.768 309.605,614.766C309.513,617.042 299.216,606.949 296.674,609.145C294.132,611.341 292.356,624.151 294.351,627.939C296.346,631.726 308.775,630.046 308.644,631.873C307.865,642.678 306.775,653.175 305.389,663.308C304.252,671.627 302.915,679.7 301.387,687.5C299.185,698.738 296.587,709.408 293.618,719.419C299.965,724.251 312.009,724.312 325.542,722.29C327.451,722.005 320.09,706.635 323.107,702.922C326.123,699.209 340.632,697.288 343.641,700.014C346.649,702.741 339.524,719.654 341.156,719.283C351.031,717.032 360.863,714.25 369.194,711.869\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M469.992,626.021C469.645,641.356 468.34,658.551 466.027,677.495C449.337,684.525 432.125,691.257 414.16,697.559C412.465,698.153 414.734,683.712 411.324,682.274C407.913,680.835 395.375,685.643 393.695,688.925C392.014,692.208 402.168,701.662 401.241,701.97C399.796,702.45 398.347,702.927 396.891,703.401C387.866,706.342 378.642,709.169 369.194,711.869C360.25,686.475 355.101,671.373 352.602,638.376C352.491,636.906 367.85,642.468 370.627,639.586C373.404,636.705 372.427,623.773 369.267,621.086C366.105,618.4 351.761,625.45 351.66,623.466C351.42,618.781 351.228,599.271 351.079,594.478C364.976,593.401 379.355,591.757 391.904,589.121C384.255,631.766 403.967,644.031 433.088,638.936C435.574,638.501 425.316,629.625 428.241,626.741C431.36,623.667 447.586,619.42 451.796,620.494C455.36,621.403 451.443,633.954 453.501,633.185C458.875,631.176 464.399,628.768 469.992,626.021\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M460.889,557.339C452.701,539.027 439.193,533.255 420.951,541.679C426.687,553.586 431.899,563.865 427.057,571.771C425.367,574.533 422.157,577.148 418.141,579.499C416.988,580.174 414.64,563.064 411.678,561.554C408.716,560.044 401.044,566.622 400.367,570.439C399.69,574.257 408.906,583.961 407.617,584.458C402.371,586.482 396.831,588.087 391.904,589.121C384.255,631.766 403.967,644.031 433.088,638.936C435.574,638.501 425.316,629.625 428.241,626.741C431.36,623.667 447.586,619.42 451.796,620.494C455.36,621.403 451.443,633.954 453.501,633.185C458.875,631.176 464.399,628.768 469.992,626.021C470.685,595.426 467.549,572.234 460.889,557.339\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M516.633,494.06C498.676,492.027 495.573,507.466 489.872,531.008C489.527,532.434 482.437,514.573 478.607,514.346C474.777,514.117 465.787,525.298 466.894,529.64C468.001,533.981 485.906,539.537 485.248,540.393C479.836,547.437 470.813,552.921 460.889,557.339C467.549,572.234 470.685,595.426 469.992,626.021C481.504,620.366 493.303,613.274 504.676,605.263C506.575,603.925 495.674,595.903 497.243,590.659C498.812,585.413 509.943,573.578 514.091,573.796C518.239,574.012 519.951,593.756 522.131,591.961C530.074,585.421 537.577,578.527 544.352,571.488C542.239,567.228 540.214,562.898 538.275,558.502C537.417,556.558 552.658,555.368 553.707,551.449C554.755,547.53 548.191,536.36 544.567,534.984C540.942,533.61 532.603,544.868 531.96,543.197C525.913,527.5 520.841,511.064 516.633,494.06\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M469.992,626.021C469.645,641.356 468.34,658.551 466.027,677.495C477.421,672.696 488.573,667.759 499.556,662.725C509.6,658.121 519.503,653.437 529.322,648.704C531.684,647.565 533.831,664.248 538.606,665.2C543.381,666.153 556.353,658.712 557.971,654.421C559.59,650.129 546.373,640.408 548.315,639.453C558.156,634.619 567.949,629.756 577.751,624.899C573.783,619.617 569.998,614.329 566.407,609.036C561.102,601.216 556.221,593.387 551.8,585.558C549.204,580.961 546.723,576.268 544.352,571.488C537.577,578.527 530.074,585.421 522.131,591.961C519.951,593.756 518.239,574.012 514.091,573.796C509.943,573.578 498.812,585.413 497.243,590.659C495.674,595.903 506.575,603.925 504.676,605.263C493.303,613.274 481.504,620.366 469.992,626.021\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M520.353,736.781C535.123,732.837 550.583,723.724 566.915,708.485C567.963,707.507 555.453,699.965 555.969,695.692C556.485,691.418 566.399,682.51 570.015,682.844C573.631,683.179 576.401,699.054 577.665,697.697C587.224,687.438 597.084,675.107 607.274,660.527C604.242,657.171 601.273,653.81 598.371,650.445C597.413,649.332 588.713,664.222 585.54,664.043C582.368,663.863 578.549,653.238 579.337,649.368C580.125,645.497 591.191,641.941 590.271,640.82C585.92,635.521 581.744,630.214 577.751,624.899C567.949,629.756 558.156,634.619 548.315,639.453C546.373,640.408 559.59,650.129 557.971,654.421C556.353,658.712 543.381,666.153 538.606,665.2C533.831,664.248 531.684,647.565 529.322,648.704C519.503,653.437 509.6,658.121 499.556,662.725C501.901,671.075 504.245,679.424 506.59,687.774C507.226,690.035 516.752,678.661 520.646,681.011C524.542,683.361 531.467,697.765 529.962,701.874C528.456,705.983 511.122,703.909 511.614,705.663C514.527,716.036 517.44,726.408 520.353,736.781\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M520.353,736.781C517.44,726.408 514.527,716.036 511.614,705.663C511.122,703.909 528.456,705.983 529.962,701.874C531.467,697.765 524.542,683.361 520.646,681.011C516.752,678.661 507.226,690.035 506.59,687.774C504.245,679.424 501.901,671.075 499.556,662.725C488.573,667.759 477.421,672.696 466.027,677.495C464.885,687.211 463.705,695.869 462.457,703.678C462.224,705.136 446.538,703.981 442.852,707.329C439.166,710.677 437.478,722.087 440.34,723.766C443.202,725.444 460.307,715.969 460.026,717.399C457.857,728.405 455.459,737.549 452.699,745.706C464.2,743.751 471.891,750.718 477.537,762.467C478.372,764.203 464.85,763.928 463.42,767.974C461.99,772.021 465.609,784.942 468.957,786.747C472.305,788.551 482.997,777.032 483.505,778.803C486.147,788.023 488.285,798.427 490.331,809.043C499.642,800.517 511.813,795.503 525.152,794.475C528.882,794.188 532.703,794.212 536.579,794.559C534.404,786.816 532.23,779.072 530.055,771.329C529.553,769.542 547.626,771.517 549.708,768.014C551.789,764.511 546.508,752.214 542.543,750.309C538.577,748.404 526.363,758.182 525.915,756.586C524.061,749.984 522.207,743.382 520.353,736.781\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M283.297,748.139C290.388,752.012 293.377,753.224 299.698,752.926C306.163,752.621 312.628,752.316 319.093,752.01C331.125,751.442 343.157,750.875 355.189,750.307C366.729,749.762 378.269,749.218 389.809,748.674C392.953,748.525 387.342,766.288 391.224,768.728C395.105,771.167 409.812,766.815 413.097,763.306C416.381,759.798 408.992,747.768 410.93,747.677C424.853,747.02 438.775,746.363 452.699,745.706C455.459,737.549 457.857,728.405 460.026,717.399C460.307,715.969 443.202,725.444 440.34,723.766C437.478,722.087 439.166,710.677 442.852,707.329C446.538,703.981 462.224,705.136 462.457,703.678C463.705,695.869 464.885,687.211 466.027,677.495C449.337,684.525 432.125,691.257 414.16,697.559C412.465,698.153 414.734,683.712 411.324,682.274C407.913,680.835 395.375,685.643 393.695,688.925C392.014,692.208 402.168,701.662 401.241,701.97C399.796,702.45 398.347,702.927 396.891,703.401C387.866,706.342 378.642,709.169 369.194,711.869C360.863,714.25 351.031,717.032 341.156,719.283C339.524,719.654 346.649,702.741 343.641,700.014C340.632,697.288 326.123,699.209 323.107,702.922C320.09,706.635 327.451,722.005 325.542,722.29C312.009,724.312 299.965,724.251 293.618,719.419C292.537,723.062 291.407,726.618 290.229,730.083C288.076,736.416 285.763,742.444 283.297,748.139\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M490.331,809.043C488.285,798.427 486.147,788.023 483.505,778.803C482.997,777.032 472.305,788.551 468.957,786.747C465.609,784.942 461.99,772.021 463.42,767.974C464.85,763.928 478.372,764.203 477.537,762.467C471.891,750.718 464.2,743.751 452.699,745.706C447.411,761.33 440.797,773.334 431.923,787.862C430.558,790.096 420.517,779.269 415.978,781.921C411.438,784.574 404.145,799.219 404.686,803.777C405.227,808.336 420.85,805.979 419.224,809.274C417.031,813.716 414.62,819.29 412.21,826.082C408.706,835.963 405.205,848.404 402.388,863.689C410.08,861.131 417.539,859.153 424.762,857.745C426.977,857.312 418.955,847.438 421.967,844.751C424.978,842.064 439.344,839.865 442.832,841.632C446.32,843.398 440.511,855.508 442.894,855.352C453.32,854.68 463.188,855.297 472.489,857.156C472.082,851.496 472.357,845.865 473.369,840.38C473.745,838.346 463.724,841.263 462.447,837.794C461.171,834.325 462.979,821.827 465.711,819.555C468.443,817.283 477.957,825.892 478.842,824.163C481.841,818.307 485.738,813.248 490.331,809.043\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M355.189,750.307C354.305,766.191 355.369,778.758 358.063,788.708C359.14,792.686 366.923,777.212 370.86,779.657C374.798,782.1 381.755,798.125 381.686,803.369C381.619,808.47 369.049,809.751 370.445,811.115C380.601,821.04 395.128,824.644 412.21,826.082C414.62,819.29 417.031,813.716 419.224,809.274C420.85,805.979 405.227,808.336 404.686,803.777C404.145,799.219 411.438,784.574 415.978,781.921C420.517,779.269 430.558,790.096 431.923,787.862C440.797,773.334 447.411,761.33 452.699,745.706C438.775,746.363 424.853,747.02 410.93,747.677C408.992,747.768 416.381,759.798 413.097,763.306C409.812,766.815 395.105,771.167 391.224,768.728C387.342,766.288 392.953,748.525 389.809,748.674C378.269,749.218 366.729,749.762 355.189,750.307\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M319.093,752.01C320.715,759.342 322.124,766.377 323.32,773.116C323.9,776.386 311.087,770.656 308.974,775.061C306.862,779.466 307.741,796.479 310.643,799.545C313.546,802.612 326.226,792.114 326.39,793.461C329.497,819.001 328.859,839.34 324.43,854.423C332.49,864.361 341.658,872.017 351.876,877.52C353.409,878.339 350.289,862.429 354.125,860.625C357.962,858.812 372.647,862.769 374.899,866.68C377.15,870.582 365.684,883.456 367.636,884.045C377.286,886.971 387.693,888.342 398.819,888.222C399.792,879.342 401.008,871.171 402.388,863.689C405.205,848.404 408.706,835.963 412.21,826.082C395.128,824.644 380.601,821.04 370.445,811.115C369.049,809.751 381.619,808.47 381.686,803.369C381.755,798.125 374.798,782.1 370.86,779.657C366.923,777.212 359.14,792.686 358.063,788.708C355.369,778.758 354.305,766.191 355.189,750.307C343.157,750.875 331.125,751.442 319.093,752.01\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M319.093,752.01C320.715,759.342 322.124,766.377 323.32,773.116C323.9,776.386 311.087,770.656 308.974,775.061C306.862,779.466 307.741,796.479 310.643,799.545C313.546,802.612 326.226,792.114 326.39,793.461C329.497,819.001 328.859,839.34 324.43,854.423C319.459,871.336 309.712,881.634 295.125,885.204C294.061,879.259 292.852,873.388 291.489,867.591C288.548,855.076 284.89,842.901 280.423,831.095C279.705,829.198 296.266,828.094 297.02,823.765C297.772,819.434 288.771,806.46 284.939,805.113C281.107,803.766 274.658,817.075 274.028,815.686C269.664,806.062 264.702,796.716 259.087,787.673C265.883,780.124 272.106,770.821 277.691,760.001C278.727,757.993 279.742,755.932 280.734,753.82C281.606,751.965 282.46,750.071 283.297,748.139C290.388,752.012 293.377,753.224 299.698,752.926C306.163,752.621 312.628,752.316 319.093,752.01\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M132.584,744.318C143.598,730.387 161.455,735.277 188.485,742.189C194.275,743.668 200.487,745.243 207.143,746.745C207.989,746.935 203.813,731.976 206.632,729.728C209.45,727.48 222.279,730.062 224.052,733.255C225.824,736.448 216.032,748.642 217.268,748.885C226.029,750.603 235.484,752.089 245.676,753.03C251.15,753.536 258.382,753.512 262.74,754.03C265.812,754.395 269.335,755.144 271.827,756.139C273.949,756.987 277.691,760.001 277.691,760.001C272.106,770.821 265.883,780.124 259.087,787.673C253.34,794.058 247.184,799.189 240.658,802.924C238.771,804.004 242.378,788.853 238.835,787.266C235.291,785.678 222.104,789.703 219.395,793.4C216.688,797.097 224.848,809.078 222.588,809.447C219.067,810.022 215.539,810.215 212.011,810.042C194.811,809.198 177.629,799.643 161.459,783.094C157.06,778.593 152.736,773.574 148.507,768.072C147.828,767.188 165.037,767.54 166.119,765.026C167.2,762.511 159.047,754.012 154.997,752.986C150.949,751.959 142.554,759.925 141.828,758.866C138.682,754.282 135.598,749.428 132.584,744.318\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M214.11,888.627C224.904,886.621 235.848,884.118 246.921,881.21C248.153,880.879 244.555,894.047 247.078,895.492C249.601,896.937 260.463,892.695 262.061,889.87C263.658,887.044 255.518,878.864 256.662,878.542C268.148,875.293 279.764,871.622 291.489,867.591C288.548,855.076 284.89,842.901 280.423,831.095C279.705,829.198 296.266,828.094 297.02,823.765C297.772,819.434 288.771,806.46 284.939,805.113C281.107,803.766 274.658,817.075 274.028,815.686C269.664,806.062 264.702,796.716 259.087,787.673C253.34,794.058 247.184,799.189 240.658,802.924C238.771,804.004 242.378,788.853 238.835,787.266C235.291,785.678 222.104,789.703 219.395,793.4C216.688,797.097 224.848,809.078 222.588,809.447C219.067,810.022 215.539,810.215 212.011,810.042C211.888,817.922 211.867,825.754 211.945,833.543C211.971,836.202 199.145,827.283 196.494,830.555C193.842,833.828 193.38,849.021 196.034,853.171C198.689,857.312 212.346,853.226 212.42,855.426C212.792,866.588 213.36,877.649 214.11,888.627\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M133.905,893.376C144.354,894.36 155.03,894.618 165.908,894.213C167.948,894.139 162.657,906.378 165.867,909.176C169.077,911.982 182.265,913.722 185.168,911.035C188.07,908.348 181.429,893.219 183.281,893.044C193.405,892.069 203.688,890.578 214.11,888.627C213.36,877.649 212.792,866.588 212.42,855.426C212.346,853.226 198.689,857.312 196.034,853.171C193.38,849.021 193.842,833.828 196.494,830.555C199.145,827.283 211.971,836.202 211.945,833.543C211.867,825.754 211.888,817.922 212.011,810.042C194.811,809.198 177.629,799.643 161.459,783.094C154.407,798.661 148.742,814.136 144.409,829.524C142.554,836.119 140.942,842.69 139.572,849.251C139.167,851.183 129.591,842.865 126.59,846.279C123.588,849.702 119.963,865.99 121.562,869.744C123.16,873.508 136.47,866.717 136.179,868.833C135.052,877.042 134.297,885.222 133.905,893.376\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M60.288,743.269C53.126,723.271 52.384,707.848 57.123,696.06C57.673,694.693 64.135,707.688 67.634,706.608C71.131,705.528 78.563,693.336 78.11,689.58C77.658,685.824 63.892,685.141 64.921,684.072C72.561,676.131 84.067,670.661 98.822,667.044C95.638,657.193 92.668,646.963 89.937,636.4C73.374,641.408 32.432,653.495 27.352,655.137C26.636,655.369 33.538,670.724 32.295,674.46C31.05,678.194 22.381,680.261 19.889,677.546C17.396,674.832 18.006,657.931 17.338,658.174C12.192,660.043 5.477,662.257 0.476,664.653L0.476,739.626C8.024,740.226 15.469,740.768 22.814,741.252C24.838,741.385 18.25,752.886 21.254,755.641C24.258,758.396 37.694,760.004 40.838,757.781C43.981,755.557 38.368,742.202 40.117,742.298C46.929,742.672 53.652,742.995 60.288,743.269\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M132.584,744.318C129.194,738.57 125.893,732.5 122.693,726.128C122.316,725.375 111.484,737.304 108.695,735.737C105.906,734.169 104.371,719.864 105.958,716.722C107.546,713.579 118.932,718.408 118.22,716.882C116.38,712.934 114.578,708.883 112.816,704.735C107.802,692.928 103.118,680.33 98.822,667.044C84.067,670.661 72.561,676.131 64.921,684.072C63.892,685.141 77.658,685.824 78.11,689.58C78.563,693.336 71.131,705.528 67.634,706.608C64.135,707.688 57.673,694.693 57.123,696.06C52.384,707.848 53.126,723.271 60.288,743.269C67.807,743.579 75.214,743.826 82.515,744.013C85.79,744.095 89.044,744.166 92.277,744.225C106.096,744.477 113.539,766.54 132.584,744.318\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M132.584,744.318C113.539,766.54 106.096,744.477 92.277,744.225C89.757,751.415 87.596,758.07 85.865,764.221C85.265,766.352 77.252,760.893 74.756,764.105C72.162,767.444 69.118,781.144 70.293,784.259C71.468,787.373 82.069,780.87 81.808,782.794C79.354,800.872 83.415,812.946 97.33,820.325C109.064,826.547 125.06,829.372 144.409,829.524C148.742,814.136 154.407,798.661 161.459,783.094C157.06,778.593 152.736,773.574 148.507,768.072C147.828,767.188 165.037,767.54 166.119,765.026C167.2,762.511 159.047,754.012 154.997,752.986C150.949,751.959 142.554,759.925 141.828,758.866C138.682,754.282 135.598,749.428 132.584,744.318\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M0.476,834.96C9.784,833.754 19.947,834.15 30.884,836.064C32.788,836.396 23.358,849.021 26.218,852.012C29.079,855.002 44.606,856.033 48.049,853.99C51.492,851.956 45.064,839.239 46.878,839.754C58.169,842.957 70.155,847.53 82.763,853.364C85.938,842.349 90.719,831.319 97.33,820.325C83.415,812.946 79.354,800.872 81.808,782.794C82.069,780.87 71.468,787.373 70.293,784.259C69.118,781.144 72.162,767.444 74.756,764.105C77.252,760.893 85.265,766.352 85.865,764.221C87.596,758.07 89.757,751.415 92.277,744.225C89.044,744.166 85.79,744.095 82.515,744.013C75.214,743.826 67.807,743.579 60.288,743.269C53.652,742.995 46.929,742.672 40.117,742.298C38.368,742.202 43.981,755.557 40.838,757.781C37.694,760.004 24.258,758.396 21.254,755.641C18.25,752.886 24.838,741.385 22.814,741.252C15.469,740.768 8.024,740.226 0.476,739.626L0.476,834.96\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M82.763,853.364C70.155,847.53 58.169,842.957 46.878,839.754C45.064,839.239 51.492,851.956 48.049,853.99C44.606,856.033 29.079,855.002 26.218,852.012C23.358,849.021 32.788,836.396 30.884,836.064C19.947,834.15 9.784,833.754 0.476,834.96L0.476,945.69C10.283,945.856 20.09,946.021 29.897,946.187C31.786,946.215 24.92,932.043 27.84,929.347C30.76,926.66 44.495,927.175 47.419,930.028C50.342,932.881 43.665,946.417 45.38,946.445C60.18,946.693 74.98,946.942 89.78,947.19C84.029,932.614 80.079,917.752 78.529,902.743C78.34,900.921 96.038,907.225 98.971,903.378C101.904,899.532 99.619,883.345 96.125,879.674C92.631,875.993 77.803,884.864 78.006,881.302C78.534,872.017 80.074,862.695 82.763,853.364\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M97.33,820.325C90.719,831.319 85.938,842.349 82.763,853.364C80.074,862.695 78.534,872.017 78.006,881.302C77.803,884.864 92.631,875.993 96.125,879.674C99.619,883.345 101.904,899.532 98.971,903.378C96.038,907.225 78.34,900.921 78.529,902.743C80.079,917.752 84.029,932.614 89.78,947.19C105.411,947.457 121.044,947.715 136.675,947.982C135.554,940.445 134.734,932.899 134.222,925.326C134.124,923.872 121.067,933.589 118.392,931.151C115.717,928.721 115.641,914.485 118.174,910.731C120.708,906.995 133.614,911.081 133.596,908.688C133.558,903.59 133.661,898.492 133.905,893.376C134.297,885.222 135.052,877.042 136.179,868.833C136.47,866.717 123.16,873.508 121.562,869.744C119.963,865.99 123.588,849.702 126.59,846.279C129.591,842.865 139.167,851.183 139.572,849.251C140.942,842.69 142.554,836.119 144.409,829.524C125.06,829.372 109.064,826.547 97.33,820.325\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M214.11,888.627C203.688,890.578 193.405,892.069 183.281,893.044C181.429,893.219 188.07,908.348 185.168,911.035C182.265,913.722 169.077,911.982 165.867,909.176C162.657,906.378 167.948,894.139 165.908,894.213C155.03,894.618 144.354,894.36 133.905,893.376C133.661,898.492 133.558,903.59 133.596,908.688C133.614,911.081 120.708,906.995 118.174,910.731C115.641,914.485 115.717,928.721 118.392,931.151C121.067,933.589 134.124,923.872 134.222,925.326C134.734,932.899 135.554,940.445 136.675,947.982C138.682,961.454 141.652,974.861 145.546,988.214C157.584,986.704 169.87,985.057 182.353,983.244C196.019,981.266 209.922,979.094 223.994,976.711C221.738,962.089 219.753,947.337 218.078,932.439C217.831,930.249 231.366,932.089 233.289,927.737C235.213,923.384 232.547,909.47 229.617,906.332C226.687,903.204 215.923,911.348 215.707,908.927C215.108,902.191 214.574,895.428 214.11,888.627\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M291.489,867.591C279.764,871.622 268.148,875.293 256.662,878.542C255.518,878.864 263.658,887.044 262.061,889.87C260.463,892.695 249.601,896.937 247.078,895.492C244.555,894.047 248.153,880.879 246.921,881.21C235.848,884.118 224.904,886.621 214.11,888.627C214.574,895.428 215.108,902.191 215.707,908.927C215.923,911.348 226.687,903.204 229.617,906.332C232.547,909.47 235.213,923.384 233.289,927.737C231.366,932.089 217.831,930.249 218.078,932.439C219.753,947.337 221.738,962.089 223.994,976.711C232.905,975.192 241.882,973.6 250.911,971.898C253.748,971.364 244.168,961.518 247.116,958.518C250.064,955.518 265.036,952.233 268.6,953.889C272.165,955.555 267.27,968.733 268.502,968.484C279.463,966.285 290.482,963.947 301.53,961.444C301.491,952.362 301.237,943.39 300.743,934.519C300.615,932.237 288.928,939.377 286.602,935.301C284.277,931.224 284.697,913.62 286.786,910.068C288.874,906.516 299.389,916.501 299.132,913.979C298.138,904.225 296.813,894.627 295.125,885.204C294.061,879.259 292.852,873.388 291.489,867.591\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M398.819,888.222C387.693,888.342 377.286,886.971 367.636,884.045C365.684,883.456 377.15,870.582 374.899,866.68C372.647,862.769 357.962,858.812 354.125,860.625C350.289,862.429 353.409,878.339 351.876,877.52C341.658,872.017 332.49,864.361 324.43,854.423C319.459,871.336 309.712,881.634 295.125,885.204C296.813,894.627 298.138,904.225 299.132,913.979C299.389,916.501 288.874,906.516 286.786,910.068C284.697,913.62 284.277,931.224 286.602,935.301C288.928,939.377 300.615,932.237 300.743,934.519C301.237,943.39 301.491,952.362 301.53,961.444C308.009,959.972 314.498,958.454 320.991,956.88C329.816,954.736 345.133,951.092 353.956,948.736C356.352,948.092 351.219,964.693 354.263,966.432C357.308,968.162 369.666,962.889 372.222,959.144C374.779,955.399 367.256,944.632 369.6,943.96C378.544,941.365 387.466,938.65 396.351,935.807C396.353,918.084 397.281,902.265 398.819,888.222\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M472.489,857.156C463.188,855.297 453.32,854.68 442.894,855.352C440.511,855.508 446.32,843.398 442.832,841.632C439.344,839.865 424.978,842.064 421.967,844.751C418.955,847.438 426.977,857.312 424.762,857.745C417.539,859.153 410.08,861.131 402.388,863.689C401.008,871.171 399.792,879.342 398.819,888.222C397.281,902.265 396.353,918.084 396.351,935.807C408.633,931.878 420.843,927.709 432.939,923.274C439.743,920.78 446.511,918.203 453.235,915.544C455.349,914.706 445.831,907.446 447.599,904.133C449.367,900.829 460.294,894.885 463.843,895.722C467.391,896.56 467.221,909.857 468.892,909.157C475.671,906.305 482.398,903.369 489.067,900.332C479.432,887.284 473.567,872.137 472.489,857.156\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M489.067,900.332C490.449,902.201 491.909,904.023 493.443,905.808C511.971,897.369 529.793,888.158 546.97,878.146C548.554,877.226 536.109,867.057 537.232,862.999C538.355,858.932 550.04,852.463 553.71,853.76C557.38,855.058 558.147,871.465 559.251,870.784C574.692,861.26 589.607,851.055 604.042,840.141C603.044,838.346 601.979,836.589 600.85,834.85C597.189,829.23 592.855,823.932 587.919,819.122C586.945,818.172 600.574,814.408 600.386,810.61C600.198,806.812 590.478,796.283 586.79,796.336C583.102,796.387 579.354,811.73 578.259,810.923C574.785,808.365 571.101,806.029 567.222,803.956C566.57,803.607 565.917,803.268 565.262,802.939C555.733,798.145 545.995,795.401 536.579,794.559C532.703,794.212 528.882,794.188 525.152,794.475C511.813,795.503 499.642,800.517 490.331,809.043C485.738,813.248 481.841,818.307 478.842,824.163C477.957,825.892 468.443,817.283 465.711,819.555C462.979,821.827 461.171,834.325 462.447,837.794C463.724,841.263 473.745,838.346 473.369,840.38C472.357,845.865 472.082,851.496 472.489,857.156C473.567,872.137 479.432,887.284 489.067,900.332\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M607.274,660.527C597.084,675.107 587.224,687.438 577.665,697.697C576.401,699.054 573.631,683.179 570.015,682.844C566.399,682.51 556.485,691.418 555.969,695.692C555.453,699.965 567.963,707.507 566.915,708.485C550.583,723.724 535.123,732.837 520.353,736.781C522.207,743.382 524.061,749.984 525.915,756.586C526.363,758.182 538.577,748.404 542.543,750.309C546.508,752.214 551.789,764.511 549.708,768.014C547.626,771.517 529.553,769.542 530.055,771.329C532.23,779.072 534.404,786.816 536.579,794.559C545.995,795.401 555.733,798.145 565.262,802.939C575.941,779.645 587.274,760.952 599.127,745.929C600.254,744.501 604.344,759.64 608.096,759.033C611.849,758.426 621.536,746.348 621.64,742.288C621.745,738.228 607.846,735.622 608.722,734.673C621.738,720.575 635.314,710.422 649.285,703.061C641.286,695.577 633.551,688.05 626.116,680.489C619.597,673.859 613.308,667.203 607.274,660.527\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M649.285,703.061C642.225,706.781 635.265,711.214 628.428,716.509C621.736,721.691 615.16,727.7 608.722,734.673C607.846,735.622 621.745,738.228 621.64,742.288C621.536,746.348 611.849,758.426 608.096,759.033C604.344,759.64 600.254,744.501 599.127,745.929C587.274,760.952 575.941,779.645 565.262,802.939C565.917,803.268 566.57,803.607 567.222,803.956C571.101,806.029 574.785,808.365 578.259,810.923C579.354,811.73 583.102,796.387 586.79,796.336C590.478,796.283 600.198,806.812 600.386,810.61C600.574,814.408 586.945,818.172 587.919,819.122C592.855,823.932 597.189,829.23 600.85,834.85C608.827,828.818 616.596,822.557 624.132,816.06C625.781,814.637 616.22,808.677 617.824,804.652C619.429,800.627 630.24,792.236 633.757,791.912C637.263,791.59 637.306,804.242 638.929,802.71C641.763,800.033 644.594,797.29 647.421,794.483C653.765,788.185 660.09,781.566 666.393,774.647C667.554,773.373 656.685,770.952 656.97,767.148C657.254,763.345 664.901,752.403 668.099,751.823C671.297,751.245 675.199,764.775 676.158,763.671C682.125,756.806 688.073,749.68 693.995,742.312C685.636,735.387 677.457,728.412 669.489,721.392C667.009,719.207 664.549,717.017 662.11,714.823C657.766,710.915 653.489,706.994 649.285,703.061\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M647.421,794.483C652.289,806.144 657.988,816.632 664.468,826.016C665.435,827.417 672.478,813.865 675.969,814.042C679.459,814.22 685.965,823.288 685.413,827.08C684.86,830.872 671.877,835.871 672.651,836.791C682.092,848.11 692.88,857.524 704.898,865.189C713.659,851.782 727.24,831.955 727.334,831.816C731.103,826.439 734.967,821.042 738.908,815.623C739.676,814.569 731.299,812.368 731.424,809.933C731.558,807.498 737.443,801.419 739.684,801.014C741.925,800.61 744.143,808.479 744.864,807.505C748.853,802.126 752.912,796.729 757.058,791.312C752.215,787.758 747.395,784.184 742.615,780.591C735.029,774.893 727.53,769.148 720.14,763.361C718.808,762.314 715.085,776.404 711.48,777.135C707.87,777.866 698.759,771.398 698.491,767.748C698.223,764.096 711.057,756.181 709.866,755.23C704.513,750.946 699.218,746.639 693.995,742.312C688.073,749.68 682.125,756.806 676.158,763.671C675.199,764.775 671.297,751.245 668.099,751.823C664.901,752.403 657.254,763.345 656.97,767.148C656.685,770.952 667.554,773.373 666.393,774.647C660.09,781.566 653.765,788.185 647.421,794.483\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M647.421,794.483C652.289,806.144 657.988,816.632 664.468,826.016C665.435,827.417 672.478,813.865 675.969,814.042C679.459,814.22 685.965,823.288 685.413,827.08C684.86,830.872 671.877,835.871 672.651,836.791C682.092,848.11 692.88,857.524 704.898,865.189C703.639,867.122 702.479,868.916 701.474,870.499C698.478,875.229 695.553,879.931 692.702,884.624C691.97,885.83 684.229,874.483 681.25,875.533C678.271,876.591 674,887.615 674.829,890.937C675.658,894.259 686.928,894.259 686.226,895.455C682.043,902.578 678.032,909.664 674.196,916.694C669.802,924.764 665.637,932.779 661.709,940.73C653.498,934.473 645.287,928.206 637.076,921.939C636.125,921.212 635.299,934.988 631.829,935.623C628.359,936.267 616.927,929.237 616.259,925.777C615.591,922.317 629.272,915.985 627.823,914.881C621.976,910.418 616.253,905.642 610.404,901.179C617.875,881.91 614.844,859.511 604.042,840.141C603.044,838.346 601.979,836.589 600.85,834.85C608.827,828.818 616.596,822.557 624.132,816.06C625.781,814.637 616.22,808.677 617.824,804.652C619.429,800.627 630.24,792.236 633.757,791.912C637.263,791.59 637.306,804.242 638.929,802.71C641.763,800.033 644.594,797.29 647.421,794.483\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M529.804,931.418C526.391,930.129 522.984,928.583 519.608,926.78C509.454,921.35 500.63,914.127 493.443,905.808C511.971,897.369 529.793,888.158 546.97,878.146C548.554,877.226 536.109,867.057 537.232,862.999C538.355,858.932 550.04,852.463 553.71,853.76C557.38,855.058 558.147,871.465 559.251,870.784C574.692,861.26 589.607,851.055 604.042,840.141C614.844,859.511 617.875,881.91 610.404,901.179C606.3,911.762 599.508,920.163 590.982,926.108C589.474,927.157 587.91,928.132 586.297,929.025C584.476,930.037 583.834,915.535 580.653,914.255C577.473,912.967 568.465,917.992 567.218,921.332C565.97,924.672 574.42,933.976 573.17,934.307C559.919,937.859 544.793,937.086 529.804,931.418\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M521.764,1006.27C533.136,1006.7 541.407,1018.98 548.7,1031.88C560.09,1016.92 569.573,1003.07 576.85,990.349C577.876,988.554 566.161,985.803 565.92,982.122C565.678,978.441 572.394,969.147 575.4,968.254C578.405,967.371 583.29,978.211 583.953,976.812C593.554,956.503 596.392,939.552 590.982,926.108C589.474,927.157 587.91,928.132 586.297,929.025C584.476,930.037 583.834,915.535 580.653,914.255C577.473,912.967 568.465,917.992 567.218,921.332C565.97,924.672 574.42,933.976 573.17,934.307C559.919,937.859 544.793,937.086 529.804,931.418C528.615,939.562 527.518,947.724 526.52,955.923C526.323,957.543 535.916,952.592 537.189,955.389C538.463,958.196 536.21,970.278 534.161,972.745C532.111,975.211 525.049,968.696 524.892,970.177C523.615,982.14 522.563,994.168 521.764,1006.27\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M521.764,1006.27C505.276,1006.2 490.353,1002.46 477.352,994.186C465.319,986.539 454.933,975.008 446.476,958.941C446.126,958.27 440.592,971.079 438.051,970.278C435.511,969.478 430.445,957.276 431.233,954.119C432.023,950.972 443.264,952.417 442.785,951.359C439.048,943.068 435.756,933.727 432.939,923.274C439.743,920.78 446.511,918.203 453.235,915.544C455.349,914.706 445.831,907.446 447.599,904.133C449.367,900.829 460.294,894.885 463.843,895.722C467.391,896.56 467.221,909.857 468.892,909.157C475.671,906.305 482.398,903.369 489.067,900.332C490.449,902.201 491.909,904.023 493.443,905.808C500.63,914.127 509.454,921.35 519.608,926.78C522.984,928.583 526.391,930.129 529.804,931.418C528.615,939.562 527.518,947.724 526.52,955.923C526.323,957.543 535.916,952.592 537.189,955.389C538.463,958.196 536.21,970.278 534.161,972.745C532.111,975.211 525.049,968.696 524.892,970.177C523.615,982.14 522.563,994.168 521.764,1006.27\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M477.352,994.186C475.452,999.017 473.412,1003.72 471.216,1008.29C470.604,1009.57 465.869,1001.07 463.183,1002.05C460.498,1003.03 454.63,1011.44 455.101,1014.15C455.572,1016.88 466.486,1017.5 466.01,1018.35C452.971,1041.73 435.139,1061.09 410.152,1074.45C409.352,1071.01 408.586,1067.55 407.853,1064.07C405.964,1055.1 404.296,1046.03 402.857,1036.85C402.633,1035.41 416.063,1037.34 418.166,1034.56C420.268,1031.77 418.371,1022.19 415.469,1020.11C412.568,1018.04 400.911,1023.3 400.756,1022.11C400.169,1017.53 399.638,1012.93 399.162,1008.3C398.071,997.683 397.277,986.916 396.786,975.993C396.73,974.723 410.733,980.511 413.133,978.091C415.534,975.671 413.976,963.607 411.188,961.472C408.399,959.328 396.437,966.515 396.404,965.245C396.148,955.555 396.128,945.745 396.351,935.807C408.633,931.878 420.843,927.709 432.939,923.274C435.756,933.727 439.048,943.068 442.785,951.359C443.264,952.417 432.023,950.972 431.233,954.119C430.445,957.276 435.511,969.478 438.051,970.278C440.592,971.079 446.126,958.27 446.476,958.941C454.933,975.008 465.319,986.539 477.352,994.186\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M330.026,1031.83C336.961,1029.73 343.958,1027.53 351.01,1025.22C353.166,1024.52 344.138,1014.35 346.462,1011.21C348.786,1008.07 361.563,1004.93 364.954,1006.38C368.344,1007.83 365.274,1020.45 366.804,1019.92C377.473,1016.26 388.263,1012.38 399.162,1008.3C398.071,997.683 397.277,986.916 396.786,975.993C396.73,974.723 410.733,980.511 413.133,978.091C415.534,975.671 413.976,963.607 411.188,961.472C408.399,959.328 396.437,966.515 396.404,965.245C396.148,955.555 396.128,945.745 396.351,935.807C387.466,938.65 378.544,941.365 369.6,943.96C367.256,944.632 374.779,955.399 372.222,959.144C369.666,962.889 357.308,968.162 354.263,966.432C351.219,964.693 356.352,948.092 353.956,948.736C345.133,951.092 329.816,954.736 320.991,956.88C321.649,964.012 321.518,970.904 321.329,977.778C321.26,980.281 312.378,971.576 310.282,974.852C308.187,978.128 306.928,993.753 308.752,997.416C310.576,1001.08 321.138,994.894 321.226,996.827C321.727,1007.8 323.728,1019.19 330.026,1031.83\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M242.819,1052.66C251.136,1051.3 259.586,1049.7 268.158,1047.89C270.322,1047.43 261.393,1038.86 263.984,1035.71C266.701,1032.42 280.966,1026.71 284.459,1028.11C287.952,1029.5 283.429,1044.47 284.94,1044.11C292.975,1042.18 301.111,1040.09 309.34,1037.81C316.172,1035.94 323.068,1033.94 330.026,1031.83C323.728,1019.19 321.727,1007.8 321.226,996.827C321.138,994.894 310.576,1001.08 308.752,997.416C306.928,993.753 308.187,978.128 310.282,974.852C312.378,971.576 321.26,980.281 321.329,977.778C321.518,970.904 321.649,964.012 320.991,956.88C314.498,958.454 308.009,959.972 301.53,961.444C290.482,963.947 279.463,966.285 268.502,968.484C267.27,968.733 272.165,955.555 268.6,953.889C265.036,952.233 250.064,955.518 247.116,958.518C244.168,961.518 253.748,971.364 250.911,971.898C241.882,973.6 232.905,975.192 223.994,976.711C225.256,983.585 226.619,990.422 228.088,997.213C228.344,998.4 237.584,990.275 240.275,991.683C242.966,993.1 245.83,1002.85 244.235,1005.71C242.639,1008.56 230.399,1007.51 230.701,1008.8C234.191,1023.61 238.209,1038.24 242.819,1052.66\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M250.287,1074.41C244.862,1076.79 237.201,1080.15 228.245,1082.66C227.124,1082.98 228.953,1068.43 225.934,1066.16C222.915,1063.88 211.936,1065.83 210.132,1069.04C208.327,1072.24 217.092,1085.13 215.106,1085.4C205.512,1086.68 195.119,1086.36 184.771,1082.81C185.977,1075.14 185.649,1067.46 183.905,1059.78C183.727,1059 193.718,1060.4 194.717,1058.11C195.716,1055.84 192.155,1047.38 189.899,1046.13C187.643,1044.89 181.621,1051.87 181.179,1050.67C179.317,1045.64 176.866,1040.61 173.862,1035.59C182.968,1029.76 187.98,1020.45 187.335,1006.53C187.279,1005.33 195.965,1009.64 197.588,1007.36C199.211,1005.09 199.025,994.821 197.077,992.898C195.128,990.965 186.138,996.946 185.897,995.805C185.073,991.904 183.899,987.726 182.353,983.244C196.019,981.266 209.922,979.094 223.994,976.711C225.256,983.585 226.619,990.422 228.088,997.213C228.344,998.4 237.584,990.275 240.275,991.683C242.966,993.1 245.83,1002.85 244.235,1005.71C242.639,1008.56 230.399,1007.51 230.701,1008.8C234.191,1023.61 238.209,1038.24 242.819,1052.66C245.154,1059.96 247.641,1067.21 250.287,1074.41\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M173.862,1035.59C167.418,1039.7 159.428,1040.14 149.677,1040.24C148.491,1040.25 153.877,1026.08 151.509,1023.58C149.143,1021.07 137.459,1022.42 135.475,1025.22C133.49,1028.01 140.848,1040.33 139.6,1040.35C132.557,1040.5 124.752,1040.96 116.127,1042.62C113.746,1035.13 111.095,1028.21 108.184,1021.82C104.69,1014.06 104.616,1005.47 105.4,992.879C110.324,992.345 115.306,991.802 120.34,991.223C121.43,991.103 115.42,979.315 116.885,976.619C118.35,973.923 127.18,972.781 129.131,975.054C131.082,977.327 127.79,990.367 128.591,990.275C134.183,989.612 139.837,988.931 145.546,988.214C157.584,986.704 169.87,985.057 182.353,983.244C183.899,987.726 185.073,991.904 185.897,995.805C186.138,996.946 195.128,990.965 197.077,992.898C199.025,994.821 199.211,1005.09 197.588,1007.36C195.965,1009.64 187.279,1005.33 187.335,1006.53C187.98,1020.45 182.968,1029.76 173.862,1035.59\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M0.476,1099.44C19.11,1099.6 21.937,1077.12 40.478,1055.84C41.564,1054.59 30.716,1052.67 31.353,1048.95C31.991,1045.22 41.385,1033.74 44.299,1033.49C47.212,1033.23 48.003,1048.15 48.835,1047.41C61.305,1036.42 79.479,1026.67 108.184,1021.82C104.69,1014.06 104.616,1005.47 105.4,992.879C100.69,993.385 96.032,993.873 91.429,994.333C84.748,995.014 78.184,995.658 71.75,996.266C70.514,996.385 75.656,985.389 72.542,982.72C69.423,980.051 55.786,977.732 53.031,980.226C50.277,982.729 58.515,997.499 56.018,997.719C35.935,999.523 17.296,1001.02 0.476,1002.38L0.476,1099.44\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M89.78,947.19C74.98,946.942 60.18,946.693 45.38,946.445C43.665,946.417 50.342,932.881 47.419,930.028C44.495,927.175 30.76,926.66 27.84,929.347C24.92,932.043 31.786,946.215 29.897,946.187C20.09,946.021 10.283,945.856 0.476,945.69L0.476,1002.38C17.296,1001.02 35.935,999.523 56.018,997.719C58.515,997.499 50.277,982.729 53.031,980.226C55.786,977.732 69.423,980.051 72.542,982.72C75.656,985.389 70.514,996.385 71.75,996.266C78.184,995.658 84.748,995.014 91.429,994.333C96.032,993.873 100.69,993.385 105.4,992.879C110.324,992.345 115.306,991.802 120.34,991.223C121.43,991.103 115.42,979.315 116.885,976.619C118.35,973.923 127.18,972.781 129.131,975.054C131.082,977.327 127.79,990.367 128.591,990.275C134.183,989.612 139.837,988.931 145.546,988.214C141.652,974.861 138.682,961.454 136.675,947.982C121.044,947.715 105.411,947.457 89.78,947.19\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M108.184,1021.82C79.479,1026.67 61.305,1036.42 48.835,1047.41C48.003,1048.15 47.212,1033.23 44.299,1033.49C41.385,1033.74 31.991,1045.22 31.353,1048.95C30.716,1052.67 41.564,1054.59 40.478,1055.84C21.937,1077.12 19.11,1099.6 0.476,1099.44L0.476,1138.55C8.147,1137.14 15.383,1136.25 22.165,1135.89C23.362,1135.83 18.663,1127.77 20.421,1126.08C22.18,1124.4 30.879,1124.19 32.717,1125.81C34.555,1127.41 30.453,1135.72 31.451,1135.73C41.457,1135.96 50.32,1137.54 57.97,1140.53C56.827,1115.77 61.36,1098.01 70.051,1085.38C70.916,1084.13 73.053,1095.09 75.747,1094.73C78.44,1094.36 85.793,1086.33 86.212,1083.2C86.63,1080.08 77.194,1076.95 78.257,1075.98C89.125,1066.1 103.711,1060.82 120.509,1058.27C119.169,1052.8 117.707,1047.59 116.127,1042.62C113.746,1035.13 111.095,1028.21 108.184,1021.82\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M120.509,1058.27C103.711,1060.82 89.125,1066.1 78.257,1075.98C77.194,1076.95 86.63,1080.08 86.212,1083.2C85.793,1086.33 78.44,1094.36 75.747,1094.73C73.053,1095.09 70.916,1084.13 70.051,1085.38C61.36,1098.01 56.827,1115.77 57.97,1140.53C71.209,1145.71 78.433,1152.1 92.845,1155.31C96.344,1149 100.372,1143.4 104.779,1138.62C105.902,1137.41 94.161,1130.77 95.231,1127.52C96.301,1124.27 108.03,1118.7 111.2,1119.12C114.372,1119.56 113.234,1130.85 114.258,1130.09C119.225,1126.44 124.483,1123.76 129.872,1122.21C128.936,1108.85 127.562,1096.4 125.765,1084.86C125.601,1083.81 117.593,1091.8 115.612,1089.91C113.63,1088 112.493,1076.12 113.873,1073.46C115.253,1070.8 124.106,1075.08 123.892,1073.95C122.867,1068.51 121.739,1063.29 120.509,1058.27\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M184.771,1082.81C185.977,1075.14 185.649,1067.46 183.905,1059.78C183.727,1059 193.718,1060.4 194.717,1058.11C195.716,1055.84 192.155,1047.38 189.899,1046.13C187.643,1044.89 181.621,1051.87 181.179,1050.67C179.317,1045.64 176.866,1040.61 173.862,1035.59C167.418,1039.7 159.428,1040.14 149.677,1040.24C148.491,1040.25 153.877,1026.08 151.509,1023.58C149.143,1021.07 137.459,1022.42 135.475,1025.22C133.49,1028.01 140.848,1040.33 139.6,1040.35C132.557,1040.5 124.752,1040.96 116.127,1042.62C117.707,1047.59 119.169,1052.8 120.509,1058.27C121.739,1063.29 122.867,1068.51 123.892,1073.95C124.106,1075.08 115.253,1070.8 113.873,1073.46C112.493,1076.12 113.63,1088 115.612,1089.91C117.593,1091.8 125.601,1083.81 125.765,1084.86C127.562,1096.4 128.936,1108.85 129.872,1122.21C136.983,1120.15 144.326,1120.03 151.531,1122.19C154.758,1123.15 157.822,1124.54 160.708,1126.28C174.735,1111.81 182.491,1097.32 184.771,1082.81\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M250.287,1074.41C244.862,1076.79 237.201,1080.15 228.245,1082.66C227.124,1082.98 228.953,1068.43 225.934,1066.16C222.915,1063.88 211.936,1065.83 210.132,1069.04C208.327,1072.24 217.092,1085.13 215.106,1085.4C205.512,1086.68 195.119,1086.36 184.771,1082.81C182.491,1097.32 174.735,1111.81 160.708,1126.28C166.237,1129.65 171.109,1134.37 175.207,1140.14C175.926,1141.15 181.164,1131.7 183.793,1132.14C186.421,1132.59 191.607,1140.13 190.977,1142.79C190.348,1145.44 179.455,1146.98 180.014,1148.07C183.609,1155.01 186.291,1162.97 187.927,1171.59C194.697,1169.47 201.25,1167.34 207.629,1165.16C208.972,1164.71 202.37,1158 203.675,1155.3C204.98,1152.59 213.13,1147.87 215.457,1148.94C217.785,1150 216.444,1162.11 217.64,1161.68C224.507,1159.24 231.153,1156.76 237.6,1154.25C252.082,1148.61 265.557,1142.81 278.271,1136.9C273.862,1128.68 269.719,1120.36 265.827,1111.96C264.763,1109.65 256.487,1121.71 253.075,1119.79C249.662,1117.85 244.556,1104.7 245.354,1100.37C246.152,1096.04 258.679,1095.76 257.862,1093.79C255.202,1087.38 252.679,1080.92 250.287,1074.41\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M309.34,1037.81C301.111,1040.09 292.975,1042.18 284.94,1044.11C283.429,1044.47 287.952,1029.5 284.459,1028.11C280.966,1026.71 266.701,1032.42 263.984,1035.71C261.393,1038.86 270.322,1047.43 268.158,1047.89C259.586,1049.7 251.136,1051.3 242.819,1052.66C245.154,1059.96 247.641,1067.21 250.287,1074.41C252.679,1080.92 255.202,1087.38 257.862,1093.79C258.679,1095.76 246.152,1096.04 245.354,1100.37C244.556,1104.7 249.662,1117.85 253.075,1119.79C256.487,1121.71 264.763,1109.65 265.827,1111.96C269.719,1120.36 273.862,1128.68 278.271,1136.9C282.132,1135.11 285.924,1133.31 289.652,1131.48C293.09,1129.81 296.473,1128.12 299.809,1126.44C301.454,1125.6 289.913,1117.59 291.627,1113.77C293.342,1109.94 306.813,1102.38 310.094,1103.5C313.376,1104.62 310.284,1121.02 311.317,1120.48C317.432,1117.25 323.397,1113.99 329.247,1110.72C324.465,1099.05 320.358,1087.92 317.134,1077.48C316.498,1075.42 329.665,1078.62 330.649,1075.14C331.633,1071.66 325.99,1058.79 323.036,1056.61C320.083,1054.44 313.354,1063.93 312.931,1062.12C310.874,1053.35 309.626,1045.2 309.34,1037.81\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M330.026,1031.83C323.068,1033.94 316.172,1035.94 309.34,1037.81C309.626,1045.2 310.874,1053.35 312.931,1062.12C313.354,1063.93 320.083,1054.44 323.036,1056.61C325.99,1058.79 331.633,1071.66 330.649,1075.14C329.665,1078.62 316.498,1075.42 317.134,1077.48C320.358,1087.92 324.465,1099.05 329.247,1110.72C335.915,1106.99 342.435,1103.23 348.862,1099.47C352.084,1097.57 355.283,1095.69 358.465,1093.79C359.74,1093.03 349.795,1085.64 351.127,1082.2C352.459,1078.75 363.326,1072.35 366.456,1073.14C369.586,1073.92 368.485,1087.78 369.906,1086.93C371.358,1086.05 372.809,1085.18 374.259,1084.29C385.422,1077.55 396.518,1070.79 407.853,1064.07C405.964,1055.1 404.296,1046.03 402.857,1036.85C402.633,1035.41 416.063,1037.34 418.166,1034.56C420.268,1031.77 418.371,1022.19 415.469,1020.11C412.568,1018.04 400.911,1023.3 400.756,1022.11C400.169,1017.53 399.638,1012.93 399.162,1008.3C388.263,1012.38 377.473,1016.26 366.804,1019.92C365.274,1020.45 368.344,1007.83 364.954,1006.38C361.563,1004.93 348.786,1008.07 346.462,1011.21C344.138,1014.35 353.166,1024.52 351.01,1025.22C343.958,1027.53 336.961,1029.73 330.026,1031.83\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M521.764,1006.27C520.255,1029.11 519.648,1052.21 520.138,1075.64C520.166,1077 508.771,1072.02 505.976,1074.27C503.181,1076.53 500.954,1087.05 503.368,1089.15C505.781,1091.26 520.415,1085.71 520.458,1086.92C520.622,1091.45 520.827,1096.01 521.076,1100.57C511.095,1101.51 501.28,1102.65 491.653,1104.01C487.267,1104.63 482.921,1105.29 478.617,1106C477.511,1106.19 482.55,1092.43 480.167,1089.8C477.783,1087.17 466.065,1087.27 464.314,1090.23C462.563,1093.19 470.73,1107.37 469.66,1107.58C453.307,1110.59 437.586,1114.35 422.622,1119C420.518,1112.6 418.533,1106.14 416.669,1099.62C416.37,1098.58 432.821,1100.01 434.729,1097.11C436.638,1094.2 431.596,1083.48 428.121,1082.21C424.645,1080.93 414.162,1090.55 413.876,1089.47C412.564,1084.5 411.323,1079.49 410.152,1074.45C435.139,1061.09 452.971,1041.73 466.01,1018.35C466.486,1017.5 455.572,1016.88 455.101,1014.15C454.63,1011.44 460.498,1003.03 463.183,1002.05C465.869,1001.07 470.604,1009.57 471.216,1008.29C473.412,1003.72 475.452,999.017 477.352,994.186C490.353,1002.46 505.276,1006.2 521.764,1006.27\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M521.764,1006.27C520.255,1029.11 519.648,1052.21 520.138,1075.64C520.166,1077 508.771,1072.02 505.976,1074.27C503.181,1076.53 500.954,1087.05 503.368,1089.15C505.781,1091.26 520.415,1085.71 520.458,1086.92C520.622,1091.45 520.827,1096.01 521.076,1100.57C530.735,1099.66 540.55,1098.92 550.499,1098.36C559.147,1097.87 567.896,1097.49 576.734,1097.21C578.107,1097.18 573.14,1107.5 575.43,1109.83C577.72,1112.16 588.39,1113.35 590.477,1111.19C592.563,1109.04 586.982,1096.95 587.945,1096.93C597.209,1096.74 606.563,1096.64 615.991,1096.64C616.42,1089.21 617.148,1081.71 618.169,1074.13C618.387,1072.52 626.632,1077.72 628.909,1074.95C631.185,1072.18 633.22,1060.16 631.828,1057.53C630.435,1054.88 620.199,1061.1 620.555,1059.14C624.936,1035.2 632.134,1010.59 641.952,985.37C630.768,975.496 620.862,984.974 611.894,1000.09C611.059,1001.5 622.034,1002.05 622.497,1004.94C622.958,1007.83 617.419,1016.39 614.665,1017.4C611.911,1018.42 606.541,1009.88 605.973,1011.01C597.909,1026.97 590.608,1045.2 583.786,1054.23C569.085,1073.69 560.084,1052.02 548.7,1031.88C541.407,1018.98 533.136,1006.7 521.764,1006.27\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M661.709,940.73C653.498,934.473 645.287,928.206 637.076,921.939C636.125,921.212 635.299,934.988 631.829,935.623C628.359,936.267 616.927,929.237 616.259,925.777C615.591,922.317 629.272,915.985 627.823,914.881C621.976,910.418 616.253,905.642 610.404,901.179C606.3,911.762 599.508,920.163 590.982,926.108C596.392,939.552 593.554,956.503 583.953,976.812C583.29,978.211 578.405,967.371 575.4,968.254C572.394,969.147 565.678,978.441 565.92,982.122C566.161,985.803 577.876,988.554 576.85,990.349C569.573,1003.07 560.09,1016.92 548.7,1031.88C560.084,1052.02 569.085,1073.69 583.786,1054.23C590.608,1045.2 597.909,1026.97 605.973,1011.01C606.541,1009.88 611.911,1018.42 614.665,1017.4C617.419,1016.39 622.958,1007.83 622.497,1004.94C622.034,1002.05 611.059,1001.5 611.894,1000.09C620.862,984.974 630.768,975.496 641.952,985.37C647.664,970.702 654.262,955.813 661.709,940.73\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M548.464,1235.41C559.019,1222.12 568.667,1210.01 580.574,1201.07C581.908,1200.08 582.411,1211.67 585.381,1212.03C588.352,1212.39 597.453,1206.14 598.396,1203.21C599.34,1200.28 590.024,1194.97 591.042,1194.43C600.837,1189.31 612.307,1186.19 626.687,1185.87C625.691,1182.75 624.762,1179.61 623.902,1176.45C621.552,1167.84 619.706,1159.1 618.353,1150.26C618.047,1148.25 608.189,1155.08 605.887,1151.7C603.586,1148.31 602.83,1133.46 604.543,1129.95C606.256,1126.43 616.328,1132.89 616.166,1130.61C615.637,1123.13 615.44,1115.56 615.568,1107.92C615.631,1104.18 615.772,1100.42 615.991,1096.64C606.563,1096.64 597.209,1096.74 587.945,1096.93C586.982,1096.95 592.563,1109.04 590.477,1111.19C588.39,1113.35 577.72,1112.16 575.43,1109.83C573.14,1107.5 578.107,1097.18 576.734,1097.21C567.896,1097.49 559.147,1097.87 550.499,1098.36C555.137,1120.34 557.666,1140.28 554.531,1159.99C554.218,1161.96 546.452,1154.97 543.527,1156.2C540.601,1157.43 535.801,1164.04 536.979,1167.38C538.156,1170.71 551.034,1174.89 550.595,1176.22C546.534,1188.53 539.891,1200.94 529.804,1213.91C536.096,1219.81 542.338,1227.07 548.464,1235.41\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M498.745,1196.83C501.484,1176.44 499.963,1158.67 497.203,1139.66C497.042,1138.55 510.582,1142.19 512.258,1139.62C513.934,1137.04 510.08,1126.21 507.26,1124.19C504.44,1122.19 495.547,1128.86 495.341,1127.57C494.144,1120.08 492.86,1112.3 491.653,1104.01C501.28,1102.65 511.095,1101.51 521.076,1100.57C530.735,1099.66 540.55,1098.92 550.499,1098.36C555.137,1120.34 557.666,1140.28 554.531,1159.99C554.218,1161.96 546.452,1154.97 543.527,1156.2C540.601,1157.43 535.801,1164.04 536.979,1167.38C538.156,1170.71 551.034,1174.89 550.595,1176.22C546.534,1188.53 539.891,1200.94 529.804,1213.91C525.714,1210.06 521.603,1206.79 517.49,1204.16C516.589,1203.58 526.361,1194.6 525.625,1191.59C524.889,1188.59 515.761,1184.77 513.075,1186.15C510.389,1187.53 510.394,1200.26 509.508,1199.87C505.909,1198.32 502.317,1197.29 498.745,1196.83\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M491.653,1104.01C492.86,1112.3 494.144,1120.08 495.341,1127.57C495.547,1128.86 504.44,1122.19 507.26,1124.19C510.08,1126.21 513.934,1137.04 512.258,1139.62C510.582,1142.19 497.042,1138.55 497.203,1139.66C499.963,1158.67 501.484,1176.44 498.745,1196.83C486.853,1195.3 475.179,1200.1 464.178,1212.96C458.027,1202.02 452.254,1190.89 446.878,1179.56C442.673,1170.71 438.71,1161.73 434.997,1152.62C434.546,1151.52 422.218,1160.85 418.671,1159.51C415.125,1158.18 411.854,1147.95 413.718,1144.61C415.581,1141.27 430.494,1141.2 429.85,1139.5C428.567,1136.08 427.318,1132.66 426.104,1129.22C424.91,1125.82 423.749,1122.42 422.622,1119C437.586,1114.35 453.307,1110.59 469.66,1107.58C470.73,1107.37 462.563,1093.19 464.314,1090.23C466.065,1087.27 477.783,1087.17 480.167,1089.8C482.55,1092.43 477.511,1106.19 478.617,1106C482.921,1105.29 487.267,1104.63 491.653,1104.01\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M307.883,1168.28C315.623,1164.44 323.094,1161.05 330.298,1158.03C331.58,1157.5 331.007,1170.97 334.116,1172.07C337.226,1173.16 347.694,1167.69 348.956,1164.6C350.219,1161.5 340.455,1153.94 341.69,1153.48C376.461,1140.23 404.507,1135.4 426.104,1129.22C424.91,1125.82 423.749,1122.42 422.622,1119C420.518,1112.6 418.533,1106.14 416.669,1099.62C416.37,1098.58 432.821,1100.01 434.729,1097.11C436.638,1094.2 431.596,1083.48 428.121,1082.21C424.645,1080.93 414.162,1090.55 413.876,1089.47C412.564,1084.5 411.323,1079.49 410.152,1074.45C409.352,1071.01 408.586,1067.55 407.853,1064.07C396.518,1070.79 385.422,1077.55 374.259,1084.29C372.809,1085.18 371.358,1086.05 369.906,1086.93C368.485,1087.78 369.586,1073.92 366.456,1073.14C363.326,1072.35 352.459,1078.75 351.127,1082.2C349.795,1085.64 359.74,1093.03 358.465,1093.79C355.283,1095.69 352.084,1097.57 348.862,1099.47C342.435,1103.23 335.915,1106.99 329.247,1110.72C323.397,1113.99 317.432,1117.25 311.317,1120.48C310.284,1121.02 313.376,1104.62 310.094,1103.5C306.813,1102.38 293.342,1109.94 291.627,1113.77C289.913,1117.59 301.454,1125.6 299.809,1126.44C296.473,1128.12 293.09,1129.81 289.652,1131.48C295.386,1144.57 301.486,1156.78 307.883,1168.28\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M426.104,1129.22C404.507,1135.4 376.461,1140.23 341.69,1153.48C340.455,1153.94 350.219,1161.5 348.956,1164.6C347.694,1167.69 337.226,1173.16 334.116,1172.07C331.007,1170.97 331.58,1157.5 330.298,1158.03C323.094,1161.05 315.623,1164.44 307.883,1168.28C309.004,1170.3 310.134,1172.29 311.274,1174.26C311.8,1175.17 300.251,1173.8 299.509,1176.14C298.766,1178.48 304.234,1187.54 306.817,1188.29C309.4,1189.03 314.684,1180.07 315.007,1180.6C320.117,1189.12 325.388,1197.26 330.787,1205.08C334.545,1204 338.372,1202.95 342.255,1201.93C343.807,1201.53 341.118,1217.15 343.733,1218.89C346.347,1220.63 356.154,1215.7 357.941,1212.36C359.729,1209.03 353.13,1199.21 354.459,1198.9C362.019,1197.1 369.744,1195.39 377.562,1193.75C400.491,1188.91 424.213,1184.55 446.878,1179.56C442.673,1170.71 438.71,1161.73 434.997,1152.62C434.546,1151.52 422.218,1160.85 418.671,1159.51C415.125,1158.18 411.854,1147.95 413.718,1144.61C415.581,1141.27 430.494,1141.2 429.85,1139.5C428.567,1136.08 427.318,1132.66 426.104,1129.22\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M237.6,1154.25C239.434,1162.01 241.628,1169.9 244.164,1177.93C244.54,1179.11 252.653,1168.1 255.456,1169C258.258,1169.91 262.272,1180.1 260.982,1183.37C259.691,1186.63 247.2,1187.15 247.712,1188.61C252.953,1203.68 259.334,1219.2 266.738,1235.11C272.011,1230.71 278.012,1226.74 284.614,1223.13C285.473,1222.66 277.121,1214.95 278.14,1211.98C279.158,1209.01 288.164,1204.2 290.726,1205.31C293.288,1206.43 292.335,1219.19 293.51,1218.65C298.085,1216.51 302.888,1214.51 307.885,1212.63C315.144,1209.89 322.813,1207.39 330.787,1205.08C325.388,1197.26 320.117,1189.12 315.007,1180.6C314.684,1180.07 309.4,1189.03 306.817,1188.29C304.234,1187.54 298.766,1178.48 299.509,1176.14C300.251,1173.8 311.8,1175.17 311.274,1174.26C310.134,1172.29 309.004,1170.3 307.883,1168.28C301.486,1156.78 295.386,1144.57 289.652,1131.48C285.924,1133.31 282.132,1135.11 278.271,1136.9C265.557,1142.81 252.082,1148.61 237.6,1154.25\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M184.843,1225.55C189.99,1229.52 195.317,1233.17 200.819,1236.5C201.699,1237.04 199.501,1223.58 201.55,1222.26C203.598,1220.94 211.986,1225.47 213.109,1228.56C214.232,1231.65 207.459,1240.34 208.285,1240.78C220.997,1247.64 234.588,1252.93 249.017,1256.72C252.48,1249.93 257.188,1243.9 262.938,1238.48C264.158,1237.33 265.425,1236.2 266.738,1235.11C259.334,1219.2 252.953,1203.68 247.712,1188.61C247.2,1187.15 259.691,1186.63 260.982,1183.37C262.272,1180.1 258.258,1169.91 255.456,1169C252.653,1168.1 244.54,1179.11 244.164,1177.93C241.628,1169.9 239.434,1162.01 237.6,1154.25C231.153,1156.76 224.507,1159.24 217.64,1161.68C216.444,1162.11 217.785,1150 215.457,1148.94C213.13,1147.87 204.98,1152.59 203.675,1155.3C202.37,1158 208.972,1164.71 207.629,1165.16C201.25,1167.34 194.697,1169.47 187.927,1171.59C188.724,1175.79 189.273,1180.14 189.556,1184.62C190.212,1194.97 189.44,1205.93 187.043,1216.96C186.406,1219.9 185.67,1222.76 184.843,1225.55\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M189.556,1184.62C174.879,1190.19 159.308,1195.19 142.546,1199.41C140.964,1199.81 143.471,1187.62 140.352,1186.59C137.232,1185.56 125.657,1190.62 123.831,1193.28C122.005,1195.93 130.774,1202.2 129.395,1202.51C113.69,1205.94 96.951,1208.7 78.958,1210.64C78.958,1206.67 79.164,1202.64 79.588,1198.57C80.038,1194.21 80.736,1189.82 81.695,1185.41C82.928,1179.73 84.53,1174.32 86.448,1169.21C88.301,1164.27 90.449,1159.62 92.845,1155.31C96.344,1149 100.372,1143.4 104.779,1138.62C105.902,1137.41 94.161,1130.77 95.231,1127.52C96.301,1124.27 108.03,1118.7 111.2,1119.12C114.372,1119.56 113.234,1130.85 114.258,1130.09C119.225,1126.44 124.483,1123.76 129.872,1122.21C136.983,1120.15 144.326,1120.03 151.531,1122.19C154.758,1123.15 157.822,1124.54 160.708,1126.28C166.237,1129.65 171.109,1134.37 175.207,1140.14C175.926,1141.15 181.164,1131.7 183.793,1132.14C186.421,1132.59 191.607,1140.13 190.977,1142.79C190.348,1145.44 179.455,1146.98 180.014,1148.07C183.609,1155.01 186.291,1162.97 187.927,1171.59C188.724,1175.79 189.273,1180.14 189.556,1184.62\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M78.958,1210.64C96.951,1208.7 113.69,1205.94 129.395,1202.51C130.774,1202.2 122.005,1195.93 123.831,1193.28C125.657,1190.62 137.232,1185.56 140.352,1186.59C143.471,1187.62 140.964,1199.81 142.546,1199.41C159.308,1195.19 174.879,1190.19 189.556,1184.62C190.212,1194.97 189.44,1205.93 187.043,1216.96C186.406,1219.9 185.67,1222.76 184.843,1225.55C184.18,1227.78 183.458,1229.96 182.682,1232.1C178.322,1244.08 172.232,1254.41 165.075,1262.51C159.738,1268.55 153.807,1273.34 147.56,1276.63C146.272,1277.31 150.205,1262.83 148.209,1261.01C146.213,1259.21 137.401,1262.51 135.584,1265.77C133.766,1269.04 138.386,1280.32 137.303,1280.59C130.681,1282.23 123.885,1282.19 117.207,1280.18C116.203,1279.89 115.216,1279.55 114.244,1279.17C101.441,1274.16 91.449,1262.41 85.415,1246.97C84.998,1245.9 98.277,1247.07 99.75,1244.5C101.224,1241.93 97.202,1232.86 94.255,1231.53C91.309,1230.19 82.394,1237.77 82.07,1236.49C80.037,1228.45 78.958,1219.72 78.958,1210.64\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M57.97,1140.53C50.32,1137.54 41.457,1135.96 31.451,1135.73C30.453,1135.72 34.555,1127.41 32.717,1125.81C30.879,1124.19 22.18,1124.4 20.421,1126.08C18.663,1127.77 23.362,1135.83 22.165,1135.89C15.383,1136.25 8.147,1137.14 0.476,1138.55L0.476,1211.89C4.831,1211.27 9.133,1210.64 13.381,1210C14.468,1209.83 10.647,1196.75 12.481,1194.33C14.317,1191.9 22.65,1193.09 24.391,1195.46C26.132,1197.82 21.889,1208.69 22.927,1208.53C26.967,1207.9 30.959,1207.25 34.903,1206.61C39.869,1205.79 44.759,1204.96 49.574,1204.12C51.569,1203.78 45.001,1192.46 47.216,1190.02C49.432,1187.59 60.3,1187.56 62.867,1189.52C65.433,1191.49 61.179,1202.06 62.616,1201.79C68.386,1200.73 74.033,1199.65 79.588,1198.57C80.038,1194.21 80.736,1189.82 81.695,1185.41C82.928,1179.73 84.53,1174.32 86.448,1169.21C88.301,1164.27 90.449,1159.62 92.845,1155.31C78.433,1152.1 71.209,1145.71 57.97,1140.53\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M57.36,1311.75C47.469,1289.54 40.983,1269.24 37.384,1251.64C37.183,1250.65 49.09,1252.15 50.877,1249.58C52.665,1247.01 50.63,1237.35 48.11,1236.19C45.591,1235.04 35.935,1243.78 35.761,1242.66C33.527,1228.4 33.349,1216.21 34.903,1206.61C30.959,1207.25 26.967,1207.9 22.927,1208.53C21.889,1208.69 26.132,1197.82 24.391,1195.46C22.65,1193.09 14.317,1191.9 12.481,1194.33C10.647,1196.75 14.468,1209.83 13.381,1210C9.133,1210.64 4.831,1211.27 0.476,1211.89L0.476,1313.62C4.095,1313.83 7.634,1313.98 11.092,1314.08C12.311,1314.11 8.015,1303.31 9.475,1301.09C10.935,1298.86 18.003,1298.54 19.851,1300.73C21.699,1302.92 19.467,1314.22 20.562,1314.22C34.234,1314.23 46.518,1313.38 57.36,1311.75\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M34.903,1206.61C33.349,1216.21 33.527,1228.4 35.761,1242.66C35.935,1243.78 45.591,1235.04 48.11,1236.19C50.63,1237.35 52.665,1247.01 50.877,1249.58C49.09,1252.15 37.183,1250.65 37.384,1251.64C40.983,1269.24 47.469,1289.54 57.36,1311.75C68.079,1310.12 77.389,1307.73 85.241,1304.66C100.682,1298.61 110.479,1289.92 114.244,1279.17C101.441,1274.16 91.449,1262.41 85.415,1246.97C84.998,1245.9 98.277,1247.07 99.75,1244.5C101.224,1241.93 97.202,1232.86 94.255,1231.53C91.309,1230.19 82.394,1237.77 82.07,1236.49C80.037,1228.45 78.958,1219.72 78.958,1210.64C78.958,1206.67 79.164,1202.64 79.588,1198.57C74.033,1199.65 68.386,1200.73 62.616,1201.79C61.179,1202.06 65.433,1191.49 62.867,1189.52C60.3,1187.56 49.432,1187.59 47.216,1190.02C45.001,1192.46 51.569,1203.78 49.574,1204.12C44.759,1204.96 39.869,1205.79 34.903,1206.61\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M107.503,1355.45C105.227,1345.64 102.193,1336.52 98.532,1328.16C98.288,1327.61 91.452,1336.63 89.269,1336.13C87.085,1335.63 84.417,1327.65 85.43,1325.19C86.442,1322.73 95.798,1322.29 95.343,1321.39C92.298,1315.35 88.911,1309.77 85.241,1304.66C100.682,1298.61 110.479,1289.92 114.244,1279.17C115.216,1279.55 116.203,1279.89 117.207,1280.18C123.885,1282.19 130.681,1282.23 137.303,1280.59C138.386,1280.32 133.766,1269.04 135.584,1265.77C137.401,1262.51 146.213,1259.21 148.209,1261.01C150.205,1262.83 146.272,1277.31 147.56,1276.63C153.807,1273.34 159.738,1268.55 165.075,1262.51C172.012,1271.16 178.22,1280.07 183.646,1289.4C184.308,1290.53 174.706,1291.15 174.209,1294.27C173.713,1297.4 178.18,1307.27 180.67,1308.16C183.16,1309.04 188.594,1298.45 189.15,1299.55C196.3,1313.75 201.715,1328.99 205.227,1345.84C189.522,1347.57 174.127,1349.17 159.089,1350.65C157.704,1350.79 156.322,1350.93 154.942,1351.06C153.827,1351.17 156.645,1341.26 154.934,1339.86C153.222,1338.47 145.946,1340.69 144.675,1342.67C143.403,1344.66 148.064,1351.73 147.306,1351.8C139.888,1352.51 132.564,1353.2 125.337,1353.86C119.324,1354.41 113.378,1354.94 107.503,1355.45\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M205.227,1345.84C201.715,1328.99 196.3,1313.75 189.15,1299.55C188.594,1298.45 183.16,1309.04 180.67,1308.16C178.18,1307.27 173.713,1297.4 174.209,1294.27C174.706,1291.15 184.308,1290.53 183.646,1289.4C178.22,1280.07 172.012,1271.16 165.075,1262.51C172.232,1254.41 178.322,1244.08 182.682,1232.1C183.458,1229.96 184.18,1227.78 184.843,1225.55C189.99,1229.52 195.317,1233.17 200.819,1236.5C201.699,1237.04 199.501,1223.58 201.55,1222.26C203.598,1220.94 211.986,1225.47 213.109,1228.56C214.232,1231.65 207.459,1240.34 208.285,1240.78C220.997,1247.64 234.588,1252.93 249.017,1256.72C244.869,1264.84 242.506,1274.03 242.276,1284.5C242.248,1285.75 248.97,1279.74 250.608,1281.15C252.247,1282.55 253.433,1290.71 252.107,1292.9C250.781,1295.09 242.547,1293.16 242.654,1294.27C243.928,1307.51 248.302,1322.59 256.342,1339.87C245.554,1341.21 234.881,1342.48 224.335,1343.69C217.917,1344.43 211.548,1345.15 205.227,1345.84\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M266.738,1235.11C271.55,1247.04 278.01,1259.57 284.353,1271.15C284.879,1272.11 274.858,1273.37 273.999,1275.98C273.14,1278.58 276.844,1286.47 279.2,1286.78C281.556,1287.09 287.826,1277.38 288.138,1277.87C301.287,1298.4 315.504,1308.15 319.335,1331.45C305.788,1333.39 292.369,1335.23 279.105,1336.97C278.488,1337.05 280.622,1327.9 279.071,1326.45C277.52,1325 270.824,1326.38 269.799,1328.25C268.774,1330.14 273.591,1337.69 272.921,1337.77C267.367,1338.49 261.84,1339.19 256.342,1339.87C248.302,1322.59 243.928,1307.51 242.654,1294.27C242.547,1293.16 250.781,1295.09 252.107,1292.9C253.433,1290.71 252.247,1282.55 250.608,1281.15C248.97,1279.74 242.248,1285.75 242.276,1284.5C242.506,1274.03 244.869,1264.84 249.017,1256.72C252.48,1249.93 257.188,1243.9 262.938,1238.48C264.158,1237.33 265.425,1236.2 266.738,1235.11\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M319.335,1331.45C315.504,1308.15 301.287,1298.4 288.138,1277.87C287.826,1277.38 281.556,1287.09 279.2,1286.78C276.844,1286.47 273.14,1278.58 273.999,1275.98C274.858,1273.37 284.879,1272.11 284.353,1271.15C278.01,1259.57 271.55,1247.04 266.738,1235.11C272.011,1230.71 278.012,1226.74 284.614,1223.13C285.473,1222.66 277.121,1214.95 278.14,1211.98C279.158,1209.01 288.164,1204.2 290.726,1205.31C293.288,1206.43 292.335,1219.19 293.51,1218.65C298.085,1216.51 302.888,1214.51 307.885,1212.63C312.961,1223.29 318.037,1233.28 323.112,1242.65C323.466,1243.3 329.154,1234.76 331.574,1235.27C333.994,1235.77 338.25,1243.04 337.631,1245.7C337.012,1248.36 327.469,1250.39 327.86,1251.23C333.881,1264.24 343.394,1274.75 352.593,1284.88C356.309,1288.98 359.973,1293.01 363.337,1297.12C363.889,1297.79 369.513,1290.67 371.991,1291.29C374.469,1291.9 378.775,1298.67 378.207,1300.79C377.638,1302.91 368.017,1303.2 368.582,1304.02C372.589,1309.77 375.787,1315.8 377.548,1322.48C365.367,1324.48 353.26,1326.39 341.241,1328.21C333.905,1329.32 326.601,1330.4 319.335,1331.45\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M405.785,1269.78C408.947,1257.6 402.416,1242.55 396.041,1230.78C395.325,1229.46 390.055,1239.2 387.309,1237.82C384.563,1236.45 379.221,1225.66 379.563,1222.52C379.905,1219.38 390.544,1221.01 389.362,1218.99C384.582,1210.81 380.05,1202.45 377.562,1193.75C369.744,1195.39 362.019,1197.1 354.459,1198.9C353.13,1199.21 359.729,1209.03 357.941,1212.36C356.154,1215.7 346.347,1220.63 343.733,1218.89C341.118,1217.15 343.807,1201.53 342.255,1201.93C338.372,1202.95 334.545,1204 330.787,1205.08C322.813,1207.39 315.144,1209.89 307.885,1212.63C312.961,1223.29 318.037,1233.28 323.112,1242.65C323.466,1243.3 329.154,1234.76 331.574,1235.27C333.994,1235.77 338.25,1243.04 337.631,1245.7C337.012,1248.36 327.469,1250.39 327.86,1251.23C333.881,1264.24 343.394,1274.75 352.593,1284.88C361.296,1275.86 381.673,1265.39 405.785,1269.78\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M377.562,1193.75C380.05,1202.45 384.582,1210.81 389.362,1218.99C390.544,1221.01 379.905,1219.38 379.563,1222.52C379.221,1225.66 384.563,1236.45 387.309,1237.82C390.055,1239.2 395.325,1229.46 396.041,1230.78C402.416,1242.55 408.947,1257.6 405.785,1269.78C408.097,1270.21 410.406,1270.76 412.7,1271.47C421.346,1274.14 431.531,1274.49 441.858,1273.33C443.527,1273.14 436.175,1262.8 437.902,1259.78C439.628,1256.76 449.554,1253.27 452.215,1255.2C454.876,1257.13 452.503,1271.64 453.87,1271.35C468.759,1268.16 482.793,1262.5 491.653,1256.96C485.724,1248.34 480.04,1239.6 474.61,1230.72C474.116,1229.91 488.046,1230.47 489.182,1227.66C490.317,1224.86 484.884,1215.1 481.423,1213.89C477.962,1212.67 469.293,1221.86 468.416,1220.35C466.985,1217.89 465.572,1215.43 464.178,1212.96C458.027,1202.02 452.254,1190.89 446.878,1179.56C424.213,1184.55 400.491,1188.91 377.562,1193.75\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M405.785,1269.78C381.673,1265.39 361.296,1275.86 352.593,1284.88C356.309,1288.98 359.973,1293.01 363.337,1297.12C363.889,1297.79 369.513,1290.67 371.991,1291.29C374.469,1291.9 378.775,1298.67 378.207,1300.79C377.638,1302.91 368.017,1303.2 368.582,1304.02C372.589,1309.77 375.787,1315.8 377.548,1322.48C384.51,1321.33 391.497,1320.16 398.503,1318.95C407.042,1317.48 415.612,1315.96 424.207,1314.39C425.175,1314.21 422.477,1326.4 424.456,1328.63C426.434,1330.86 434.848,1330.35 436.08,1327.74C437.312,1325.13 431.161,1313.11 431.846,1312.98C442.085,1311.07 452.358,1309.1 462.655,1307.04C481.533,1303.29 500.494,1299.28 519.48,1294.99C515.238,1289.71 511.17,1284.37 507.212,1278.99C506.495,1278.01 520.916,1276.47 521.638,1273.59C522.36,1270.72 515.166,1262.53 511.542,1261.73C507.918,1260.93 500.669,1269.9 499.896,1268.81C497.122,1264.88 494.382,1260.93 491.653,1256.96C482.793,1262.5 468.759,1268.16 453.87,1271.35C452.503,1271.64 454.876,1257.13 452.215,1255.2C449.554,1253.27 439.628,1256.76 437.902,1259.78C436.175,1262.8 443.527,1273.14 441.858,1273.33C431.531,1274.49 421.346,1274.14 412.7,1271.47C410.406,1270.76 408.097,1270.21 405.785,1269.78\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M464.178,1212.96C475.179,1200.1 486.853,1195.3 498.745,1196.83C502.317,1197.29 505.909,1198.32 509.508,1199.87C510.394,1200.26 510.389,1187.53 513.075,1186.15C515.761,1184.77 524.889,1188.59 525.625,1191.59C526.361,1194.6 516.589,1203.58 517.49,1204.16C521.603,1206.79 525.714,1210.06 529.804,1213.91C536.096,1219.81 542.338,1227.07 548.464,1235.41C551.408,1239.42 554.326,1243.69 557.209,1248.18C557.95,1249.34 563.044,1239 565.837,1239.71C568.629,1240.42 574.39,1249.37 573.963,1252.43C573.536,1255.48 562.694,1257.07 563.276,1258.05C567.606,1265.38 571.841,1273.2 575.959,1281.4C573.659,1281.99 571.359,1282.57 569.058,1283.14C552.538,1287.31 535.999,1291.25 519.48,1294.99C515.238,1289.71 511.17,1284.37 507.212,1278.99C506.495,1278.01 520.916,1276.47 521.638,1273.59C522.36,1270.72 515.166,1262.53 511.542,1261.73C507.918,1260.93 500.669,1269.9 499.896,1268.81C497.122,1264.88 494.382,1260.93 491.653,1256.96C485.724,1248.34 480.04,1239.6 474.61,1230.72C474.116,1229.91 488.046,1230.47 489.182,1227.66C490.317,1224.86 484.884,1215.1 481.423,1213.89C477.962,1212.67 469.293,1221.86 468.416,1220.35C466.985,1217.89 465.572,1215.43 464.178,1212.96\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M548.464,1235.41C559.019,1222.12 568.667,1210.01 580.574,1201.07C581.908,1200.08 582.411,1211.67 585.381,1212.03C588.352,1212.39 597.453,1206.14 598.396,1203.21C599.34,1200.28 590.024,1194.97 591.042,1194.43C600.837,1189.31 612.307,1186.19 626.687,1185.87C629.417,1194.42 632.661,1202.86 636.429,1211.16C637.071,1212.58 644.858,1201.85 648.032,1203.44C651.205,1205.04 656.129,1216.87 655.471,1220.72C654.813,1224.57 643.034,1224.62 644.081,1226.54C649.651,1236.8 656.059,1246.87 663.342,1256.73C656.034,1258.99 648.709,1261.22 641.368,1263.39C632.554,1265.99 623.719,1268.53 614.867,1271C613.651,1271.34 622.112,1280.37 620.991,1283.09C619.869,1285.8 610.746,1288.9 608.138,1287.32C605.529,1285.74 606.498,1273.31 605.341,1273.63C595.56,1276.3 585.764,1278.88 575.959,1281.4C571.841,1273.2 567.606,1265.38 563.276,1258.05C562.694,1257.07 573.536,1255.48 573.963,1252.43C574.39,1249.37 568.629,1240.42 565.837,1239.71C563.044,1239 557.95,1249.34 557.209,1248.18C554.326,1243.69 551.408,1239.42 548.464,1235.41\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M727.334,831.816C737.709,847.558 747.623,860.45 757.058,870.508C761.266,874.99 765.38,878.91 769.4,882.259C770.294,882.996 762.755,889.253 763.797,892.869C764.84,896.477 773.115,904.519 775.638,903.921C778.162,903.323 777.629,888.434 778.938,889.262C785.434,893.366 791.664,895.897 797.643,896.845C806.279,898.216 814.375,896.302 821.937,891.093C822.971,890.385 824.993,899.955 827.759,900.066C830.526,900.176 838.049,894.553 838.535,891.774C839.021,888.986 829.648,884.486 830.682,883.354C837.116,876.315 843.103,866.606 848.667,854.248C842.382,850.18 836.113,846.067 829.852,841.926C828.747,841.19 838.527,834.307 837.516,831.297C836.505,828.286 826.796,823.238 823.786,823.856C820.777,824.473 820.902,835.963 819.468,835.006C813.928,831.288 808.411,827.547 802.91,823.777C796.539,819.412 790.199,815.01 783.89,810.572C782.848,809.839 791.852,802.511 790.779,799.374C789.705,796.237 780.364,791.153 777.433,791.751C774.494,792.348 774.737,804.091 773.154,802.959C767.755,799.102 762.387,795.218 757.058,791.312C752.912,796.729 748.853,802.126 744.864,807.505C744.143,808.479 741.925,800.61 739.684,801.014C737.443,801.419 731.558,807.498 731.424,809.933C731.299,812.368 739.676,814.569 738.908,815.623C734.967,821.042 731.103,826.439 727.334,831.816\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M757.058,870.508C749.825,881.588 746.635,895.925 743.869,910.749C743.657,911.863 737.239,902.716 735.217,904.197C733.188,905.679 730.555,916.896 731.699,919.63C732.835,922.363 742.255,919.537 742.059,920.596C739.574,934.031 736.777,947.374 731.025,958.601C728.031,956.889 725.077,955.132 722.162,953.337C713.855,948.202 705.858,942.699 698.155,936.847C697.183,936.111 705.959,927.221 705.021,923.982C704.083,920.752 695.1,916.418 692.525,917.439C689.952,918.461 690.928,931.197 689.579,930.092C684.313,925.795 679.187,921.323 674.196,916.694C678.032,909.664 682.043,902.578 686.226,895.455C686.928,894.259 675.658,894.259 674.829,890.937C674,887.615 678.271,876.591 681.25,875.533C684.229,874.483 691.97,885.83 692.702,884.624C695.553,879.931 698.478,875.229 701.474,870.499C702.479,868.916 703.639,867.122 704.898,865.189C713.659,851.782 727.24,831.955 727.334,831.816C737.709,847.558 747.623,860.45 757.058,870.508\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M731.025,958.601C736.777,947.374 739.574,934.031 742.059,920.596C742.255,919.537 732.835,922.363 731.699,919.63C730.555,916.896 733.188,905.679 735.217,904.197C737.239,902.716 743.657,911.863 743.869,910.749C746.635,895.925 749.825,881.588 757.058,870.508C761.266,874.99 765.38,878.91 769.4,882.259C770.294,882.996 762.755,889.253 763.797,892.869C764.84,896.477 773.115,904.519 775.638,903.921C778.162,903.323 777.629,888.434 778.938,889.262C785.434,893.366 791.664,895.897 797.643,896.845C794.227,913.142 802.933,932.025 822.987,953.337C815.895,958.895 808.842,964.739 801.828,970.886C797.15,974.99 792.495,979.223 787.856,983.594C781.641,975.662 771.579,971.916 760.882,968.843C759.714,968.502 766.109,958.997 764.699,956.484C763.288,953.963 754.832,952.169 752.426,953.742C750.021,955.316 751.494,966.248 750.264,965.898C743.407,963.975 736.714,961.84 731.025,958.601\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M797.643,896.845C794.227,913.142 802.933,932.025 822.987,953.337C831.952,946.316 841.513,941.282 851.214,936.856C852.915,936.074 843.174,928.565 844.553,925.353C845.925,922.142 856.151,916.611 859.474,917.559C862.805,918.507 863.212,931.602 864.505,931.04C883.227,923.025 901.705,914.9 916.705,896.845C912.457,894.268 908.202,891.673 903.931,889.06C903.022,888.498 916.806,884.33 917.237,881.873C917.676,879.416 910.2,873.996 906.533,874.309C902.873,874.612 896.431,884.44 895.248,883.713C891.925,881.661 888.603,879.6 885.272,877.52C883.227,876.241 881.174,874.962 879.12,873.664C868.98,867.306 858.816,860.827 848.667,854.248C843.103,866.606 837.116,876.315 830.682,883.354C829.648,884.486 839.021,888.986 838.535,891.774C838.049,894.553 830.526,900.176 827.759,900.066C824.993,899.955 822.971,890.385 821.937,891.093C814.375,896.302 806.279,898.216 797.643,896.845\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M899.934,948.92C906.439,945.11 913.335,941.531 920.004,937.749C921.211,937.058 922.135,948.092 924.98,948.175C927.825,948.258 936.124,941.061 937.064,938.246C938.004,935.43 929.627,931.942 930.614,931.28C937.37,926.78 943.451,921.746 948.059,915.599C937.722,909.498 927.253,903.24 916.705,896.845C901.705,914.9 883.227,923.025 864.505,931.04C863.212,931.602 862.805,918.507 859.474,917.559C856.151,916.611 845.925,922.142 844.553,925.353C843.174,928.565 852.915,936.074 851.214,936.856C841.513,941.282 831.952,946.316 822.987,953.337C815.895,958.895 808.842,964.739 801.828,970.886C806.35,973.757 810.527,977.153 814.328,981.155C814.962,981.827 818.293,973.619 820.793,973.591C823.293,973.554 829.499,978.606 829.319,980.935C829.131,983.272 819.092,986.769 819.696,987.579C824.162,993.661 827.908,1000.85 830.831,1009.34C839.146,1001.22 850.297,995.539 862.891,993.919C864.646,993.698 866.386,993.551 868.11,993.496C867.961,984.229 870.39,976.757 874.528,970.444C875.226,969.386 880.319,977.889 883.47,977.41C886.62,976.922 893.869,969.956 893.43,967.527C892.983,965.098 880.327,963.322 880.813,962.843C886.173,957.524 892.819,953.08 899.934,948.92\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M830.831,1009.34C827.908,1000.85 824.162,993.661 819.696,987.579C819.092,986.769 829.131,983.272 829.319,980.935C829.499,978.606 823.293,973.554 820.793,973.591C818.293,973.619 814.962,981.827 814.328,981.155C810.527,977.153 806.35,973.757 801.828,970.886C797.15,974.99 792.495,979.223 787.856,983.594C777.112,993.707 766.462,1004.57 755.882,1016.21C754.754,1017.45 753.445,1006.75 750.601,1007.76C747.239,1008.96 737.012,1019.51 735.695,1023.4C734.512,1026.91 744.3,1029.3 742.717,1031.15C733.039,1042.47 723.415,1054.47 713.823,1067.2C715.939,1069.93 718.047,1072.68 720.14,1075.44C720.508,1075.93 726.652,1065.81 728.878,1065.53C731.103,1065.26 734.379,1071.38 733.501,1073.81C732.631,1076.24 723.196,1079.51 723.643,1080.1C726.597,1084.06 729.52,1088.05 732.435,1092.08C745.303,1080.19 758.461,1067.28 770.968,1056.65C774.941,1053.27 778.844,1050.13 782.66,1047.31C783.953,1046.35 775.16,1042.25 776.61,1039.04C778.076,1035.79 788.53,1027.71 791.468,1027.82C794.407,1027.94 792.863,1040.48 794.235,1039.72C802.518,1035.09 810.104,1032.85 816.655,1034.3C818.763,1024.88 823.778,1016.23 830.831,1009.34\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M722.162,953.337C718.306,963.009 713.8,972.533 708.516,981.873C707.789,983.152 701.893,971.815 698.425,972.8C694.957,973.785 687.739,983.539 687.707,987.781C687.676,992.033 699.657,996.229 698.24,998.29C692.267,1006.96 685.504,1015.44 677.829,1023.71C688.713,1036.05 699.374,1048.81 709.795,1062.04C711.143,1063.76 712.483,1065.47 713.823,1067.2C723.415,1054.47 733.039,1042.47 742.717,1031.15C744.3,1029.3 734.512,1026.91 735.695,1023.4C737.012,1019.51 747.239,1008.96 750.601,1007.76C753.445,1006.75 754.754,1017.45 755.882,1016.21C766.462,1004.57 777.112,993.707 787.856,983.594C781.641,975.662 771.579,971.916 760.882,968.843C759.714,968.502 766.109,958.997 764.699,956.484C763.288,953.963 754.832,952.169 752.426,953.742C750.021,955.316 751.494,966.248 750.264,965.898C743.407,963.975 736.714,961.84 731.025,958.601C728.031,956.889 725.077,955.132 722.162,953.337\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M722.162,953.337C718.306,963.009 713.8,972.533 708.516,981.873C707.789,983.152 701.893,971.815 698.425,972.8C694.957,973.785 687.739,983.539 687.707,987.781C687.676,992.033 699.657,996.229 698.24,998.29C692.267,1006.96 685.504,1015.44 677.829,1023.71C673.558,1018.87 669.255,1014.1 664.916,1009.39C664.022,1008.42 665.361,1026.1 662.727,1026.56C660.094,1027.01 650.195,1016.54 649.114,1012.13C648.032,1007.72 657.15,1001.07 656.236,1000.1C651.512,995.124 646.75,990.21 641.952,985.37C647.664,970.702 654.262,955.813 661.709,940.73C665.637,932.779 669.802,924.764 674.196,916.694C679.187,921.323 684.313,925.795 689.579,930.092C690.928,931.197 689.952,918.461 692.525,917.439C695.1,916.418 704.083,920.752 705.021,923.982C705.959,927.221 697.183,936.111 698.155,936.847C705.858,942.699 713.855,948.202 722.162,953.337\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M709.795,1062.04C698.801,1072.61 687.359,1081.59 675.397,1088.74C674.228,1089.44 672.827,1078.03 669.903,1077.39C666.979,1076.76 658.925,1081.96 657.852,1084.92C656.779,1087.88 665.188,1094.34 663.465,1095.18C648.357,1102.45 632.434,1106.85 615.568,1107.92C615.631,1104.18 615.772,1100.42 615.991,1096.64C616.42,1089.21 617.148,1081.71 618.169,1074.13C618.387,1072.52 626.632,1077.72 628.909,1074.95C631.185,1072.18 633.22,1060.16 631.828,1057.53C630.435,1054.88 620.199,1061.1 620.555,1059.14C624.936,1035.2 632.134,1010.59 641.952,985.37C646.75,990.21 651.512,995.124 656.236,1000.1C657.15,1001.07 648.032,1007.72 649.114,1012.13C650.195,1016.54 660.094,1027.01 662.727,1026.56C665.361,1026.1 664.022,1008.42 664.916,1009.39C669.255,1014.1 673.558,1018.87 677.829,1023.71C688.713,1036.05 699.374,1048.81 709.795,1062.04\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M615.568,1107.92C632.434,1106.85 648.357,1102.45 663.465,1095.18C665.188,1094.34 656.779,1087.88 657.852,1084.92C658.925,1081.96 666.979,1076.76 669.903,1077.39C672.827,1078.03 674.228,1089.44 675.397,1088.74C687.359,1081.59 698.801,1072.61 709.795,1062.04C711.143,1063.76 712.483,1065.47 713.823,1067.2C715.939,1069.93 718.047,1072.68 720.14,1075.44C720.508,1075.93 726.652,1065.81 728.878,1065.53C731.103,1065.26 734.379,1071.38 733.501,1073.81C732.631,1076.24 723.196,1079.51 723.643,1080.1C726.597,1084.06 729.52,1088.05 732.435,1092.08C736.197,1097.29 739.919,1102.57 743.61,1107.92C731.417,1120.54 718.4,1131.56 704.581,1141.01C703.574,1141.69 702.977,1127.14 700.208,1126.02C697.439,1124.88 689.092,1130.53 687.966,1134.23C686.84,1137.91 694.854,1147.32 693.452,1148.17C689.376,1150.63 685.233,1152.97 681.026,1155.18C663.158,1164.57 644.11,1171.64 623.902,1176.45C621.552,1167.84 619.706,1159.1 618.353,1150.26C618.047,1148.25 608.189,1155.08 605.887,1151.7C603.586,1148.31 602.83,1133.46 604.543,1129.95C606.256,1126.43 616.328,1132.89 616.166,1130.61C615.637,1123.13 615.44,1115.56 615.568,1107.92\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M770.968,1056.65C783.53,1074.1 794.916,1090.97 805.214,1107.32C806.389,1109.18 792.346,1111.04 791.813,1114.85C791.288,1118.65 798.396,1129.13 802.048,1130.17C805.692,1131.2 813.019,1119.92 813.701,1121.06C827.18,1143.35 838.597,1164.62 848.205,1184.93C838.66,1189.53 829.021,1194.01 819.304,1198.37C813.74,1200.86 808.144,1203.32 802.526,1205.74C795.661,1192.63 788.608,1179.88 781.375,1167.47C780.952,1166.75 772.856,1181.07 770.02,1180.19C767.183,1179.31 763.515,1166.09 764.346,1162.18C765.177,1158.26 775.685,1157.84 775.004,1156.7C764.863,1139.81 754.393,1123.57 743.61,1107.92C739.919,1102.57 736.197,1097.29 732.435,1092.08C745.303,1080.19 758.461,1067.28 770.968,1056.65\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M830.831,1009.34C839.146,1001.22 850.297,995.539 862.891,993.919C864.646,993.698 866.386,993.551 868.11,993.496C889.966,992.732 909.056,1004.96 916.18,1023.39C916.783,1024.96 907.167,1022.26 905.733,1025.15C904.299,1028.04 905.373,1039.05 907.575,1040.73C909.785,1042.41 918.867,1034.3 918.954,1035.27C920.074,1047.29 916.321,1058.9 909.228,1068.33C902.52,1077.25 892.811,1084.23 881.393,1087.76C880.413,1088.07 883.266,1076.43 881.307,1074.91C879.348,1073.38 871.237,1076.11 869.654,1078.6C868.071,1081.09 873.047,1089.69 871.809,1089.84C868.016,1090.33 864.286,1090.42 860.657,1090.16C840.557,1088.68 823.684,1076.17 817.791,1058.33C817.478,1057.39 832.728,1060.28 834.405,1058.11C836.09,1055.94 830.988,1046.92 827.877,1045.32C824.766,1043.72 815.856,1049.74 815.746,1048.5C815.291,1043.66 815.628,1038.89 816.655,1034.3C818.763,1024.88 823.778,1016.23 830.831,1009.34\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M899.934,948.92C892.819,953.08 886.173,957.524 880.813,962.843C880.327,963.322 892.983,965.098 893.43,967.527C893.869,969.956 886.62,976.922 883.47,977.41C880.319,977.889 875.226,969.386 874.528,970.444C870.39,976.757 867.961,984.229 868.11,993.496C889.966,992.732 909.056,1004.96 916.18,1023.39C916.783,1024.96 907.167,1022.26 905.733,1025.15C904.299,1028.04 905.373,1039.05 907.575,1040.73C909.785,1042.41 918.867,1034.3 918.954,1035.27C920.074,1047.29 916.321,1058.9 909.228,1068.33C917.598,1072.13 925.011,1076.1 931.539,1080.18C936.327,1070.55 941.163,1061.46 946.045,1052.88C946.797,1051.56 951.068,1060.99 953.826,1060.52C956.577,1060.04 963.144,1052.58 962.58,1050.05C962.016,1047.52 949.994,1046.06 950.425,1045.32C950.841,1044.63 962.486,1025.78 967.971,1017.76C957.682,1005.62 947.589,994.434 937.707,984.211C936.672,983.143 948.168,977.548 948.067,974.042C947.965,970.527 940.379,963 937.103,963.138C933.835,963.266 929.502,975.892 928.436,974.834C918.734,965.263 909.236,956.632 899.934,948.92\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M948.059,915.599C943.451,921.746 937.37,926.78 930.614,931.28C929.627,931.942 938.004,935.43 937.064,938.246C936.124,941.061 927.825,948.258 924.98,948.175C922.135,948.092 921.211,937.058 920.004,937.749C913.335,941.531 906.439,945.11 899.934,948.92C909.236,956.632 918.734,965.263 928.436,974.834C929.502,975.892 933.835,963.266 937.103,963.138C940.379,963 947.965,970.527 948.067,974.042C948.168,977.548 936.672,983.143 937.707,984.211C947.589,994.434 957.682,1005.62 967.971,1017.76C972.603,1011 977.258,1004.56 981.944,998.382C985.996,993.026 990.071,987.873 994.161,982.876C995.086,981.754 986.207,978.708 986.082,975.395C985.964,972.082 990.815,963.285 993.432,963.009C996.05,962.733 1001,974.686 1001.81,973.739C1007.09,967.545 1012.4,961.582 1017.72,955.757C1011.85,952.445 1005.89,949.077 999.858,945.635C995.219,942.994 990.541,940.316 985.815,937.601C984.687,936.948 993.307,928.188 992.108,924.231C990.901,920.283 981.521,912.719 978.614,913.878C975.706,915.028 976.129,932.016 974.672,931.169C965.918,926.099 957.039,920.909 948.059,915.599\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1023.93,1074.78C1015.23,1064.54 1010.01,1051.3 1004.37,1037.77C1004.01,1036.91 996.653,1047.17 994.114,1046.37C991.575,1045.57 988.119,1036 989.146,1032.97C990.172,1029.94 1000.73,1029.21 1000.27,1028.19C995.572,1017.65 990.071,1007.31 981.944,998.382C985.996,993.026 990.071,987.873 994.161,982.876C995.086,981.754 986.207,978.708 986.082,975.395C985.964,972.082 990.815,963.285 993.432,963.009C996.05,962.733 1001,974.686 1001.81,973.739C1007.09,967.545 1012.4,961.582 1017.72,955.757C1027.33,961.177 1037.07,965.42 1046.57,969.404C1053.19,972.193 1059.7,974.843 1065.94,977.695C1067.06,978.202 1056.8,985.637 1057.12,988.885C1057.44,992.125 1064.91,998.281 1067.88,997.149C1070.85,996.008 1074.2,981.671 1074.95,982.057C1085.07,987.339 1094.27,993.597 1101.88,1002.38C1096.44,1008 1090.99,1013.51 1085.53,1018.92C1078.68,1025.7 1071.81,1032.32 1064.93,1038.75C1063.64,1039.96 1059.55,1025.09 1056.07,1024.87C1052.59,1024.64 1044.48,1033.33 1044.05,1037.39C1043.63,1041.46 1054.77,1048.11 1053.51,1049.25C1047.31,1054.86 1041.1,1060.31 1034.89,1065.6C1031.24,1068.71 1027.58,1071.77 1023.93,1074.78\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M981.944,998.382C990.071,1007.31 995.572,1017.65 1000.27,1028.19C1000.73,1029.21 990.172,1029.94 989.146,1032.97C988.119,1036 991.575,1045.57 994.114,1046.37C996.653,1047.17 1004.01,1036.91 1004.37,1037.77C1010.01,1051.3 1015.23,1064.54 1023.93,1074.78C1021.38,1076.87 1018.82,1078.93 1016.28,1080.97C1014.97,1082.01 1024.07,1086.89 1023.33,1090.11C1022.58,1093.32 1014.63,1100.49 1011.79,1100.27C1008.95,1100.06 1007.27,1088.05 1006.28,1088.81C993.863,1098.38 981.082,1107.6 967.971,1116.49C965.244,1110.88 961.013,1104.86 955.057,1098.73C953.913,1097.55 944.697,1110.68 941.304,1110.35C937.91,1110.01 933.867,1100.01 934.697,1096.74C935.536,1093.47 947.157,1091.42 946.319,1090.73C942.009,1087.18 937.095,1083.64 931.539,1080.18C936.327,1070.55 941.163,1061.46 946.045,1052.88C946.797,1051.56 951.068,1060.99 953.826,1060.52C956.577,1060.04 963.144,1052.58 962.58,1050.05C962.016,1047.52 949.994,1046.06 950.425,1045.32C950.841,1044.63 962.486,1025.78 967.971,1017.76C972.603,1011 977.258,1004.56 981.944,998.382\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M895.507,1160.62C876.15,1143.41 862.75,1120.06 860.657,1090.16C864.286,1090.42 868.016,1090.33 871.809,1089.84C873.047,1089.69 868.071,1081.09 869.654,1078.6C871.237,1076.11 879.348,1073.38 881.307,1074.91C883.266,1076.43 880.413,1088.07 881.393,1087.76C892.811,1084.23 902.52,1077.25 909.228,1068.33C917.598,1072.13 925.011,1076.1 931.539,1080.18C937.095,1083.64 942.009,1087.18 946.319,1090.73C947.157,1091.42 935.536,1093.47 934.697,1096.74C933.867,1100.01 937.91,1110.01 941.304,1110.35C944.697,1110.68 953.913,1097.55 955.057,1098.73C961.013,1104.86 965.244,1110.88 967.971,1116.49C961.632,1120.79 955.213,1125.01 948.725,1129.15C947.628,1129.85 957.447,1138.25 956.655,1141.79C955.856,1145.32 947.291,1151.22 943.968,1150.38C940.653,1149.52 938.6,1135.53 936.751,1136.66C930.975,1140.23 925.145,1143.73 919.259,1147.17C911.431,1151.76 903.516,1156.24 895.507,1160.62\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M895.507,1160.62C889.708,1163.79 883.861,1166.92 877.968,1169.99C876.456,1170.78 873.987,1155.91 870.586,1155.17C867.185,1154.43 858.22,1162.11 857.57,1165.54C856.919,1168.98 867.773,1175.24 866.684,1175.79C860.563,1178.89 854.404,1181.93 848.205,1184.93C838.597,1164.62 827.18,1143.35 813.701,1121.06C813.019,1119.92 805.692,1131.2 802.048,1130.17C798.396,1129.13 791.288,1118.65 791.813,1114.85C792.346,1111.04 806.389,1109.18 805.214,1107.32C794.916,1090.97 783.53,1074.1 770.968,1056.65C774.941,1053.27 778.844,1050.13 782.66,1047.31C783.953,1046.35 775.16,1042.25 776.61,1039.04C778.076,1035.79 788.53,1027.71 791.468,1027.82C794.407,1027.94 792.863,1040.48 794.235,1039.72C802.518,1035.09 810.104,1032.85 816.655,1034.3C815.628,1038.89 815.291,1043.66 815.746,1048.5C815.856,1049.74 824.766,1043.72 827.877,1045.32C830.988,1046.92 836.09,1055.94 834.405,1058.11C832.728,1060.28 817.478,1057.39 817.791,1058.33C823.684,1076.17 840.557,1088.68 860.657,1090.16C862.75,1120.06 876.15,1143.41 895.507,1160.62\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M738.564,1231.23C734.379,1219.09 723.525,1199.71 711.378,1190.98C710.336,1190.22 720.696,1186.09 720.312,1183.19C719.92,1180.28 712.217,1173.44 709.043,1173.54C705.875,1173.64 702.539,1184.97 701.29,1183.8C692.406,1175.5 685.09,1162.44 681.026,1155.18C685.233,1152.97 689.376,1150.63 693.452,1148.17C694.854,1147.32 686.84,1137.91 687.966,1134.23C689.092,1130.53 697.439,1124.88 700.208,1126.02C702.977,1127.14 703.574,1141.69 704.581,1141.01C718.4,1131.56 731.417,1120.54 743.61,1107.92C754.393,1123.57 764.863,1139.81 775.004,1156.7C775.685,1157.84 765.177,1158.26 764.346,1162.18C763.515,1166.09 767.183,1179.31 770.02,1180.19C772.856,1181.07 780.952,1166.75 781.375,1167.47C788.608,1179.88 795.661,1192.63 802.526,1205.74C798.842,1207.32 795.144,1208.89 791.437,1210.44C790.395,1210.88 798.09,1218.71 796.664,1221.17C795.238,1223.62 785.489,1226.21 782.879,1225.14C780.278,1224.08 782.221,1214.26 781.014,1214.74C770.357,1219.1 759.62,1223.31 748.806,1227.41C745.397,1228.69 741.98,1229.96 738.564,1231.23\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M681.026,1155.18C685.09,1162.44 692.406,1175.5 701.29,1183.8C702.539,1184.97 705.875,1173.64 709.043,1173.54C712.217,1173.44 719.92,1180.28 720.312,1183.19C720.696,1186.09 710.336,1190.22 711.378,1190.98C723.525,1199.71 734.379,1219.09 738.564,1231.23C729.693,1234.5 720.775,1237.69 711.817,1240.8C706.035,1242.8 700.234,1244.78 694.418,1246.71C693.144,1247.14 695.418,1233.91 692.765,1232.55C690.113,1231.19 680.337,1235.51 678.505,1238.56C676.672,1241.62 683.311,1250.38 681.769,1250.87C675.641,1252.86 669.498,1254.81 663.342,1256.73C656.059,1246.87 649.651,1236.8 644.081,1226.54C643.034,1224.62 654.813,1224.57 655.471,1220.72C656.129,1216.87 651.205,1205.04 648.032,1203.44C644.858,1201.85 637.071,1212.58 636.429,1211.16C632.661,1202.86 629.417,1194.42 626.687,1185.87C625.691,1182.75 624.762,1179.61 623.902,1176.45C644.11,1171.64 663.158,1164.57 681.026,1155.18\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M107.503,1355.45C105.227,1345.64 102.193,1336.52 98.532,1328.16C98.288,1327.61 91.452,1336.63 89.269,1336.13C87.085,1335.63 84.417,1327.65 85.43,1325.19C86.442,1322.73 95.798,1322.29 95.343,1321.39C92.298,1315.35 88.911,1309.77 85.241,1304.66C77.389,1307.73 68.079,1310.12 57.36,1311.75C46.518,1313.38 34.234,1314.23 20.562,1314.22C19.467,1314.22 21.699,1302.92 19.851,1300.73C18.003,1298.54 10.935,1298.86 9.475,1301.09C8.015,1303.31 12.311,1314.11 11.092,1314.08C7.634,1313.98 4.095,1313.83 0.476,1313.62L0.476,1364.1C4.704,1363.77 9.004,1363.44 13.376,1363.1C14.557,1363.02 10.522,1352.02 12.277,1349.62C14.031,1347.22 22.294,1346.57 23.902,1348.7C25.51,1350.85 20.996,1362.52 21.928,1362.45C40.687,1361 60.674,1359.43 81.716,1357.67C90.147,1356.96 98.746,1356.23 107.503,1355.45\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M112.055,1428.7C105.763,1422.37 99.387,1414.77 94.113,1405.29C93.565,1404.3 103.597,1403.37 104.223,1399.7C104.849,1396.04 100.521,1384.44 97.868,1383.28C95.215,1382.12 88.995,1394.57 88.307,1392.74C84.593,1382.88 82.122,1371.32 81.716,1357.67C60.674,1359.43 40.687,1361 21.928,1362.45C20.996,1362.52 25.51,1350.85 23.902,1348.7C22.294,1346.57 14.031,1347.22 12.277,1349.62C10.522,1352.02 14.557,1363.02 13.376,1363.1C9.004,1363.44 4.704,1363.77 0.476,1364.1L0.476,1420.17C13.785,1415.45 23.493,1415.14 31.255,1417.41C32.69,1417.84 24.515,1423.6 25.894,1427.09C27.386,1430.87 36.945,1440.36 40.208,1440.1C43.471,1439.84 43.787,1424.1 45.473,1425.55C57.994,1436.37 66.979,1453.17 88.814,1457.98C95.294,1445.35 103.343,1435.26 112.055,1428.7\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M170.736,1453.77C178.847,1447.64 187.752,1443.21 197.298,1440.12C191.701,1427.02 186.103,1413.91 180.506,1400.8C179.911,1399.4 191.712,1399.72 192.073,1395.97C192.435,1392.22 185.761,1380.22 182.676,1378.32C179.592,1376.42 174.467,1386.66 173.568,1384.56C168.742,1373.25 163.915,1361.95 159.089,1350.65C157.704,1350.79 156.322,1350.93 154.942,1351.06C153.827,1351.17 156.645,1341.26 154.934,1339.86C153.222,1338.47 145.946,1340.69 144.675,1342.67C143.403,1344.66 148.064,1351.73 147.306,1351.8C139.888,1352.51 132.564,1353.2 125.337,1353.86C119.324,1354.41 113.378,1354.94 107.503,1355.45C98.746,1356.23 90.147,1356.96 81.716,1357.67C82.122,1371.32 84.593,1382.88 88.307,1392.74C88.995,1394.57 95.215,1382.12 97.868,1383.28C100.521,1384.44 104.849,1396.04 104.223,1399.7C103.597,1403.37 93.565,1404.3 94.113,1405.29C99.387,1414.77 105.763,1422.37 112.055,1428.7C121.912,1421.27 132.617,1418.34 142.858,1421.33C143.337,1421.47 143.811,1421.62 144.282,1421.79C156.225,1425.94 165.375,1437.7 170.736,1453.77\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M197.298,1440.12C205.681,1437.42 214.014,1437.28 222.824,1437.74C224.092,1437.81 222.419,1421.07 225.234,1418.68C228.048,1416.31 238.187,1420.18 239.71,1423.49C241.233,1426.78 233.079,1438.39 234.368,1438.48C245.201,1439.16 256.983,1439.48 270.543,1436.29C268.216,1423.43 267.203,1409.32 267.742,1393.73C255.708,1392.42 245.902,1388.8 238.673,1382.34C237.636,1381.42 246.947,1379.24 246.557,1375.96C246.167,1372.66 239.141,1363.55 236.336,1362.62C233.53,1361.67 230.579,1372.1 229.724,1370.32C226.329,1363.24 224.483,1354.43 224.335,1343.69C217.917,1344.43 211.548,1345.15 205.227,1345.84C189.522,1347.57 174.127,1349.17 159.089,1350.65C163.915,1361.95 168.742,1373.25 173.568,1384.56C174.467,1386.66 179.592,1376.42 182.676,1378.32C185.761,1380.22 192.435,1392.22 192.073,1395.97C191.712,1399.72 179.911,1399.4 180.506,1400.8C186.103,1413.91 191.701,1427.02 197.298,1440.12\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M224.335,1343.69C224.483,1354.43 226.329,1363.24 229.724,1370.32C230.579,1372.1 233.53,1361.67 236.336,1362.62C239.141,1363.55 246.167,1372.66 246.557,1375.96C246.947,1379.24 237.636,1381.42 238.673,1382.34C245.902,1388.8 255.708,1392.42 267.742,1393.73C279.245,1394.97 292.782,1394.1 308.047,1391.53C309.206,1391.34 301.649,1380.41 303.398,1378.1C305.146,1375.79 316.275,1375.71 318.539,1377.67C320.803,1379.63 315.936,1390.08 316.983,1389.87C327.708,1387.72 339.192,1384.84 351.34,1381.36C350.771,1373.12 349.625,1364.54 347.915,1355.6C347.754,1354.77 337.006,1364.12 334.607,1362.92C332.208,1361.72 331.622,1351.16 333.524,1348.42C335.425,1345.7 346.28,1347.71 346.018,1346.56C344.661,1340.59 343.067,1334.46 341.241,1328.21C333.905,1329.32 326.601,1330.4 319.335,1331.45C305.788,1333.39 292.369,1335.23 279.105,1336.97C278.488,1337.05 280.622,1327.9 279.071,1326.45C277.52,1325 270.824,1326.38 269.799,1328.25C268.774,1330.14 273.591,1337.69 272.921,1337.77C267.367,1338.49 261.84,1339.19 256.342,1339.87C245.554,1341.21 234.881,1342.48 224.335,1343.69\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M270.543,1436.29C268.216,1423.43 267.203,1409.32 267.742,1393.73C279.245,1394.97 292.782,1394.1 308.047,1391.53C309.206,1391.34 301.649,1380.41 303.398,1378.1C305.146,1375.79 316.275,1375.71 318.539,1377.67C320.803,1379.63 315.936,1390.08 316.983,1389.87C327.708,1387.72 339.192,1384.84 351.34,1381.36C352.142,1392.98 351.793,1403.88 350.249,1414.06C347.968,1429.08 343.079,1442.51 335.442,1454.24C332.194,1459.23 328.448,1463.92 324.194,1468.29C323.363,1469.15 323.524,1456.28 321.06,1455.68C318.596,1455.07 310.004,1461.5 309.411,1464.66C308.817,1467.81 318.244,1473.92 317.497,1474.56C310.183,1480.8 301.658,1486.29 291.881,1491.02C287.557,1484.32 283.704,1477.17 280.412,1469.49C279.984,1468.5 268.139,1477.03 265.194,1475.5C262.249,1473.98 260.871,1463.09 262.742,1460.35C264.614,1457.62 276.827,1460.29 276.423,1459.1C273.984,1451.95 272.004,1444.37 270.543,1436.29\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M350.249,1414.06C357.678,1418.5 364.687,1422.98 371.272,1427.49C381.05,1413.3 389.078,1399.2 394.169,1383.17C396.962,1374.38 398.87,1365 399.698,1354.71C399.814,1353.26 389.135,1356.52 387.578,1354.62C386.02,1352.71 388.258,1344.82 390.352,1343.26C392.446,1341.71 400.129,1346.2 400.143,1345.29C400.268,1337.12 399.75,1328.39 398.503,1318.95C391.497,1320.16 384.51,1321.33 377.548,1322.48C365.367,1324.48 353.26,1326.39 341.241,1328.21C343.067,1334.46 344.661,1340.59 346.018,1346.56C346.28,1347.71 335.425,1345.7 333.524,1348.42C331.622,1351.16 332.208,1361.72 334.607,1362.92C337.006,1364.12 347.754,1354.77 347.915,1355.6C349.625,1364.54 350.771,1373.12 351.34,1381.36C352.142,1392.98 351.793,1403.88 350.249,1414.06\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M394.169,1383.17C412.289,1386.49 427.93,1388.29 441.476,1388.45C442.268,1388.46 437.188,1378.72 438.811,1376.98C440.435,1375.23 449.4,1376.1 451.218,1377.99C453.036,1379.89 448.65,1388.39 449.717,1388.34C470.854,1387.46 486.395,1381.95 498.108,1371.2C495.734,1365.53 493.279,1360.02 490.74,1354.67C486.854,1346.48 482.771,1338.68 478.485,1331.27C478.178,1330.75 488.149,1332.92 488.726,1330.88C489.302,1328.82 484.319,1320.05 481.946,1319C479.572,1317.94 475.223,1325.78 474.484,1324.57C470.695,1318.43 466.754,1312.58 462.655,1307.04C452.358,1309.1 442.085,1311.07 431.846,1312.98C431.161,1313.11 437.312,1325.13 436.08,1327.74C434.848,1330.35 426.434,1330.86 424.456,1328.63C422.477,1326.4 425.175,1314.21 424.207,1314.39C415.612,1315.96 407.042,1317.48 398.503,1318.95C399.75,1328.39 400.268,1337.12 400.143,1345.29C400.129,1346.2 392.446,1341.71 390.352,1343.26C388.258,1344.82 386.02,1352.71 387.578,1354.62C389.135,1356.52 399.814,1353.26 399.698,1354.71C398.87,1365 396.962,1374.38 394.169,1383.17\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M490.74,1354.67C509.035,1346.92 524.066,1347.17 540.765,1347.12C542.077,1347.12 536.773,1334.84 538.765,1332.5C540.758,1330.15 550.722,1330.62 552.719,1333.03C554.716,1335.44 549.915,1347.01 550.75,1346.99C564.599,1346.59 580.086,1344.98 599.641,1338.05C594.661,1327.78 589.379,1317.71 583.806,1307.82C583.613,1307.48 595.264,1305.51 596.376,1303.18C597.487,1300.85 593.124,1294.03 590.476,1293.84C587.828,1293.64 581.119,1303.1 580.488,1302.01C576.799,1295.65 572.988,1289.36 569.058,1283.14C552.538,1287.31 535.999,1291.25 519.48,1294.99C500.494,1299.28 481.533,1303.29 462.655,1307.04C466.754,1312.58 470.695,1318.43 474.484,1324.57C475.223,1325.78 479.572,1317.94 481.946,1319C484.319,1320.05 489.302,1328.82 488.726,1330.88C488.149,1332.92 478.178,1330.75 478.485,1331.27C482.771,1338.68 486.854,1346.48 490.74,1354.67\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M490.74,1354.67C509.035,1346.92 524.066,1347.17 540.765,1347.12C542.077,1347.12 536.773,1334.84 538.765,1332.5C540.758,1330.15 550.722,1330.62 552.719,1333.03C554.716,1335.44 549.915,1347.01 550.75,1346.99C564.599,1346.59 580.086,1344.98 599.641,1338.05C601.84,1342.58 603.981,1347.15 606.061,1351.77C606.611,1352.98 611.905,1344.05 614.541,1344.69C617.177,1345.33 622.693,1353.07 621.879,1355.61C621.065,1358.14 609.298,1359.08 609.659,1359.91C613.848,1369.61 617.778,1379.48 621.44,1389.52C622.226,1391.67 623.001,1393.84 623.762,1396.01C602.829,1404.26 585.985,1405.38 570.918,1404.51C569.939,1404.46 574.332,1392.03 572.445,1389.13C570.559,1386.23 561.591,1384.68 559.601,1387.1C557.611,1389.52 561.85,1403.78 560.505,1403.63C543.304,1401.8 527.872,1398.84 510.229,1403.54C508.624,1398.75 506.975,1394.06 505.278,1389.45C504.991,1388.67 498.507,1398.15 496.239,1397.76C493.972,1397.37 490.528,1389.47 491.671,1387.12C492.815,1384.77 503.342,1384.29 503.1,1383.66C501.477,1379.43 499.814,1375.27 498.108,1371.2C495.734,1365.53 493.279,1360.02 490.74,1354.67\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M640.635,1453.97C617.315,1462.37 598.765,1460.22 582.077,1456.65C581.298,1456.49 585.533,1446.12 583.701,1443.28C581.87,1440.45 573.072,1437.81 571.085,1439.64C569.098,1441.48 573.361,1454.67 571.782,1454.31C555.793,1450.55 541.049,1447.3 524.667,1453.62C522.387,1444.39 519.983,1435.39 517.448,1426.66C515.151,1418.75 512.746,1411.03 510.229,1403.54C527.872,1398.84 543.304,1401.8 560.505,1403.63C561.85,1403.78 557.611,1389.52 559.601,1387.1C561.591,1384.68 570.559,1386.23 572.445,1389.13C574.332,1392.03 569.939,1404.46 570.918,1404.51C585.985,1405.38 602.829,1404.26 623.762,1396.01C626.185,1402.92 628.482,1409.9 630.651,1416.98C631.053,1418.29 639.284,1408.15 641.932,1409.22C644.579,1410.31 647.89,1420.41 646.535,1423.48C645.179,1426.54 633.463,1426.44 633.796,1427.61C636.266,1436.28 638.548,1445.06 640.635,1453.97\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M640.635,1453.97C617.315,1462.37 598.765,1460.22 582.077,1456.65C581.298,1456.49 585.533,1446.12 583.701,1443.28C581.87,1440.45 573.072,1437.81 571.085,1439.64C569.098,1441.48 573.361,1454.67 571.782,1454.31C555.793,1450.55 541.049,1447.3 524.667,1453.62C526.133,1459.54 527.547,1465.56 528.911,1471.69C529.193,1472.95 520.57,1470.4 519.132,1472.56C517.694,1474.72 518.344,1483.36 520.284,1484.64C522.224,1485.91 530.619,1479.52 530.772,1480.25C532.792,1489.75 534.699,1499.5 536.496,1509.44C540.703,1509.29 544.94,1509.21 549.204,1509.21C556.059,1509.21 562.984,1509.4 569.969,1509.8C571.228,1509.87 566.646,1517.8 568.023,1520.09C569.401,1522.39 576.585,1525.21 578.235,1523.59C579.886,1521.96 577.187,1510.27 577.927,1510.33C582.837,1510.71 587.773,1511.2 592.732,1511.78C596.992,1512.29 601.222,1512.87 605.421,1513.5C609.205,1514.08 612.964,1514.72 616.695,1515.41C619.044,1515.84 621.383,1516.29 623.711,1516.77C624.545,1516.94 618.738,1525.69 619.851,1527.93C620.964,1530.18 628.754,1531.89 630.388,1530.24C632.023,1528.6 629.12,1517.92 629.659,1518.03C637.465,1519.76 645.139,1521.73 652.666,1523.92C652.299,1520.67 651.917,1517.43 651.502,1514.21C650.53,1506.67 649.43,1499.21 648.202,1491.84C648.026,1490.78 658.572,1493.93 659.975,1491.91C661.38,1489.91 658.888,1481.51 656.626,1479.79C654.364,1478.07 646.638,1482.85 646.405,1481.58C645.042,1474.18 643.55,1466.87 641.932,1459.63C641.508,1457.74 641.076,1455.85 640.635,1453.97\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M517.448,1426.66C494.653,1432.01 473.607,1438.17 456.442,1446.16C455.046,1446.82 458.409,1434.79 455.966,1433.53C453.522,1432.26 443.439,1435.56 441.782,1438.56C440.126,1441.56 446.841,1451.06 446.027,1451.52C435.787,1457.37 427.459,1464.12 421.67,1472.06C416.528,1465.75 410.626,1459.51 403.968,1453.32C403.158,1452.57 412.258,1446.88 411.968,1443.68C411.679,1440.48 404.954,1433.74 402.233,1434.12C399.511,1434.5 396.593,1446.75 395.637,1445.95C388.288,1439.74 380.166,1433.58 371.272,1427.49C381.05,1413.3 389.078,1399.2 394.169,1383.17C412.289,1386.49 427.93,1388.29 441.476,1388.45C442.268,1388.46 437.188,1378.72 438.811,1376.98C440.435,1375.23 449.4,1376.1 451.218,1377.99C453.036,1379.89 448.65,1388.39 449.717,1388.34C470.854,1387.46 486.395,1381.95 498.108,1371.2C499.814,1375.27 501.477,1379.43 503.1,1383.66C503.342,1384.29 492.815,1384.77 491.671,1387.12C490.528,1389.47 493.972,1397.37 496.239,1397.76C498.507,1398.15 504.991,1388.67 505.278,1389.45C506.975,1394.06 508.624,1398.75 510.229,1403.54C512.746,1411.03 515.151,1418.75 517.448,1426.66\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M517.448,1426.66C503.043,1430.04 489.336,1433.75 476.865,1438.03C469.603,1440.53 462.76,1443.22 456.442,1446.16C455.046,1446.82 458.409,1434.79 455.966,1433.53C453.522,1432.26 443.439,1435.56 441.782,1438.56C440.126,1441.56 446.841,1451.06 446.027,1451.52C435.787,1457.37 427.459,1464.12 421.67,1472.06C435.76,1489.34 444.143,1507.06 446.759,1525.24C450.968,1523.83 455.248,1522.51 459.592,1521.28C472.258,1517.69 485.474,1514.86 499.132,1512.84C500.019,1512.71 490.073,1503.78 491.021,1501.36C491.97,1498.94 502.216,1496.57 504.823,1498.32C507.429,1500.06 505.712,1511.94 506.667,1511.82C516.412,1510.61 526.367,1509.81 536.496,1509.44C534.699,1499.5 532.792,1489.75 530.772,1480.25C530.619,1479.52 522.224,1485.91 520.284,1484.64C518.344,1483.36 517.694,1474.72 519.132,1472.56C520.57,1470.4 529.193,1472.95 528.911,1471.69C527.547,1465.56 526.133,1459.54 524.667,1453.62C522.387,1444.39 519.983,1435.39 517.448,1426.66\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M350.249,1414.06C347.968,1429.08 343.079,1442.51 335.442,1454.24C349.253,1469.26 355.221,1482.92 355.221,1495.56C371.284,1494.09 385.074,1495.16 395.878,1500.14C396.981,1500.66 387.886,1505.13 388.948,1508.29C390.01,1511.44 399.368,1519.3 402.248,1519.08C405.129,1518.87 405.254,1506.11 406.233,1507.01C413.175,1513.42 417.998,1522.71 420.326,1535.59C424.59,1533.66 428.948,1531.82 433.393,1530.07C434.085,1529.8 426.293,1522.82 426.738,1520.44C427.183,1518.07 433.986,1514.61 436.066,1515.84C438.146,1517.08 438.582,1528.1 439.219,1527.87C441.706,1526.96 444.219,1526.08 446.759,1525.24C444.143,1507.06 435.76,1489.34 421.67,1472.06C416.528,1465.75 410.626,1459.51 403.968,1453.32C403.158,1452.57 412.258,1446.88 411.968,1443.68C411.679,1440.48 404.954,1433.74 402.233,1434.12C399.511,1434.5 396.593,1446.75 395.637,1445.95C388.288,1439.74 380.166,1433.58 371.272,1427.49C364.687,1422.98 357.678,1418.5 350.249,1414.06\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M254.492,1503.91C259.49,1524.26 256.973,1539.33 251.654,1551.89C264.54,1556.02 276.683,1561.34 288.105,1567.72C292.26,1556.29 300.557,1547.64 309.943,1540.28C310.467,1539.88 300.429,1535.04 300.769,1532.27C301.11,1529.5 309.625,1522.96 311.988,1523.67C314.351,1524.38 314.214,1537.06 314.949,1536.54C334.008,1522.82 355.221,1513.03 355.221,1495.56C355.221,1482.92 349.253,1469.26 335.442,1454.24C332.194,1459.23 328.448,1463.92 324.194,1468.29C323.363,1469.15 323.524,1456.28 321.06,1455.68C318.596,1455.07 310.004,1461.5 309.411,1464.66C308.817,1467.81 318.244,1473.92 317.497,1474.56C310.183,1480.8 301.658,1486.29 291.881,1491.02C280.99,1496.29 268.545,1500.59 254.492,1503.91\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M170.736,1453.77C178.847,1447.64 187.752,1443.21 197.298,1440.12C205.681,1437.42 214.014,1437.28 222.824,1437.74C224.092,1437.81 222.419,1421.07 225.234,1418.68C228.048,1416.31 238.187,1420.18 239.71,1423.49C241.233,1426.78 233.079,1438.39 234.368,1438.48C245.201,1439.16 256.983,1439.48 270.543,1436.29C272.004,1444.37 273.984,1451.95 276.423,1459.1C276.827,1460.29 264.614,1457.62 262.742,1460.35C260.871,1463.09 262.249,1473.98 265.194,1475.5C268.139,1477.03 279.984,1468.5 280.412,1469.49C283.704,1477.17 287.557,1484.32 291.881,1491.02C280.99,1496.29 268.545,1500.59 254.492,1503.91C245.819,1505.97 236.533,1507.64 226.621,1508.93C225.856,1509.03 230.871,1519.61 229.636,1522.21C228.401,1524.8 220.804,1526.53 219.211,1524.45C217.618,1522.37 220.779,1509.64 220.077,1509.71C212.365,1510.57 204.293,1511.19 195.855,1511.6C191.569,1511.8 187.19,1511.95 182.715,1512.03C179.971,1512.09 177.188,1512.12 174.372,1512.13C175.951,1501.9 176.431,1491.89 175.922,1482.45C175.858,1481.28 168.132,1487.76 166.523,1486.23C164.912,1484.71 164.829,1475.48 166.26,1473.34C167.69,1471.19 175.22,1474.28 175.104,1473.37C174.211,1466.35 172.738,1459.76 170.736,1453.77\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M223.176,1611.31C223.324,1603.16 225.863,1596.06 229.493,1589.25C229.999,1588.3 232.883,1598.1 234.893,1597.43C236.903,1596.76 241.799,1587.71 241.553,1585.23C241.308,1582.74 232.912,1583.34 233.42,1582.53C239.407,1573 246.731,1563.52 251.654,1551.89C256.973,1539.33 259.49,1524.26 254.492,1503.91C245.819,1505.97 236.533,1507.64 226.621,1508.93C225.856,1509.03 230.871,1519.61 229.636,1522.21C228.401,1524.8 220.804,1526.53 219.211,1524.45C217.618,1522.37 220.779,1509.64 220.077,1509.71C212.365,1510.57 204.293,1511.19 195.855,1511.6C197.132,1534.19 198.41,1556.78 199.689,1579.37C199.76,1580.63 191.504,1576.07 189.594,1578.96C187.684,1581.85 186.44,1594.75 188.229,1596.7C190.017,1598.65 200.257,1589.43 200.328,1590.67C200.697,1597.2 201.066,1603.73 201.436,1610.26C208.866,1610.36 216.112,1610.71 223.176,1611.31\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M201.436,1610.26C201.066,1603.73 200.697,1597.2 200.328,1590.67C200.257,1589.43 190.017,1598.65 188.229,1596.7C186.44,1594.75 187.684,1581.85 189.594,1578.96C191.504,1576.07 199.76,1580.63 199.689,1579.37C198.41,1556.78 197.132,1534.19 195.855,1511.6C191.569,1511.8 187.19,1511.95 182.715,1512.03C179.971,1512.09 177.188,1512.12 174.372,1512.13C173.94,1514.95 173.423,1517.77 172.822,1520.61C170.654,1530.84 167.557,1540.36 163.765,1548.9C163.252,1550.06 156.899,1538.03 154.341,1538.69C151.784,1539.34 147.701,1549.44 148.421,1552.84C149.14,1556.25 159.241,1558.07 158.658,1559.1C149.931,1574.6 138.782,1585.73 127.122,1590.46C132.615,1600.45 138.108,1611.73 143.601,1624.84C144.275,1626.45 135.214,1625.51 134.666,1628.75C134.118,1631.99 137.908,1642.63 140.317,1644.28C142.726,1645.93 148.571,1637.22 149.121,1638.66C152.86,1648.46 156.601,1659.2 160.34,1671.05C166.504,1670.28 172.653,1669.64 178.79,1669.1C179.587,1669.04 173.376,1660.91 175.068,1658.36C176.758,1655.79 186.541,1652.09 188.934,1653.75C191.328,1655.41 187.898,1668.39 189.428,1668.3C191.52,1668.16 193.612,1668.04 195.702,1667.93C198.696,1667.77 201.687,1667.63 204.676,1667.52C203.596,1648.43 202.516,1629.35 201.436,1610.26\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M160.34,1671.05C156.601,1659.2 152.86,1648.46 149.121,1638.66C148.571,1637.22 142.726,1645.93 140.317,1644.28C137.908,1642.63 134.118,1631.99 134.666,1628.75C135.214,1625.51 144.275,1626.45 143.601,1624.84C138.108,1611.73 132.615,1600.45 127.122,1590.46C120.371,1593.19 113.449,1593.78 106.727,1591.81C107.004,1599.76 107.048,1611.79 104.246,1621.29C103.945,1622.31 99.458,1612.46 97.284,1612.88C95.11,1613.29 90.624,1621.1 91.204,1623.77C91.783,1626.45 101.245,1628.23 100.76,1628.93C97.793,1633.22 93.359,1635.86 86.771,1635.48C82.478,1635.23 78.548,1634.73 74.909,1634.18C75.092,1642.08 75.492,1649.6 76.078,1656.76C76.212,1658.4 69.663,1653.36 68.522,1655.99C67.38,1658.61 67.764,1670.35 69.229,1672.55C70.694,1674.75 77.166,1667.94 77.312,1669.19C78.118,1676.06 79.095,1682.58 80.205,1688.75C95.824,1683.68 111.328,1679.67 126.736,1676.54C127.521,1676.37 125.178,1691.65 127.445,1693.8C129.712,1695.96 139.101,1692.62 140.337,1689.48C141.573,1686.34 133.694,1675.18 134.864,1674.97C143.384,1673.4 151.874,1672.1 160.34,1671.05\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M144.282,1421.79C156.225,1425.94 165.375,1437.7 170.736,1453.77C172.738,1459.76 174.211,1466.35 175.104,1473.37C175.22,1474.28 167.69,1471.19 166.26,1473.34C164.829,1475.48 164.912,1484.71 166.523,1486.23C168.132,1487.76 175.858,1481.28 175.922,1482.45C176.431,1491.89 175.951,1501.9 174.372,1512.13C173.94,1514.95 173.423,1517.77 172.822,1520.61C170.654,1530.84 167.557,1540.36 163.765,1548.9C163.252,1550.06 156.899,1538.03 154.341,1538.69C151.784,1539.34 147.701,1549.44 148.421,1552.84C149.14,1556.25 159.241,1558.07 158.658,1559.1C149.931,1574.6 138.782,1585.73 127.122,1590.46C120.371,1593.19 113.449,1593.78 106.727,1591.81C103.326,1590.82 100.141,1589.23 97.192,1587.09C109.627,1563.18 119.787,1536.98 127.718,1508.53C127.993,1507.55 119.384,1509.31 117.893,1506.69C116.401,1504.07 116.687,1494.17 118.771,1492.81C120.855,1491.45 130.072,1499.77 130.395,1498.51C136.548,1474.47 141.168,1448.89 144.282,1421.79\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M144.282,1421.79C143.811,1421.62 143.337,1421.47 142.858,1421.33C132.617,1418.34 121.912,1421.27 112.055,1428.7C103.343,1435.26 95.294,1445.35 88.814,1457.98C85.08,1465.26 81.868,1473.37 79.349,1482.14C79.042,1483.21 71.865,1474.45 70.136,1475.9C68.406,1477.37 67.866,1488.12 68.971,1490.89C70.076,1493.67 77.018,1491.34 76.762,1492.54C75.868,1496.76 75.162,1501.01 74.637,1505.16C72.576,1521.45 73.297,1537.04 76.35,1550.45C80.084,1566.84 87.305,1579.95 97.192,1587.09C109.627,1563.18 119.787,1536.98 127.718,1508.53C127.993,1507.55 119.384,1509.31 117.893,1506.69C116.401,1504.07 116.687,1494.17 118.771,1492.81C120.855,1491.45 130.072,1499.77 130.395,1498.51C136.548,1474.47 141.168,1448.89 144.282,1421.79\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M88.814,1457.98C66.979,1453.17 57.994,1436.37 45.473,1425.55C43.787,1424.1 43.471,1439.84 40.208,1440.1C36.945,1440.36 27.386,1430.87 25.894,1427.09C24.515,1423.6 32.69,1417.84 31.255,1417.41C23.493,1415.14 13.785,1415.45 0.476,1420.17L0.476,1493.31C4.878,1494.13 9.236,1494.93 13.549,1495.7C15.22,1496 9.841,1504.5 11.968,1507.49C14.095,1510.47 23.926,1515.2 26.31,1513.61C28.693,1512.01 24.989,1497.69 26.268,1497.91C43.098,1500.77 59.217,1503.18 74.637,1505.16C75.162,1501.01 75.868,1496.76 76.762,1492.54C77.018,1491.34 70.076,1493.67 68.971,1490.89C67.866,1488.12 68.406,1477.37 70.136,1475.9C71.865,1474.45 79.042,1483.21 79.349,1482.14C81.868,1473.37 85.08,1465.26 88.814,1457.98\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M0.476,1610.21C3.874,1612.94 7.968,1614.83 12.198,1615.64C13.329,1615.86 7.463,1605.84 9.297,1603.68C11.13,1601.52 21.233,1600.7 23.201,1602.71C25.168,1604.72 19.985,1615.93 21.101,1615.72C24.049,1615.16 26.868,1613.98 29.354,1612.11C36.038,1607.08 40.322,1597 38.283,1580.34C37.002,1569.88 39.179,1563.09 43.856,1558.66C44.424,1558.12 45.182,1569.06 47.516,1569.79C49.85,1570.53 57.382,1565.62 57.859,1563.08C58.337,1560.53 49.631,1554.83 50.381,1554.51C57.102,1551.63 66.116,1550.76 76.35,1550.45C73.297,1537.04 72.576,1521.45 74.637,1505.16C59.217,1503.18 43.098,1500.77 26.268,1497.91C24.989,1497.69 28.693,1512.01 26.31,1513.61C23.926,1515.2 14.095,1510.47 11.968,1507.49C9.841,1504.5 15.22,1496 13.549,1495.7C9.236,1494.93 4.878,1494.13 0.476,1493.31L0.476,1610.21\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M76.35,1550.45C66.116,1550.76 57.102,1551.63 50.381,1554.51C49.631,1554.83 58.337,1560.53 57.859,1563.08C57.382,1565.62 49.85,1570.53 47.516,1569.79C45.182,1569.06 44.424,1558.12 43.856,1558.66C39.179,1563.09 37.002,1569.88 38.283,1580.34C40.322,1597 36.038,1607.08 29.354,1612.11C34.986,1617.4 38.507,1626.14 40.584,1637.26C50.463,1628.95 60.366,1632 74.909,1634.18C78.548,1634.73 82.478,1635.23 86.771,1635.48C93.359,1635.86 97.793,1633.22 100.76,1628.93C101.245,1628.23 91.783,1626.45 91.204,1623.77C90.624,1621.1 95.11,1613.29 97.284,1612.88C99.458,1612.46 103.945,1622.31 104.246,1621.29C107.048,1611.79 107.004,1599.76 106.727,1591.81C103.326,1590.82 100.141,1589.23 97.192,1587.09C87.305,1579.95 80.084,1566.84 76.35,1550.45\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M29.354,1612.11C26.868,1613.98 24.049,1615.16 21.101,1615.72C19.985,1615.93 25.168,1604.72 23.201,1602.71C21.233,1600.7 11.13,1601.52 9.297,1603.68C7.463,1605.84 13.329,1615.86 12.198,1615.64C7.968,1614.83 3.874,1612.94 0.476,1610.21L0.476,1767.3L38.356,1767.3C39.271,1747.05 41.052,1725.47 42.154,1704.9C42.279,1702.55 33.569,1708.31 31.726,1704.85C29.579,1700.82 27.401,1683.99 29.277,1680.73C31.153,1677.45 42.925,1687.32 42.983,1685.24C43.485,1667.11 43.061,1650.5 40.584,1637.26C38.507,1626.14 34.986,1617.4 29.354,1612.11\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M80.205,1688.75C79.095,1682.58 78.118,1676.06 77.312,1669.19C77.166,1667.94 70.694,1674.75 69.229,1672.55C67.764,1670.35 67.38,1658.61 68.522,1655.99C69.663,1653.36 76.212,1658.4 76.078,1656.76C75.492,1649.6 75.092,1642.08 74.909,1634.18C60.366,1632 50.463,1628.95 40.584,1637.26C43.061,1650.5 43.485,1667.11 42.983,1685.24C42.925,1687.32 31.153,1677.45 29.277,1680.73C27.401,1683.99 29.579,1700.82 31.726,1704.85C33.569,1708.31 42.279,1702.55 42.154,1704.9C41.052,1725.47 39.271,1747.05 38.356,1767.3L106.549,1767.3C102.324,1753.17 97.796,1743.13 93.501,1732.87C92.994,1731.65 86.119,1741.51 83.696,1740.46C81.274,1739.41 78.027,1729.57 78.963,1726.56C79.899,1723.54 89.793,1723.66 89.31,1722.37C85.879,1713.2 82.738,1702.85 80.205,1688.75\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M169.997,1767.3C171.663,1753.59 172.072,1739.88 171.168,1726.17C171.063,1724.58 160.633,1732.73 158.277,1730.66C155.92,1728.59 155.065,1716.48 157.028,1713.75C158.992,1711.03 170.211,1715.58 170.057,1714.3C168.305,1699.88 165.088,1685.47 160.34,1671.05C151.874,1672.1 143.384,1673.4 134.864,1674.97C133.694,1675.18 141.573,1686.34 140.337,1689.48C139.101,1692.62 129.712,1695.96 127.445,1693.8C125.178,1691.65 127.521,1676.37 126.736,1676.54C111.328,1679.67 95.824,1683.68 80.205,1688.75C82.738,1702.85 85.879,1713.2 89.31,1722.37C89.793,1723.66 79.899,1723.54 78.963,1726.56C78.027,1729.57 81.274,1739.41 83.696,1740.46C86.119,1741.51 92.994,1731.65 93.501,1732.87C97.796,1743.13 102.324,1753.17 106.549,1767.3L169.997,1767.3\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M251.934,1767.3C253.273,1750.07 252.559,1733.19 249.394,1716.71C249.017,1714.75 241.918,1722.38 240.045,1720.37C238.171,1718.35 237.079,1707.35 238.153,1704.65C239.226,1701.96 246.854,1705.53 246.485,1704.17C243.042,1691.57 238.065,1679.22 231.369,1667.15C222.491,1667.08 213.595,1667.2 204.676,1667.52C201.687,1667.63 198.696,1667.77 195.702,1667.93C193.612,1668.04 191.52,1668.16 189.428,1668.3C187.898,1668.39 191.328,1655.41 188.934,1653.75C186.541,1652.09 176.758,1655.79 175.068,1658.36C173.376,1660.91 179.587,1669.04 178.79,1669.1C172.653,1669.64 166.504,1670.28 160.34,1671.05C165.088,1685.47 168.305,1699.88 170.057,1714.3C170.211,1715.58 158.992,1711.03 157.028,1713.75C155.065,1716.48 155.92,1728.59 158.277,1730.66C160.633,1732.73 171.063,1724.58 171.168,1726.17C172.072,1739.88 171.663,1753.59 169.997,1767.3L251.934,1767.3\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M223.176,1611.31C216.112,1610.71 208.866,1610.36 201.436,1610.26C202.516,1629.35 203.596,1648.43 204.676,1667.52C213.595,1667.2 222.491,1667.08 231.369,1667.15C240.691,1667.23 249.992,1667.49 259.276,1667.93C264.171,1668.16 269.061,1668.43 273.947,1668.75C275.115,1668.82 271.831,1682.88 273.618,1685.09C275.406,1687.31 283.151,1684.65 284.668,1682.02C286.186,1679.4 281.722,1669.28 282.723,1669.35C292.225,1670.05 301.713,1670.88 311.192,1671.82C312.128,1660.9 314.313,1650.36 317.639,1640.24C300.512,1629.88 281.44,1622.18 260.397,1617.18C259.713,1617.02 260.922,1627.92 258.998,1629.52C257.073,1631.11 249.906,1629.08 248.851,1626.75C247.796,1624.4 253.874,1615.72 252.666,1615.48C243.217,1613.57 233.387,1612.18 223.176,1611.31\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M251.654,1551.89C246.731,1563.52 239.407,1573 233.42,1582.53C232.912,1583.34 241.308,1582.74 241.553,1585.23C241.799,1587.71 236.903,1596.76 234.893,1597.43C232.883,1598.1 229.999,1588.3 229.493,1589.25C225.863,1596.06 223.324,1603.16 223.176,1611.31C233.387,1612.18 243.217,1613.57 252.666,1615.48C253.874,1615.72 247.796,1624.4 248.851,1626.75C249.906,1629.08 257.073,1631.11 258.998,1629.52C260.922,1627.92 259.713,1617.02 260.397,1617.18C281.44,1622.18 300.512,1629.88 317.639,1640.24C320.245,1632.3 323.55,1624.64 327.505,1617.25C329.914,1612.76 332.564,1608.37 335.442,1604.09C329.458,1598.03 323.187,1592.33 316.626,1587.04C316.072,1586.59 325.564,1580.42 325.465,1577.9C325.365,1575.39 318.698,1571.35 316.031,1571.95C313.364,1572.55 310.553,1582.32 309.463,1581.51C302.643,1576.48 295.527,1571.87 288.105,1567.72C276.683,1561.34 264.54,1556.02 251.654,1551.89\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M420.326,1535.59C417.998,1522.71 413.175,1513.42 406.233,1507.01C405.254,1506.11 405.129,1518.87 402.248,1519.08C399.368,1519.3 390.01,1511.44 388.948,1508.29C387.886,1505.13 396.981,1500.66 395.878,1500.14C385.074,1495.16 371.284,1494.09 355.221,1495.56C355.221,1513.03 334.008,1522.82 314.949,1536.54C314.214,1537.06 314.351,1524.38 311.988,1523.67C309.625,1522.96 301.11,1529.5 300.769,1532.27C300.429,1535.04 310.467,1539.88 309.943,1540.28C300.557,1547.64 292.26,1556.29 288.105,1567.72C295.527,1571.87 302.643,1576.48 309.463,1581.51C310.553,1582.32 313.364,1572.55 316.031,1571.95C318.698,1571.35 325.365,1575.39 325.465,1577.9C325.564,1580.42 316.072,1586.59 316.626,1587.04C323.187,1592.33 329.458,1598.03 335.442,1604.09C340.251,1596.95 345.699,1590.13 351.732,1583.65C362.917,1571.64 376.114,1560.83 390.979,1551.41C391.623,1551 393.297,1565.13 396.175,1565.9C399.053,1566.67 407.734,1559.3 408.246,1556.05C408.76,1552.81 397.766,1547.26 399.252,1546.4C405.982,1542.53 413.016,1538.92 420.326,1535.59\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M231.369,1667.15C238.065,1679.22 243.042,1691.57 246.485,1704.17C246.854,1705.53 239.226,1701.96 238.153,1704.65C237.079,1707.35 238.171,1718.35 240.045,1720.37C241.918,1722.38 249.017,1714.75 249.394,1716.71C252.559,1733.19 253.273,1750.07 251.934,1767.3L335.693,1767.3C328.542,1755.71 322.803,1743.66 318.634,1731.3C316.655,1725.44 315.03,1719.5 313.776,1713.5C313.476,1712.08 323.064,1715.4 324.403,1713.03C325.742,1710.65 323.917,1701.19 321.811,1699.26C319.706,1697.34 311.932,1702.78 311.768,1701.45C310.553,1691.67 310.338,1681.77 311.192,1671.82C301.713,1670.88 292.225,1670.05 282.723,1669.35C281.722,1669.28 286.186,1679.4 284.668,1682.02C283.151,1684.65 275.406,1687.31 273.618,1685.09C271.831,1682.88 275.115,1668.82 273.947,1668.75C269.061,1668.43 264.171,1668.16 259.276,1667.93C249.992,1667.49 240.691,1667.23 231.369,1667.15\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M552.683,1618.52C564.041,1605.14 573.864,1590.71 582.128,1575.21C582.691,1574.15 573.49,1574.89 572.622,1572.31C571.753,1569.72 574.738,1560.38 576.916,1559.71C579.095,1559.04 585.308,1569.05 585.692,1568.27C594.085,1551.26 600.67,1533.01 605.421,1513.5C609.205,1514.08 612.964,1514.72 616.695,1515.41C619.044,1515.84 621.383,1516.29 623.711,1516.77C624.545,1516.94 618.738,1525.69 619.851,1527.93C620.964,1530.18 628.754,1531.89 630.388,1530.24C632.023,1528.6 629.12,1517.92 629.659,1518.03C637.465,1519.76 645.139,1521.73 652.666,1523.92C653.892,1536.85 654.472,1548.85 654.196,1559.65C654.177,1560.37 644.89,1553.83 642.944,1555.23C640.997,1556.63 640.722,1565.78 642.517,1568.08C644.312,1570.38 653.81,1567.8 653.711,1569.03C652.996,1577.94 651.562,1585.84 649.265,1592.55C646.051,1591.78 642.873,1591.32 639.772,1591.17C628.301,1590.6 617.88,1594.23 610.606,1601.97C610.041,1602.58 620.767,1604.96 621.033,1607.38C621.299,1609.81 614.721,1616.35 612.203,1616.5C609.686,1616.65 606.41,1607.46 605.924,1608.3C602.286,1614.58 600.564,1621.9 600.564,1629.63C589.877,1630.83 578.824,1629.4 567.4,1625.25C562.561,1623.5 557.655,1621.25 552.683,1618.52\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M605.421,1513.5C600.67,1533.01 594.085,1551.26 585.692,1568.27C585.308,1569.05 579.095,1559.04 576.916,1559.71C574.738,1560.38 571.753,1569.72 572.622,1572.31C573.49,1574.89 582.691,1574.15 582.128,1575.21C573.864,1590.71 564.041,1605.14 552.683,1618.52C547.653,1615.76 542.554,1612.49 537.386,1608.73C536.607,1608.16 536.88,1623.49 534.549,1625.11C532.216,1626.73 524.248,1622.18 523.398,1618.43C522.547,1614.67 530.558,1603.49 529.445,1602.58C526.864,1600.47 524.267,1598.24 521.653,1595.88C517.02,1591.7 512.333,1587.14 507.592,1582.19C518.049,1574.88 526.731,1565.74 533.527,1554.63C534.126,1553.65 524.123,1553.14 523.106,1550.42C522.089,1547.7 524.913,1539.05 527.426,1538.33C529.937,1537.61 537.849,1546.81 538.178,1546.12C543.388,1535.41 547.089,1523.13 549.204,1509.21C556.059,1509.21 562.984,1509.4 569.969,1509.8C571.228,1509.87 566.646,1517.8 568.023,1520.09C569.401,1522.39 576.585,1525.21 578.235,1523.59C579.886,1521.96 577.187,1510.27 577.927,1510.33C582.837,1510.71 587.773,1511.2 592.732,1511.78C596.992,1512.29 601.222,1512.87 605.421,1513.5\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M549.204,1509.21C547.089,1523.13 543.388,1535.41 538.178,1546.12C537.849,1546.81 529.937,1537.61 527.426,1538.33C524.913,1539.05 522.089,1547.7 523.106,1550.42C524.123,1553.14 534.126,1553.65 533.527,1554.63C526.731,1565.74 518.049,1574.88 507.592,1582.19C505.448,1579.94 503.294,1577.62 501.128,1575.22C498.34,1572.13 495.534,1568.91 492.71,1565.55C492.013,1564.72 491.682,1580.74 489.187,1581.72C486.692,1582.71 478.302,1575.58 477.738,1571.49C477.174,1567.38 486.71,1558.26 485.801,1557.12C483.183,1553.85 480.55,1550.45 477.901,1546.94C471.876,1538.98 465.778,1530.43 459.592,1521.28C472.258,1517.69 485.474,1514.86 499.132,1512.84C500.019,1512.71 490.073,1503.78 491.021,1501.36C491.97,1498.94 502.216,1496.57 504.823,1498.32C507.429,1500.06 505.712,1511.94 506.667,1511.82C516.412,1510.61 526.367,1509.81 536.496,1509.44C540.703,1509.29 544.94,1509.21 549.204,1509.21\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M477.901,1546.94C465.097,1563.98 451.257,1579.62 435.257,1592.36C434.013,1593.35 428.889,1579.92 425.376,1579.31C421.863,1578.7 414.082,1585.39 414.18,1588.71C414.278,1592.04 427.047,1598.5 425.963,1599.25C416.179,1605.98 405.597,1611.64 393.996,1615.93C387.727,1611.13 381.451,1606.32 375.182,1601.51C374.398,1600.91 388.662,1595.43 388.744,1592.54C388.825,1589.65 379.215,1583.67 375.671,1584.19C372.127,1584.7 368.495,1596.4 367.481,1595.62C362.218,1591.6 356.965,1587.61 351.732,1583.65C362.917,1571.64 376.114,1560.83 390.979,1551.41C391.623,1551 393.297,1565.13 396.175,1565.9C399.053,1566.67 407.734,1559.3 408.246,1556.05C408.76,1552.81 397.766,1547.26 399.252,1546.4C405.982,1542.53 413.016,1538.92 420.326,1535.59C424.59,1533.66 428.948,1531.82 433.393,1530.07C434.085,1529.8 426.293,1522.82 426.738,1520.44C427.183,1518.07 433.986,1514.61 436.066,1515.84C438.146,1517.08 438.582,1528.1 439.219,1527.87C441.706,1526.96 444.219,1526.08 446.759,1525.24C450.968,1523.83 455.248,1522.51 459.592,1521.28C465.778,1530.43 471.876,1538.98 477.901,1546.94\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M439.421,1650.17C433.809,1656.69 427.49,1662.68 419.858,1667.71C418.325,1668.73 416.739,1669.7 415.095,1670.63C414.166,1671.16 413.749,1661.31 411.235,1660.33C408.721,1659.36 401.185,1662.2 400.01,1664.78C398.836,1667.36 406.116,1675.04 404.189,1675.78C395.249,1679.26 384.807,1681.64 372.357,1682.54C361.765,1669.85 351.923,1656.43 342.801,1642.43C341.994,1641.18 354.592,1638.16 354.628,1634.49C354.665,1630.84 346.206,1621.09 343.02,1620.48C339.834,1619.87 336.376,1632.29 335.511,1630.87C332.773,1626.38 330.105,1621.84 327.505,1617.25C329.914,1612.76 332.564,1608.37 335.442,1604.09C340.251,1596.95 345.699,1590.13 351.732,1583.65C356.965,1587.61 362.218,1591.6 367.481,1595.62C368.495,1596.4 372.127,1584.7 375.671,1584.19C379.215,1583.67 388.825,1589.65 388.744,1592.54C388.662,1595.43 374.398,1600.91 375.182,1601.51C381.451,1606.32 387.727,1611.13 393.996,1615.93C409.258,1627.62 424.474,1639.21 439.421,1650.17\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M393.996,1615.93C405.597,1611.64 416.179,1605.98 425.963,1599.25C427.047,1598.5 414.278,1592.04 414.18,1588.71C414.082,1585.39 421.863,1578.7 425.376,1579.31C428.889,1579.92 434.013,1593.35 435.257,1592.36C451.257,1579.62 465.097,1563.98 477.901,1546.94C480.55,1550.45 483.183,1553.85 485.801,1557.12C486.71,1558.26 477.174,1567.38 477.738,1571.49C478.302,1575.58 486.692,1582.71 489.187,1581.72C491.682,1580.74 492.013,1564.72 492.71,1565.55C495.534,1568.91 498.34,1572.13 501.128,1575.22C503.294,1577.62 505.448,1579.94 507.592,1582.19C512.333,1587.14 517.02,1591.7 521.653,1595.88C515.5,1608.6 508.034,1620.55 498.641,1631.37C497.927,1632.18 493.517,1621.34 490.353,1621.69C487.189,1622.03 479.896,1630.13 479.656,1633.44C479.416,1636.73 490.566,1639.93 488.911,1641.49C480.123,1649.73 469.899,1657.14 457.901,1663.5C451.798,1659.19 445.633,1654.73 439.421,1650.17C424.474,1639.21 409.258,1627.62 393.996,1615.93\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M457.901,1663.5C469.899,1657.14 480.123,1649.73 488.911,1641.49C490.566,1639.93 479.416,1636.73 479.656,1633.44C479.896,1630.13 487.189,1622.03 490.353,1621.69C493.517,1621.34 497.927,1632.18 498.641,1631.37C508.034,1620.55 515.5,1608.6 521.653,1595.88C524.267,1598.24 526.864,1600.47 529.445,1602.58C530.558,1603.49 522.547,1614.67 523.398,1618.43C524.248,1622.18 532.216,1626.73 534.549,1625.11C536.88,1623.49 536.607,1608.16 537.386,1608.73C542.554,1612.49 547.653,1615.76 552.683,1618.52C557.655,1621.25 562.561,1623.5 567.4,1625.25C565.506,1639.22 562.053,1652.83 556.585,1665.97C556.177,1666.95 555.757,1667.93 555.325,1668.9C554.913,1669.84 545.941,1657.23 543.199,1657.79C540.457,1658.35 537.674,1668.7 538.874,1672.23C540.075,1675.77 551.193,1677.51 550.402,1678.99C545.089,1688.9 538.478,1698.5 530.358,1707.74C525.547,1705.48 520.632,1702.98 515.62,1700.26C514.84,1699.84 513.778,1711.94 511.712,1712.75C509.645,1713.55 503.766,1707.84 503.22,1705.08C502.675,1702.34 509.591,1696.92 508.439,1696.26C505.108,1694.36 501.738,1692.37 498.334,1690.3C485.303,1682.37 471.763,1673.3 457.901,1663.5\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M567.4,1625.25C565.506,1639.22 562.053,1652.83 556.585,1665.97C556.177,1666.95 555.757,1667.93 555.325,1668.9C554.913,1669.84 545.941,1657.23 543.199,1657.79C540.457,1658.35 537.674,1668.7 538.874,1672.23C540.075,1675.77 551.193,1677.51 550.402,1678.99C545.089,1688.9 538.478,1698.5 530.358,1707.74C541.639,1713.05 552.334,1717.03 562.289,1719.34C574.75,1722.22 586.051,1722.49 595.892,1719.44C596.749,1719.17 588.136,1713.76 589.159,1710.95C590.183,1708.13 599.479,1701.74 602.032,1702.53C604.586,1703.32 603.532,1716.26 604.477,1715.71C614.496,1709.95 622.557,1699.77 628.231,1684.18C620.011,1677.3 613.416,1669 608.73,1660.19C608.161,1659.12 622.215,1658.35 623.295,1655.3C624.375,1652.25 618.388,1642.78 615.21,1641.89C612.033,1641 604.752,1651.45 604.23,1649.97C601.826,1643.14 600.564,1636.23 600.564,1629.63C589.877,1630.83 578.824,1629.4 567.4,1625.25\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M562.289,1719.34C560.108,1727.26 556.887,1734.46 552.73,1740.99C552.083,1742.01 546.88,1732.43 544.524,1732.74C542.169,1733.05 538.096,1740.25 538.598,1742.83C539.098,1745.42 548.287,1747.3 547.532,1748.23C541.715,1755.46 534.611,1761.77 526.391,1767.3L657.736,1767.3C659.773,1758.43 661.459,1749.84 662.764,1741.53C662.994,1740.06 651.94,1742.01 650.433,1739.32C648.925,1736.62 651.392,1726.96 653.716,1725.37C656.041,1723.77 664.234,1731.01 664.38,1729.76C665.593,1719.34 666.142,1709.43 665.963,1700.07C654.239,1699.59 641.386,1694.71 629.66,1685.35C629.179,1684.97 628.703,1684.57 628.231,1684.18C622.557,1699.77 614.496,1709.95 604.477,1715.71C603.532,1716.26 604.586,1703.32 602.032,1702.53C599.479,1701.74 590.183,1708.13 589.159,1710.95C588.136,1713.76 596.749,1719.17 595.892,1719.44C586.051,1722.49 574.75,1722.22 562.289,1719.34\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M526.391,1767.3C534.611,1761.77 541.715,1755.46 547.532,1748.23C548.287,1747.3 539.098,1745.42 538.598,1742.83C538.096,1740.25 542.169,1733.05 544.524,1732.74C546.88,1732.43 552.083,1742.01 552.73,1740.99C556.887,1734.46 560.108,1727.26 562.289,1719.34C552.334,1717.03 541.639,1713.05 530.358,1707.74C525.547,1705.48 520.632,1702.98 515.62,1700.26C514.84,1699.84 513.778,1711.94 511.712,1712.75C509.645,1713.55 503.766,1707.84 503.22,1705.08C502.675,1702.34 509.591,1696.92 508.439,1696.26C505.108,1694.36 501.738,1692.37 498.334,1690.3C492.015,1700.85 483.289,1710 471.648,1717.43C470.815,1717.97 470.927,1707.59 468.468,1706.65C466.01,1705.72 457.812,1709.19 456.897,1711.81C455.982,1714.43 464.39,1721.66 462.981,1722.38C452.556,1727.66 440.195,1731.83 425.626,1734.68C431.246,1739.11 437.015,1743.36 442.937,1747.42C443.738,1747.98 447.852,1739.43 450.88,1739.61C453.907,1739.8 460.603,1748 461.102,1748.54C461.765,1749.25 449.398,1751.75 450.184,1752.26C458.518,1757.65 467.145,1762.67 476.069,1767.3L526.391,1767.3\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M425.626,1734.68C440.195,1731.83 452.556,1727.66 462.981,1722.38C464.39,1721.66 455.982,1714.43 456.897,1711.81C457.812,1709.19 466.01,1705.72 468.468,1706.65C470.927,1707.59 470.815,1717.97 471.648,1717.43C483.289,1710 492.015,1700.85 498.334,1690.3C485.303,1682.37 471.763,1673.3 457.901,1663.5C451.798,1659.19 445.633,1654.73 439.421,1650.17C433.809,1656.69 427.49,1662.68 419.858,1667.71C418.325,1668.73 416.739,1669.7 415.095,1670.63C414.166,1671.16 413.749,1661.31 411.235,1660.33C408.721,1659.36 401.185,1662.2 400.01,1664.78C398.836,1667.36 406.116,1675.04 404.189,1675.78C395.249,1679.26 384.807,1681.64 372.357,1682.54C378.268,1689.62 384.412,1696.49 390.796,1703.1C393.973,1706.39 397.209,1709.62 400.505,1712.78C400.969,1713.23 402.289,1714.45 403.849,1715.9C404.467,1716.47 405.173,1705.94 407.522,1705.94C409.872,1705.94 417.356,1713.13 417.947,1715.9C418.538,1718.66 410.683,1722.17 411.071,1722.51C415.806,1726.7 420.658,1730.76 425.626,1734.68\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M390.796,1703.1C382.907,1712.04 374.252,1718.16 365.46,1722.35C364.283,1722.9 364.647,1709.14 361.827,1707.74C359.008,1706.35 350.07,1710.73 348.544,1713.96C347.017,1717.19 354.373,1726.67 352.666,1727.16C340.43,1730.67 328.519,1731.25 318.634,1731.3C316.655,1725.44 315.03,1719.5 313.776,1713.5C313.476,1712.08 323.064,1715.4 324.403,1713.03C325.742,1710.65 323.917,1701.19 321.811,1699.26C319.706,1697.34 311.932,1702.78 311.768,1701.45C310.553,1691.67 310.338,1681.77 311.192,1671.82C312.128,1660.9 314.313,1650.36 317.639,1640.24C320.245,1632.3 323.55,1624.64 327.505,1617.25C330.105,1621.84 332.773,1626.38 335.511,1630.87C336.376,1632.29 339.834,1619.87 343.02,1620.48C346.206,1621.09 354.665,1630.84 354.628,1634.49C354.592,1638.16 341.994,1641.18 342.801,1642.43C351.923,1656.43 361.765,1669.85 372.357,1682.54C378.268,1689.62 384.412,1696.49 390.796,1703.1\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M390.796,1703.1C382.907,1712.04 374.252,1718.16 365.46,1722.35C364.283,1722.9 364.647,1709.14 361.827,1707.74C359.008,1706.35 350.07,1710.73 348.544,1713.96C347.017,1717.19 354.373,1726.67 352.666,1727.16C340.43,1730.67 328.519,1731.25 318.634,1731.3C322.803,1743.66 328.542,1755.71 335.693,1767.3L476.069,1767.3C467.145,1762.67 458.518,1757.65 450.184,1752.26C449.398,1751.75 461.765,1749.25 461.102,1748.54C460.603,1748 453.907,1739.8 450.88,1739.61C447.852,1739.43 443.738,1747.98 442.937,1747.42C437.015,1743.36 431.246,1739.11 425.626,1734.68C420.658,1730.76 415.806,1726.7 411.071,1722.51C410.683,1722.17 418.538,1718.66 417.947,1715.9C417.356,1713.13 409.872,1705.94 407.522,1705.94C405.173,1705.94 404.467,1716.47 403.849,1715.9C402.289,1714.45 400.969,1713.23 400.505,1712.78C397.209,1709.62 393.973,1706.39 390.796,1703.1\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M649.265,1592.55C651.562,1585.84 652.996,1577.94 653.711,1569.03C653.81,1567.8 644.312,1570.38 642.517,1568.08C640.722,1565.78 640.997,1556.63 642.944,1555.23C644.89,1553.83 654.177,1560.37 654.196,1559.65C654.472,1548.85 653.892,1536.85 652.666,1523.92C661.332,1526.44 669.803,1529.26 678.057,1532.35C679.274,1532.81 677.885,1520.25 680.414,1518.73C682.943,1517.22 692.149,1520.4 693.228,1523.25C694.308,1526.09 686.033,1535.45 686.891,1535.8C696.581,1539.74 705.948,1544.06 714.952,1548.73C712.131,1562.26 707.879,1573.11 703.202,1581.81C702.819,1582.53 712.523,1583.49 713.157,1585.7C713.792,1587.92 709.294,1594.69 707.008,1595.12C704.727,1595.53 699.943,1587.46 699.469,1588.21C692.638,1599 685.472,1605.84 680.783,1610.31C679.153,1608.77 677.448,1607.29 675.672,1605.87C674.873,1605.23 674.572,1618.55 672.176,1619.11C669.78,1619.67 661.983,1612.34 661.296,1609.24C660.609,1606.14 668.809,1600.97 668.055,1600.5C661.861,1596.68 655.497,1594.04 649.265,1592.55\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M701.39,1678.97C700.808,1680.33 700.148,1681.65 699.409,1682.92C697.28,1686.6 694.629,1689.69 691.571,1692.19C690.786,1692.84 689.823,1678.6 687.267,1677.13C684.71,1675.66 677.067,1679.97 676.231,1683.38C675.395,1686.78 683.527,1697.08 682.251,1697.57C677.279,1699.47 671.759,1700.31 665.963,1700.07C654.239,1699.59 641.386,1694.71 629.66,1685.35C629.179,1684.97 628.703,1684.57 628.231,1684.18C620.011,1677.3 613.416,1669 608.73,1660.19C608.161,1659.12 622.215,1658.35 623.295,1655.3C624.375,1652.25 618.388,1642.78 615.21,1641.89C612.033,1641 604.752,1651.45 604.23,1649.97C601.826,1643.14 600.564,1636.23 600.564,1629.63C600.564,1621.9 602.286,1614.58 605.924,1608.3C606.41,1607.46 609.686,1616.65 612.203,1616.5C614.721,1616.35 621.299,1609.81 621.033,1607.38C620.767,1604.96 610.041,1602.58 610.606,1601.97C617.88,1594.23 628.301,1590.6 639.772,1591.17C642.873,1591.32 646.051,1591.78 649.265,1592.55C655.497,1594.04 661.861,1596.68 668.055,1600.5C668.809,1600.97 660.609,1606.14 661.296,1609.24C661.983,1612.34 669.78,1619.67 672.176,1619.11C674.572,1618.55 674.873,1605.23 675.672,1605.87C677.448,1607.29 679.153,1608.77 680.783,1610.31C693.582,1622.42 701.784,1638.07 704.097,1653.06C705.517,1662.27 704.715,1671.23 701.39,1678.97\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M754.26,1630.92C748.524,1635.87 742.654,1640.08 736.62,1643.45C735.868,1643.87 745.185,1653.3 743.838,1656.47C742.49,1659.63 731.503,1663.76 728.533,1662.43C725.555,1661.1 727.396,1647.93 725.978,1648.47C718.902,1651.18 711.621,1652.75 704.097,1653.06C701.784,1638.07 693.582,1622.42 680.783,1610.31C685.472,1605.84 692.638,1599 699.469,1588.21C699.943,1587.46 704.727,1595.53 707.008,1595.12C709.294,1594.69 713.792,1587.92 713.157,1585.7C712.523,1583.49 702.819,1582.53 703.202,1581.81C707.879,1573.11 712.131,1562.26 714.952,1548.73C717.326,1549.96 719.677,1551.22 721.997,1552.5C727.067,1555.29 732.004,1558.2 736.816,1561.21C737.341,1561.54 736.064,1550.09 738.532,1549.3C741.001,1548.49 750.914,1553.74 751.666,1556.39C752.411,1559.04 742.302,1564.72 743.03,1565.2C749.668,1569.58 756.039,1574.17 762.128,1578.96C769.792,1584.98 777.01,1591.3 783.718,1597.89C779.753,1603.35 775.732,1608.5 771.642,1613.27C770.983,1614.05 780.56,1616.9 780.489,1619.79C780.411,1622.68 773.428,1630.84 771.187,1630.62C768.938,1630.41 767.473,1618 767.026,1618.48C762.849,1623.03 758.594,1627.19 754.26,1630.92\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M701.39,1678.97C710.908,1684.09 718.29,1690.34 724.027,1697.47C724.646,1698.24 714.364,1702.88 713.996,1705.53C713.635,1708.18 719.403,1713.65 721.825,1713.36C724.238,1713.05 728.039,1702.99 728.509,1703.72C739.888,1721.59 742.929,1743.9 743.908,1767.3L783.718,1767.3C786.868,1746.94 786.139,1725.34 781.202,1702.4C781.014,1701.51 794.454,1703.81 796.476,1701.05C798.49,1698.29 796.272,1687.36 793.318,1685.87C790.355,1684.37 779.094,1693.47 778.726,1692.07C773.577,1672.65 765.482,1652.29 754.26,1630.92C748.524,1635.87 742.654,1640.08 736.62,1643.45C735.868,1643.87 745.185,1653.3 743.838,1656.47C742.49,1659.63 731.503,1663.76 728.533,1662.43C725.555,1661.1 727.396,1647.93 725.978,1648.47C718.902,1651.18 711.621,1652.75 704.097,1653.06C705.517,1662.27 704.715,1671.23 701.39,1678.97\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M754.26,1630.92C765.482,1652.29 773.577,1672.65 778.726,1692.07C779.094,1693.47 790.355,1684.37 793.318,1685.87C796.272,1687.36 798.49,1698.29 796.476,1701.05C794.454,1703.81 781.014,1701.51 781.202,1702.4C786.139,1725.34 786.868,1746.94 783.718,1767.3L834.593,1767.3C837.375,1759.08 839.397,1750.57 840.611,1741.82C840.713,1741.13 831.678,1745.8 830.306,1744.37C828.943,1742.93 830.557,1734.85 832.407,1733.22C834.264,1731.58 841.34,1735.55 841.434,1734.54C841.779,1730.53 841.944,1726.51 841.944,1722.51C841.951,1709.03 840.024,1695.7 836.348,1682.68C836.066,1681.68 828.371,1689.78 826.051,1688.24C823.739,1686.68 821.271,1676.01 822.438,1673.37C823.614,1670.73 833.543,1673.73 833.073,1672.41C828.433,1659.42 822.062,1646.79 814.147,1634.68C805.692,1621.75 795.473,1609.42 783.718,1597.89C779.753,1603.35 775.732,1608.5 771.642,1613.27C770.983,1614.05 780.56,1616.9 780.489,1619.79C780.411,1622.68 773.428,1630.84 771.187,1630.62C768.938,1630.41 767.473,1618 767.026,1618.48C762.849,1623.03 758.594,1627.19 754.26,1630.92\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M665.963,1700.07C666.142,1709.43 665.593,1719.34 664.38,1729.76C664.234,1731.01 656.041,1723.77 653.716,1725.37C651.392,1726.96 648.925,1736.62 650.433,1739.32C651.94,1742.01 662.994,1740.06 662.764,1741.53C661.459,1749.84 659.773,1758.43 657.736,1767.3L743.908,1767.3C742.929,1743.9 739.888,1721.59 728.509,1703.72C728.039,1702.99 724.238,1713.05 721.825,1713.36C719.403,1713.65 713.635,1708.18 713.996,1705.53C714.364,1702.88 724.646,1698.24 724.027,1697.47C718.29,1690.34 710.908,1684.09 701.39,1678.97C700.808,1680.33 700.148,1681.65 699.409,1682.92C697.28,1686.6 694.629,1689.69 691.571,1692.19C690.786,1692.84 689.823,1678.6 687.267,1677.13C684.71,1675.66 677.067,1679.97 676.231,1683.38C675.395,1686.78 683.527,1697.08 682.251,1697.57C677.279,1699.47 671.759,1700.31 665.963,1700.07\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M819.304,1198.37C824.954,1208.43 835.902,1223.1 850.877,1215.13C871.762,1204.02 880.648,1212.87 892.975,1232.15C899.997,1228.84 907.175,1225.77 914.408,1222.89C915.372,1222.51 907.591,1213.64 908.562,1210.36C909.526,1207.06 917.574,1201.7 920.223,1203.15C922.88,1204.59 923.389,1219.44 924.478,1219.03C938.161,1213.97 951.922,1209.6 965.182,1205.74C961.835,1200.59 958.419,1195.57 954.931,1190.66C954.594,1190.18 951.256,1199.18 948.866,1199.31C946.484,1199.45 940.199,1193.71 940.63,1191.46C941.068,1189.22 951.852,1186.38 951.46,1185.85C949.751,1183.51 948.027,1181.2 946.28,1178.93C937.675,1167.67 928.671,1157.07 919.259,1147.17C911.431,1151.76 903.516,1156.24 895.507,1160.62C889.708,1163.79 883.861,1166.92 877.968,1169.99C876.456,1170.78 873.987,1155.91 870.586,1155.17C867.185,1154.43 858.22,1162.11 857.57,1165.54C856.919,1168.98 867.773,1175.24 866.684,1175.79C860.563,1178.89 854.404,1181.93 848.205,1184.93C838.66,1189.53 829.021,1194.01 819.304,1198.37\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M892.975,1232.15C880.648,1212.87 871.762,1204.02 850.877,1215.13C835.902,1223.1 824.954,1208.43 819.304,1198.37C813.74,1200.86 808.144,1203.32 802.526,1205.74C798.842,1207.32 795.144,1208.89 791.437,1210.44C790.395,1210.88 798.09,1218.71 796.664,1221.17C795.238,1223.62 785.489,1226.21 782.879,1225.14C780.278,1224.08 782.221,1214.26 781.014,1214.74C770.357,1219.1 759.62,1223.31 748.806,1227.41C752.944,1240.94 759.205,1253.25 769.181,1263.78C770.349,1265.03 759.809,1269.51 759.652,1272.83C759.503,1276.15 765.286,1283.94 768.256,1283.71C771.226,1283.48 776.547,1270.68 777.488,1271.43C787.393,1279.41 800.136,1286.07 816.608,1291.14C820.714,1285.23 825.361,1279.68 830.455,1274.46C831.49,1273.4 822.595,1269.3 822.932,1265.61C823.269,1261.91 829.609,1252.34 832.485,1252.29C835.353,1252.24 839.052,1266.3 840.165,1265.34C855.446,1252.14 873.65,1241.27 892.975,1232.15\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M728.329,1345.95C736.965,1344.56 745.812,1343.53 754.848,1342.83C756.164,1342.72 750.663,1330.82 752.748,1328.29C754.832,1325.76 765.482,1325.3 767.355,1327.62C769.228,1329.95 763.084,1342.28 763.978,1342.23C774.808,1341.65 785.912,1341.53 797.275,1341.83C797.487,1340.09 797.73,1338.37 798.004,1336.66C800.833,1319.48 807.369,1304.41 816.608,1291.14C800.136,1286.07 787.393,1279.41 777.488,1271.43C776.547,1270.68 771.226,1283.48 768.256,1283.71C765.286,1283.94 759.503,1276.15 759.652,1272.83C759.809,1269.51 770.349,1265.03 769.181,1263.78C759.205,1253.25 752.944,1240.94 748.806,1227.41C745.397,1228.69 741.98,1229.96 738.564,1231.23C729.693,1234.5 720.775,1237.69 711.817,1240.8C714.733,1252.36 718.032,1266.14 720.916,1280.43C721.182,1281.76 710.548,1278.91 708.583,1281.56C706.622,1284.22 706.784,1295 709.137,1296.37C711.496,1297.74 722.569,1288.97 722.718,1289.78C726.401,1309.74 729.073,1329.95 728.329,1345.95\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M728.329,1345.95C729.073,1329.95 726.401,1309.74 722.718,1289.78C722.569,1288.97 711.496,1297.74 709.137,1296.37C706.784,1295 706.622,1284.22 708.583,1281.56C710.548,1278.91 721.182,1281.76 720.916,1280.43C718.032,1266.14 714.733,1252.36 711.817,1240.8C706.035,1242.8 700.234,1244.78 694.418,1246.71C693.144,1247.14 695.418,1233.91 692.765,1232.55C690.113,1231.19 680.337,1235.51 678.505,1238.56C676.672,1241.62 683.311,1250.38 681.769,1250.87C675.641,1252.86 669.498,1254.81 663.342,1256.73C656.034,1258.99 648.709,1261.22 641.368,1263.39C642.127,1276.15 645.021,1290.98 649.072,1305.91C649.426,1307.22 656.821,1299.76 659.489,1300.76C662.158,1301.75 666.36,1309.4 665.082,1311.86C663.806,1314.31 651.509,1314.45 651.827,1315.5C656.948,1332.43 663.297,1348.97 669.44,1362.23C673.859,1360.4 678.351,1358.7 682.914,1357.13C683.813,1356.83 679.978,1371.62 681.958,1373.36C683.937,1375.1 693.314,1370.72 694.793,1367.58C696.273,1364.45 690.127,1354.78 690.834,1354.55C696.82,1352.72 702.923,1351.09 709.137,1349.67C715.422,1348.22 721.817,1346.99 728.329,1345.95\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M621.44,1389.52C636.309,1378.33 652.332,1369.3 669.44,1362.23C663.297,1348.97 656.948,1332.43 651.827,1315.5C651.509,1314.45 663.806,1314.31 665.082,1311.86C666.36,1309.4 662.158,1301.75 659.489,1300.76C656.821,1299.76 649.426,1307.22 649.072,1305.91C645.021,1290.98 642.127,1276.15 641.368,1263.39C632.554,1265.99 623.719,1268.53 614.867,1271C613.651,1271.34 622.112,1280.37 620.991,1283.09C619.869,1285.8 610.746,1288.9 608.138,1287.32C605.529,1285.74 606.498,1273.31 605.341,1273.63C595.56,1276.3 585.764,1278.88 575.959,1281.4C573.659,1281.99 571.359,1282.57 569.058,1283.14C572.988,1289.36 576.799,1295.65 580.488,1302.01C581.119,1303.1 587.828,1293.64 590.476,1293.84C593.124,1294.03 597.487,1300.85 596.376,1303.18C595.264,1305.51 583.613,1307.48 583.806,1307.82C589.379,1317.71 594.661,1327.78 599.641,1338.05C601.84,1342.58 603.981,1347.15 606.061,1351.77C606.611,1352.98 611.905,1344.05 614.541,1344.69C617.177,1345.33 622.693,1353.07 621.879,1355.61C621.065,1358.14 609.298,1359.08 609.659,1359.91C613.848,1369.61 617.778,1379.48 621.44,1389.52\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M641.932,1459.63C653.563,1455.26 666.008,1451.51 678.975,1448.48C679.897,1448.26 677.019,1461.22 679.31,1463.09C681.599,1464.94 691.477,1462.35 692.716,1459.63C693.955,1456.91 686.033,1446.91 686.745,1446.76C699.479,1444.11 712.648,1442.15 725.986,1440.97C724.599,1427.14 722.538,1411.63 719.724,1395.86C719.544,1394.84 734.536,1398.62 736.456,1396.33C738.368,1394.03 734.324,1383.81 731.221,1382.07C728.117,1380.32 718.134,1387.3 717.844,1385.85C715.414,1373.57 712.523,1361.29 709.137,1349.67C702.923,1351.09 696.82,1352.72 690.834,1354.55C690.127,1354.78 696.273,1364.45 694.793,1367.58C693.314,1370.72 683.937,1375.1 681.958,1373.36C679.978,1371.62 683.813,1356.83 682.914,1357.13C678.351,1358.7 673.859,1360.4 669.44,1362.23C652.332,1369.3 636.309,1378.33 621.44,1389.52C622.226,1391.67 623.001,1393.84 623.762,1396.01C626.185,1402.92 628.482,1409.9 630.651,1416.98C631.053,1418.29 639.284,1408.15 641.932,1409.22C644.579,1410.31 647.89,1420.41 646.535,1423.48C645.179,1426.54 633.463,1426.44 633.796,1427.61C636.266,1436.28 638.548,1445.06 640.635,1453.97C641.076,1455.85 641.508,1457.74 641.932,1459.63\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M725.986,1440.97C733.564,1440.31 741.189,1439.89 748.829,1439.76C749.825,1439.74 745.828,1453.27 747.92,1455.96C750.005,1458.67 759.769,1458.66 761.352,1455.95C762.935,1453.24 756.572,1439.7 757.418,1439.71C766.399,1439.79 775.372,1440.25 784.243,1441.13C784.243,1425.25 790.967,1409.69 802.298,1397.28C798.553,1383.5 796.695,1370.68 796.468,1358.74C796.452,1357.95 811.64,1362.75 814.288,1360.41C816.937,1358.09 815.291,1346.4 812.337,1344.77C809.383,1343.14 796.523,1351.6 796.562,1350.65C796.695,1347.65 796.938,1344.72 797.275,1341.83C785.912,1341.53 774.808,1341.65 763.978,1342.23C763.084,1342.28 769.228,1329.95 767.355,1327.62C765.482,1325.3 754.832,1325.76 752.748,1328.29C750.663,1330.82 756.164,1342.72 754.848,1342.83C745.812,1343.53 736.965,1344.56 728.329,1345.95C721.817,1346.99 715.422,1348.22 709.137,1349.67C712.523,1361.29 715.414,1373.57 717.844,1385.85C718.134,1387.3 728.117,1380.32 731.221,1382.07C734.324,1383.81 738.368,1394.03 736.456,1396.33C734.536,1398.62 719.544,1394.84 719.724,1395.86C722.538,1411.63 724.599,1427.14 725.986,1440.97\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M983.754,1236.78C977.822,1226 971.633,1215.64 965.182,1205.74C951.922,1209.6 938.161,1213.97 924.478,1219.03C923.389,1219.44 922.88,1204.59 920.223,1203.15C917.574,1201.7 909.526,1207.06 908.562,1210.36C907.591,1213.64 915.372,1222.51 914.408,1222.89C907.175,1225.77 899.997,1228.84 892.975,1232.15C873.65,1241.27 855.446,1252.14 840.165,1265.34C839.052,1266.3 835.353,1252.24 832.485,1252.29C829.609,1252.34 823.269,1261.91 822.932,1265.61C822.595,1269.3 831.49,1273.4 830.455,1274.46C825.361,1279.68 820.714,1285.23 816.608,1291.14C827.633,1295.31 837.647,1300.11 846.136,1305.86C857.437,1296.59 869.771,1288.29 882.898,1280.73C883.948,1280.13 884.825,1295.37 887.466,1296.4C890.115,1297.41 898.046,1290.29 898.759,1286.85C899.464,1283.43 890.977,1276.22 891.737,1275.81C898.735,1272.05 905.921,1268.46 913.264,1265.03C925.811,1259.16 938.819,1253.73 952.11,1248.55C953.92,1247.85 955.746,1247.14 957.58,1246.44C958.379,1246.13 957.917,1258.2 960.299,1259.64C962.682,1261.1 971.114,1257.81 971.874,1255.15C972.634,1252.49 964.194,1243.93 964.845,1243.69C971.106,1241.35 977.414,1239.05 983.754,1236.78\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M983.754,1236.78C977.414,1239.05 971.106,1241.35 964.845,1243.69C964.194,1243.93 972.634,1252.49 971.874,1255.15C971.114,1257.81 962.682,1261.1 960.299,1259.64C957.917,1258.2 958.379,1246.13 957.58,1246.44C955.746,1247.14 953.92,1247.85 952.11,1248.55C938.819,1253.73 925.811,1259.16 913.264,1265.03C928.773,1292.15 944.281,1319.28 959.798,1346.41C964.899,1344.91 969.837,1343.03 974.593,1340.78C977.893,1339.21 981.106,1337.47 984.232,1335.54C985.22,1334.93 976.874,1329.96 977.571,1327.1C978.277,1324.24 986.05,1317.82 988.441,1318.35C990.823,1318.89 991.152,1330.88 991.889,1330.32C1000.64,1323.76 1008.64,1315.62 1015.88,1305.86C1013.06,1298.67 1010.16,1291.63 1007.17,1284.73C1006.9,1284.1 1000.72,1297.15 997.978,1296.76C995.243,1296.4 989.734,1285.64 990.752,1282.46C991.763,1279.29 1004.47,1278.6 1004.08,1277.71C1000.93,1270.69 997.696,1263.83 994.373,1257.12C990.93,1250.18 987.39,1243.4 983.754,1236.78\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M816.608,1291.14C827.633,1295.31 837.647,1300.11 846.136,1305.86C856.027,1312.55 863.846,1320.54 868.776,1330.31C869.387,1331.52 855.571,1329.68 854.098,1332.86C852.617,1336.04 856.763,1347.85 859.929,1349.4C863.095,1350.96 872.726,1340.67 873.078,1342.16C875.124,1350.84 875.249,1360.69 873.078,1371.97C863.682,1370.48 853.557,1370.81 843.252,1373.29C841.944,1373.6 840.643,1373.95 839.365,1374.32C824.593,1378.64 811.82,1386.85 802.298,1397.28C798.553,1383.5 796.695,1370.68 796.468,1358.74C796.452,1357.95 811.64,1362.75 814.288,1360.41C816.937,1358.09 815.291,1346.4 812.337,1344.77C809.383,1343.14 796.523,1351.6 796.562,1350.65C796.695,1347.65 796.938,1344.72 797.275,1341.83C797.487,1340.09 797.73,1338.37 798.004,1336.66C800.833,1319.48 807.369,1304.41 816.608,1291.14\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M959.798,1346.41C944.281,1319.28 928.773,1292.15 913.264,1265.03C905.921,1268.46 898.735,1272.05 891.737,1275.81C890.977,1276.22 899.464,1283.43 898.759,1286.85C898.046,1290.29 890.115,1297.41 887.466,1296.4C884.825,1295.37 883.948,1280.13 882.898,1280.73C869.771,1288.29 857.437,1296.59 846.136,1305.86C856.027,1312.55 863.846,1320.54 868.776,1330.31C869.387,1331.52 855.571,1329.68 854.098,1332.86C852.617,1336.04 856.763,1347.85 859.929,1349.4C863.095,1350.96 872.726,1340.67 873.078,1342.16C875.124,1350.84 875.249,1360.69 873.078,1371.97C881.597,1373.33 889.519,1376.18 896.447,1380.3C899.856,1372.21 905.208,1365.97 911.587,1361.3C912.802,1360.41 903.547,1351.97 904.55,1348.48C905.553,1344.99 914.902,1339.13 917.614,1340.36C920.325,1341.6 919.886,1356.31 920.819,1355.87C927.37,1352.81 934.439,1350.97 941.319,1350.12C947.714,1349.38 953.873,1348.15 959.798,1346.41\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M955.864,1398.13C965.197,1392.77 973.755,1389.84 981.654,1388.44C982.853,1388.23 979.57,1398.89 982.015,1401.01C984.467,1403.12 994.827,1403.39 996.356,1401.12C997.891,1398.85 990.408,1387.44 991.207,1387.41C1013.09,1386.57 1029.6,1395.88 1043.73,1391.55C1041.35,1382.58 1038.86,1373.79 1036.28,1365.15C1036.08,1364.51 1026.35,1372.73 1024.11,1371.18C1021.87,1369.64 1021.32,1358.45 1022.87,1355.88C1024.42,1353.3 1033.74,1356.85 1033.38,1355.69C1031.13,1348.52 1028.82,1341.45 1026.42,1334.5C1023.06,1324.71 1019.54,1315.17 1015.88,1305.86C1008.64,1315.62 1000.64,1323.76 991.889,1330.32C991.152,1330.88 990.823,1318.89 988.441,1318.35C986.05,1317.82 978.277,1324.24 977.571,1327.1C976.874,1329.96 985.22,1334.93 984.232,1335.54C981.106,1337.47 977.893,1339.21 974.593,1340.78C969.837,1343.03 964.899,1344.91 959.798,1346.41C953.873,1348.15 947.714,1349.38 941.319,1350.12C942.119,1372.63 949.595,1383.73 955.864,1398.13\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M893.422,1481.65C903.273,1487.33 917.402,1495.49 930.834,1504.3C940.904,1490.97 948.286,1479.22 953.458,1468.6C954.132,1467.2 943.09,1466.68 941.805,1463.05C940.52,1459.4 943.067,1447.51 945.739,1446.75C948.411,1445.99 957.549,1459.26 957.839,1458.48C963.152,1444.44 964.327,1432.35 962.674,1420.87C961.553,1413.14 959.155,1405.7 955.864,1398.13C949.595,1383.73 942.119,1372.63 941.319,1350.12C934.439,1350.97 927.37,1352.81 920.819,1355.87C919.886,1356.31 920.325,1341.6 917.614,1340.36C914.902,1339.13 905.553,1344.99 904.55,1348.48C903.547,1351.97 912.802,1360.41 911.587,1361.3C905.208,1365.97 899.856,1372.21 896.447,1380.3C908.241,1387.33 917.143,1398.05 921.132,1411.35C921.43,1412.34 907.975,1407.25 905.694,1409.77C903.422,1412.3 904.581,1424.64 907.481,1426.51C910.38,1428.37 922.966,1419.83 923.091,1420.94C925.67,1443.92 913.648,1466.99 893.422,1481.65\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M873.078,1492.39C864.223,1475.37 856.849,1457.09 851.144,1437.37C850.791,1436.15 870.046,1436.88 872.216,1433.66C874.387,1430.44 868.204,1419.4 864.176,1418.1C860.148,1416.79 848.37,1427.14 848.048,1425.83C844.012,1409.63 841.082,1392.49 839.365,1374.32C840.643,1373.95 841.944,1373.6 843.252,1373.29C853.557,1370.81 863.682,1370.48 873.078,1371.97C881.597,1373.33 889.519,1376.18 896.447,1380.3C908.241,1387.33 917.143,1398.05 921.132,1411.35C921.43,1412.34 907.975,1407.25 905.694,1409.77C903.422,1412.3 904.581,1424.64 907.481,1426.51C910.38,1428.37 922.966,1419.83 923.091,1420.94C925.67,1443.92 913.648,1466.99 893.422,1481.65C887.333,1486.07 880.492,1489.73 873.078,1492.39\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M839.365,1374.32C841.082,1392.49 844.012,1409.63 848.048,1425.83C848.37,1427.14 860.148,1416.79 864.176,1418.1C868.204,1419.4 874.387,1430.44 872.216,1433.66C870.046,1436.88 850.791,1436.15 851.144,1437.37C856.849,1457.09 864.223,1475.37 873.078,1492.39C870.273,1493.41 867.381,1494.27 864.427,1494.98C860.822,1495.84 857.233,1496.44 853.699,1496.8C837.939,1498.38 823.065,1495.04 811.162,1487.92C802.549,1482.78 795.488,1475.65 790.755,1467C790.465,1466.46 805.323,1466.72 807.118,1464.55C808.905,1462.38 804.634,1454.42 801.499,1453.98C798.364,1453.54 788.569,1462.51 788.318,1461.91C786.853,1458.36 785.748,1454.58 785.066,1450.63C784.509,1447.46 784.243,1444.28 784.243,1441.13C784.243,1425.25 790.967,1409.69 802.298,1397.28C811.82,1386.85 824.593,1378.64 839.365,1374.32\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M784.243,1441.13C775.372,1440.25 766.399,1439.79 757.418,1439.71C756.572,1439.7 762.935,1453.24 761.352,1455.95C759.769,1458.66 750.005,1458.67 747.92,1455.96C745.828,1453.27 749.825,1439.74 748.829,1439.76C741.189,1439.89 733.564,1440.31 725.986,1440.97C726.26,1443.71 726.519,1446.38 726.738,1448.98C727.757,1460.92 728.227,1471.84 728.196,1482.49C728.188,1483.44 716.347,1477.95 713.878,1480.54C711.402,1483.13 710.994,1496.08 713.353,1498.03C715.712,1499.96 728.047,1491.48 728.023,1492.16C727.443,1510.91 725.335,1529.59 721.997,1552.5C727.067,1555.29 732.004,1558.2 736.816,1561.21C737.341,1561.54 736.064,1550.09 738.532,1549.3C741.001,1548.49 750.914,1553.74 751.666,1556.39C752.411,1559.04 742.302,1564.72 743.03,1565.2C749.668,1569.58 756.039,1574.17 762.128,1578.96C767.112,1572.54 771.94,1565.75 776.602,1558.57C777.253,1557.56 779.58,1567.63 781.774,1567.4C783.969,1567.17 789.924,1559.79 789.776,1557.18C789.635,1554.56 780.34,1552.66 780.905,1551.74C785.246,1544.64 789.423,1537.16 793.42,1529.27C799.814,1516.62 805.754,1502.89 811.162,1487.92C802.549,1482.78 795.488,1475.65 790.755,1467C790.465,1466.46 805.323,1466.72 807.118,1464.55C808.905,1462.38 804.634,1454.42 801.499,1453.98C798.364,1453.54 788.569,1462.51 788.318,1461.91C786.853,1458.36 785.748,1454.58 785.066,1450.63C784.509,1447.46 784.243,1444.28 784.243,1441.13\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M725.986,1440.97C712.648,1442.15 699.479,1444.11 686.745,1446.76C686.033,1446.91 693.955,1456.91 692.716,1459.63C691.477,1462.35 681.599,1464.94 679.31,1463.09C677.019,1461.22 679.897,1448.26 678.975,1448.48C666.008,1451.51 653.563,1455.26 641.932,1459.63C643.55,1466.87 645.042,1474.18 646.405,1481.58C646.638,1482.85 654.364,1478.07 656.626,1479.79C658.888,1481.51 661.38,1489.91 659.975,1491.91C658.572,1493.93 648.026,1490.78 648.202,1491.84C649.43,1499.21 650.53,1506.67 651.502,1514.21C651.917,1517.43 652.299,1520.67 652.666,1523.92C661.332,1526.44 669.803,1529.26 678.057,1532.35C679.274,1532.81 677.885,1520.25 680.414,1518.73C682.943,1517.22 692.149,1520.4 693.228,1523.25C694.308,1526.09 686.033,1535.45 686.891,1535.8C696.581,1539.74 705.948,1544.06 714.952,1548.73C717.326,1549.96 719.677,1551.22 721.997,1552.5C725.335,1529.59 727.443,1510.91 728.023,1492.16C728.047,1491.48 715.712,1499.96 713.353,1498.03C710.994,1496.08 711.402,1483.13 713.878,1480.54C716.347,1477.95 728.188,1483.44 728.196,1482.49C728.227,1471.84 727.757,1460.92 726.738,1448.98C726.519,1446.38 726.26,1443.71 725.986,1440.97\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M875.813,1630.1C883.43,1621.34 884.888,1607.13 886.212,1592.5C886.283,1591.68 897.144,1600.86 899.323,1599.39C901.502,1597.91 901.306,1586.38 899.268,1583.67C897.231,1580.96 886.988,1584.11 887.098,1583.11C888.509,1569.74 890.891,1556.94 898.908,1548.6C889.982,1539.69 881.33,1530.44 873.078,1520.87C872.389,1520.07 866.911,1532.69 863.972,1532.35C861.041,1532.02 855.125,1522.17 855.462,1518.86C855.799,1515.54 866.974,1513.65 865.994,1512.45C861.77,1507.32 857.664,1502.1 853.699,1496.8C837.939,1498.38 823.065,1495.04 811.162,1487.92C805.754,1502.89 799.814,1516.62 793.42,1529.27C805.159,1536.62 815.025,1543.98 823.112,1551.33C823.481,1551.67 815.37,1555.94 815.464,1558.95C815.558,1561.95 821.553,1569.83 823.677,1569.37C825.8,1568.91 827.344,1555.35 828.19,1556.2C849.631,1577.8 855.885,1599.4 849.232,1620.99C857.57,1622.06 866.48,1625.28 875.813,1630.1\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M849.232,1620.99C855.885,1599.4 849.631,1577.8 828.19,1556.2C827.344,1555.35 825.8,1568.91 823.677,1569.37C821.553,1569.83 815.558,1561.95 815.464,1558.95C815.37,1555.94 823.481,1551.67 823.112,1551.33C815.025,1543.98 805.159,1536.62 793.42,1529.27C789.423,1537.16 785.246,1544.64 780.905,1551.74C780.34,1552.66 789.635,1554.56 789.776,1557.18C789.924,1559.79 783.969,1567.17 781.774,1567.4C779.58,1567.63 777.253,1557.56 776.602,1558.57C771.94,1565.75 767.112,1572.54 762.128,1578.96C769.792,1584.98 777.01,1591.3 783.718,1597.89C795.473,1609.42 805.692,1621.75 814.147,1634.68C818.136,1629.96 822.478,1626.53 827.109,1624.24C828.002,1623.81 828.089,1636.05 830.643,1637.85C833.206,1639.67 841.771,1637.84 842.477,1635.11C843.174,1632.39 833.872,1621.73 834.844,1621.51C839.412,1620.48 844.216,1620.35 849.232,1620.99\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M968.473,1552.12C963.379,1564.9 947.385,1577.19 938.138,1584.3C929.972,1577.51 921.877,1570.42 913.923,1563.05C913.484,1562.63 924.533,1557.87 924.682,1555.02C924.831,1552.16 917.3,1545.25 914.808,1545.93C912.308,1546.61 910.302,1559.66 909.707,1559.09C906.07,1555.66 902.466,1552.15 898.908,1548.6C889.982,1539.69 881.33,1530.44 873.078,1520.87C872.389,1520.07 866.911,1532.69 863.972,1532.35C861.041,1532.02 855.125,1522.17 855.462,1518.86C855.799,1515.54 866.974,1513.65 865.994,1512.45C861.77,1507.32 857.664,1502.1 853.699,1496.8C857.233,1496.44 860.822,1495.84 864.427,1494.98C867.381,1494.27 870.273,1493.41 873.078,1492.39C880.492,1489.73 887.333,1486.07 893.422,1481.65C903.273,1487.33 917.402,1495.49 930.834,1504.3C934.376,1506.63 937.879,1508.99 941.233,1511.38C941.97,1511.9 934.838,1515.9 935.105,1518.49C935.363,1521.08 940.59,1527.22 942.824,1526.93C945.057,1526.63 947.628,1516.07 948.49,1516.73C954.9,1521.67 960.409,1526.53 964.226,1531.06C966.255,1533.46 967.799,1535.77 968.739,1537.93C970.761,1542.57 970.369,1547.39 968.473,1552.12\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1043.73,1391.55C1029.6,1395.88 1013.09,1386.57 991.207,1387.41C990.408,1387.44 997.891,1398.85 996.356,1401.12C994.827,1403.39 984.467,1403.12 982.015,1401.01C979.57,1398.89 982.853,1388.23 981.654,1388.44C973.755,1389.84 965.197,1392.77 955.864,1398.13C959.155,1405.7 961.553,1413.14 962.674,1420.87C978.386,1422.7 991.575,1428.66 1002.02,1439.1C1003.05,1440.12 993.08,1446.37 993.041,1449.79C992.994,1453.2 999.318,1460.29 1001.77,1459.6C1004.23,1458.92 1007.39,1445.16 1007.78,1445.66C1016.9,1457.52 1023.4,1473.66 1027.08,1494.41C1038.89,1491.55 1051.49,1490.07 1064.79,1489.85C1062.87,1478.41 1060.81,1467.17 1058.63,1456.15C1058.53,1455.64 1048.56,1462.11 1045.62,1460.82C1042.66,1459.54 1038.99,1450.37 1040.94,1448.47C1042.88,1446.59 1057.46,1450.33 1057.29,1449.48C1055.31,1439.78 1053.23,1430.24 1051.04,1420.87C1048.72,1410.91 1046.28,1401.13 1043.73,1391.55\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1027.08,1494.41C1023.4,1473.66 1016.9,1457.52 1007.78,1445.66C1007.39,1445.16 1004.23,1458.92 1001.77,1459.6C999.318,1460.29 992.994,1453.2 993.041,1449.79C993.08,1446.37 1003.05,1440.12 1002.02,1439.1C991.575,1428.66 978.386,1422.7 962.674,1420.87C964.327,1432.35 963.152,1444.44 957.839,1458.48C957.549,1459.26 948.411,1445.99 945.739,1446.75C943.067,1447.51 940.52,1459.4 941.805,1463.05C943.09,1466.68 954.132,1467.2 953.458,1468.6C948.286,1479.22 940.904,1490.97 930.834,1504.3C934.376,1506.63 937.879,1508.99 941.233,1511.38C941.97,1511.9 934.838,1515.9 935.105,1518.49C935.363,1521.08 940.59,1527.22 942.824,1526.93C945.057,1526.63 947.628,1516.07 948.49,1516.73C954.9,1521.67 960.409,1526.53 964.226,1531.06C970.299,1524.42 976.858,1518.64 983.88,1513.69C984.648,1513.14 984.836,1523.1 987.39,1524.26C989.953,1525.42 998.487,1523.27 999.239,1520.64C999.992,1518.01 990.886,1509.1 991.904,1508.5C1002.68,1502.13 1014.43,1497.48 1027.08,1494.41\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1027.08,1564C1026.2,1574.51 1024.79,1584.4 1022.81,1593.65C1022.58,1594.74 1033.6,1588.18 1035.23,1591.28C1036.87,1594.39 1035.11,1610.22 1032.63,1612.29C1030.15,1614.35 1020.62,1602.81 1020.38,1603.68C1017.26,1615.16 1013.17,1625.5 1008.1,1634.68C1000.71,1630.11 993.158,1625.23 985.533,1620.03C976.098,1613.6 966.537,1606.69 956.992,1599.37C956.35,1598.87 954.775,1611.01 952.432,1611.54C950.096,1612.07 943.161,1605.33 942.941,1602.54C942.722,1599.75 951.797,1595.34 951.123,1594.81C946.781,1591.39 942.448,1587.88 938.138,1584.3C947.385,1577.19 963.379,1564.9 968.473,1552.12C975.792,1554.62 982.9,1556.72 989.804,1558.42C990.917,1558.7 988.064,1550.66 990.321,1548.89C992.586,1547.13 1001.85,1545.85 1003.42,1547.81C1005,1549.77 998.73,1560.44 999.764,1560.65C1009.29,1562.54 1018.38,1563.66 1027.08,1564\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M898.908,1548.6C890.891,1556.94 888.509,1569.74 887.098,1583.11C886.988,1584.11 897.231,1580.96 899.268,1583.67C901.306,1586.38 901.502,1597.91 899.323,1599.39C897.144,1600.86 886.283,1591.68 886.212,1592.5C884.888,1607.13 883.43,1621.34 875.813,1630.1C881.032,1632.78 886.377,1635.97 891.831,1639.56C892.96,1640.29 881.221,1647.72 881.456,1651.71C881.691,1655.71 890.139,1664.61 893.234,1663.53C896.329,1662.43 899.104,1644.52 900.028,1645.18C905.78,1649.27 911.642,1653.75 917.567,1658.5C926.265,1665.48 935.121,1673.02 944.039,1680.8C953.098,1680.81 960.879,1675.52 967.58,1665.74C968.026,1665.08 958.231,1663.91 957.463,1660.92C956.695,1657.94 960.73,1647.93 962.964,1647.84C965.205,1647.76 970.55,1660.98 970.887,1660.38C976.576,1650.25 981.411,1636.6 985.533,1620.03C976.098,1613.6 966.537,1606.69 956.992,1599.37C956.35,1598.87 954.775,1611.01 952.432,1611.54C950.096,1612.07 943.161,1605.33 942.941,1602.54C942.722,1599.75 951.797,1595.34 951.123,1594.81C946.781,1591.39 942.448,1587.88 938.138,1584.3C929.972,1577.51 921.877,1570.42 913.923,1563.05C913.484,1562.63 924.533,1557.87 924.682,1555.02C924.831,1552.16 917.3,1545.25 914.808,1545.93C912.308,1546.61 910.302,1559.66 909.707,1559.09C906.07,1555.66 902.466,1552.15 898.908,1548.6\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1016.39,1730.65C1015.22,1719.53 1015.49,1706.95 1017.65,1692.55C1017.79,1691.64 1028.31,1697.76 1030.95,1696.47C1033.6,1695.18 1035.48,1687.04 1033.52,1684.84C1031.57,1682.64 1018.94,1684.87 1019.25,1683.29C1021.41,1672.22 1024.61,1660.15 1029,1646.92C1022.21,1643.15 1015.22,1639.07 1008.1,1634.68C1000.71,1630.11 993.158,1625.23 985.533,1620.03C981.411,1636.6 976.576,1650.25 970.887,1660.38C970.55,1660.98 965.205,1647.76 962.964,1647.84C960.73,1647.93 956.695,1657.94 957.463,1660.92C958.231,1663.91 968.026,1665.08 967.58,1665.74C960.879,1675.52 953.098,1680.81 944.039,1680.8L944.039,1700.47C944.039,1701 954.657,1694.5 956.891,1695.86C959.132,1697.24 959.618,1706.92 957.478,1708.67C955.331,1710.44 944.039,1705.43 944.039,1706.45L944.039,1738.48C954.203,1736.31 964.672,1734.56 975.471,1733.27C976.576,1733.14 973.316,1742.34 975.769,1744.44C978.214,1746.55 988.715,1747.92 990.165,1745.9C991.614,1743.88 983.582,1732.4 984.452,1732.31C994.804,1731.34 1005.44,1730.77 1016.39,1730.65\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1029,1646.92C1024.61,1660.15 1021.41,1672.22 1019.25,1683.29C1018.94,1684.87 1031.57,1682.64 1033.52,1684.84C1035.48,1687.04 1033.6,1695.18 1030.95,1696.47C1028.31,1697.76 1017.79,1691.64 1017.65,1692.55C1015.49,1706.95 1015.22,1719.53 1016.39,1730.65C1025.19,1730.55 1034.17,1730.72 1043.38,1731.2C1044.53,1731.26 1036.04,1742.08 1037.36,1744.28C1038.67,1746.49 1048.81,1746.53 1051.27,1744.43C1053.71,1742.34 1051.16,1731.67 1052.05,1731.73C1063.16,1732.52 1074.58,1733.73 1086.32,1735.39C1086.19,1729.61 1086.04,1723.87 1085.87,1718.16C1085.61,1710 1085.32,1701.92 1085,1693.9C1084.97,1693.31 1074.85,1703.28 1072.79,1702.31C1070.72,1701.36 1070.66,1691 1072.63,1688.12C1074.6,1685.23 1084.67,1686.19 1084.61,1685.01C1084.41,1680.62 1084.2,1676.24 1083.97,1671.88C1076.52,1669.46 1068.23,1666.22 1059.32,1662.21C1058.51,1661.84 1059.9,1676.47 1057.61,1677.98C1055.31,1679.51 1046.4,1674.52 1045.55,1671.36C1044.7,1668.2 1053.35,1659.46 1052.5,1659.06C1045.01,1655.49 1037.15,1651.43 1029,1646.92\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1086.32,1735.39C1074.58,1733.73 1063.16,1732.52 1052.05,1731.73C1051.16,1731.67 1053.71,1742.34 1051.27,1744.43C1048.81,1746.53 1038.67,1746.49 1037.36,1744.28C1036.04,1742.08 1044.53,1731.26 1043.38,1731.2C1034.17,1730.72 1025.19,1730.55 1016.39,1730.65C1005.44,1730.77 994.804,1731.34 984.452,1732.31C983.582,1732.4 991.614,1743.88 990.165,1745.9C988.715,1747.92 978.214,1746.55 975.769,1744.44C973.316,1742.34 976.576,1733.14 975.471,1733.27C964.672,1734.56 954.203,1736.31 944.039,1738.48L944.039,1747.43C944.039,1748.13 937.424,1742.46 935.904,1744.17C934.376,1745.89 933.553,1755.91 934.909,1757.69C936.265,1759.47 944.039,1753.63 944.039,1754.85L944.039,1767.3L1086.83,1767.3C1086.77,1761.73 1086.7,1756.2 1086.62,1750.7C1086.61,1750.26 1096.04,1753.95 1097.7,1752.77C1099.35,1751.58 1098.42,1744.83 1096.55,1743.61C1094.7,1742.41 1086.54,1746.18 1086.52,1745.5C1086.47,1742.11 1086.4,1738.75 1086.32,1735.39\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M917.567,1658.5C911.642,1653.75 905.78,1649.27 900.028,1645.18C899.104,1644.52 896.329,1662.43 893.234,1663.53C890.139,1664.61 881.691,1655.71 881.456,1651.71C881.221,1647.72 892.96,1640.29 891.831,1639.56C886.377,1635.97 881.032,1632.78 875.813,1630.1C866.48,1625.28 857.57,1622.06 849.232,1620.99C844.216,1620.35 839.412,1620.48 834.844,1621.51C833.872,1621.73 843.174,1632.39 842.477,1635.11C841.771,1637.84 833.206,1639.67 830.643,1637.85C828.089,1636.05 828.002,1623.81 827.109,1624.24C822.478,1626.53 818.136,1629.96 814.147,1634.68C822.062,1646.79 828.433,1659.42 833.073,1672.41C833.543,1673.73 823.614,1670.73 822.438,1673.37C821.271,1676.01 823.739,1686.68 826.051,1688.24C828.371,1689.78 836.066,1681.68 836.348,1682.68C840.024,1695.7 841.951,1709.03 841.944,1722.51C858.032,1728.22 874.364,1728.55 887.936,1719.69C889.159,1718.89 877.224,1713.55 876.989,1710.41C876.754,1707.27 883.399,1700.39 886.534,1700.85C889.661,1701.32 895.138,1713.85 895.781,1713.17C906.023,1702.62 913.695,1684.98 917.567,1658.5\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M917.567,1658.5C913.695,1684.98 906.023,1702.62 895.781,1713.17C895.138,1713.85 889.661,1701.32 886.534,1700.85C883.399,1700.39 876.754,1707.27 876.989,1710.41C877.224,1713.55 889.159,1718.89 887.936,1719.69C874.364,1728.55 858.032,1728.22 841.944,1722.51C841.944,1726.51 841.779,1730.53 841.434,1734.54C841.34,1735.55 834.264,1731.58 832.407,1733.22C830.557,1734.85 828.943,1742.93 830.306,1744.37C831.678,1745.8 840.713,1741.13 840.611,1741.82C839.397,1750.57 837.375,1759.08 834.593,1767.3L944.039,1767.3L944.039,1754.85C944.039,1753.63 936.265,1759.47 934.909,1757.69C933.553,1755.91 934.376,1745.89 935.904,1744.17C937.424,1742.46 944.039,1748.13 944.039,1747.43L944.039,1706.45C944.039,1705.43 955.331,1710.44 957.478,1708.67C959.618,1706.92 959.132,1697.24 956.891,1695.86C954.657,1694.5 944.039,1701 944.039,1700.47L944.039,1680.8C935.121,1673.02 926.265,1665.48 917.567,1658.5\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M604.662,89.018C614.063,73.389 621.128,57.76 625.451,42.131C625.878,40.586 613.78,42.201 612.019,39.568C610.258,36.933 612.173,27.96 614.886,26.324C617.598,24.688 628.127,30.669 628.294,29.748C630.072,19.991 630.739,10.233 630.196,0.476L536.213,0.476C535.194,6.12 534.136,11.991 533.046,18.07C532.856,19.132 520.204,13.321 517.818,14.828C515.433,16.336 516.481,24.961 518.73,27.117C520.98,29.273 531.549,26.458 531.316,27.765C530.344,33.238 529.354,38.864 528.352,44.63C541.061,50.436 553.258,56.689 564.966,63.375C565.692,63.79 567.003,48.671 570.074,47.413C573.145,46.154 582.638,52.216 583.393,55.822C584.148,59.426 572.976,68.057 574.601,69.041C585.017,75.347 595.031,82.009 604.662,89.018\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M676.457,79.596C685.53,67.129 692.633,53.5 696.261,37.818C696.567,36.494 683.838,38.365 682.378,35.982C680.917,33.598 684.862,25.079 687.499,23.517C690.137,21.955 698.085,27.604 698.2,26.609C699.149,18.47 699.186,9.793 698.138,0.476L630.196,0.476C630.739,10.233 630.072,19.991 628.294,29.748C628.127,30.669 617.598,24.688 614.886,26.324C612.173,27.96 610.258,36.933 612.019,39.568C613.78,42.201 625.878,40.586 625.451,42.131C621.128,57.76 614.063,73.389 604.662,89.018C608.764,92.003 612.797,95.052 616.76,98.162C617.294,98.581 620.142,86.359 622.8,85.583C625.458,84.808 632.653,90.561 632.709,93.508C632.766,96.456 622.151,102.46 623.139,103.267C625.517,105.209 627.869,107.174 630.196,109.161C633.733,112.181 637.212,115.254 640.633,118.379C646.558,112.777 652.409,107.129 657.985,101.321C658.709,100.566 661.97,114.268 664.678,114.965C667.386,115.662 674.17,109.052 674.234,105.503C674.297,101.954 664.062,94.794 665.057,93.673C669.097,89.123 672.926,84.447 676.457,79.596\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M676.457,79.596C683.766,86.586 691.429,94.195 700.002,103.393C700.616,104.051 703.654,89.014 706.391,88.978C709.129,88.941 716.355,99.53 716.425,103.173C716.496,106.817 706.099,110.035 706.819,110.836C710.548,114.976 714.458,119.428 718.58,124.257C731.158,117.982 741.032,108.038 748.422,94.714C749.002,93.678 737.161,93.335 736.581,90.497C735.993,87.659 742.153,78.619 744.911,77.686C747.677,76.754 752.685,86.05 753.171,84.903C757.99,73.412 761.368,59.942 763.382,44.63C764.15,38.815 764.714,32.734 765.098,26.395C765.192,24.816 775.004,32.579 777.096,31.161C779.188,29.745 779.572,20.558 777.652,17.896C775.732,15.234 765.537,16.456 765.568,15.194C765.678,10.419 765.702,5.512 765.623,0.476L698.138,0.476C699.186,9.793 699.149,18.47 698.2,26.609C698.085,27.604 690.137,21.955 687.499,23.517C684.862,25.079 680.917,33.598 682.378,35.982C683.838,38.365 696.567,36.494 696.261,37.818C692.633,53.5 685.53,67.129 676.457,79.596\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M843.182,57.311C845.823,49.265 847.367,40.483 848.025,31.106C848.103,30.084 860.36,36.952 862.671,34.928C864.991,32.903 864.301,21.351 861.919,18.957C859.545,16.562 848.401,21.622 848.409,20.561C848.432,14.09 848.103,7.381 847.484,0.476L765.623,0.476C765.702,5.512 765.678,10.419 765.568,15.194C765.537,16.456 775.732,15.234 777.652,17.896C779.572,20.558 779.188,29.745 777.096,31.161C775.004,32.579 765.192,24.816 765.098,26.395C764.714,32.734 764.15,38.815 763.382,44.63C775.301,50.332 785.677,56.436 794.642,62.908C795.285,63.371 785.293,71.545 785.732,74.927C786.163,78.309 794.525,84.236 797.267,83.198C800.01,82.16 801.162,67.868 802.181,68.699C810.041,75.149 816.632,81.932 822.054,89.018C832.289,80.587 839.06,69.842 843.182,57.311\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M763.382,44.63C775.301,50.332 785.677,56.436 794.642,62.908C795.285,63.371 785.293,71.545 785.732,74.927C786.163,78.309 794.525,84.236 797.267,83.198C800.01,82.16 801.162,67.868 802.181,68.699C810.041,75.149 816.632,81.932 822.054,89.018C826.976,95.436 830.949,102.102 834.052,108.994C834.444,109.856 820.385,108.263 818.544,110.388C816.694,112.513 819.829,120.578 822.971,121.745C826.114,122.913 836.991,116.256 837.383,117.394C839.028,122.183 840.29,127.071 841.207,132.05C825.847,134.807 810.942,139.074 796.648,144.715C795.151,145.307 801.789,157.003 800.708,160.567C799.626,164.13 792.362,168.091 790.144,166.095C787.926,164.1 788.428,148.14 787.401,148.595C775.489,153.89 764.048,160.157 753.171,167.31C739.982,150.06 728.635,136.034 718.58,124.257C731.158,117.982 741.032,108.038 748.422,94.714C749.002,93.678 737.161,93.335 736.581,90.497C735.993,87.659 742.153,78.619 744.911,77.686C747.677,76.754 752.685,86.05 753.171,84.903C757.99,73.412 761.368,59.942 763.382,44.63\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M676.457,79.596C683.766,86.586 691.429,94.195 700.002,103.393C700.616,104.051 703.654,89.014 706.391,88.978C709.129,88.941 716.355,99.53 716.425,103.173C716.496,106.817 706.099,110.035 706.819,110.836C710.548,114.976 714.458,119.428 718.58,124.257C728.635,136.034 739.982,150.06 753.171,167.31C746.478,171.712 739.998,176.451 733.752,181.504C732.733,182.329 728.564,171.471 726.088,171.047C723.619,170.622 718.941,176.107 718.909,178.957C718.878,181.807 726.84,187.309 725.892,188.146C720.947,192.502 716.167,197.064 711.567,201.823C699.39,183.446 686.14,166.112 671.707,149.886C671.094,149.196 683.258,144.389 683.783,141.135C684.307,137.881 677.714,129.844 674.852,130.364C671.99,130.884 667.096,144.782 666.611,144.257C658.337,135.274 649.683,126.645 640.633,118.379C646.558,112.777 652.409,107.129 657.985,101.321C658.709,100.566 661.97,114.268 664.678,114.965C667.386,115.662 674.17,109.052 674.234,105.503C674.297,101.954 664.062,94.794 665.057,93.673C669.097,89.123 672.926,84.447 676.457,79.596\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M630.196,109.161C614.815,126.192 599.433,143.221 584.051,160.252C577.98,151.895 571.117,144.731 563.467,138.757C562.865,138.288 561.183,151.67 558.304,152.529C555.425,153.388 546.654,147.137 546.193,143.911C545.732,140.684 557.085,134.151 555.54,133.172C544.064,125.902 531.036,120.974 516.464,118.379C517.732,109.712 519.028,101.208 520.337,92.89C520.626,91.054 510.264,93.466 508.381,90.299C506.499,87.13 506.674,75.808 509.044,73.884C511.413,71.959 522.36,80.23 522.602,78.749C524.526,66.923 526.46,55.525 528.352,44.63C541.061,50.436 553.258,56.689 564.966,63.375C565.692,63.79 567.003,48.671 570.074,47.413C573.145,46.154 582.638,52.216 583.393,55.822C584.148,59.426 572.976,68.057 574.601,69.041C585.017,75.347 595.031,82.009 604.662,89.018C608.764,92.003 612.797,95.052 616.76,98.162C617.294,98.581 620.142,86.359 622.8,85.583C625.458,84.808 632.653,90.561 632.709,93.508C632.766,96.456 622.151,102.46 623.139,103.267C625.517,105.209 627.869,107.174 630.196,109.161\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M584.051,160.252C599.433,143.221 614.815,126.192 630.196,109.161C633.733,112.181 637.212,115.254 640.633,118.379C649.683,126.645 658.337,135.274 666.611,144.257C667.096,144.782 671.99,130.884 674.852,130.364C677.714,129.844 684.307,137.881 683.783,141.135C683.258,144.389 671.094,149.196 671.707,149.886C686.14,166.112 699.39,183.446 711.567,201.823C708.119,205.385 704.774,209.057 701.533,212.833C700.949,213.513 691.363,198.79 688.152,198.472C685.679,198.228 681.118,207.215 682.264,210.926C683.41,214.636 695.813,219.738 695.026,220.733C690.677,226.237 686.542,231.943 682.635,237.836C671.016,221.909 659.849,210.733 649.101,203.982C647.069,202.705 648.652,216.767 645.629,218.186C642.605,219.605 632.409,215.835 630.96,212.496C629.51,209.157 637.852,198.453 636.932,198.153C625.717,194.488 614.972,195.793 604.662,201.662C602.985,196.633 601.159,191.827 599.188,187.244C598.761,186.254 611.846,184.837 613.049,181.412C614.251,177.988 609.473,167.339 606.403,166.694C603.332,166.051 595.028,178.332 594.627,177.55C591.419,171.306 587.893,165.54 584.051,160.252\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M516.464,118.379C531.036,120.974 544.064,125.902 555.54,133.172C557.085,134.151 545.732,140.684 546.193,143.911C546.654,147.137 555.425,153.388 558.304,152.529C561.183,151.67 562.865,138.288 563.467,138.757C571.117,144.731 577.98,151.895 584.051,160.252C587.893,165.54 591.419,171.306 594.627,177.55C595.028,178.332 603.332,166.051 606.403,166.694C609.473,167.339 614.251,177.988 613.049,181.412C611.846,184.837 598.761,186.254 599.188,187.244C601.159,191.827 602.985,196.633 604.662,201.662C591.49,209.16 579.025,224.103 567.186,245.646C560.906,237.071 553.907,230.359 546.233,225.393C545.037,224.62 545.492,238.071 542.603,239.258C539.714,240.445 529.761,235.622 528.901,232.511C528.042,229.401 538.283,220.975 537.445,220.596C527.516,216.112 516.614,214.147 504.817,214.495C505.715,204.835 506.697,195.256 507.746,185.785C507.913,184.278 495.828,190.161 493.537,186.814C491.247,183.468 491.374,168.142 494.003,165.707C496.63,163.272 509.129,173.689 509.305,172.204C510.475,162.355 511.71,152.637 512.995,143.081C513.6,138.58 514.215,134.115 514.839,129.69C515.375,125.89 515.917,122.12 516.464,118.379\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M504.817,214.495C516.614,214.147 527.516,216.112 537.445,220.596C538.283,220.975 528.042,229.401 528.901,232.511C529.761,235.622 539.714,240.445 542.603,239.258C545.492,238.071 545.037,224.62 546.233,225.393C553.907,230.359 560.906,237.071 567.186,245.646C571.514,251.558 575.502,258.354 579.132,266.074C579.653,267.181 583.503,253.48 586.204,254.393C588.905,255.307 595.646,267.551 595.335,271.556C595.025,275.562 583.731,276.82 584.338,278.428C586.268,283.539 588.071,288.98 589.744,294.756C577.723,301.366 564.715,311.477 550.836,324.669C547.027,318.875 542.545,313.679 537.218,309.244C536.232,308.423 547.096,302.671 546.676,299.184C546.257,295.697 537.993,287.808 534.703,288.32C531.414,288.833 528.166,302.927 526.94,302.257C519.315,298.084 510.339,295.132 499.72,293.678C500.035,284.099 500.463,274.724 501.002,265.195C501.967,248.135 503.266,231.193 504.817,214.495\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M604.662,201.662C614.972,195.793 625.717,194.488 636.932,198.153C637.852,198.453 629.51,209.157 630.96,212.496C632.409,215.835 642.605,219.605 645.629,218.186C648.652,216.767 647.069,202.705 649.101,203.982C659.849,210.733 671.016,221.909 682.635,237.836C677.757,245.191 673.234,252.841 669.093,260.76C667.466,263.871 665.899,267.023 664.392,270.217C663.861,271.341 657.464,257.704 654.885,258.549C652.306,259.394 648.014,271.83 648.921,275.284C649.828,278.739 660.591,278.65 660.326,279.275C656.978,287.13 653.99,295.209 651.386,303.492C645.338,295.243 638.447,289.981 630.781,287.47C629.662,287.104 631.035,300.219 628.605,302.351C626.175,304.483 617.851,303.027 616.201,300.258C614.55,297.489 620.123,285.707 618.7,285.737C609.842,285.927 600.165,289.026 589.744,294.756C588.071,288.98 586.268,283.539 584.338,278.428C583.731,276.82 595.025,275.562 595.335,271.556C595.646,267.551 588.905,255.307 586.204,254.393C583.503,253.48 579.653,267.181 579.132,266.074C575.502,258.354 571.514,251.558 567.186,245.646C579.025,224.103 591.49,209.16 604.662,201.662\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M499.72,293.678C510.339,295.132 519.315,298.084 526.94,302.257C528.166,302.927 531.414,288.833 534.703,288.32C537.993,287.808 546.257,295.697 546.676,299.184C547.096,302.671 536.232,308.423 537.218,309.244C542.545,313.679 547.027,318.875 550.836,324.669C556.991,334.031 561.386,344.955 564.743,356.761C565.12,358.088 552.039,354.174 550.391,356.602C548.743,359.032 551.997,369.483 554.854,371.334C557.71,373.187 567.27,366.583 567.526,367.712C569.049,374.402 570.329,381.293 571.481,388.274C572.021,391.551 572.535,394.849 573.032,398.155C562.666,396.51 552.3,396.015 541.934,396.649C540.931,396.71 546.159,408.087 544.284,410.848C542.409,413.609 532.853,415.407 530.684,413.215C528.514,411.024 532.851,397.484 531.267,397.698C521.591,399.011 511.913,401.298 502.237,404.543C501.195,392.692 500.434,380.726 499.924,368.688C499.855,367.061 512.392,368.798 514.616,365.2C516.839,361.603 515.789,348.613 513.267,347.101C510.744,345.588 499.509,357.072 499.483,356.126C498.903,335.458 499.036,314.44 499.72,293.678\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M589.744,294.756C600.165,289.026 609.842,285.927 618.7,285.737C620.123,285.707 614.55,297.489 616.201,300.258C617.851,303.027 626.175,304.483 628.605,302.351C631.035,300.219 629.662,287.104 630.781,287.47C638.447,289.981 645.338,295.243 651.386,303.492C648.842,311.58 646.665,319.862 644.874,328.319C644.529,329.953 634.48,322.672 632.03,324.91C629.65,327.084 628.41,339.178 630.174,341.75C631.938,344.322 642.806,339.168 642.613,340.342C641.327,348.13 640.146,359.173 639.526,367.219C639.244,371.513 639.063,375.793 638.98,380.055C629.368,375.673 619.755,374.027 610.142,374.65C608.771,374.739 615.264,388.183 613.175,391.146C611.088,394.108 599.938,394.897 597.614,392.424C595.291,389.951 600.275,376.06 599.235,376.306C589.984,378.495 580.732,382.622 571.481,388.274C570.329,381.293 569.049,374.402 567.526,367.712C567.27,366.583 557.71,373.187 554.854,371.334C551.997,369.483 548.743,359.032 550.391,356.602C552.039,354.174 565.12,358.088 564.743,356.761C561.386,344.955 556.991,334.031 550.836,324.669C564.715,311.477 577.723,301.366 589.744,294.756\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M502.237,404.543C511.913,401.298 521.591,399.011 531.267,397.698C532.851,397.484 528.514,411.024 530.684,413.215C532.853,415.407 542.409,413.609 544.284,410.848C546.159,408.087 540.931,396.71 541.934,396.649C552.3,396.015 562.666,396.51 573.032,398.155C575.2,412.57 577.067,427.149 579.632,440.948C579.794,441.818 567.591,437.993 565.74,440.44C563.89,442.886 565.854,453.774 568.53,455.627C571.206,457.482 581.447,450.005 581.798,451.562C583.088,457.301 584.557,462.85 586.283,468.134C587.49,471.826 588.908,475.58 590.496,479.387C583.687,485.871 573.954,490.379 561.151,492.809C559.956,493.036 562.327,477.373 559.379,474.97C556.43,472.567 544.742,475.189 543.461,478.389C542.18,481.589 552.522,494.084 551.693,494.169C541.587,495.202 529.919,495.177 516.633,494.06C514.528,485.553 512.64,476.904 510.953,468.134C510.522,465.888 510.103,463.634 509.697,461.373C509.475,460.132 521.204,461.692 522.934,458.9C524.664,456.109 522.63,446.254 520.081,444.623C517.531,442.993 507.861,450.538 507.638,449.118C505.918,438.178 504.489,427.08 503.322,415.863C502.931,412.103 502.57,408.329 502.237,404.543\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M610.737,519.337C603.094,505.585 595.833,492.182 590.496,479.387C588.908,475.58 587.49,471.826 586.283,468.134C584.557,462.85 583.088,457.301 581.798,451.562C581.447,450.005 571.206,457.482 568.53,455.627C565.854,453.774 563.89,442.886 565.74,440.44C567.591,437.993 579.794,441.818 579.632,440.948C577.067,427.149 575.2,412.57 573.032,398.155C572.535,394.849 572.021,391.551 571.481,388.274C580.732,382.622 589.984,378.495 599.235,376.306C600.275,376.06 595.291,389.951 597.614,392.424C599.938,394.897 611.088,394.108 613.175,391.146C615.264,388.183 608.771,374.739 610.142,374.65C619.755,374.027 629.368,375.673 638.98,380.055C638.672,395.958 639.736,411.626 642.062,426.92C643.482,436.249 645.37,445.44 647.705,454.461C648.019,455.676 655.834,447.783 658.367,449.106C660.839,450.396 664.162,459.639 662.91,462.397C661.658,465.154 650.524,464.565 650.853,465.649C652.263,470.28 653.791,474.861 655.434,479.387C647.905,483.017 641.483,486.966 635.927,491.166C634.216,492.46 634.012,476.018 631.031,475.441C628.05,474.863 618.898,483.623 618.04,487.699C617.182,491.775 626.682,499.098 625.882,499.897C619.72,506.056 614.874,512.591 610.737,519.337\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M516.633,494.06C529.919,495.177 541.587,495.202 551.693,494.169C552.522,494.084 542.18,481.589 543.461,478.389C544.742,475.189 556.43,472.567 559.379,474.97C562.327,477.373 559.956,493.036 561.151,492.809C573.954,490.379 583.687,485.871 590.496,479.387C595.833,492.182 603.094,505.585 610.737,519.337C616.418,529.558 622.309,539.97 627.778,550.468C614.45,554.854 603.018,562.01 593.149,571.451C591.755,572.785 601.427,578.499 601.021,581.831C600.613,585.163 593.53,591.533 590.706,591.443C587.881,591.353 584.826,580.365 584.071,581.287C583.587,581.879 583.107,582.476 582.631,583.08C576.569,590.776 571.198,599.482 566.407,609.036C561.102,601.216 556.221,593.387 551.8,585.558C549.204,580.961 546.723,576.268 544.352,571.488C542.239,567.228 540.214,562.898 538.275,558.502C537.417,556.558 552.658,555.368 553.707,551.449C554.755,547.53 548.191,536.36 544.567,534.984C540.942,533.61 532.603,544.868 531.96,543.197C525.913,527.5 520.841,511.064 516.633,494.06\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M610.737,519.337C614.874,512.591 619.72,506.056 625.882,499.897C626.682,499.098 617.182,491.775 618.04,487.699C618.898,483.623 628.05,474.863 631.031,475.441C634.012,476.018 634.216,492.46 635.927,491.166C641.483,486.966 647.905,483.017 655.434,479.387C657.674,485.559 660.128,491.631 662.786,497.59C666.985,507.003 671.695,516.137 676.881,524.948C677.493,525.989 662.264,530.109 661.338,533.384C660.412,536.659 667.722,544.368 671.323,544.599C674.924,544.829 682.286,533.751 682.943,534.768C686.631,540.467 690.524,546.015 694.611,551.4C699.909,558.38 705.534,565.086 711.465,571.488C706.095,580.877 699.471,589.421 689.96,596.025C688.78,596.844 686.671,583.69 683.124,582.61C679.576,581.529 669.619,586.179 668.672,589.542C667.726,592.906 679.063,602.125 677.444,602.789C669.797,605.927 660.721,608.103 649.796,609.036C648.95,603.914 647.72,598.763 646.18,593.598C645.681,591.922 633.64,605.716 630.388,604.393C627.137,603.07 624.839,589.763 626.671,585.657C628.502,581.551 642.025,581.41 641.377,579.757C637.541,569.979 632.84,560.187 627.778,550.468C622.309,539.97 616.418,529.558 610.737,519.337\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M626.116,680.489C619.597,673.859 613.308,667.203 607.274,660.527C604.242,657.171 601.273,653.81 598.371,650.445C597.413,649.332 588.713,664.222 585.54,664.043C582.368,663.863 578.549,653.238 579.337,649.368C580.125,645.497 591.191,641.941 590.271,640.82C585.92,635.521 581.744,630.214 577.751,624.899C573.783,619.617 569.998,614.329 566.407,609.036C571.198,599.482 576.569,590.776 582.631,583.08C583.107,582.476 583.587,581.879 584.071,581.287C584.826,580.365 587.881,591.353 590.706,591.443C593.53,591.533 600.613,585.163 601.021,581.831C601.427,578.499 591.755,572.785 593.149,571.451C603.018,562.01 614.45,554.854 627.778,550.468C632.84,560.187 637.541,569.979 641.377,579.757C642.025,581.41 628.502,581.551 626.671,585.657C624.839,589.763 627.137,603.07 630.388,604.393C633.64,605.716 645.681,591.922 646.18,593.598C647.72,598.763 648.95,603.914 649.796,609.036C651.711,620.636 651.654,632.095 648.757,643.266C648.288,645.079 639.113,634.946 635.368,635.794C631.623,636.641 624.971,644.695 626.286,648.351C627.602,652.007 643.916,656.444 643.261,657.731C639.297,665.516 633.688,673.119 626.116,680.489\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M626.116,680.489C633.688,673.119 639.297,665.516 643.261,657.731C643.916,656.444 627.602,652.007 626.286,648.351C624.971,644.695 631.623,636.641 635.368,635.794C639.113,634.946 648.288,645.079 648.757,643.266C651.654,632.095 651.711,620.636 649.796,609.036C660.721,608.103 669.797,605.927 677.444,602.789C679.063,602.125 667.726,592.906 668.672,589.542C669.619,586.179 679.576,581.529 683.124,582.61C686.671,583.69 688.78,596.844 689.96,596.025C699.471,589.421 706.095,580.877 711.465,571.488C717.419,577.915 723.677,584.036 730.219,589.822C725.407,598.663 720.586,607.503 715.767,616.344C714.952,617.843 726.644,619.085 727.099,622.549C727.553,626.014 721.629,635.85 718.486,637.128C715.336,638.406 708.973,628.824 708.211,630.217L695.134,654.216C690.318,663.054 685.502,671.893 680.686,680.732C679.706,682.529 692.937,684.13 693.461,687.97C693.984,691.809 687.226,702.647 683.827,703.77C680.428,704.895 673.768,693.428 673.066,694.715C669.414,701.417 665.762,708.12 662.11,714.823C657.766,710.915 653.489,706.994 649.285,703.061C641.286,695.577 633.551,688.05 626.116,680.489\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M875.994,205.719C883.626,198.728 892.49,194.633 902.669,193.615C903.657,193.517 899.488,206.566 901.361,209.209C903.233,211.852 912.402,212.102 913.915,209.472C915.419,206.841 909.244,193.371 910.412,193.425C923.146,194.02 937.722,198.933 954.273,208.459C961.02,186.991 967.297,166.101 973.073,146.024C965.699,143.041 958.144,140.408 950.441,138.146C949.477,137.862 949.767,151.497 947.534,153.022C944.955,154.776 935.81,151.505 934.995,148.668C934.188,145.832 943.615,136.25 942.667,136.003C931.367,133.093 919.753,130.975 907.873,129.716C904.762,129.386 901.666,129.117 898.571,128.91C894.543,128.64 890.53,128.473 886.534,128.407C885.178,128.385 889.331,140.185 887.349,142.215C885.084,144.54 874.708,144.654 872.937,142.36C871.166,140.065 877.506,128.428 876.73,128.447C869.254,128.633 861.856,129.173 854.553,130.052C857.311,145.746 856.535,161.354 850.102,178.551C853.777,180.248 857.115,182.333 860.14,184.766C860.72,185.231 853.385,193.207 853.981,196.622C854.576,200.038 861.566,206.145 863.714,205.258C865.869,204.372 866.159,190.473 866.872,191.302C870.469,195.506 873.494,200.346 875.994,205.719\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M947.001,77.095C950.849,64.357 954.688,51.618 958.536,38.879C959.006,37.33 949.273,38.989 948.239,36.372C947.212,33.755 950.018,24.865 952.369,23.176C954.72,21.486 962.023,27.33 962.353,26.234C964.947,17.648 967.54,9.061 970.126,0.476L847.484,0.476C848.103,7.381 848.432,14.09 848.409,20.561C848.401,21.622 859.545,16.562 861.919,18.957C864.301,21.351 864.991,32.903 862.671,34.928C860.36,36.952 848.103,30.084 848.025,31.106C847.367,40.483 845.823,49.265 843.182,57.311C854.702,59.425 866.942,61.749 879.207,64.106C879.92,64.244 871.676,74.461 872.796,77.255C873.909,80.05 883.556,82.822 885.899,80.875C888.234,78.928 885.774,65.371 886.839,65.577C896.141,67.373 905.381,69.167 914.244,70.882C925.215,73.005 936.155,75.096 947.001,77.095\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1022.22,89.018L1037.84,40.179C1038.2,39.053 1023.33,42.684 1021.15,40.931C1018.96,39.179 1021.6,31.244 1024.74,29.665C1028.01,28.022 1040.37,32.263 1040.76,31.069C1044.02,20.871 1047.28,10.674 1050.55,0.476L970.126,0.476C967.54,9.061 964.947,17.648 962.353,26.234C962.023,27.33 954.72,21.486 952.369,23.176C950.018,24.865 947.212,33.755 948.239,36.372C949.273,38.989 959.006,37.33 958.536,38.879C954.688,51.618 950.849,64.357 947.001,77.095C957.22,78.98 967.36,80.783 977.36,82.453C978.12,82.58 975.502,69.964 977.704,67.844C979.899,65.726 989.028,67.048 990.541,69.74C992.061,72.432 984.938,83.697 986.787,83.992C995.854,85.439 1004.8,86.762 1013.57,87.922C1016.47,88.305 1019.36,88.671 1022.22,89.018\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M914.244,70.882C910.263,77.965 906.917,85.653 904.346,93.925C904.072,94.818 917.841,93.713 919.416,96.147C920.991,98.582 916.736,107.405 913.821,108.535C910.905,109.665 902.082,102.238 901.925,102.927C900.044,111.085 898.884,119.751 898.571,128.91C894.543,128.64 890.53,128.473 886.534,128.407C885.178,128.385 889.331,140.185 887.349,142.215C885.084,144.54 874.708,144.654 872.937,142.36C871.166,140.065 877.506,128.428 876.73,128.447C869.254,128.633 861.856,129.173 854.553,130.052C850.062,130.591 845.619,131.259 841.207,132.05C840.29,127.071 839.028,122.183 837.383,117.394C836.991,116.256 826.114,122.913 822.971,121.745C819.829,120.578 816.694,112.513 818.544,110.388C820.385,108.263 834.444,109.856 834.052,108.994C830.949,102.102 826.976,95.436 822.054,89.018C832.289,80.587 839.06,69.842 843.182,57.311C854.702,59.425 866.942,61.749 879.207,64.106C879.92,64.244 871.676,74.461 872.796,77.255C873.909,80.05 883.556,82.822 885.899,80.875C888.234,78.928 885.774,65.371 886.839,65.577C896.141,67.373 905.381,69.167 914.244,70.882\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1013.57,87.922C1001.56,104.846 992.006,124.659 990.431,153.841C984.757,151.018 978.974,148.41 973.073,146.024C965.699,143.041 958.144,140.408 950.441,138.146C949.477,137.862 949.767,151.497 947.534,153.022C944.955,154.776 935.81,151.505 934.995,148.668C934.188,145.832 943.615,136.25 942.667,136.003C931.367,133.093 919.753,130.975 907.873,129.716C904.762,129.386 901.666,129.117 898.571,128.91C898.884,119.751 900.044,111.085 901.925,102.927C902.082,102.238 910.905,109.665 913.821,108.535C916.736,107.405 920.991,98.582 919.416,96.147C917.841,93.713 904.072,94.818 904.346,93.925C906.917,85.653 910.263,77.965 914.244,70.882C925.215,73.005 936.155,75.096 947.001,77.095C957.22,78.98 967.36,80.783 977.36,82.453C978.12,82.58 975.502,69.964 977.704,67.844C979.899,65.726 989.028,67.048 990.541,69.74C992.061,72.432 984.938,83.697 986.787,83.992C995.854,85.439 1004.8,86.762 1013.57,87.922\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M850.102,178.551C856.535,161.354 857.311,145.746 854.553,130.052C850.062,130.591 845.619,131.259 841.207,132.05C825.847,134.807 810.942,139.074 796.648,144.715C795.151,145.307 801.789,157.003 800.708,160.567C799.626,164.13 792.362,168.091 790.144,166.095C787.926,164.1 788.428,148.14 787.401,148.595C775.489,153.89 764.048,160.157 753.171,167.31C760.984,177.864 765.467,192.002 766.07,210.312C773.617,209.083 780.568,208.478 786.939,208.46C788.349,208.455 784.87,196.734 786.978,194.637C789.094,192.54 797.957,193.49 799.61,195.876C801.272,198.263 796.013,208.857 796.915,208.954C808.975,210.246 818.52,214.037 825.722,219.985C829.64,214.956 833.12,210.098 836.199,205.386C836.717,204.596 826.341,199.751 825.73,196.164C825.111,192.577 830.032,183.504 832.508,183.867C834.977,184.229 840.039,199.232 840.564,198.339C844.585,191.47 847.727,184.902 850.102,178.551\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M954.273,208.459C937.722,198.933 923.146,194.02 910.412,193.425C909.244,193.371 915.419,206.841 913.915,209.472C912.402,212.102 903.233,211.852 901.361,209.209C899.488,206.566 903.657,193.517 902.669,193.615C892.49,194.633 883.626,198.728 875.994,205.719C880.116,214.582 882.827,224.892 884.41,236.175C884.575,237.337 896.141,231.523 898.774,233.782C901.408,236.042 902.434,247.979 900.193,249.734C897.959,251.489 885.28,243.549 885.35,244.311C887.129,263.862 885.97,285.812 883.18,307.952C887.004,309.045 890.789,310.268 894.519,311.622C895.177,311.86 894.433,298.659 896.886,296.779C899.339,294.899 908.476,297.418 909.236,300.342C910.004,303.266 900.459,313.901 901.486,314.324C906.431,316.372 911.297,318.662 916.07,321.199C917.825,316.379 919.557,311.569 921.273,306.768C927.597,289.089 933.647,271.55 939.423,254.261C939.681,253.485 929.345,254.853 927.934,251.935C926.524,249.019 928.624,237.629 930.951,236.761C933.287,235.892 941.656,247.543 941.93,246.726C946.201,233.804 950.316,221.033 954.273,208.459\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M875.994,205.719C873.494,200.346 870.469,195.506 866.872,191.302C866.159,190.473 865.869,204.372 863.714,205.258C861.566,206.145 854.576,200.038 853.981,196.622C853.385,193.207 860.72,185.231 860.14,184.766C857.115,182.333 853.777,180.248 850.102,178.551C847.727,184.902 844.585,191.47 840.564,198.339C840.039,199.232 834.977,184.229 832.508,183.867C830.032,183.504 825.111,192.577 825.73,196.164C826.341,199.751 836.717,204.596 836.199,205.386C833.12,210.098 829.64,214.956 825.722,219.985C832.548,225.627 837.265,233.209 840,242.44C840.345,243.606 828.355,240.218 827.031,243.045C825.714,245.872 829.538,257.663 832.077,259.403C834.609,261.143 842.061,251.971 842.241,253.485C843.895,266.957 842.32,283 837.822,300.986C845.055,301.241 852.155,301.859 859.121,302.853C867.334,304.025 875.351,305.719 883.18,307.952C885.97,285.812 887.129,263.862 885.35,244.311C885.28,243.549 897.959,251.489 900.193,249.734C902.434,247.979 901.408,236.042 898.774,233.782C896.141,231.523 884.575,237.337 884.41,236.175C882.827,224.892 880.116,214.582 875.994,205.719\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M825.722,219.985C818.52,214.037 808.975,210.246 796.915,208.954C796.013,208.857 801.272,198.263 799.61,195.876C797.957,193.49 789.094,192.54 786.978,194.637C784.87,196.734 788.349,208.455 786.939,208.46C780.568,208.478 773.617,209.083 766.07,210.312C766.234,215.253 766.117,220.497 765.709,226.056C765.623,227.165 756.447,217.201 753.908,218.254C751.369,219.309 748.704,229.248 750.483,232.38C752.262,235.51 764.722,235.867 764.565,237.042C763.515,245.028 761.921,253.594 759.766,262.765C772.232,259.039 784.251,260.53 792.644,267.031C793.333,267.565 783.483,272.934 783.193,276.56C782.903,280.184 788.091,288.88 790.912,288.781C793.741,288.683 799.383,274.553 800.143,275.968C804.234,283.624 804.932,292.951 802.792,302.432C814.782,301.082 826.466,300.586 837.822,300.986C842.32,283 843.895,266.957 842.241,253.485C842.061,251.971 834.609,261.143 832.077,259.403C829.538,257.663 825.714,245.872 827.031,243.045C828.355,240.218 840.345,243.606 840,242.44C837.265,233.209 832.548,225.627 825.722,219.985\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M766.07,210.312C765.467,192.002 760.984,177.864 753.171,167.31C746.478,171.712 739.998,176.451 733.752,181.504C732.733,182.329 728.564,171.471 726.088,171.047C723.619,170.622 718.941,176.107 718.909,178.957C718.878,181.807 726.84,187.309 725.892,188.146C720.947,192.502 716.167,197.064 711.567,201.823C708.119,205.385 704.774,209.057 701.533,212.833C700.949,213.513 691.363,198.79 688.152,198.472C685.679,198.228 681.118,207.215 682.264,210.926C683.41,214.636 695.813,219.738 695.026,220.733C690.677,226.237 686.542,231.943 682.635,237.836C677.757,245.191 673.234,252.841 669.093,260.76C676.826,263.104 684.227,265.837 691.24,269.026C691.919,269.334 693.169,257.452 695.753,256.633C698.338,255.813 706.329,261.474 706.747,264.109C707.165,266.743 697.502,272.046 698.26,272.44C707.783,277.391 716.496,283.288 724.238,290.327C728.604,283.542 734.384,277.259 741.346,272.132C747.339,267.72 753.607,264.606 759.766,262.765C761.921,253.594 763.515,245.028 764.565,237.042C764.722,235.867 752.262,235.51 750.483,232.38C748.704,229.248 751.369,219.309 753.908,218.254C756.447,217.201 765.623,227.165 765.709,226.056C766.117,220.497 766.234,215.253 766.07,210.312\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M724.238,290.327C716.496,283.288 707.783,277.391 698.26,272.44C697.502,272.046 707.165,266.743 706.747,264.109C706.329,261.474 698.338,255.813 695.753,256.633C693.169,257.452 691.919,269.334 691.24,269.026C684.227,265.837 676.826,263.104 669.093,260.76C667.466,263.871 665.899,267.023 664.392,270.217C663.861,271.341 657.464,257.704 654.885,258.549C652.306,259.394 648.014,271.83 648.921,275.284C649.828,278.739 660.591,278.65 660.326,279.275C656.978,287.13 653.99,295.209 651.386,303.492C648.842,311.58 646.665,319.862 644.874,328.319C644.529,329.953 634.48,322.672 632.03,324.91C629.65,327.084 628.41,339.178 630.174,341.75C631.938,344.322 642.806,339.168 642.613,340.342C641.327,348.13 640.146,359.173 639.526,367.219C650.922,365.467 661.717,364.889 674.526,360.371C675.893,359.888 670.477,348.843 672.123,345.751C673.769,342.659 682.516,339.996 684.403,341.82C686.289,343.644 682.664,357.061 683.441,356.695C693.199,352.088 704.254,344.953 717.511,333.498C712.162,320.887 715.112,304.509 724.238,290.327\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M776.712,340.336C771.187,344.292 765.435,347.152 759.769,348.934C750.702,351.785 741.831,351.881 734.394,349.299C733.517,348.995 745.013,340.604 744.903,337.589C744.794,334.573 736.73,329.901 733.728,331.208C730.727,332.514 727.796,346.077 726.903,345.428C723.564,343.018 720.767,339.855 718.682,335.95C718.255,335.15 717.865,334.333 717.511,333.498C712.162,320.887 715.112,304.509 724.238,290.327C728.604,283.542 734.384,277.259 741.346,272.132C747.339,267.72 753.607,264.606 759.766,262.765C772.232,259.039 784.251,260.53 792.644,267.031C793.333,267.565 783.483,272.934 783.193,276.56C782.903,280.184 788.091,288.88 790.912,288.781C793.741,288.683 799.383,274.553 800.143,275.968C804.234,283.624 804.932,292.951 802.792,302.432C801.382,308.652 798.748,314.939 795.042,320.865C794.438,321.836 807.055,323.46 807.721,326.679C808.387,329.9 802.024,339.945 799.038,340.186C796.053,340.428 790.379,327.428 789.799,328.129C786.265,332.401 781.375,336.903 776.712,340.336\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M878.689,417.289C870.97,410.002 863.243,402.715 855.517,395.428C854.905,394.849 850.932,407.65 847.986,408.017C845.039,408.384 837.681,400.767 837.837,397.63C837.994,394.493 849.796,390.029 848.91,389.196C842.994,383.612 837.077,378.029 831.161,372.445C837.21,364.986 842.492,356.105 846.943,345.712C847.523,344.36 836.662,345.137 835.141,342.243C833.613,339.35 835.118,329.593 837.782,328.352C840.447,327.11 850.517,336.589 851.128,334.795C854.388,325.245 857.068,314.615 859.121,302.853C867.334,304.025 875.351,305.719 883.18,307.952C887.004,309.045 890.789,310.268 894.519,311.622C895.177,311.86 894.433,298.659 896.886,296.779C899.339,294.899 908.476,297.418 909.236,300.342C910.004,303.266 900.459,313.901 901.486,314.324C906.431,316.372 911.297,318.662 916.07,321.199C912.097,332.105 908.022,343.053 903.853,354.015C902.027,358.795 900.193,363.578 898.336,368.362C897.771,369.814 910.059,370.739 910.835,373.682C911.611,376.625 905.686,385.31 902.975,386.021C900.271,386.731 894.888,377.204 894.59,377.943C894.221,378.886 893.853,379.829 893.477,380.771C891.494,385.812 889.48,390.851 887.451,395.887C884.575,403.031 881.652,410.167 878.689,417.289\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M859.121,302.853C857.068,314.615 854.388,325.245 851.128,334.795C850.517,336.589 840.447,327.11 837.782,328.352C835.118,329.593 833.613,339.35 835.141,342.243C836.662,345.137 847.523,344.36 846.943,345.712C842.492,356.105 837.21,364.986 831.161,372.445C826.803,377.807 822.054,382.435 816.921,386.36C816.224,386.889 815.056,372.889 812.776,371.866C810.488,370.843 803.685,377.019 803.231,380.221C802.776,383.422 810.926,390.525 810.025,391.074C804.218,394.607 797.988,397.365 791.359,399.387C785.967,381.347 781.069,361.712 776.712,340.336C781.375,336.903 786.265,332.401 789.799,328.129C790.379,327.428 796.053,340.428 799.038,340.186C802.024,339.945 808.387,329.9 807.721,326.679C807.055,323.46 794.438,321.836 795.042,320.865C798.748,314.939 801.382,308.652 802.792,302.432C814.782,301.082 826.466,300.586 837.822,300.986C845.055,301.241 852.155,301.859 859.121,302.853\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M791.359,399.387C785.967,381.347 781.069,361.712 776.712,340.336C771.187,344.292 765.435,347.152 759.769,348.934C759.785,353.202 759.856,357.408 759.981,361.552C760.028,362.951 760.075,364.342 760.13,365.727C760.357,371.654 760.702,377.454 761.149,383.127C761.219,384.056 750.851,384.171 749.174,387.143C747.505,390.113 748.971,400.033 751.11,400.952C753.249,401.871 761.917,391.7 762.011,392.656C762.888,401.16 764.017,409.369 765.388,417.289C768.17,433.363 771.963,448.249 776.712,462.007C778.554,467.342 780.544,472.508 782.668,477.507C783.099,478.522 789.729,467.726 792.793,468.248C795.849,468.771 802.204,477.934 801.037,480.642C799.869,483.348 785.426,483.729 785.787,484.489C789.258,491.929 793.059,498.981 797.173,505.658C799.932,510.121 802.831,514.417 805.864,518.549C806.397,519.281 809.101,506.169 811.585,505.885C814.069,505.603 820.926,513.705 820.769,516.85C820.612,519.994 810.01,523.985 810.621,524.752C814.57,529.677 818.724,534.354 823.089,538.789C828.614,527.886 834.044,516.832 839.381,505.658C825.863,485.786 813.567,461.955 802.769,433.32C802.228,431.898 814.57,432.353 815.746,429.628C816.921,426.904 812.502,417.782 809.814,416.972C807.134,416.163 799.885,425.456 799.634,424.77C796.766,416.68 794.007,408.225 791.359,399.387\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M878.689,417.289C870.97,410.002 863.243,402.715 855.517,395.428C854.905,394.849 850.932,407.65 847.986,408.017C845.039,408.384 837.681,400.767 837.837,397.63C837.994,394.493 849.796,390.029 848.91,389.196C842.994,383.612 837.077,378.029 831.161,372.445C826.803,377.807 822.054,382.435 816.921,386.36C816.224,386.889 815.056,372.889 812.776,371.866C810.488,370.843 803.685,377.019 803.231,380.221C802.776,383.422 810.926,390.525 810.025,391.074C804.218,394.607 797.988,397.365 791.359,399.387C794.007,408.225 796.766,416.68 799.634,424.77C799.885,425.456 807.134,416.163 809.814,416.972C812.502,417.782 816.921,426.904 815.746,429.628C814.57,432.353 802.228,431.898 802.769,433.32C813.567,461.955 825.863,485.786 839.381,505.658C842.68,498.746 845.94,491.789 849.169,484.793C849.741,483.554 840.533,478.709 840.173,474.873C839.812,471.036 844.624,462.024 846.998,461.776C849.365,461.529 853.871,474.511 854.38,473.388C859.357,462.391 864.239,451.309 869.027,440.17C872.295,432.567 875.516,424.936 878.689,417.289\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M642.062,426.92C664.299,422.977 684.255,409.928 703.526,396.717C704.449,396.084 703.964,410.491 706.745,411.525C709.529,412.558 719.184,406.464 720.218,402.918C721.253,399.372 711.723,391.086 712.946,390.252C728.666,379.53 744.096,369.69 760.13,365.727C760.075,364.342 760.028,362.951 759.981,361.552C759.856,357.408 759.785,353.202 759.769,348.934C750.702,351.785 741.831,351.881 734.394,349.299C733.517,348.995 745.013,340.604 744.903,337.589C744.794,334.573 736.73,329.901 733.728,331.208C730.727,332.514 727.796,346.077 726.903,345.428C723.564,343.018 720.767,339.855 718.682,335.95C718.255,335.15 717.865,334.333 717.511,333.498C704.254,344.953 693.199,352.088 683.441,356.695C682.664,357.061 686.289,343.644 684.403,341.82C682.516,339.996 673.769,342.659 672.123,345.751C670.477,348.843 675.893,359.888 674.526,360.371C661.717,364.889 650.922,365.467 639.526,367.219C639.244,371.513 639.063,375.793 638.98,380.055C638.672,395.958 639.736,411.626 642.062,426.92\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M760.13,365.727C744.096,369.69 728.666,379.53 712.946,390.252C711.723,391.086 721.253,399.372 720.218,402.918C719.184,406.464 709.529,412.558 706.745,411.525C703.964,410.491 704.449,396.084 703.526,396.717C684.255,409.928 664.299,422.977 642.062,426.92C643.482,436.249 645.37,445.44 647.705,454.461C648.019,455.676 655.834,447.783 658.367,449.106C660.839,450.396 664.162,459.639 662.91,462.397C661.658,465.154 650.524,464.565 650.853,465.649C652.263,470.28 653.791,474.861 655.434,479.387C657.674,485.559 660.128,491.631 662.786,497.59C674.453,483.955 686.369,470.215 700.005,457.646C701.26,456.49 702.768,469.773 705.46,470.07C708.152,470.366 715.563,462.817 716.159,459.428C716.754,456.039 708.552,450.132 709.028,449.735C709.756,449.131 710.485,448.533 711.222,447.937C726.448,435.612 743.947,424.918 765.388,417.289C764.017,409.369 762.888,401.16 762.011,392.656C761.917,391.7 753.249,401.871 751.11,400.952C748.971,400.033 747.505,390.113 749.174,387.143C750.851,384.171 761.219,384.056 761.149,383.127C760.702,377.454 760.357,371.654 760.13,365.727\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M765.388,417.289C743.947,424.918 726.448,435.612 711.222,447.937C710.485,448.533 709.756,449.131 709.028,449.735C708.552,450.132 716.754,456.039 716.159,459.428C715.563,462.817 708.152,470.366 705.46,470.07C702.768,469.773 701.26,456.49 700.005,457.646C686.369,470.215 674.453,483.955 662.786,497.59C666.985,507.003 671.695,516.137 676.881,524.948C677.493,525.989 662.264,530.109 661.338,533.384C660.412,536.659 667.722,544.368 671.323,544.599C674.924,544.829 682.286,533.751 682.943,534.768C686.631,540.467 690.524,546.015 694.611,551.4C707.439,532.602 721.26,513.804 739.488,495.005C740.484,493.986 743.649,506.523 746.714,506.795C749.778,507.069 757.779,499.904 757.873,496.642C757.975,493.38 746.604,487.896 747.293,487.228C756.023,478.821 765.725,470.413 776.712,462.007C771.963,448.249 768.17,433.363 765.388,417.289\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M776.712,462.007C765.725,470.413 756.023,478.821 747.293,487.228C746.604,487.896 757.975,493.38 757.873,496.642C757.779,499.904 749.778,507.069 746.714,506.795C743.649,506.523 740.484,493.986 739.488,495.005C721.26,513.804 707.439,532.602 694.611,551.4C699.909,558.38 705.534,565.086 711.465,571.488C717.419,577.915 723.677,584.036 730.219,589.822C732.4,591.751 734.612,593.643 736.855,595.496C743.32,580.01 751.165,565.608 760.357,551.769C761.023,550.777 766.548,561.918 769.495,561.755C772.441,561.592 778.577,553.857 778.021,550.789C777.472,547.722 765.568,544.182 766.164,543.349C775.333,530.527 785.685,518.108 797.173,505.658C793.059,498.981 789.258,491.929 785.787,484.489C785.426,483.729 799.869,483.348 801.037,480.642C802.204,477.934 795.849,468.771 792.793,468.248C789.729,467.726 783.099,478.522 782.668,477.507C780.544,472.508 778.554,467.342 776.712,462.007\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M797.173,505.658C785.685,518.108 775.333,530.527 766.164,543.349C765.568,544.182 777.472,547.722 778.021,550.789C778.577,553.857 772.441,561.592 769.495,561.755C766.548,561.918 761.023,550.777 760.357,551.769C751.165,565.608 743.32,580.01 736.855,595.496C743.759,601.198 750.953,606.538 758.414,611.485C759.785,612.398 761.125,596.052 764.04,594.388C766.963,592.719 775.348,597.652 775.944,601.472C776.54,605.293 766.689,616.75 767.622,617.31C770.615,619.114 773.648,620.857 776.712,622.535C781.68,614.376 786.594,606.057 791.445,597.594C791.907,596.78 799.595,606.082 802.628,605.529C805.66,604.976 810.809,596.82 809.641,594.277C808.466,591.734 795.12,591.12 795.598,590.272C798.929,584.363 802.236,578.388 805.504,572.352C811.467,561.352 817.329,550.152 823.089,538.789C818.724,534.354 814.57,529.677 810.621,524.752C810.01,523.985 820.612,519.994 820.769,516.85C820.926,513.705 814.069,505.603 811.585,505.885C809.101,506.169 806.397,519.281 805.864,518.549C802.831,514.417 799.932,510.121 797.173,505.658\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1014.13,197.028C1017.24,189.218 1020.35,181.407 1023.46,173.596C1018.96,170.407 1014.34,167.364 1009.62,164.475C1008.65,163.879 1006.42,176.094 1004,176.623C1000.92,177.293 991.959,171.535 991.152,168.499C990.353,165.462 1000.67,159.231 999.161,158.405C996.285,156.828 993.378,155.306 990.431,153.841C984.757,151.018 978.974,148.41 973.073,146.024C967.297,166.101 961.02,186.991 954.273,208.459C950.316,221.033 946.201,233.804 941.93,246.726C941.656,247.543 933.287,235.892 930.951,236.761C928.624,237.629 926.524,249.019 927.934,251.935C929.345,254.853 939.681,253.485 939.423,254.261C933.647,271.55 927.597,289.089 921.273,306.768C925.654,309.482 930.246,312.522 934.979,315.832C936.092,316.615 937.04,302.673 939.752,301.705C942.456,300.737 950.856,306.847 951.209,310.025C951.562,313.203 941.241,320.311 941.868,320.772C947.62,324.997 953.513,329.569 959.406,334.399C967.062,315.181 974.719,295.963 982.375,276.746C982.869,275.498 988.448,286.404 991.262,285.428C994.075,284.451 1000.01,274.132 999.247,270.886C998.487,267.639 986.105,267.388 986.677,265.949C995.83,242.975 1004.98,220.002 1014.13,197.028\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1089.98,321.199C1093.52,319.608 1097.06,318.017 1100.6,316.426C1101.4,316.068 1100.48,327.986 1102.98,329.526C1105.48,331.066 1114.81,328.381 1115.6,325.667C1116.38,322.953 1106.88,313.604 1107.69,313.24C1112.49,311.082 1117.29,308.925 1122.09,306.768C1117.87,294.335 1112.78,282.291 1106.91,270.724C1101.86,260.796 1096.23,251.219 1090.07,242.051C1089.17,240.707 1100.41,238.262 1100.71,234.824C1101.01,231.385 1094.86,221.895 1091.9,221.421C1088.94,220.946 1083.95,233.315 1082.96,231.975C1073.25,218.861 1062.39,206.688 1050.55,195.638C1042.02,187.686 1032.97,180.316 1023.46,173.596C1020.35,181.407 1017.24,189.218 1014.13,197.028C1020.69,202.503 1026.81,208.088 1032.51,213.797C1028.61,217.218 1025.69,222.061 1024.32,227.657C1024.06,228.732 1031.3,224.318 1032.46,226.645C1033.63,228.971 1032.72,239.289 1031.31,241.619C1029.9,243.95 1023.66,238.762 1024.02,240.628C1025.95,250.55 1032.7,258.365 1041.28,260.577C1042.88,260.99 1044.55,261.208 1046.26,261.208C1053.11,261.208 1059.26,257.702 1063.44,252.155C1068.48,260.139 1072.85,268.331 1076.58,276.739C1077.02,277.726 1083.49,269.473 1086.05,270.805C1088.61,272.136 1092.8,282.003 1091.92,284.73C1091.05,287.459 1080.34,285.865 1080.83,287.172C1084.92,298.149 1087.96,309.486 1089.98,321.199\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1041.28,260.577C1041.25,272.555 1040.41,283.674 1038.82,293.979C1038.66,295.05 1031.11,287.639 1028.81,289.745C1026.5,291.85 1023.71,303.942 1025.01,306.612C1026.3,309.284 1036.96,304.106 1036.59,305.771C1033.59,319.066 1029.17,330.855 1023.46,341.253C1016.98,353.055 1008.83,363.065 999.161,371.448C992.782,364.594 985.925,357.817 978.841,351.283C978.59,351.058 988.127,346.056 987.861,342.954C987.586,339.852 979.742,332.211 977.211,332.674C974.687,333.138 973.253,346.22 972.705,345.734C968.308,341.834 963.857,338.043 959.406,334.399C967.062,315.181 974.719,295.963 982.375,276.746C982.869,275.498 988.448,286.404 991.262,285.428C994.075,284.451 1000.01,274.132 999.247,270.886C998.487,267.639 986.105,267.388 986.677,265.949C995.83,242.975 1004.98,220.002 1014.13,197.028C1020.69,202.503 1026.81,208.088 1032.51,213.797C1028.61,217.218 1025.69,222.061 1024.32,227.657C1024.06,228.732 1031.3,224.318 1032.46,226.645C1033.63,228.971 1032.72,239.289 1031.31,241.619C1029.9,243.95 1023.66,238.762 1024.02,240.628C1025.95,250.55 1032.7,258.365 1041.28,260.577\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1023.46,341.253C1031.14,347.903 1039.21,353.174 1047.8,356.653C1049.25,357.241 1048.62,343.178 1051.6,341.653C1054.58,340.128 1064.51,344.451 1065.66,347.504C1066.81,350.556 1057.55,359.767 1058.49,359.971C1069.16,362.286 1080.61,361.85 1093.04,357.975C1093.04,345.319 1092.03,333.066 1089.98,321.199C1087.96,309.486 1084.92,298.149 1080.83,287.172C1080.34,285.865 1091.05,287.459 1091.92,284.73C1092.8,282.003 1088.61,272.136 1086.05,270.805C1083.49,269.473 1077.02,277.726 1076.58,276.739C1072.85,268.331 1068.48,260.139 1063.44,252.155C1059.26,257.702 1053.11,261.208 1046.26,261.208C1044.55,261.208 1042.88,260.99 1041.28,260.577C1041.25,272.555 1040.41,283.674 1038.82,293.979C1038.66,295.05 1031.11,287.639 1028.81,289.745C1026.5,291.85 1023.71,303.942 1025.01,306.612C1026.3,309.284 1036.96,304.106 1036.59,305.771C1033.59,319.066 1029.17,330.855 1023.46,341.253\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1122.09,306.768C1117.29,308.925 1112.49,311.082 1107.69,313.24C1106.88,313.604 1116.38,322.953 1115.6,325.667C1114.81,328.381 1105.48,331.066 1102.98,329.526C1100.48,327.986 1101.4,316.068 1100.6,316.426C1097.06,318.017 1093.52,319.608 1089.98,321.199C1092.03,333.066 1093.04,345.319 1093.04,357.975C1093.04,370.042 1092.67,380.645 1091.6,390.989C1091.42,392.738 1080.93,383.28 1078.42,385.34C1075.91,387.4 1074.66,400.107 1076.55,403.35C1078.43,406.593 1089.98,403.288 1089.73,404.801C1086.87,421.714 1081.76,439.372 1073.01,463.023C1078.85,466.489 1084.78,469.394 1090.52,471.958C1091.5,472.394 1090.96,460.104 1093.43,458.655C1095.9,457.205 1104.68,460.539 1105.37,463.262C1106.06,465.984 1096.86,474.7 1097.55,474.99C1106.81,478.871 1115.23,482.051 1121.53,485.56C1126.15,472.382 1129.8,458.651 1132.35,444.457C1133.99,435.393 1135.18,426.139 1135.9,416.719C1135.99,415.659 1136.39,409.155 1136.43,408.083C1136.76,400.973 1136.81,393.904 1136.59,386.89C1136.29,376.982 1135.45,367.182 1134.12,357.526C1134.07,357.163 1145.49,359.868 1147.04,357.566C1148.58,355.263 1145.65,345.375 1143.36,343.712C1140.92,341.941 1132.52,347.562 1132.41,346.939C1132.19,345.652 1132.01,344.628 1131.93,344.169C1130.71,337.729 1129.27,331.363 1127.61,325.08C1125.98,318.892 1124.14,312.784 1122.09,306.768\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1023.46,341.253C1031.14,347.903 1039.21,353.174 1047.8,356.653C1049.25,357.241 1048.62,343.178 1051.6,341.653C1054.58,340.128 1064.51,344.451 1065.66,347.504C1066.81,350.556 1057.55,359.767 1058.49,359.971C1069.16,362.286 1080.61,361.85 1093.04,357.975C1093.04,370.042 1092.67,380.645 1091.6,390.989C1091.42,392.738 1080.93,383.28 1078.42,385.34C1075.91,387.4 1074.66,400.107 1076.55,403.35C1078.43,406.593 1089.98,403.288 1089.73,404.801C1086.87,421.714 1081.76,439.372 1073.01,463.023C1066.49,459.163 1060.08,454.608 1054.13,449.053C1053.01,448.006 1051.9,446.923 1050.81,445.802C1050.25,445.217 1048.23,459.102 1045.7,459.475C1043.18,459.847 1036.08,451.814 1035.66,448.038C1035.24,444.263 1044.07,438.018 1043.19,436.819C1039.13,431.333 1035.52,425.11 1032.51,418.003C1029.03,410.184 1023.91,401.895 1017.65,393.45C1017.12,392.738 1013.8,404.951 1010.81,404.851C1007.81,404.751 999.686,396.221 999.678,392.852C999.663,389.484 1011.7,385.798 1010.74,384.641C1007.12,380.241 1003.24,375.828 999.161,371.448C1008.83,363.065 1016.98,353.055 1023.46,341.253\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1032.51,418.003C1024.87,430.329 1013.17,438.634 993.268,440.56C984.154,420.659 969.946,402.673 951.154,386.41C950.018,385.43 960.817,380.954 960.127,377.749C959.437,374.544 950.002,366.958 947.016,367.177C944.031,367.398 943.098,379.763 942.213,379.07C930.826,370.191 918.005,361.85 903.853,354.015C908.022,343.053 912.097,332.105 916.07,321.199C917.825,316.379 919.557,311.569 921.273,306.768C925.654,309.482 930.246,312.522 934.979,315.832C936.092,316.615 937.04,302.673 939.752,301.705C942.456,300.737 950.856,306.847 951.209,310.025C951.562,313.203 941.241,320.311 941.868,320.772C947.62,324.997 953.513,329.569 959.406,334.399C963.857,338.043 968.308,341.834 972.705,345.734C973.253,346.22 974.687,333.138 977.211,332.674C979.742,332.211 987.586,339.852 987.861,342.954C988.127,346.056 978.59,351.058 978.841,351.283C985.925,357.817 992.782,364.594 999.161,371.448C1003.24,375.828 1007.12,380.241 1010.74,384.641C1011.7,385.798 999.663,389.484 999.678,392.852C999.686,396.221 1007.81,404.751 1010.81,404.851C1013.8,404.951 1017.12,392.738 1017.65,393.45C1023.91,401.895 1029.03,410.184 1032.51,418.003\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1032.51,418.003C1024.87,430.329 1013.17,438.634 993.268,440.56C1000.52,456.388 1004.55,473.429 1005.09,491.777C1010.58,493.263 1016.07,495.403 1021.57,498.161C1022.65,498.703 1023.19,484.945 1026.2,483.956C1029.22,482.968 1038.69,488.858 1039.67,492.231C1040.65,495.603 1031.07,503.537 1032.09,504.187C1037,507.343 1041.91,510.972 1046.82,515.046C1048.74,516.638 1050.65,518.299 1052.58,520.025C1055.18,522.364 1057.77,524.822 1060.37,527.399C1061.39,528.407 1049.43,535.051 1049.54,538.606C1049.64,542.162 1057.84,549.215 1060.98,548.733C1064.13,548.25 1067.61,534.87 1068.39,535.714C1073.82,541.596 1079.25,547.973 1084.68,554.807C1086.44,552.464 1088.15,550.086 1089.83,547.675C1095.14,540.033 1100.07,532.055 1104.58,523.773C1105.03,522.928 1092.96,523.069 1091.94,520.025C1090.91,516.982 1095.61,506.334 1098.45,505.509C1101.31,504.679 1108.46,516.36 1109.11,515.046C1113.8,505.572 1117.96,495.731 1121.53,485.56C1115.23,482.051 1106.81,478.871 1097.55,474.99C1096.86,474.7 1106.06,465.984 1105.37,463.262C1104.68,460.539 1095.9,457.205 1093.43,458.655C1090.96,460.104 1091.5,472.394 1090.52,471.958C1084.78,469.394 1078.85,466.489 1073.01,463.023C1066.49,459.163 1060.08,454.608 1054.13,449.053C1053.01,448.006 1051.9,446.923 1050.81,445.802C1050.25,445.217 1048.23,459.102 1045.7,459.475C1043.18,459.847 1036.08,451.814 1035.66,448.038C1035.24,444.263 1044.07,438.018 1043.19,436.819C1039.13,431.333 1035.52,425.11 1032.51,418.003\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M903.853,354.015C918.005,361.85 930.826,370.191 942.213,379.07C943.098,379.763 944.031,367.398 947.016,367.177C950.002,366.958 959.437,374.544 960.127,377.749C960.817,380.954 950.018,385.43 951.154,386.41C969.946,402.673 984.154,420.659 993.268,440.56C1000.52,456.388 1004.55,473.429 1005.09,491.777C999.592,490.289 994.091,489.46 988.589,489.327C987.688,489.306 991.27,476.768 989.624,474.513C987.978,472.258 980.142,473.289 978.715,475.801C977.289,478.314 981.866,489.509 981.059,489.584C977.14,489.948 973.23,490.675 969.311,491.777C968.732,475.016 963.144,460.898 954.242,448.536C953.662,447.733 952.494,460.556 949.728,460.094C946.969,459.633 938.02,449.057 937.675,445.767C937.33,442.476 948.505,441.303 947.659,440.352C932.268,423.06 910.349,409.215 887.451,395.887C889.48,390.851 891.494,385.812 893.477,380.771C893.853,379.829 894.221,378.886 894.59,377.943C894.888,377.204 900.271,386.731 902.975,386.021C905.686,385.31 911.611,376.625 910.835,373.682C910.059,370.739 897.771,369.814 898.336,368.362C900.193,363.578 902.027,358.795 903.853,354.015\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M887.451,395.887C910.349,409.215 932.268,423.06 947.659,440.352C948.505,441.303 937.33,442.476 937.675,445.767C938.02,449.057 946.969,459.633 949.728,460.094C952.494,460.556 953.662,447.733 954.242,448.536C963.144,460.898 968.732,475.016 969.311,491.777C968.63,491.97 967.948,492.174 967.258,492.389C960.95,494.38 954.767,494.496 948.678,493.247C942.401,491.959 936.225,489.223 930.105,485.595C929.439,485.2 932.824,499.675 930.332,500.886C927.848,502.097 916.501,496.245 915.184,492.861C913.86,489.477 923.569,481.399 922.41,480.581C918.264,477.664 914.15,474.443 910.036,471.097C904.001,466.184 897.991,461 891.949,456.108C890.961,455.307 890.86,470.991 888.524,471.963C886.189,472.936 878.595,465.55 877.937,461.941C877.271,458.332 885.311,450.878 884.551,450.307C879.41,446.437 874.246,442.944 869.027,440.17C872.295,432.567 875.516,424.936 878.689,417.289C881.652,410.167 884.575,403.031 887.451,395.887\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M910.036,471.097C901.086,484.554 893.242,500.287 886.448,516.967C885.938,518.235 880.131,509.284 877.404,510.774C874.669,512.264 869.301,522.95 870.061,525.906C870.821,528.862 882.506,527.057 881.965,528.512C873.729,550.719 867.248,574.028 862.35,595.509C852.343,593.155 842.187,589.835 831.889,585.502C831.38,585.288 841.066,574.153 840.416,570.972C839.757,567.79 830.471,564.474 827.955,566.415C825.448,568.355 826.325,583.074 825.338,582.617C818.787,579.608 812.18,576.19 805.504,572.352C811.467,561.352 817.329,550.152 823.089,538.789C828.614,527.886 834.044,516.832 839.381,505.658C842.68,498.746 845.94,491.789 849.169,484.793C849.741,483.554 840.533,478.709 840.173,474.873C839.812,471.036 844.624,462.024 846.998,461.776C849.365,461.529 853.871,474.511 854.38,473.388C859.357,462.391 864.239,451.309 869.027,440.17C874.246,442.944 879.41,446.437 884.551,450.307C885.311,450.878 877.271,458.332 877.937,461.941C878.595,465.55 886.189,472.936 888.524,471.963C890.86,470.991 890.961,455.307 891.949,456.108C897.991,461 904.001,466.184 910.036,471.097\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M910.036,471.097C901.086,484.554 893.242,500.287 886.448,516.967C885.938,518.235 880.131,509.284 877.404,510.774C874.669,512.264 869.301,522.95 870.061,525.906C870.821,528.862 882.506,527.057 881.965,528.512C873.729,550.719 867.248,574.028 862.35,595.509C867.601,596.745 872.812,597.714 877.984,598.424C879.018,598.566 878.298,583.26 881.087,581.03C883.869,578.8 893.642,581.976 894.692,585.044C895.742,588.112 886.354,599.353 887.388,599.434C892.921,599.861 898.406,599.992 903.853,599.833C908.899,599.687 913.915,599.291 918.891,598.655C924.612,597.922 930.285,596.87 935.912,595.509C932.182,578.769 929.345,561.772 931.743,542.572C931.939,541.032 938.545,549.403 940.755,547.17C942.965,544.936 946.037,532.381 945.002,529.168C943.968,525.953 934.055,529.814 934.556,527.884C937.315,517.173 941.813,505.72 948.678,493.247C942.401,491.959 936.225,489.223 930.105,485.595C929.439,485.2 932.824,499.675 930.332,500.886C927.848,502.097 916.501,496.245 915.184,492.861C913.86,489.477 923.569,481.399 922.41,480.581C918.264,477.664 914.15,474.443 910.036,471.097\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M989.491,572.715C997.578,566.537 1005.31,560.122 1012.62,553.419C1013.35,552.748 1015.73,564.251 1018.99,565.048C1022.25,565.845 1032.11,561.202 1032.18,558.2C1032.24,555.198 1018.52,547.852 1019.36,547.035C1029.54,537.06 1038.77,526.449 1046.82,515.046C1041.91,510.972 1037,507.343 1032.09,504.187C1031.07,503.537 1040.65,495.603 1039.67,492.231C1038.69,488.858 1029.22,482.968 1026.2,483.956C1023.19,484.945 1022.65,498.703 1021.57,498.161C1016.07,495.403 1010.58,493.263 1005.09,491.777C999.592,490.289 994.091,489.46 988.589,489.327C987.688,489.306 991.27,476.768 989.624,474.513C987.978,472.258 980.142,473.289 978.715,475.801C977.289,478.314 981.866,489.509 981.059,489.584C977.14,489.948 973.23,490.675 969.311,491.777C968.63,491.97 967.948,492.174 967.258,492.389C960.95,494.38 954.767,494.496 948.678,493.247C941.813,505.72 937.315,517.173 934.556,527.884C934.055,529.814 943.968,525.953 945.002,529.168C946.037,532.381 942.965,544.936 940.755,547.17C938.545,549.403 931.939,541.032 931.743,542.572C929.345,561.772 932.182,578.769 935.912,595.509C939.556,594.629 943.177,593.617 946.781,592.48C947.565,592.231 946.499,605.558 948.552,607.099C950.606,608.641 958.434,604.49 959.108,601.728C959.782,598.967 952.04,590.728 952.588,590.534C958.615,588.392 964.594,585.896 970.518,583.059C976.897,580.002 983.221,576.548 989.491,572.715\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1046.82,515.046C1038.77,526.449 1029.54,537.06 1019.36,547.035C1018.52,547.852 1032.24,555.198 1032.18,558.2C1032.11,561.202 1022.25,565.845 1018.99,565.048C1015.73,564.251 1013.35,552.748 1012.62,553.419C1005.31,560.122 997.578,566.537 989.491,572.715C991.23,577.485 992.962,582.254 994.694,587.024C995.015,587.896 985.282,588.466 984.264,591.24C983.253,594.015 986.215,602.591 988.605,603.672C990.987,604.752 998.142,596.506 998.589,597.722C1001.59,605.993 1004.6,614.264 1007.61,622.535C1011.56,620.329 1015.45,618.012 1019.26,615.587C1030.11,608.699 1040.41,600.939 1050.08,592.388C1051.31,591.308 1041.4,583.308 1041.64,579.185C1041.87,575.063 1048.54,566.894 1051.49,567.652C1054.45,568.41 1058.57,584.523 1059.38,583.732C1068.49,574.807 1076.95,565.139 1084.68,554.807C1079.25,547.973 1073.82,541.596 1068.39,535.714C1067.61,534.87 1064.13,548.25 1060.98,548.733C1057.84,549.215 1049.64,542.162 1049.54,538.606C1049.43,535.051 1061.39,528.407 1060.37,527.399C1057.77,524.822 1055.18,522.364 1052.58,520.025C1050.65,518.299 1048.74,516.638 1046.82,515.046\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M989.491,572.715C983.221,576.548 976.897,580.002 970.518,583.059C964.594,585.896 958.615,588.392 952.588,590.534C952.04,590.728 959.782,598.967 959.108,601.728C958.434,604.49 950.606,608.641 948.552,607.099C946.499,605.558 947.565,592.231 946.781,592.48C943.177,593.617 939.556,594.629 935.912,595.509C930.285,596.87 924.612,597.922 918.891,598.655C913.915,599.291 908.899,599.687 903.853,599.833C905.914,617.166 907.975,634.498 910.036,651.829C912.057,651.684 914.064,651.512 916.07,651.315C918.554,651.07 921.03,650.787 923.499,650.464C930.325,649.571 937.064,648.382 943.717,646.908C944.242,646.791 940.755,657.712 942.307,659.533C943.999,661.523 952.251,661.291 953.881,658.851C955.511,656.41 950.786,645.23 952.079,644.893C956.593,643.716 961.06,642.406 965.472,640.969C971.169,639.115 976.78,637.047 982.297,634.773C982.924,634.515 982.109,645.203 983.793,646.256C986.152,647.73 995.58,646.011 996.442,643.619C997.304,641.227 988.143,632.274 988.966,631.904C995.321,629.053 1001.53,625.926 1007.61,622.535C1004.6,614.264 1001.59,605.993 998.589,597.722C998.142,596.506 990.987,604.752 988.605,603.672C986.215,602.591 983.253,594.015 984.264,591.24C985.282,588.466 995.015,587.896 994.694,587.024C992.962,582.254 991.23,577.485 989.491,572.715\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M903.853,599.833C898.406,599.992 892.921,599.861 887.388,599.434C886.354,599.353 895.742,588.112 894.692,585.044C893.642,581.976 883.869,578.8 881.087,581.03C878.298,583.26 879.018,598.566 877.984,598.424C872.812,597.714 867.601,596.745 862.35,595.509C852.343,593.155 842.187,589.835 831.889,585.502C831.38,585.288 841.066,574.153 840.416,570.972C839.757,567.79 830.471,564.474 827.955,566.415C825.448,568.355 826.325,583.074 825.338,582.617C818.787,579.608 812.18,576.19 805.504,572.352C802.236,578.388 798.929,584.363 795.598,590.272C795.12,591.12 808.466,591.734 809.641,594.277C810.809,596.82 805.66,604.976 802.628,605.529C799.595,606.082 791.907,596.78 791.445,597.594C786.594,606.057 781.68,614.376 776.712,622.535C785.168,627.16 793.913,631.303 802.91,634.926C819.978,641.799 837.963,646.798 856.653,649.661C857.758,649.83 853.557,635.473 855.642,633.743C857.727,632.014 867.154,636.391 869.176,639.284C870.555,641.258 866.308,650.945 867.773,651.102C882.083,652.618 896.204,652.831 910.036,651.829C907.975,634.498 905.914,617.166 903.853,599.833\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1093.04,92.699C1098.43,76.32 1103.81,59.942 1109.2,43.564C1109.61,42.321 1096.48,44.755 1095.18,42.604C1093.87,40.453 1098.37,32.546 1101.38,30.659C1104.39,28.772 1112.81,32.603 1113.25,31.28C1116.62,21.011 1120,10.744 1123.38,0.476L1050.55,0.476C1047.28,10.674 1044.02,20.871 1040.76,31.069C1040.37,32.263 1028.01,28.022 1024.74,29.665C1021.6,31.244 1018.96,39.179 1021.15,40.931C1023.33,42.684 1038.2,39.053 1037.84,40.179L1022.22,89.018C1032.42,90.251 1042.36,91.24 1052,91.922C1053.95,92.06 1049.03,79.686 1051.42,77.26C1053.81,74.835 1064.3,74.815 1066.32,77.371C1068.34,79.927 1062.35,92.54 1063.56,92.595C1070.88,92.925 1077.99,93.051 1084.86,92.943C1087.63,92.9 1090.36,92.819 1093.04,92.699\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1123.38,0.476C1120,10.744 1116.62,21.011 1113.25,31.28C1112.81,32.603 1104.39,28.772 1101.38,30.659C1098.37,32.546 1093.87,40.453 1095.18,42.604C1096.48,44.755 1109.61,42.321 1109.2,43.564C1103.81,59.942 1098.43,76.32 1093.04,92.699C1101.65,92.312 1109.84,91.516 1117.55,90.246C1118.33,90.116 1115.78,104.031 1118.16,105.859C1120.53,107.686 1130.19,104.159 1131.81,101.213C1133.43,98.267 1127.21,88.346 1127.89,88.184C1135.31,86.424 1142.19,84.138 1148.46,81.256C1158.6,76.594 1167.16,70.373 1173.82,62.299C1179.72,55.152 1184.14,46.551 1186.87,36.295C1187.08,35.503 1174.87,38.586 1173.4,36.662C1171.93,34.737 1175.48,26.575 1178.07,24.748C1180.67,22.922 1188.78,27.253 1188.99,25.704C1190.08,18.089 1190.36,9.7 1189.79,0.476L1123.38,0.476\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1243.98,0.476L1189.79,0.476C1190.36,9.7 1190.08,18.089 1188.99,25.704C1188.78,27.253 1180.67,22.922 1178.07,24.748C1175.48,26.575 1171.93,34.737 1173.4,36.662C1174.87,38.586 1187.08,35.503 1186.87,36.295C1184.14,46.551 1179.72,55.152 1173.82,62.299C1186.06,70.83 1198.3,79.363 1210.55,87.894C1210.98,88.198 1210.8,77.07 1212.97,76.054C1215.14,75.036 1222.89,79.067 1223.57,81.79C1224.24,84.513 1216.36,91.944 1216.99,92.391C1225.99,98.66 1234.99,104.928 1243.98,111.197C1249.72,103.772 1256.85,97.509 1265.03,92.943C1258.44,78.707 1252.88,63.261 1249.12,45.702C1248.87,44.53 1262.6,48.991 1264.46,47.226C1266.32,45.462 1263.22,37.371 1260.3,35.117C1257.37,32.863 1247.16,35.417 1246.9,33.7C1245.27,23.392 1244.25,12.369 1243.98,0.476\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1305.54,85.604C1309.1,73.15 1312.65,61.097 1316.1,49.644C1316.5,48.335 1323.14,58.182 1325.99,56.967C1328.85,55.753 1334.38,45.196 1333.22,42.359C1332.06,39.521 1318.66,41.216 1319.04,39.94C1323.43,25.536 1327.59,12.237 1331.26,0.476L1243.98,0.476C1244.25,12.369 1245.27,23.392 1246.9,33.7C1247.16,35.417 1257.37,32.863 1260.3,35.117C1263.22,37.371 1266.32,45.462 1264.46,47.226C1262.6,48.991 1248.87,44.53 1249.12,45.702C1252.88,63.261 1258.44,78.707 1265.03,92.943C1268.59,90.955 1272.35,89.288 1276.29,87.989C1277.16,87.7 1274.82,100.827 1276.63,102.503C1278.44,104.181 1285.74,100.843 1287.15,98.052C1288.56,95.261 1283.82,85.984 1285.08,85.758C1292.06,84.514 1298.94,84.509 1305.54,85.604\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1305.54,85.604C1309.71,86.294 1313.76,87.423 1317.64,88.955C1327.26,92.753 1335.84,99.025 1342.61,107.228C1350.06,98.322 1358.37,89.64 1367.43,82.588C1368.13,82.048 1369.6,95.762 1372.43,97.108C1375.26,98.454 1384.02,93.974 1384.44,90.668C1384.85,87.36 1374.08,77.809 1374.92,77.267C1386.04,70.125 1398.14,65.765 1411.04,66.476C1412.43,54.335 1414.58,41.935 1417.58,29.383C1417.76,28.604 1405.97,32.125 1404.45,29.73C1402.93,27.335 1405.87,16.65 1408.46,15.014C1411.05,13.38 1419.56,21.517 1419.99,19.921C1421.75,13.468 1423.74,6.982 1425.97,0.476L1331.26,0.476C1327.59,12.237 1323.43,25.536 1319.04,39.94C1318.66,41.216 1332.06,39.521 1333.22,42.359C1334.38,45.196 1328.85,55.753 1325.99,56.967C1323.14,58.182 1316.5,48.335 1316.1,49.644C1312.65,61.097 1309.1,73.15 1305.54,85.604\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1450.78,54.034C1451.68,47.146 1452.82,40.205 1454.18,33.213C1454.39,32.153 1463.56,37.621 1465.87,35.982C1468.16,34.343 1469.54,25.728 1467.99,23.379C1466.44,21.031 1456.26,23.353 1456.6,21.892C1458.22,14.805 1460.08,7.665 1462.17,0.476L1425.97,0.476C1423.74,6.982 1421.75,13.468 1419.99,19.921C1419.56,21.517 1411.05,13.38 1408.46,15.014C1405.87,16.65 1402.93,27.335 1404.45,29.73C1405.97,32.125 1417.76,28.604 1417.58,29.383C1414.58,41.935 1412.43,54.335 1411.04,66.476C1409.44,80.456 1408.84,94.094 1409.08,107.228C1409.11,108.257 1420.52,99.77 1422.63,101.801C1424.73,103.831 1423.9,116.567 1421.72,119.411C1419.53,122.254 1409.43,117.224 1409.52,118.86C1410.74,140.113 1414.13,159.836 1419.01,177.326C1422.73,174.216 1426.43,171.233 1430.09,168.395C1430.81,167.837 1425.6,159.095 1426.54,155.579C1427.47,152.063 1433.82,146.123 1435.69,147.299C1437.56,148.475 1436.82,163.315 1437.75,162.637C1443.43,158.493 1449,154.743 1454.36,151.461C1447.46,120.254 1446.33,87.763 1450.78,54.034\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1557.36,52.064C1559.37,46.098 1560.87,39.956 1562.02,33.624C1562.17,32.791 1552.43,35.197 1550.87,32.861C1549.3,30.525 1550.56,20.953 1552.65,19.607C1554.74,18.261 1563.29,25.614 1563.39,24.785C1564.41,16.973 1565.02,8.877 1565.49,0.476L1462.17,0.476C1460.08,7.665 1458.22,14.805 1456.6,21.892C1456.26,23.353 1466.44,21.031 1467.99,23.379C1469.54,25.728 1468.16,34.343 1465.87,35.982C1463.56,37.621 1454.39,32.153 1454.18,33.213C1452.82,40.205 1451.68,47.146 1450.78,54.034C1468.2,58.148 1482.88,62.257 1495.13,66.362C1496.82,66.926 1493.48,52.911 1496.16,52.064C1498.85,51.218 1509.44,58.202 1511.21,61.282C1512.89,64.216 1505.7,70.126 1506.78,70.543C1520.72,75.922 1530.66,81.295 1537.32,86.663C1546.99,75.794 1553.25,64.3 1557.36,52.064\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1557.36,52.064C1569.9,52.455 1582.01,54.322 1593.58,58.107C1594.26,58.329 1587.63,65.525 1588.46,68.185C1589.29,70.844 1596.36,75.249 1598.54,74.065C1600.74,72.881 1600.42,60.589 1601.6,61.08C1610.93,64.961 1619.87,70.219 1628.34,77.102C1634.1,64.634 1639.87,52.165 1645.63,39.697C1645.94,39.041 1634.25,42.143 1633.29,40.07C1632.33,37.997 1637.23,28.63 1639.89,27.255C1642.56,25.881 1649.02,32.374 1649.28,31.824C1654.1,21.375 1658.94,10.925 1663.77,0.476L1565.49,0.476C1565.02,8.877 1564.41,16.973 1563.39,24.785C1563.29,25.614 1554.74,18.261 1552.65,19.607C1550.56,20.953 1549.3,30.525 1550.87,32.861C1552.43,35.197 1562.17,32.791 1562.02,33.624C1560.87,39.956 1559.37,46.098 1557.36,52.064\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1663.77,0.476C1658.94,10.925 1654.1,21.375 1649.28,31.824C1649.02,32.374 1642.56,25.881 1639.89,27.255C1637.23,28.63 1632.33,37.997 1633.29,40.07C1634.25,42.143 1645.94,39.041 1645.63,39.697C1639.87,52.165 1634.1,64.634 1628.34,77.102C1622.23,90.323 1616.12,103.545 1610.01,116.767C1609.72,117.372 1604.83,107.931 1602.73,108.637C1600.63,109.343 1596.72,118.461 1597.38,121.001C1598.05,123.542 1607.21,122.816 1606.72,123.877C1603.02,131.89 1599.31,139.903 1595.6,147.916C1605.32,154.626 1615.28,162.221 1625.53,170.829C1629.67,162.412 1633.74,154.087 1637.76,145.865C1638.3,144.743 1642.98,154.218 1645.85,153.35C1648.72,152.483 1655.62,143.327 1654.97,140.659C1654.31,137.99 1641.55,138.076 1641.91,137.339C1645.37,130.247 1648.77,123.233 1652.13,116.304C1660.28,99.48 1668.15,83.151 1675.7,67.391C1679.63,59.213 1683.47,51.188 1687.23,43.326C1687.85,42.042 1695.54,50.126 1698.38,48.647C1701.22,47.167 1705.43,36.855 1704.3,34.449C1703.17,32.045 1691.16,35.098 1691.59,34.215C1697.14,22.578 1702.51,11.321 1707.68,0.476L1663.77,0.476\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1557.36,52.064C1569.9,52.455 1582.01,54.322 1593.58,58.107C1594.26,58.329 1587.63,65.525 1588.46,68.185C1589.29,70.844 1596.36,75.249 1598.54,74.065C1600.74,72.881 1600.42,60.589 1601.6,61.08C1610.93,64.961 1619.87,70.219 1628.34,77.102C1622.23,90.323 1616.12,103.545 1610.01,116.767C1609.72,117.372 1604.83,107.931 1602.73,108.637C1600.63,109.343 1596.72,118.461 1597.38,121.001C1598.05,123.542 1607.21,122.816 1606.72,123.877C1603.02,131.89 1599.31,139.903 1595.6,147.916C1587.95,142.628 1580.45,137.89 1573.1,133.641C1571.47,132.703 1570.87,144.719 1568.25,145.833C1565.62,146.947 1558.14,143.238 1557.36,140.327C1556.58,137.416 1564.2,128.703 1563.57,128.364C1556.8,124.78 1550.14,121.599 1543.59,118.771C1550.82,108.083 1550.62,97.383 1537.32,86.663C1546.99,75.794 1553.25,64.3 1557.36,52.064\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1537.32,86.663C1530.66,81.295 1520.72,75.922 1506.78,70.543C1505.7,70.126 1512.89,64.216 1511.21,61.282C1509.44,58.202 1498.85,51.218 1496.16,52.064C1493.48,52.911 1496.82,66.926 1495.13,66.362C1482.88,62.257 1468.2,58.148 1450.78,54.034C1446.33,87.763 1447.46,120.254 1454.36,151.461C1460.58,147.65 1466.53,144.468 1472.11,142.029C1473.45,141.444 1468.35,155.011 1470.52,156.596C1472.71,158.18 1483.2,154.591 1485.19,151.534C1487.17,148.477 1481.42,138.537 1482.43,138.253C1496.14,134.35 1506.46,136.513 1511.07,147.042C1515.47,144.089 1519.67,141.135 1523.58,138.18C1524.41,137.545 1516.47,132.922 1516.61,129.902C1516.76,126.882 1522.24,119.512 1524.45,120.06C1526.66,120.61 1529.22,133.734 1529.86,133.194C1535.59,128.388 1540.35,123.581 1543.59,118.771C1550.82,108.083 1550.62,97.383 1537.32,86.663\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1411.04,66.476C1398.14,65.765 1386.04,70.125 1374.92,77.267C1374.08,77.809 1384.85,87.36 1384.44,90.668C1384.02,93.974 1375.26,98.454 1372.43,97.108C1369.6,95.762 1368.13,82.048 1367.43,82.588C1358.37,89.64 1350.06,98.322 1342.61,107.228C1349.71,115.845 1354.79,126.592 1356.95,138.837C1357.69,143.106 1358.06,147.375 1358.06,151.599C1366.73,152.491 1373.86,157.451 1380.78,167.347C1381.44,168.28 1371.32,173.177 1370.75,176.013C1370.18,178.847 1374.72,184.173 1377.38,184.355C1380.05,184.538 1386.11,175.965 1386.73,177.109C1389.85,182.873 1393,189.687 1396.32,197.632C1403.86,190.445 1411.47,183.626 1419.01,177.326C1414.13,159.836 1410.74,140.113 1409.52,118.86C1409.43,117.224 1419.53,122.254 1421.72,119.411C1423.9,116.567 1424.73,103.831 1422.63,101.801C1420.52,99.77 1409.11,108.257 1409.08,107.228C1408.84,94.094 1409.44,80.456 1411.04,66.476\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1358.06,151.599C1358.06,180.523 1341.08,207.379 1315.66,218.477C1314.97,218.781 1318.01,203.696 1316.1,201.91C1314.18,200.126 1306.04,204.413 1304.21,207.767C1302.38,211.12 1306.68,221.652 1305.11,222.031C1299.32,223.436 1293.56,223.974 1287.95,223.727C1288.58,207.543 1290.86,188.121 1295.17,166.645C1295.53,164.883 1285.75,168.181 1284.42,165.581C1283.1,162.98 1285.05,152.697 1287.23,151.042C1289.41,149.388 1297.31,156.574 1297.52,155.653C1297.87,154.111 1298.23,152.561 1298.6,151.003C1303.23,131.411 1309.49,110.464 1317.64,88.955C1327.26,92.753 1335.84,99.025 1342.61,107.228C1349.71,115.845 1354.79,126.592 1356.95,138.837C1357.69,143.106 1358.06,147.375 1358.06,151.599\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1273.36,221.236C1278.05,222.656 1282.94,223.505 1287.95,223.727C1288.58,207.543 1290.86,188.121 1295.17,166.645C1295.53,164.883 1285.75,168.181 1284.42,165.581C1283.1,162.98 1285.05,152.697 1287.23,151.042C1289.41,149.388 1297.31,156.574 1297.52,155.653C1297.87,154.111 1298.23,152.561 1298.6,151.003C1303.23,131.411 1309.49,110.464 1317.64,88.955C1313.76,87.423 1309.71,86.294 1305.54,85.604C1298.94,84.509 1292.06,84.514 1285.08,85.758C1283.82,85.984 1288.56,95.261 1287.15,98.052C1285.74,100.843 1278.44,104.181 1276.63,102.503C1274.82,100.827 1277.16,87.7 1276.29,87.989C1272.35,89.288 1268.59,90.955 1265.03,92.943C1256.85,97.509 1249.72,103.772 1243.98,111.197C1233.84,124.302 1228.02,141.022 1228.36,158.405C1228.43,162.166 1228.79,165.958 1229.45,169.752C1229.7,171.121 1236.37,162.754 1238.43,163.925C1240.5,165.094 1242.89,174.033 1241.84,176.774C1240.79,179.513 1231.87,179.485 1232.17,180.365C1239.06,200.691 1254.58,215.545 1273.36,221.236\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1243.98,111.197C1234.99,104.928 1225.99,98.66 1216.99,92.391C1216.36,91.944 1224.24,84.513 1223.57,81.79C1222.89,79.067 1215.14,75.036 1212.97,76.054C1210.8,77.07 1210.98,88.198 1210.55,87.894C1198.3,79.363 1186.06,70.83 1173.82,62.299C1167.16,70.373 1158.6,76.594 1148.46,81.256C1155.06,97.611 1161.66,113.965 1168.26,130.32C1168.63,131.234 1155.37,133.421 1154.07,136.584C1152.78,139.746 1157.53,148.835 1160.5,149.295C1163.47,149.754 1171.35,137.995 1171.89,139.34C1176.5,150.759 1181.11,162.177 1185.72,173.596C1191.33,169.529 1197.47,166.632 1203.71,164.45C1204.43,164.197 1197.39,156.395 1198.36,153.491C1199.32,150.587 1207.13,145.643 1209.5,147.026C1211.87,148.407 1211.3,162.116 1212.58,161.783C1218.02,160.379 1223.37,159.355 1228.36,158.405C1228.02,141.022 1233.84,124.302 1243.98,111.197\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1148.46,81.256C1155.06,97.611 1161.66,113.965 1168.26,130.32C1168.63,131.234 1155.37,133.421 1154.07,136.584C1152.78,139.746 1157.53,148.835 1160.5,149.295C1163.47,149.754 1171.35,137.995 1171.89,139.34C1176.5,150.759 1181.11,162.177 1185.72,173.596C1179.86,177.847 1174.57,183.375 1170.35,190.704C1169.43,192.295 1168.54,193.94 1167.64,195.638C1159.73,186.719 1147.67,179.88 1133.11,174.31C1132.43,174.05 1134.65,186.207 1131.8,188.069C1128.96,189.932 1117.16,188.255 1116.04,185.487C1114.93,182.718 1125.61,171.622 1125.12,171.458C1109.46,166.232 1091.5,162.164 1072.93,158.405C1076.51,149.751 1079.31,140.607 1081.3,130.947C1081.49,130.002 1067.23,133.031 1065.36,130.74C1063.49,128.449 1067.11,119.017 1070.09,117.201C1073.06,115.386 1083.01,121.246 1083.19,119.849C1084.37,111.269 1084.93,102.307 1084.86,92.943C1087.63,92.9 1090.36,92.819 1093.04,92.699C1101.65,92.312 1109.84,91.516 1117.55,90.246C1118.33,90.116 1115.78,104.031 1118.16,105.859C1120.53,107.686 1130.19,104.159 1131.81,101.213C1133.43,98.267 1127.21,88.346 1127.89,88.184C1135.31,86.424 1142.19,84.138 1148.46,81.256\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M990.431,153.841C992.006,124.659 1001.56,104.846 1013.57,87.922C1016.47,88.305 1019.36,88.671 1022.22,89.018C1032.42,90.251 1042.36,91.24 1052,91.922C1053.95,92.06 1049.03,79.686 1051.42,77.26C1053.81,74.835 1064.3,74.815 1066.32,77.371C1068.34,79.927 1062.35,92.54 1063.56,92.595C1070.88,92.925 1077.99,93.051 1084.86,92.943C1084.93,102.307 1084.37,111.269 1083.19,119.849C1083.01,121.246 1073.06,115.386 1070.09,117.201C1067.11,119.017 1063.49,128.449 1065.36,130.74C1067.23,133.031 1081.49,130.002 1081.3,130.947C1079.31,140.607 1076.51,149.751 1072.93,158.405C1071.19,162.623 1069.26,166.725 1067.15,170.713C1066.6,171.764 1060.76,161.125 1057.89,161.798C1055.01,162.47 1049.35,171.539 1049.9,174.746C1050.44,177.953 1062.03,179.654 1061.15,181.038C1057.92,186.099 1054.38,190.963 1050.55,195.638C1042.02,187.686 1032.97,180.316 1023.46,173.596C1018.96,170.407 1014.34,167.364 1009.62,164.475C1008.65,163.879 1006.42,176.094 1004,176.623C1000.92,177.293 991.959,171.535 991.152,168.499C990.353,165.462 1000.67,159.231 999.161,158.405\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1072.93,158.405C1091.5,162.164 1109.46,166.232 1125.12,171.458C1125.61,171.622 1114.93,182.718 1116.04,185.487C1117.16,188.255 1128.96,189.932 1131.8,188.069C1134.65,186.207 1132.43,174.05 1133.11,174.31C1147.67,179.88 1159.73,186.719 1167.64,195.638C1163.13,204.155 1158.57,214.002 1151.16,225.102C1150.3,226.393 1145.03,213.981 1141.79,214.801C1138.56,215.621 1131.57,226.397 1131.72,230.019C1131.89,233.643 1143.76,235.295 1142.76,236.541C1134.33,247.008 1123.01,258.42 1106.91,270.724C1101.86,260.796 1096.23,251.219 1090.07,242.051C1089.17,240.707 1100.41,238.262 1100.71,234.824C1101.01,231.385 1094.86,221.895 1091.9,221.421C1088.94,220.946 1083.95,233.315 1082.96,231.975C1073.25,218.861 1062.39,206.688 1050.55,195.638C1054.38,190.963 1057.92,186.099 1061.15,181.038C1062.03,179.654 1050.44,177.953 1049.9,174.746C1049.35,171.539 1055.01,162.47 1057.89,161.798C1060.76,161.125 1066.6,171.764 1067.15,170.713C1069.26,166.725 1071.19,162.623 1072.93,158.405\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1209.54,271.611C1196.97,282.668 1184.03,292.402 1170.78,301.037C1170.35,301.314 1170.19,288.756 1167.62,287.99C1165.05,287.224 1156.03,293.516 1155.37,296.441C1154.71,299.365 1164.65,304.946 1163.68,305.538C1151.88,312.827 1139.84,319.29 1127.61,325.08C1125.98,318.892 1124.14,312.784 1122.09,306.768C1117.87,294.335 1112.78,282.291 1106.91,270.724C1123.01,258.42 1134.33,247.008 1142.76,236.541C1143.76,235.295 1131.89,233.643 1131.72,230.019C1131.57,226.397 1138.56,215.621 1141.79,214.801C1145.03,213.981 1150.3,226.393 1151.16,225.102C1158.57,214.002 1163.13,204.155 1167.64,195.638C1174.76,203.985 1181.14,212.927 1186.84,222.323C1187.58,223.546 1174.51,227.118 1174.22,231.036C1173.93,234.954 1181.95,245.469 1185.08,245.829C1188.22,246.188 1192.34,231.917 1193.02,233.191C1199.57,245.462 1205.04,258.365 1209.54,271.611\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1209.54,271.611C1216.74,266.087 1223.93,261.862 1231.13,259.057C1232.09,258.682 1231.41,269.819 1234.02,271.32C1236.62,272.821 1245.75,270.569 1246.8,268.06C1247.83,265.553 1239.45,256.446 1240.25,256.27C1249.57,254.22 1258.89,254.634 1268.2,257.771C1269.48,245.994 1271.23,233.756 1273.36,221.236C1254.58,215.545 1239.06,200.691 1232.17,180.365C1231.87,179.485 1240.79,179.513 1241.84,176.774C1242.89,174.033 1240.5,165.094 1238.43,163.925C1236.37,162.754 1229.7,171.121 1229.45,169.752C1228.79,165.958 1228.43,162.166 1228.36,158.405C1223.37,159.355 1218.02,160.379 1212.58,161.783C1211.3,162.116 1211.87,148.407 1209.5,147.026C1207.13,145.643 1199.32,150.587 1198.36,153.491C1197.39,156.395 1204.43,164.197 1203.71,164.45C1197.47,166.632 1191.33,169.529 1185.72,173.596C1179.86,177.847 1174.57,183.375 1170.35,190.704C1169.43,192.295 1168.54,193.94 1167.64,195.638C1174.76,203.985 1181.14,212.927 1186.84,222.323C1187.58,223.546 1174.51,227.118 1174.22,231.036C1173.93,234.954 1181.95,245.469 1185.08,245.829C1188.22,246.188 1192.34,231.917 1193.02,233.191C1199.57,245.462 1205.04,258.365 1209.54,271.611\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1358.06,151.599C1366.73,152.491 1373.86,157.451 1380.78,167.347C1381.44,168.28 1371.32,173.177 1370.75,176.013C1370.18,178.847 1374.72,184.173 1377.38,184.355C1380.05,184.538 1386.11,175.965 1386.73,177.109C1389.85,182.873 1393,189.687 1396.32,197.632C1387.6,205.938 1379,214.735 1370.73,223.785C1358.53,237.145 1347.07,251.058 1337.13,264.762C1336.79,265.228 1333.22,249.076 1330.66,248.896C1328.09,248.715 1321.7,259.551 1321.74,263.677C1321.78,267.802 1331.57,272.64 1330.88,273.648C1330.22,274.623 1325.63,281.589 1324.89,282.765C1320.5,289.706 1316.61,296.5 1313.32,303.041C1309.97,296.078 1305.78,289.601 1300.75,283.62C1299.69,282.353 1308.74,279.033 1308.28,275.755C1307.84,272.477 1300.63,264.046 1298.04,263.949C1295.45,263.851 1293.81,276.183 1292.73,275.169C1285.77,268.656 1277.6,262.849 1268.2,257.771C1269.48,245.994 1271.23,233.756 1273.36,221.236C1278.05,222.656 1282.94,223.505 1287.95,223.727C1293.56,223.974 1299.32,223.436 1305.11,222.031C1306.68,221.652 1302.38,211.12 1304.21,207.767C1306.04,204.413 1314.18,200.126 1316.1,201.91C1318.01,203.696 1314.97,218.781 1315.66,218.477C1341.08,207.379 1358.06,180.523 1358.06,151.599\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1370.73,223.785C1379.85,235.069 1386.99,247.018 1392.24,259.596C1392.81,260.967 1382.3,260.165 1381.33,263.248C1380.36,266.33 1383.93,276.966 1386.4,278.093C1388.86,279.218 1395.77,268.966 1396.12,270.003C1401.26,285.676 1403.68,302.263 1403.58,319.7C1398.9,321.822 1394.01,323.862 1388.94,325.826C1387.79,326.274 1397.79,333.784 1396.67,336.186C1395.56,338.588 1384.81,341.483 1382.24,340.237C1379.66,338.991 1381.89,328.467 1381.22,328.71C1379.24,329.42 1377.24,330.118 1375.22,330.808C1359.43,336.184 1342.13,340.934 1323.56,345.168C1323.3,340.225 1322.78,335.434 1322,330.795C1321.82,329.742 1330.64,331.698 1331.88,328.72C1333.12,325.741 1331.51,314.499 1329.43,312.923C1327.36,311.346 1319.78,320.519 1319.43,319.257C1317.84,313.591 1315.81,308.184 1313.32,303.041C1316.61,296.5 1320.5,289.706 1324.89,282.765C1325.63,281.589 1330.22,274.623 1330.88,273.648C1331.57,272.64 1321.78,267.802 1321.74,263.677C1321.7,259.551 1328.09,248.715 1330.66,248.896C1333.22,249.076 1336.79,265.228 1337.13,264.762C1347.07,251.058 1358.53,237.145 1370.73,223.785\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1419.01,177.326C1424.69,197.77 1432.4,215.147 1440.96,228.289C1441.3,228.802 1445.34,216.058 1447.66,216.027C1449.98,215.995 1455.2,224.951 1454.87,228.103C1454.53,231.254 1445.02,234.124 1445.64,234.936C1454.15,246.086 1463.27,253.123 1471.98,255.009C1469.03,264.876 1464.01,273.893 1457.14,282.148C1454.56,285.25 1451.71,288.245 1448.62,291.137C1447.67,292.022 1459.02,300.554 1459.02,303.531C1459.02,306.507 1451.55,310.028 1448.62,308.996C1445.68,307.963 1441.97,296.889 1441.42,297.336C1440.94,297.715 1440.45,298.091 1439.97,298.465C1437.95,300.023 1435.85,301.548 1433.68,303.041C1424.86,309.095 1414.78,314.628 1403.58,319.7C1403.68,302.263 1401.26,285.676 1396.12,270.003C1395.77,268.966 1388.86,279.218 1386.4,278.093C1383.93,276.966 1380.36,266.33 1381.33,263.248C1382.3,260.165 1392.81,260.967 1392.24,259.596C1386.99,247.018 1379.85,235.069 1370.73,223.785C1379,214.735 1387.6,205.938 1396.32,197.632C1403.86,190.445 1411.47,183.626 1419.01,177.326\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1419.01,177.326C1422.73,174.216 1426.43,171.233 1430.09,168.395C1430.81,167.837 1425.6,159.095 1426.54,155.579C1427.47,152.063 1433.82,146.123 1435.69,147.299C1437.56,148.475 1436.82,163.315 1437.75,162.637C1443.43,158.493 1449,154.743 1454.36,151.461C1460.58,147.65 1466.53,144.468 1472.11,142.029C1473.45,141.444 1468.35,155.011 1470.52,156.596C1472.71,158.18 1483.2,154.591 1485.19,151.534C1487.17,148.477 1481.42,138.537 1482.43,138.253C1496.14,134.35 1506.46,136.513 1511.07,147.042C1512.98,151.411 1513.91,157.223 1513.69,164.638C1513.46,172.092 1513.04,179.039 1512.46,185.495C1510.9,202.691 1508.12,216.408 1504.44,226.981C1500.94,237.029 1496.64,244.238 1491.82,248.897C1491.05,249.645 1491.64,234.917 1489.44,234.227C1487.25,233.536 1479.37,241.507 1478.63,244.752C1477.88,247.996 1485.87,253.275 1484.97,253.69C1480.84,255.586 1476.46,255.978 1471.98,255.009C1463.27,253.123 1454.15,246.086 1445.64,234.936C1445.02,234.124 1454.53,231.254 1454.87,228.103C1455.2,224.951 1449.98,215.995 1447.66,216.027C1445.34,216.058 1441.3,228.802 1440.96,228.289C1432.4,215.147 1424.69,197.77 1419.01,177.326\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1602.88,216.6C1589.73,205.353 1574.81,197.216 1558.18,192.089C1557.27,191.809 1558.3,204.366 1555.91,205.729C1553.52,207.093 1544.9,202.93 1543.87,200.271C1542.82,197.61 1550.5,189.963 1549.7,189.77C1538.06,186.981 1525.64,185.565 1512.46,185.495C1513.04,179.039 1513.46,172.092 1513.69,164.638C1513.91,157.223 1512.98,151.411 1511.07,147.042C1515.47,144.089 1519.67,141.135 1523.58,138.18C1524.41,137.545 1516.47,132.922 1516.61,129.902C1516.76,126.882 1522.24,119.512 1524.45,120.06C1526.66,120.61 1529.22,133.734 1529.86,133.194C1535.59,128.388 1540.35,123.581 1543.59,118.771C1550.14,121.599 1556.8,124.78 1563.57,128.364C1564.2,128.703 1556.58,137.416 1557.36,140.327C1558.14,143.238 1565.62,146.947 1568.25,145.833C1570.87,144.719 1571.47,132.703 1573.1,133.641C1580.45,137.89 1587.95,142.628 1595.6,147.916C1605.32,154.626 1615.28,162.221 1625.53,170.829C1622.65,176.684 1619.75,182.586 1616.81,188.529C1612.24,197.786 1607.59,207.145 1602.88,216.6\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1602.88,216.6C1597.35,227.705 1591.72,238.94 1586,250.289C1585.46,251.359 1597.05,248.21 1597.88,250.949C1598.72,253.688 1593.7,265.43 1591.02,266.72C1588.33,268.009 1581.94,258.318 1581.76,258.682C1581.02,260.159 1580.27,261.637 1579.52,263.118C1574.9,272.245 1570.22,281.441 1565.49,290.699C1560.76,289.32 1554.07,287.369 1547.94,284.451C1547.21,284.105 1554.14,274.99 1553.15,272.216C1552.16,269.443 1544.28,266.634 1542,267.811C1539.72,268.988 1540.27,279.929 1539.46,279.279C1535.03,275.686 1532.08,271.149 1532.46,265.378C1533.84,244.889 1519.09,228.811 1504.44,226.981C1508.12,216.408 1510.9,202.691 1512.46,185.495C1525.64,185.565 1538.06,186.981 1549.7,189.77C1550.5,189.963 1542.82,197.61 1543.87,200.271C1544.9,202.93 1553.52,207.093 1555.91,205.729C1558.3,204.366 1557.27,191.809 1558.18,192.089C1574.81,197.216 1589.73,205.353 1602.88,216.6\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1504.44,226.981C1519.09,228.811 1533.84,244.889 1532.46,265.378C1532.08,271.149 1535.03,275.686 1539.46,279.279C1540.27,279.929 1539.72,268.988 1542,267.811C1544.28,266.634 1552.16,269.443 1553.15,272.216C1554.14,274.99 1547.21,284.105 1547.94,284.451C1554.07,287.369 1560.76,289.32 1565.49,290.699C1560.51,300.414 1555.48,310.196 1550.39,320.036C1549.92,320.94 1544.81,312.044 1542.17,312.798C1539.55,313.553 1533.99,321.927 1534.63,324.56C1535.25,327.193 1546.57,327.416 1545.96,328.595C1543.1,334.103 1540.22,339.628 1537.32,345.168C1532.54,343.82 1527.43,341.559 1522.03,338.491C1521.05,337.939 1521.62,348.609 1519.08,349.644C1516.54,350.677 1507.76,347.46 1506.8,344.694C1505.84,341.928 1514.06,333.54 1513.33,333.048C1496.63,321.678 1477.59,303.84 1457.14,282.148C1464.01,273.893 1469.03,264.876 1471.98,255.009C1476.46,255.978 1480.84,255.586 1484.97,253.69C1485.87,253.275 1477.88,247.996 1478.63,244.752C1479.37,241.507 1487.25,233.536 1489.44,234.227C1491.64,234.917 1491.05,249.645 1491.82,248.897C1496.64,244.238 1500.94,237.029 1504.44,226.981\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1433.68,303.041C1439.73,312.982 1444.56,323.445 1448.23,334.405C1448.75,335.987 1437.22,335.734 1436.07,339.185C1434.93,342.635 1438.66,353.542 1441.36,355.104C1444.05,356.667 1451.71,346.265 1452.26,348.56C1459.3,378.316 1458.57,411.397 1451.1,447.347C1448.25,446.789 1445.34,446.208 1442.39,445.6C1441.89,445.498 1446,434.895 1444.8,432.446C1443.6,429.997 1437.09,429.039 1435.18,430.91C1433.27,432.78 1434.15,443.848 1433.31,443.668C1432.35,443.462 1431.62,443.304 1431.33,443.239C1429.05,442.736 1426.76,442.216 1424.44,441.679C1437.13,407.969 1432.12,385.538 1408.03,375.248C1407.59,375.054 1407.95,388.474 1405.62,389.665C1403.29,390.857 1395.34,385.356 1394.05,382.396C1392.75,379.435 1399.38,372.271 1397.88,371.901C1380.12,367.5 1355.13,367.706 1322.59,372.715C1323.7,363.073 1324.03,353.886 1323.56,345.168C1342.13,340.934 1359.43,336.184 1375.22,330.808C1377.24,330.118 1379.24,329.42 1381.22,328.71C1381.89,328.467 1379.66,338.991 1382.24,340.237C1384.81,341.483 1395.56,338.588 1396.67,336.186C1397.79,333.784 1387.79,326.274 1388.94,325.826C1394.01,323.862 1398.9,321.822 1403.58,319.7C1414.78,314.628 1424.86,309.095 1433.68,303.041\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1322.59,372.715C1355.13,367.706 1380.12,367.5 1397.88,371.901C1399.38,372.271 1392.75,379.435 1394.05,382.396C1395.34,385.356 1403.29,390.857 1405.62,389.665C1407.95,388.474 1407.59,375.054 1408.03,375.248C1432.12,385.538 1437.13,407.969 1424.44,441.679C1418.71,440.344 1412.85,438.902 1406.96,437.339C1406.46,437.207 1412.77,429.659 1411.91,426.897C1411.04,424.135 1403.76,419.334 1401.8,420.768C1399.85,422.202 1401,435.72 1400.21,435.499C1396.13,434.36 1392.05,433.16 1387.96,431.895C1379.12,429.15 1370.28,426.099 1361.65,422.693C1360.55,422.255 1366.78,416.003 1365.33,413.441C1363.88,410.879 1355.28,406.494 1352.93,407.318C1350.6,408.142 1352.8,419.046 1351.3,418.384C1349.88,417.761 1348.47,417.128 1347.07,416.484C1336.66,411.701 1326.73,406.322 1317.64,400.247C1319.93,390.696 1321.58,381.516 1322.59,372.715\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1268.2,257.771C1277.6,262.849 1285.77,268.656 1292.73,275.169C1293.81,276.183 1295.45,263.851 1298.04,263.949C1300.63,264.046 1307.84,272.477 1308.28,275.755C1308.74,279.033 1299.69,282.353 1300.75,283.62C1305.78,289.601 1309.97,296.078 1313.32,303.041C1315.81,308.184 1317.84,313.591 1319.43,319.257C1319.78,320.519 1327.36,311.346 1329.43,312.923C1331.51,314.499 1333.12,325.741 1331.88,328.72C1330.64,331.698 1321.82,329.742 1322,330.795C1322.78,335.434 1323.3,340.225 1323.56,345.168C1324.03,353.886 1323.7,363.073 1322.59,372.715C1321.58,381.516 1319.93,390.696 1317.64,400.247C1310.28,395.334 1303.47,389.967 1297.4,384.094C1296.58,383.302 1293.1,393.674 1290.6,394.082C1288.1,394.49 1282.28,389.247 1282.41,386.541C1282.54,383.835 1291.91,378.427 1291.39,377.847C1284.89,370.551 1279.48,362.537 1275.47,353.724C1274.17,350.856 1273.01,347.903 1272.02,344.864C1269.38,336.843 1267.66,327.645 1266.73,317.502C1266.58,316.03 1256.54,321.561 1254.38,319.112C1252.24,316.662 1251.88,305.086 1253.81,302.805C1255.75,300.524 1266.02,306.579 1265.98,305.423C1265.51,290.889 1266.36,274.818 1268.2,257.771\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1226.06,366.052C1234.72,366.442 1241.83,366.15 1247.78,365.347C1249.04,365.179 1245.95,376.111 1248.25,377.813C1250.55,379.516 1260.26,377.914 1261.58,375.563C1262.91,373.211 1255.54,363.879 1256.19,363.707C1264.93,361.398 1270.6,357.734 1275.47,353.724C1274.17,350.856 1273.01,347.903 1272.02,344.864C1269.38,336.843 1267.66,327.645 1266.73,317.502C1266.58,316.03 1256.54,321.561 1254.38,319.112C1252.24,316.662 1251.88,305.086 1253.81,302.805C1255.75,300.524 1266.02,306.579 1265.98,305.423C1265.51,290.889 1266.36,274.818 1268.2,257.771C1258.89,254.634 1249.57,254.22 1240.25,256.27C1239.45,256.446 1247.83,265.553 1246.8,268.06C1245.75,270.569 1236.62,272.821 1234.02,271.32C1231.41,269.819 1232.09,258.682 1231.13,259.057C1223.93,261.862 1216.74,266.087 1209.54,271.611C1213.7,283.874 1217.02,296.429 1219.57,309.047C1219.64,309.418 1219.79,310.222 1219.99,311.278C1220.18,312.331 1208.67,309.959 1207.07,312.781C1205.46,315.603 1207.8,326.318 1210.33,328.212C1212.86,330.105 1222.12,323.304 1222.25,324.141C1224.42,338.257 1225.66,352.335 1226.06,366.052\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1275.47,353.724C1270.6,357.734 1264.93,361.398 1256.19,363.707C1255.54,363.879 1262.91,373.211 1261.58,375.563C1260.26,377.914 1250.55,379.516 1248.25,377.813C1245.95,376.111 1249.04,365.179 1247.78,365.347C1241.83,366.15 1234.72,366.442 1226.06,366.052C1226.62,384.76 1225.61,402.796 1223.3,419.341C1223.13,420.548 1213.6,411.647 1211.24,413.559C1208.88,415.472 1207.43,427.966 1209.13,430.816C1210.84,433.667 1221.66,429.686 1221.48,430.662C1219.54,441.178 1217.05,450.95 1214.07,459.735C1219.88,460.448 1225.59,460.952 1231.18,461.166C1245.8,461.727 1259.59,460.309 1271.94,455.488C1280.39,452.184 1288.17,447.281 1295.08,440.32C1296.29,439.1 1285.25,434.892 1285.16,431.437C1285.07,427.981 1291.44,419.868 1294.55,419.588C1297.65,419.308 1302.77,431.222 1303.77,429.76C1309.2,421.832 1313.87,412.104 1317.64,400.247C1310.28,395.334 1303.47,389.967 1297.4,384.094C1296.58,383.302 1293.1,393.674 1290.6,394.082C1288.1,394.49 1282.28,389.247 1282.41,386.541C1282.54,383.835 1291.91,378.427 1291.39,377.847C1284.89,370.551 1279.48,362.537 1275.47,353.724\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1127.61,325.08C1139.84,319.29 1151.88,312.827 1163.68,305.538C1164.65,304.946 1154.71,299.365 1155.37,296.441C1156.03,293.516 1165.05,287.224 1167.62,287.99C1170.19,288.756 1170.35,301.314 1170.78,301.037C1184.03,292.402 1196.97,282.668 1209.54,271.611C1213.7,283.874 1217.02,296.429 1219.57,309.047C1219.64,309.418 1219.79,310.222 1219.99,311.278C1220.18,312.331 1208.67,309.959 1207.07,312.781C1205.46,315.603 1207.8,326.318 1210.33,328.212C1212.86,330.105 1222.12,323.304 1222.25,324.141C1224.42,338.257 1225.66,352.335 1226.06,366.052C1211.1,365.374 1195.9,366.393 1180.34,369.971C1179.2,370.232 1187.45,382.192 1186.26,384.9C1185.08,387.608 1175.62,388.336 1173.2,386.221C1170.77,384.106 1172.77,371.904 1171.71,372.21C1160.23,375.537 1148.53,380.317 1136.59,386.89C1136.29,376.982 1135.45,367.182 1134.12,357.526C1134.07,357.163 1145.49,359.868 1147.04,357.566C1148.58,355.263 1145.65,345.375 1143.36,343.712C1140.92,341.941 1132.52,347.562 1132.41,346.939C1132.19,345.652 1132.01,344.628 1131.93,344.169C1130.71,337.729 1129.27,331.363 1127.61,325.08\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1136.59,386.89C1148.53,380.317 1160.23,375.537 1171.71,372.21C1172.77,371.904 1170.77,384.106 1173.2,386.221C1175.62,388.336 1185.08,387.608 1186.26,384.9C1187.45,382.192 1179.2,370.232 1180.34,369.971C1195.9,366.393 1211.1,365.374 1226.06,366.052C1226.62,384.76 1225.61,402.796 1223.3,419.341C1223.13,420.548 1213.6,411.647 1211.24,413.559C1208.88,415.472 1207.43,427.966 1209.13,430.816C1210.84,433.667 1221.66,429.686 1221.48,430.662C1219.54,441.178 1217.05,450.95 1214.07,459.735C1202.79,458.349 1191.18,456.172 1179.48,453.788C1172.41,452.348 1171.27,451.784 1164.18,450.322C1162.79,450.033 1170.96,440.859 1169.51,438.256C1168.07,435.655 1158.18,433.063 1155.5,434.713C1152.83,436.363 1154.65,448.39 1153.47,448.159C1148.38,447.165 1137.37,445.279 1132.35,444.457C1133.99,435.393 1135.18,426.139 1135.9,416.719C1135.99,415.659 1136.39,409.155 1136.43,408.083C1136.76,400.973 1136.81,393.904 1136.59,386.89\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1457.14,282.148C1477.59,303.84 1496.63,321.678 1513.33,333.048C1514.06,333.54 1505.84,341.928 1506.8,344.694C1507.76,347.46 1516.54,350.677 1519.08,349.644C1521.62,348.609 1521.05,337.939 1522.03,338.491C1527.43,341.559 1532.54,343.82 1537.32,345.168C1532.59,354.225 1527.8,363.325 1522.97,372.46C1517.07,383.625 1511.09,394.841 1505.04,406.095C1504.82,406.52 1500.68,396.536 1498.23,397.076C1495.8,397.617 1490,406.477 1490.4,409.338C1490.8,412.2 1501.06,413.503 1500.66,414.244C1499.21,416.939 1497.76,419.637 1496.29,422.336C1494.02,426.538 1491.74,430.745 1489.44,434.955C1486.24,440.836 1483.02,446.724 1479.79,452.617C1471.27,451.11 1461.57,449.392 1451.1,447.347C1458.57,411.397 1459.3,378.316 1452.26,348.56C1451.71,346.265 1444.05,356.667 1441.36,355.104C1438.66,353.542 1434.93,342.635 1436.07,339.185C1437.22,335.734 1448.75,335.987 1448.23,334.405C1444.56,323.445 1439.73,312.982 1433.68,303.041C1435.85,301.548 1437.95,300.023 1439.97,298.465C1440.45,298.091 1440.94,297.715 1441.42,297.336C1441.97,296.889 1445.68,307.963 1448.62,308.996C1451.55,310.028 1459.02,306.507 1459.02,303.531C1459.02,300.554 1447.67,292.022 1448.62,291.137C1451.71,288.245 1454.56,285.25 1457.14,282.148\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1366.45,469.817C1376.62,483.495 1386.84,493.784 1397.9,502.257C1399.34,503.356 1390.21,510.771 1390.79,514.374C1391.37,517.977 1398.43,524.654 1401.41,523.876C1404.4,523.097 1407.55,508.99 1408.7,509.704C1419,516.051 1429.31,520.448 1440.19,523.388C1443.24,518.043 1446.27,512.697 1449.29,507.35C1452.92,500.931 1456.54,494.51 1460.12,488.093C1460.63,487.195 1466.34,495.322 1468.7,494.488C1471.06,493.655 1474.97,485.489 1474.29,483.092C1473.6,480.695 1463.96,481.22 1464.58,480.104C1469.69,470.933 1474.76,461.769 1479.79,452.617C1471.27,451.11 1461.57,449.392 1451.1,447.347C1448.25,446.789 1445.34,446.208 1442.39,445.6C1441.89,445.498 1446,434.895 1444.8,432.446C1443.6,429.997 1437.09,429.039 1435.18,430.91C1433.27,432.78 1434.15,443.848 1433.31,443.668C1432.35,443.462 1431.62,443.304 1431.33,443.239C1429.05,442.736 1426.76,442.216 1424.44,441.679C1418.71,440.344 1412.85,438.902 1406.96,437.339C1406.46,437.207 1412.77,429.659 1411.91,426.897C1411.04,424.135 1403.76,419.334 1401.8,420.768C1399.85,422.202 1401,435.72 1400.21,435.499C1396.13,434.36 1392.05,433.16 1387.96,431.895C1382.4,445.017 1375.21,457.653 1366.45,469.817\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1271.94,455.488C1274.14,463.624 1277.09,472.341 1280.89,481.716C1281.24,482.564 1288.58,473.299 1291.1,474.21C1293.62,475.12 1297,484.266 1296,487.179C1295.01,490.091 1284.69,490.664 1285.14,491.684C1290.44,503.542 1297.01,516.392 1305.03,530.367C1312.77,524.624 1320.07,518.749 1326.91,512.74C1331.3,508.893 1335.5,504.993 1339.51,501.036C1341.06,499.51 1329.82,491.869 1330.63,487.983C1331.45,484.097 1341.36,477.198 1344.43,477.717C1347.51,478.236 1348.4,491.862 1349.1,491.098C1353.59,486.193 1357.79,481.206 1361.73,476.134C1363.35,474.043 1364.92,471.937 1366.45,469.817C1375.21,457.653 1382.4,445.017 1387.96,431.895C1379.12,429.15 1370.28,426.099 1361.65,422.693C1360.55,422.255 1366.78,416.003 1365.33,413.441C1363.88,410.879 1355.28,406.494 1352.93,407.318C1350.6,408.142 1352.8,419.046 1351.3,418.384C1349.88,417.761 1348.47,417.128 1347.07,416.484C1336.66,411.701 1326.73,406.322 1317.64,400.247C1313.87,412.104 1309.2,421.832 1303.77,429.76C1302.77,431.222 1297.65,419.308 1294.55,419.588C1291.44,419.868 1285.07,427.981 1285.16,431.437C1285.25,434.892 1296.29,439.1 1295.08,440.32C1288.17,447.281 1280.39,452.184 1271.94,455.488\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1395.3,600.28C1387.86,594.723 1380.55,588.343 1373.42,580.993C1372.53,580.072 1382.46,571.218 1382.16,566.971C1381.85,562.724 1374.49,554.792 1371.57,555.512C1368.64,556.231 1365.65,572.524 1364.59,571.291C1351.35,555.788 1338.73,536.595 1326.91,512.74C1331.3,508.893 1335.5,504.993 1339.51,501.036C1341.06,499.51 1329.82,491.869 1330.63,487.983C1331.45,484.097 1341.36,477.198 1344.43,477.717C1347.51,478.236 1348.4,491.862 1349.1,491.098C1353.59,486.193 1357.79,481.206 1361.73,476.134C1363.35,474.043 1364.92,471.937 1366.45,469.817C1376.62,483.495 1386.84,493.784 1397.9,502.257C1399.34,503.356 1390.21,510.771 1390.79,514.374C1391.37,517.977 1398.43,524.654 1401.41,523.876C1404.4,523.097 1407.55,508.99 1408.7,509.704C1419,516.051 1429.31,520.448 1440.19,523.388C1438.86,525.714 1437.53,528.04 1436.2,530.364C1430.79,539.798 1425.35,549.225 1419.87,558.639C1419.48,559.311 1411.41,545.972 1408.79,546.532C1406.15,547.093 1403.11,558.533 1404.11,562.001C1405.11,565.47 1415.53,566.067 1414.78,567.345C1412.11,571.914 1409.42,576.48 1406.73,581.041C1402.93,587.464 1399.12,593.878 1395.3,600.28\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1326.91,512.74C1338.73,536.595 1351.35,555.788 1364.59,571.291C1365.65,572.524 1368.64,556.231 1371.57,555.512C1374.49,554.792 1381.85,562.724 1382.16,566.971C1382.46,571.218 1372.53,580.072 1373.42,580.993C1380.55,588.343 1387.86,594.723 1395.3,600.28C1393.07,604.007 1390.83,607.73 1388.59,611.449C1388.13,612.216 1398.92,612.853 1399.6,615.341C1400.29,617.83 1395.16,626.004 1392.71,626.382C1390.25,626.759 1385.32,616.864 1384.88,617.603C1383.36,620.121 1381.83,622.635 1380.3,625.148C1374.15,635.26 1367.96,645.335 1361.73,655.364C1352.73,647.95 1344.22,639.489 1336.3,629.768C1335.75,629.096 1331.82,643.803 1329.12,643.931C1326.42,644.058 1320.03,634.307 1320.14,630.533C1320.25,626.759 1330.62,622.442 1329.78,621.289C1314.39,600.103 1301.52,573.481 1292.02,539.625C1296.49,536.577 1300.82,533.492 1305.03,530.367C1312.77,524.624 1320.07,518.749 1326.91,512.74\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1231.18,461.166C1231.55,470.314 1230.67,478.991 1228.88,487.12C1228.61,488.346 1220.78,481.386 1218.4,483.061C1216.02,484.736 1213.34,494.705 1214.6,497.167C1215.85,499.63 1226.39,496.44 1225.93,497.832C1222.89,507.085 1218.76,515.885 1214.07,524.367C1220.88,524.747 1228.08,526.872 1235.04,530.831C1236.26,531.523 1227.28,539.455 1228.07,543.129C1228.85,546.803 1237.11,553.875 1239.78,552.874C1242.43,551.872 1243.46,536.648 1244.02,537.122C1251.37,543.361 1256.97,551.155 1260.38,559.355C1264.11,557.221 1267.77,555.066 1271.36,552.89C1272.25,552.355 1275.44,567.361 1278.16,568.876C1280.88,570.392 1287.54,565.431 1287.67,561.983C1287.81,558.535 1278.13,548.717 1278.97,548.187C1283.43,545.367 1287.78,542.514 1292.02,539.625C1296.49,536.577 1300.82,533.492 1305.03,530.367C1297.01,516.392 1290.44,503.542 1285.14,491.684C1284.69,490.664 1295.01,490.091 1296,487.179C1297,484.266 1293.62,475.12 1291.1,474.21C1288.58,473.299 1281.24,482.564 1280.89,481.716C1277.09,472.341 1274.14,463.624 1271.94,455.488C1259.59,460.309 1245.8,461.727 1231.18,461.166\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1231.18,461.166C1225.59,460.952 1219.88,460.448 1214.07,459.735C1202.79,458.349 1191.18,456.172 1179.48,453.788C1176.75,466.486 1173,480.151 1168.49,493.811C1168.04,495.206 1182.61,492.802 1184.11,495.586C1185.62,498.371 1180.71,509.097 1177.52,510.516C1174.33,511.934 1165.32,503.104 1164.96,504.098C1154.36,533.731 1140.56,562.177 1126.5,579.366C1129.83,581.806 1133.3,584.239 1136.94,586.695C1157.68,598.469 1173.39,592.403 1186.57,579.366C1180.76,568.6 1178.77,556.656 1181.65,546.356C1182.17,544.491 1189.57,558.18 1192.75,557.498C1195.94,556.816 1201.57,546.062 1200.73,542.264C1199.9,538.467 1187,535.602 1187.75,534.713C1190.82,531.107 1194.68,528.413 1199.04,526.67C1203.6,524.85 1208.71,524.067 1214.07,524.367C1218.76,515.885 1222.89,507.085 1225.93,497.832C1226.39,496.44 1215.85,499.63 1214.6,497.167C1213.34,494.705 1216.02,484.736 1218.4,483.061C1220.78,481.386 1228.61,488.346 1228.88,487.12C1230.67,478.991 1231.55,470.314 1231.18,461.166\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1126.5,579.366C1119.85,574.505 1113.73,569.612 1107.77,564.435C1107.02,563.787 1120.98,557.819 1121.65,554.753C1122.31,551.686 1115.32,545.532 1111.77,546.034C1108.21,546.535 1101.45,558.806 1100.32,557.763C1096.85,554.553 1093.38,551.207 1089.83,547.675C1095.14,540.033 1100.07,532.055 1104.58,523.773C1105.03,522.928 1092.96,523.069 1091.94,520.025C1090.91,516.982 1095.61,506.334 1098.45,505.509C1101.31,504.679 1108.46,516.36 1109.11,515.046C1113.8,505.572 1117.96,495.731 1121.53,485.56C1126.15,472.382 1129.8,458.651 1132.35,444.457C1137.37,445.279 1148.38,447.165 1153.47,448.159C1154.65,448.39 1152.83,436.363 1155.5,434.713C1158.18,433.063 1168.07,435.655 1169.51,438.256C1170.96,440.859 1162.79,450.033 1164.18,450.322C1171.27,451.784 1172.41,452.348 1179.48,453.788C1176.75,466.486 1173,480.151 1168.49,493.811C1168.04,495.206 1182.61,492.802 1184.11,495.586C1185.62,498.371 1180.71,509.097 1177.52,510.516C1174.33,511.934 1165.32,503.104 1164.96,504.098C1154.36,533.731 1140.56,562.177 1126.5,579.366\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1126.5,579.366C1129.83,581.806 1133.3,584.239 1136.94,586.695C1134.71,593.751 1131.5,602.672 1127.36,611.916C1126.9,612.923 1119.56,599.48 1116.79,599.871C1114.02,600.262 1109.81,610.526 1110.74,614.262C1111.66,617.998 1123.09,620.872 1122.34,622.288C1118.5,629.659 1114.08,636.869 1109.11,643.141C1099.77,654.923 1088.46,663.394 1075.36,663.394C1065.53,663.394 1054.7,658.637 1042.92,646.952C1040.57,644.613 1038.17,641.997 1035.74,639.086C1035.42,638.708 1046.18,634.904 1046.7,632.521C1047.22,630.139 1041.53,624.747 1038.88,624.791C1036.22,624.834 1031.22,633.397 1030.76,632.779C1027.01,627.768 1023.18,622.058 1019.26,615.587C1030.11,608.699 1040.41,600.939 1050.08,592.388C1051.31,591.308 1041.4,583.308 1041.64,579.185C1041.87,575.063 1048.54,566.894 1051.49,567.652C1054.45,568.41 1058.57,584.523 1059.38,583.732C1068.49,574.807 1076.95,565.139 1084.68,554.807C1086.44,552.464 1088.15,550.086 1089.83,547.675C1093.38,551.207 1096.85,554.553 1100.32,557.763C1101.45,558.806 1108.21,546.535 1111.77,546.034C1115.32,545.532 1122.31,551.686 1121.65,554.753C1120.98,557.819 1107.02,563.787 1107.77,564.435C1113.73,569.612 1119.85,574.505 1126.5,579.366\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1109.11,643.141C1129.63,652.217 1147.84,657.962 1163.31,659.78C1164.62,659.933 1158.92,641.892 1161.04,639.266C1163.16,636.639 1173.91,640.499 1176.03,644.022C1178.16,647.545 1172.7,660.409 1173.78,660.404C1183.6,660.36 1192.07,658.363 1199.04,654.216C1204.58,650.918 1209.18,646.258 1212.76,640.14C1213.6,638.72 1217.93,646.985 1220.42,645.515C1222.91,644.045 1228.23,633.962 1227.74,631.32C1227.24,628.677 1217.32,630.005 1217.44,629.66C1219.52,623.403 1220.89,616.13 1221.52,607.787C1216.28,606.375 1210.97,603.972 1205.84,600.539C1204.89,599.899 1204.4,616.696 1201.66,617.348C1198.91,618 1190.03,608.342 1189.37,604.449C1188.72,600.558 1198.59,594.815 1197.72,593.994C1193.18,589.621 1189.42,584.634 1186.57,579.366C1173.39,592.403 1157.68,598.469 1136.94,586.695C1134.71,593.751 1131.5,602.672 1127.36,611.916C1126.9,612.923 1119.56,599.48 1116.79,599.871C1114.02,600.262 1109.81,610.526 1110.74,614.262C1111.66,617.998 1123.09,620.872 1122.34,622.288C1118.5,629.659 1114.08,636.869 1109.11,643.141\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1214.07,524.367C1220.88,524.747 1228.08,526.872 1235.04,530.831C1236.26,531.523 1227.28,539.455 1228.07,543.129C1228.85,546.803 1237.11,553.875 1239.78,552.874C1242.43,551.872 1243.46,536.648 1244.02,537.122C1251.37,543.361 1256.97,551.155 1260.38,559.355C1265.09,570.697 1265.61,582.817 1260.82,592.67C1253.94,606.81 1238.08,612.245 1221.52,607.787C1216.28,606.375 1210.97,603.972 1205.84,600.539C1204.89,599.899 1204.4,616.696 1201.66,617.348C1198.91,618 1190.03,608.342 1189.37,604.449C1188.72,600.558 1198.59,594.815 1197.72,593.994C1193.18,589.621 1189.42,584.634 1186.57,579.366C1180.76,568.6 1178.77,556.656 1181.65,546.356C1182.17,544.491 1189.57,558.18 1192.75,557.498C1195.94,556.816 1201.57,546.062 1200.73,542.264C1199.9,538.467 1187,535.602 1187.75,534.713C1190.82,531.107 1194.68,528.413 1199.04,526.67C1203.6,524.85 1208.71,524.067 1214.07,524.367\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1199.04,654.216C1211.46,673.285 1226.27,680.86 1240.03,680.86C1245.65,680.86 1251.1,679.595 1256.15,677.334C1257.12,676.898 1258.12,691.316 1260.79,692.095C1263.46,692.872 1271.37,685.403 1272.15,682.002C1272.93,678.601 1264.32,672.579 1265.46,671.686C1270.98,667.36 1275.62,661.744 1278.92,655.364C1284.51,644.547 1286.25,631.534 1281.9,618.891C1281.57,617.931 1293.2,617.873 1294.47,615.014C1295.76,612.155 1292.33,602.514 1289.58,601.737C1286.83,600.961 1278.57,611.385 1277.96,610.356C1274.2,603.945 1268.46,598.208 1260.82,592.67C1253.94,606.81 1238.08,612.245 1221.52,607.787C1220.89,616.13 1219.52,623.403 1217.44,629.66C1217.32,630.005 1227.24,628.677 1227.74,631.32C1228.23,633.962 1222.91,644.045 1220.42,645.515C1217.93,646.985 1213.6,638.72 1212.76,640.14C1209.18,646.258 1204.58,650.918 1199.04,654.216\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1326.91,710.219C1319.43,701.663 1311.94,693.108 1304.46,684.552C1303.14,683.047 1311.56,676.653 1311.54,672.874C1311.51,669.095 1306.89,661.528 1304.32,661.876C1301.74,662.223 1296.61,675.582 1296.07,674.96C1290.35,668.428 1284.63,661.896 1278.92,655.364C1284.51,644.547 1286.25,631.534 1281.9,618.891C1281.57,617.931 1293.2,617.873 1294.47,615.014C1295.76,612.155 1292.33,602.514 1289.58,601.737C1286.83,600.961 1278.57,611.385 1277.96,610.356C1274.2,603.945 1268.46,598.208 1260.82,592.67C1265.61,582.817 1265.09,570.697 1260.38,559.355C1264.11,557.221 1267.77,555.066 1271.36,552.89C1272.25,552.355 1275.44,567.361 1278.16,568.876C1280.88,570.392 1287.54,565.431 1287.67,561.983C1287.81,558.535 1278.13,548.717 1278.97,548.187C1283.43,545.367 1287.78,542.514 1292.02,539.625C1301.52,573.481 1314.39,600.103 1329.78,621.289C1330.62,622.442 1320.25,626.759 1320.14,630.533C1320.03,634.307 1326.42,644.058 1329.12,643.931C1331.82,643.803 1335.75,629.096 1336.3,629.768C1344.22,639.489 1352.73,647.95 1361.73,655.364C1358.05,661.292 1354.35,667.205 1350.64,673.098C1342.79,685.56 1334.88,697.94 1326.91,710.219\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1242,710.219C1240.95,700.373 1240.42,690.388 1240.03,680.86C1245.65,680.86 1251.1,679.595 1256.15,677.334C1257.12,676.898 1258.12,691.316 1260.79,692.095C1263.46,692.872 1271.37,685.403 1272.15,682.002C1272.93,678.601 1264.32,672.579 1265.46,671.686C1270.98,667.36 1275.62,661.744 1278.92,655.364C1284.63,661.896 1290.35,668.428 1296.07,674.96C1296.61,675.582 1301.74,662.223 1304.32,661.876C1306.89,661.528 1311.51,669.095 1311.54,672.874C1311.56,676.653 1303.14,683.047 1304.46,684.552C1311.94,693.108 1319.43,701.663 1326.91,710.219C1318.48,723.228 1309.98,736.124 1301.41,748.884C1300.88,749.676 1297.99,738.965 1295.78,738.801C1293.58,738.637 1287.96,745.166 1288.19,747.9C1288.42,750.633 1297.55,754.614 1297.15,755.202C1291.4,763.729 1285.62,772.195 1279.81,780.591C1263.93,774.887 1254.57,761.477 1248.93,744.758C1248.68,744.036 1259.88,744.514 1261.09,741.833C1262.3,739.152 1258.65,729.73 1256.17,728.672C1253.69,727.614 1246.35,735.936 1246.24,735.487C1244.25,727.445 1242.92,718.886 1242,710.219\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1075.36,663.394C1082.27,673.492 1089.43,681.808 1096.81,688.624C1097.6,689.362 1100.78,678.248 1103.95,677.955C1107.13,677.662 1115.84,684.049 1115.87,686.863C1115.89,689.677 1103.13,694.071 1104.11,694.839C1111.41,700.54 1118.9,704.911 1126.55,708.208C1133.18,711.066 1139.92,713.118 1146.76,714.532C1148.07,714.805 1145.16,700.043 1147.94,697.655C1150.71,695.266 1161.76,697.096 1163.42,700.203C1165.08,703.309 1156.77,716.165 1157.88,716.289C1165.76,717.171 1173.74,717.343 1181.78,717.055C1190.91,716.728 1200.11,715.807 1209.35,714.656C1210.26,714.543 1206.73,723.713 1208.76,726.055C1210.79,728.397 1219.78,730.823 1221.53,728.704C1223.3,726.585 1218.4,713.468 1219.32,713.341C1226.88,712.303 1234.45,711.197 1242,710.219C1240.95,700.373 1240.42,690.388 1240.03,680.86C1226.27,680.86 1211.46,673.285 1199.04,654.216C1192.07,658.363 1183.6,660.36 1173.78,660.404C1172.7,660.409 1178.16,647.545 1176.03,644.022C1173.91,640.499 1163.16,636.639 1161.04,639.266C1158.92,641.892 1164.62,659.933 1163.31,659.78C1147.84,657.962 1129.63,652.217 1109.11,643.141C1099.77,654.923 1088.46,663.394 1075.36,663.394\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1190.08,789.995C1190.61,782.71 1190.88,775.425 1190.75,768.14C1190.72,766.562 1179.48,771.88 1177.59,769.23C1175.7,766.581 1177.31,754.612 1179.39,752.242C1181.47,749.874 1190.2,756.556 1190.07,755.017C1188.95,742.363 1186.42,729.709 1181.78,717.055C1190.91,716.728 1200.11,715.807 1209.35,714.656C1210.26,714.543 1206.73,723.713 1208.76,726.055C1210.79,728.397 1219.78,730.823 1221.53,728.704C1223.3,726.585 1218.4,713.468 1219.32,713.341C1226.88,712.303 1234.45,711.197 1242,710.219C1242.92,718.886 1244.25,727.445 1246.24,735.487C1246.35,735.936 1253.69,727.614 1256.17,728.672C1258.65,729.73 1262.3,739.152 1261.09,741.833C1259.88,744.514 1248.68,744.036 1248.93,744.758C1254.57,761.477 1263.93,774.887 1279.81,780.591C1274.73,787.935 1269.63,795.226 1264.52,802.459C1263.98,803.21 1273.76,807.046 1274.17,809.832C1274.58,812.619 1269.37,819.312 1266.99,819.177C1264.6,819.043 1260.24,808.471 1259.85,809.029C1256.33,813.973 1252.79,818.889 1249.26,823.776C1248.3,825.334 1244.42,830.755 1239.05,838.052C1232.13,832.991 1225.4,827.592 1218.95,821.778C1217.83,820.757 1213.43,834.601 1210.3,834.27C1207.17,833.929 1200.15,823.176 1200.18,819.765C1200.22,816.356 1211.5,814.754 1210.55,813.808C1203.27,806.523 1196.4,798.624 1190.08,789.995\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1390.93,719.809C1385.43,713.252 1379.93,706.787 1374.45,700.404C1373.88,699.751 1369.91,710.028 1367.29,710.374C1364.67,710.72 1358.34,705.028 1358.77,702.481C1359.19,699.934 1370.39,695.699 1369.86,695.09C1363.44,687.659 1357.03,680.335 1350.64,673.098C1342.79,685.56 1334.88,697.94 1326.91,710.219C1318.48,723.228 1309.98,736.124 1301.41,748.884C1300.88,749.676 1297.99,738.965 1295.78,738.801C1293.58,738.637 1287.96,745.166 1288.19,747.9C1288.42,750.633 1297.55,754.614 1297.15,755.202C1291.4,763.729 1285.62,772.195 1279.81,780.591C1286.41,783.444 1292.84,786.667 1298.83,790.588C1299.68,791.141 1301.64,778.457 1304.07,777.512C1306.49,776.568 1313.2,782 1313.36,784.924C1313.53,787.847 1304.3,794.46 1305.05,795.055C1310.05,799 1314.65,803.582 1318.64,809.029C1329.61,800.511 1340.06,790.228 1350.1,778.477C1350.66,777.819 1341.65,775.241 1341.24,772.24C1340.82,769.24 1345.2,760.543 1347.6,760.474C1349.99,760.405 1354.93,772.682 1355.62,771.825C1367.96,756.493 1379.68,738.967 1390.93,719.809\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1190.08,789.995C1190.61,782.71 1190.88,775.425 1190.75,768.14C1190.72,766.562 1179.48,771.88 1177.59,769.23C1175.7,766.581 1177.31,754.612 1179.39,752.242C1181.47,749.874 1190.2,756.556 1190.07,755.017C1188.95,742.363 1186.42,729.709 1181.78,717.055C1173.74,717.343 1165.76,717.171 1157.88,716.289C1156.77,716.165 1165.08,703.309 1163.42,700.203C1161.76,697.096 1150.71,695.266 1147.94,697.655C1145.16,700.043 1148.07,714.805 1146.76,714.532C1139.92,713.118 1133.18,711.066 1126.55,708.208C1125.89,718.548 1125.02,728.279 1123.92,737.373C1123.74,738.842 1114.34,731.545 1111.97,733.362C1109.59,735.179 1107.95,745.795 1109.7,748.278C1111.44,750.762 1122.63,746.988 1122.45,748.26C1120.4,761.754 1117.74,773.648 1114.34,783.849C1110.5,795.357 1105.72,804.711 1099.81,811.775C1110.44,818.016 1120.02,824.522 1128.67,831.262C1134.33,819.944 1141.98,812.118 1150.77,806.286C1152.06,805.428 1154.07,822.277 1156.71,823.309C1159.37,824.341 1165.82,816.339 1166.67,812.477C1167.52,808.615 1160.33,800.836 1161.83,800.133C1170.78,795.942 1180.43,792.973 1190.08,789.995\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1042.92,736.84C1053.26,739.837 1063.19,743.998 1072.71,749.378C1073.65,749.909 1064.87,758.359 1065.55,761.593C1066.22,764.828 1074.21,769.998 1076.75,768.785C1079.3,767.571 1079.94,753.746 1080.81,754.314C1092.69,762.101 1103.88,771.908 1114.34,783.849C1117.74,773.648 1120.4,761.754 1122.45,748.26C1122.63,746.988 1111.44,750.762 1109.7,748.278C1107.95,745.795 1109.59,735.179 1111.97,733.362C1114.34,731.545 1123.74,738.842 1123.92,737.373C1125.02,728.279 1125.89,718.548 1126.55,708.208C1118.9,704.911 1111.41,700.54 1104.11,694.839C1103.13,694.071 1115.89,689.677 1115.87,686.863C1115.84,684.049 1107.13,677.662 1103.95,677.955C1100.78,678.248 1097.6,689.362 1096.81,688.624C1089.43,681.808 1082.27,673.492 1075.36,663.394C1069.89,674.457 1064.81,685.189 1060.12,695.572C1059.69,696.526 1072.25,697.973 1073.07,700.633C1073.88,703.295 1067.97,710.652 1065.05,711.538C1062.13,712.425 1056.16,704.483 1055.52,705.953C1050.87,716.652 1046.66,726.955 1042.92,736.84\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1042.92,646.952C1035.85,656.366 1029.33,666.677 1023.28,677.768C1022.71,678.814 1015.49,665.348 1013.02,665.865C1010.56,666.381 1007.51,677.429 1008.46,680.868C1009.4,684.308 1019.08,685.735 1018.7,686.5C1003.32,716.906 991.152,752.566 980.863,791.312C987.14,795.683 993.041,799.534 998.738,802.995C999.623,803.534 998.048,790.796 1000.56,789.317C1003.07,787.839 1012.69,791.013 1013.82,794.125C1014.94,797.236 1006.38,807.481 1007.29,807.987C1012.47,810.886 1017.55,813.499 1022.69,815.93C1023.52,805.887 1025.43,794.802 1028.37,782.808C1028.8,781.061 1035.9,790.35 1038.31,788.22C1040.71,786.09 1043.8,773.424 1042.82,770.025C1041.84,766.625 1032.04,769.148 1032.43,767.823C1035.34,757.987 1038.85,747.638 1042.92,736.84C1046.66,726.955 1050.87,716.652 1055.52,705.953C1056.16,704.483 1062.13,712.425 1065.05,711.538C1067.97,710.652 1073.88,703.295 1073.07,700.633C1072.25,697.973 1059.69,696.526 1060.12,695.572C1064.81,685.189 1069.89,674.457 1075.36,663.394C1065.53,663.394 1054.7,658.637 1042.92,646.952\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1042.92,646.952C1035.85,656.366 1029.33,666.677 1023.28,677.768C1022.71,678.814 1015.49,665.348 1013.02,665.865C1010.56,666.381 1007.51,677.429 1008.46,680.868C1009.4,684.308 1019.08,685.735 1018.7,686.5C1003.32,716.906 991.152,752.566 980.863,791.312C977.955,789.289 974.969,787.156 971.882,784.899C971.349,784.513 978.245,778.9 977.618,775.898C976.999,772.897 970.119,766.132 968.16,766.889C966.2,767.646 966.71,781.07 965.871,780.441C960.652,776.523 955.151,772.26 949.281,767.598C960.856,739.184 967.729,711.755 969.139,685.976C969.241,684 977.65,688.601 979.491,685.284C981.333,681.969 981.874,668.31 980.181,666.08C978.496,663.85 969.382,673.163 969.351,671.908C969.084,661.26 967.815,650.93 965.472,640.969C971.169,639.115 976.78,637.047 982.297,634.773C982.924,634.515 982.109,645.203 983.793,646.256C986.152,647.73 995.58,646.011 996.442,643.619C997.304,641.227 988.143,632.274 988.966,631.904C995.321,629.053 1001.53,625.926 1007.61,622.535C1011.56,620.329 1015.45,618.012 1019.26,615.587C1023.18,622.058 1027.01,627.768 1030.76,632.779C1031.22,633.397 1036.22,624.834 1038.88,624.791C1041.53,624.747 1047.22,630.139 1046.7,632.521C1046.18,634.904 1035.42,638.708 1035.74,639.086C1038.17,641.997 1040.57,644.613 1042.92,646.952\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M914.597,723.021C916.634,716.862 918.35,710.524 919.729,703.999C919.957,702.925 907.309,702.478 905.937,699.655C904.558,696.834 908.86,688.155 911.485,687.067C914.111,685.979 921.501,694.318 921.681,693.127C923.687,679.675 924.314,665.467 923.499,650.464C930.325,649.571 937.064,648.382 943.717,646.908C944.242,646.791 940.755,657.712 942.307,659.533C943.999,661.523 952.251,661.291 953.881,658.851C955.511,656.41 950.786,645.23 952.079,644.893C956.593,643.716 961.06,642.406 965.472,640.969C967.815,650.93 969.084,661.26 969.351,671.908C969.382,673.163 978.496,663.85 980.181,666.08C981.874,668.31 981.333,681.969 979.491,685.284C977.65,688.601 969.241,684 969.139,685.976C967.729,711.755 960.856,739.184 949.281,767.598C941.844,785.854 932.464,804.516 921.344,823.408C918.123,820.229 914.542,816.767 910.788,813.183C909.565,812.014 919.698,803.872 919.134,800.028C918.562,796.185 910.145,789.23 907.379,790.12C904.613,791.011 903.335,806.129 902.528,805.369C894.386,797.734 886.04,790.076 879.12,783.849C886.377,775.677 892.803,767.051 898.367,757.948C899.119,756.722 887.592,755.238 886.612,751.999C885.633,748.761 889.629,739.109 892.482,738.518C895.342,737.927 903.218,749.483 903.766,748.455C908.037,740.34 911.658,731.868 914.597,723.021\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M914.597,723.021C896.956,715.55 879.324,708.08 861.692,700.61C860.117,699.942 861.802,714.238 858.894,715.615C855.995,716.99 845.439,712.056 844.279,708.866C843.111,705.675 852.742,696.819 851.92,696.471C833.974,688.867 816.02,681.262 798.067,673.657C798.678,671.36 799.226,669.051 799.705,666.731C799.979,665.394 812.031,667.562 814.03,665.009C816.02,662.455 813.763,652.942 811.671,651.412C809.579,649.881 801.342,656.993 801.491,655.826C802.361,648.925 802.769,641.948 802.91,634.926C819.978,641.799 837.963,646.798 856.653,649.661C857.758,649.83 853.557,635.473 855.642,633.743C857.727,632.014 867.154,636.391 869.176,639.284C870.555,641.258 866.308,650.945 867.773,651.102C882.083,652.618 896.204,652.831 910.036,651.829C912.057,651.684 914.064,651.512 916.07,651.315C918.554,651.07 921.03,650.787 923.499,650.464C924.314,665.467 923.687,679.675 921.681,693.127C921.501,694.318 914.111,685.979 911.485,687.067C908.86,688.155 904.558,696.834 905.937,699.655C907.309,702.478 919.957,702.925 919.729,703.999C918.35,710.524 916.634,716.862 914.597,723.021\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M914.597,723.021C896.956,715.55 879.324,708.08 861.692,700.61C860.117,699.942 861.802,714.238 858.894,715.615C855.995,716.99 845.439,712.056 844.279,708.866C843.111,705.675 852.742,696.819 851.92,696.471C833.974,688.867 816.02,681.262 798.067,673.657C794.893,685.554 789.791,697.127 781.767,708.208C792.04,715.154 801.703,721.93 810.856,728.595C811.585,729.125 799.14,738.013 799.548,741.535C799.955,745.058 810.151,750.948 813.309,749.731C816.475,748.513 817.588,733.541 818.512,734.232C825.589,739.493 832.367,744.695 838.903,749.87C846.074,755.546 852.954,761.188 859.631,766.835C860.195,767.312 849.522,776.877 849.757,780.181C849.992,783.486 858.197,787.875 861.026,786.667C863.863,785.458 865.493,771.841 866.754,772.932C870.939,776.559 875.061,780.195 879.12,783.849C886.377,775.677 892.803,767.051 898.367,757.948C899.119,756.722 887.592,755.238 886.612,751.999C885.633,748.761 889.629,739.109 892.482,738.518C895.342,737.927 903.218,749.483 903.766,748.455C908.037,740.34 911.658,731.868 914.597,723.021\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M802.91,634.926C802.769,641.948 802.361,648.925 801.491,655.826C801.342,656.993 809.579,649.881 811.671,651.412C813.763,652.942 816.02,662.455 814.03,665.009C812.031,667.562 799.979,665.394 799.705,666.731C799.226,669.051 798.678,671.36 798.067,673.657C794.893,685.554 789.791,697.127 781.767,708.208C779.235,706.501 776.673,704.784 774.071,703.055C764.095,696.423 753.531,689.628 742.302,682.615C741.361,682.028 740.554,698.812 737.545,700.135C734.543,701.457 724.975,694.398 724.27,690.55C723.564,686.702 734.481,677.765 733.313,677.047C721.37,669.698 708.676,662.107 695.134,654.216L708.211,630.217C708.973,628.824 715.336,638.406 718.486,637.128C721.629,635.85 727.553,626.014 727.099,622.549C726.644,619.085 714.952,617.843 715.767,616.344C720.586,607.503 725.407,598.663 730.219,589.822C732.4,591.751 734.612,593.643 736.855,595.496C743.759,601.198 750.953,606.538 758.414,611.485C759.785,612.398 761.125,596.052 764.04,594.388C766.963,592.719 775.348,597.652 775.944,601.472C776.54,605.293 766.689,616.75 767.622,617.31C770.615,619.114 773.648,620.857 776.712,622.535C785.168,627.16 793.913,631.303 802.91,634.926\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M774.071,703.055C765.263,709.453 758.562,718.383 753.594,729.661C752.999,731.001 767.959,730.319 769.275,733.782C770.592,737.244 764.824,749.169 761.501,750.435C758.171,751.7 749.644,740.22 749.3,741.375C745.867,752.689 743.72,765.801 742.615,780.591C735.029,774.893 727.53,769.148 720.14,763.361C718.808,762.314 715.085,776.404 711.48,777.135C707.87,777.866 698.759,771.398 698.491,767.748C698.223,764.096 711.057,756.181 709.866,755.23C704.513,750.946 699.218,746.639 693.995,742.312C685.636,735.387 677.457,728.412 669.489,721.392C667.009,719.207 664.549,717.017 662.11,714.823C665.762,708.12 669.414,701.417 673.066,694.715C673.768,693.428 680.428,704.895 683.827,703.77C687.226,702.647 693.984,691.809 693.461,687.97C692.937,684.13 679.706,682.529 680.686,680.732C685.502,671.893 690.318,663.054 695.134,654.216C708.676,662.107 721.37,669.698 733.313,677.047C734.481,677.765 723.564,686.702 724.27,690.55C724.975,694.398 734.543,701.457 737.545,700.135C740.554,698.812 741.361,682.028 742.302,682.615C753.531,689.628 764.095,696.423 774.071,703.055\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M802.91,823.777C796.539,819.412 790.199,815.01 783.89,810.572C782.848,809.839 791.852,802.511 790.779,799.374C789.705,796.237 780.364,791.153 777.433,791.751C774.494,792.348 774.737,804.091 773.154,802.959C767.755,799.102 762.387,795.218 757.058,791.312C752.215,787.758 747.395,784.184 742.615,780.591C743.72,765.801 745.867,752.689 749.3,741.375C749.644,740.22 758.171,751.7 761.501,750.435C764.824,749.169 770.592,737.244 769.275,733.782C767.959,730.319 752.999,731.001 753.594,729.661C758.562,718.383 765.263,709.453 774.071,703.055C776.673,704.784 779.235,706.501 781.767,708.208C792.04,715.154 801.703,721.93 810.856,728.595C811.585,729.125 799.14,738.013 799.548,741.535C799.955,745.058 810.151,750.948 813.309,749.731C816.475,748.513 817.588,733.541 818.512,734.232C825.589,739.493 832.367,744.695 838.903,749.87C833.997,765.307 829.601,779.056 824.225,791.214C823.857,792.054 814.422,779.564 811.052,780.139C807.69,780.712 802.596,791.239 804.03,794.655C805.472,798.071 820.417,799.224 819.672,800.633C815.103,809.238 809.735,816.939 802.91,823.777\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M802.91,823.777C809.735,816.939 815.103,809.238 819.672,800.633C820.417,799.224 805.472,798.071 804.03,794.655C802.596,791.239 807.69,780.712 811.052,780.139C814.422,779.564 823.857,792.054 824.225,791.214C829.601,779.056 833.997,765.307 838.903,749.87C846.074,755.546 852.954,761.188 859.631,766.835C860.195,767.312 849.522,776.877 849.757,780.181C849.992,783.486 858.197,787.875 861.026,786.667C863.863,785.458 865.493,771.841 866.754,772.932C870.939,776.559 875.061,780.195 879.12,783.849C886.04,790.076 894.386,797.734 902.528,805.369C903.335,806.129 904.613,791.011 907.379,790.12C910.145,789.23 918.562,796.185 919.134,800.028C919.698,803.872 909.565,812.014 910.788,813.183C914.542,816.767 918.123,820.229 921.344,823.408C917.1,830.619 912.604,837.861 907.865,845.127C900.851,855.883 893.307,866.69 885.272,877.52C883.227,876.241 881.174,874.962 879.12,873.664C868.98,867.306 858.816,860.827 848.667,854.248C842.382,850.18 836.113,846.067 829.852,841.926C828.747,841.19 838.527,834.307 837.516,831.297C836.505,828.286 826.796,823.238 823.786,823.856C820.777,824.473 820.902,835.963 819.468,835.006C813.928,831.288 808.411,827.547 802.91,823.777\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1036.67,861.83C1018.33,852.242 982.955,833.773 973.974,852.242C973.504,853.217 964.563,844.383 961.553,845.579C958.536,846.785 954.297,856.677 955.895,859.447C957.494,862.226 971.615,860.735 971.122,862.226C962.125,889.686 929.557,861.645 907.865,845.127C912.604,837.861 917.1,830.619 921.344,823.408C932.464,804.516 941.844,785.854 949.281,767.598C955.151,772.26 960.652,776.523 965.871,780.441C966.71,781.07 966.2,767.646 968.16,766.889C970.119,766.132 976.999,772.897 977.618,775.898C978.245,778.9 971.349,784.513 971.882,784.899C974.969,787.156 977.955,789.289 980.863,791.312C987.14,795.683 993.041,799.534 998.738,802.995C999.623,803.534 998.048,790.796 1000.56,789.317C1003.07,787.839 1012.69,791.013 1013.82,794.125C1014.94,797.236 1006.38,807.481 1007.29,807.987C1012.47,810.886 1017.55,813.499 1022.69,815.93C1029.9,819.344 1036.63,821.997 1042.92,823.908C1041.28,837.951 1039.17,850.502 1036.67,861.83\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1114.34,783.849C1103.88,771.908 1092.69,762.101 1080.81,754.314C1079.94,753.746 1079.3,767.571 1076.75,768.785C1074.21,769.998 1066.22,764.828 1065.55,761.593C1064.87,758.359 1073.65,749.909 1072.71,749.378C1063.19,743.998 1053.26,739.837 1042.92,736.84C1038.85,747.638 1035.34,757.987 1032.43,767.823C1032.04,769.148 1041.84,766.625 1042.82,770.025C1043.8,773.424 1040.71,786.09 1038.31,788.22C1035.9,790.35 1028.8,781.061 1028.37,782.808C1025.43,794.802 1023.52,805.887 1022.69,815.93C1029.9,819.344 1036.63,821.997 1042.92,823.908C1047.37,825.259 1051.6,826.24 1055.61,826.858C1056.07,826.93 1051.62,838.742 1053.25,841.19C1054.88,843.647 1063.57,843.812 1065.4,841.558C1067.23,839.303 1063.82,827.633 1064.22,827.642C1068.15,827.732 1071.86,827.419 1075.36,826.713C1085.11,824.741 1093.17,819.699 1099.81,811.775C1105.72,804.711 1110.5,795.357 1114.34,783.849\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M907.865,845.127C929.557,861.645 962.125,889.686 971.122,862.226C971.615,860.735 957.494,862.226 955.895,859.447C954.297,856.677 958.536,846.785 961.553,845.579C964.563,844.383 973.504,853.217 973.974,852.242C982.955,833.773 1018.33,852.242 1036.67,861.83C1034.79,870.416 1032.67,878.302 1030.35,885.6C1029.95,886.879 1022.76,877.355 1019.94,878.624C1017.14,879.885 1012.42,890.146 1013.49,893.201C1014.58,896.265 1026.77,896.044 1026.41,896.992C1018.95,916.804 1009.87,932.025 999.858,945.635C995.219,942.994 990.541,940.316 985.815,937.601C984.687,936.948 993.307,928.188 992.108,924.231C990.901,920.283 981.521,912.719 978.614,913.878C975.706,915.028 976.129,932.016 974.672,931.169C965.918,926.099 957.039,920.909 948.059,915.599C937.722,909.498 927.253,903.24 916.705,896.845C912.457,894.268 908.202,891.673 903.931,889.06C903.022,888.498 916.806,884.33 917.237,881.873C917.676,879.416 910.2,873.996 906.533,874.309C902.873,874.612 896.431,884.44 895.248,883.713C891.925,881.661 888.603,879.6 885.272,877.52C893.307,866.69 900.851,855.883 907.865,845.127\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1077.67,890.725C1076.27,908.081 1071.02,918.185 1065.04,927.994C1064.35,929.126 1078.59,929.384 1079.58,932.789C1080.56,936.193 1074.41,947.503 1070.94,948.405C1067.48,949.307 1059.6,936.847 1058.81,938.181C1054.06,946.261 1049.5,955.583 1046.57,969.404C1037.07,965.42 1027.33,961.177 1017.72,955.757C1011.85,952.445 1005.89,949.077 999.858,945.635C1009.87,932.025 1018.95,916.804 1026.41,896.992C1026.77,896.044 1014.58,896.265 1013.49,893.201C1012.42,890.146 1017.14,879.885 1019.94,878.624C1022.76,877.355 1029.95,886.879 1030.35,885.6C1032.67,878.302 1034.79,870.416 1036.67,861.83C1039.17,850.502 1041.28,837.951 1042.92,823.908C1047.37,825.259 1051.6,826.24 1055.61,826.858C1056.07,826.93 1051.62,838.742 1053.25,841.19C1054.88,843.647 1063.57,843.812 1065.4,841.558C1067.23,839.303 1063.82,827.633 1064.22,827.642C1068.15,827.732 1071.86,827.419 1075.36,826.713C1077.4,842.515 1078.39,856.916 1078.44,870.085C1078.44,871.18 1078.44,872.266 1078.43,873.333C1078.42,874.042 1084.8,864.895 1086.67,866.165C1088.55,867.435 1091.08,877.861 1089.64,880.971C1088.21,884.081 1078.15,883.29 1078.07,884.827C1077.96,886.824 1077.83,888.793 1077.67,890.725\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1099.81,811.775C1110.44,818.016 1120.02,824.522 1128.67,831.262C1136.52,837.38 1143.61,843.684 1150.02,850.153C1151.16,851.294 1140.99,853.3 1141.43,856.916C1141.87,860.542 1149.62,871.235 1152.68,871.87C1155.74,872.496 1158.48,859.189 1159.79,860.708C1171.66,874.474 1180.89,888.894 1188.33,903.783C1184.92,908.026 1181.51,912.231 1178.09,916.409C1177.35,917.311 1173.48,907.823 1170.8,907.897C1168.12,907.98 1161.73,914.347 1162.04,916.869C1162.33,919.399 1173.16,922.39 1172.62,923.053C1168.53,927.985 1164.44,932.862 1160.34,937.693C1150.09,928.197 1139.49,919.455 1128.28,912.056C1127.19,911.329 1122.54,925.694 1119.37,926.715C1116.19,927.737 1109.06,921.433 1109.23,918.176C1109.41,914.918 1121.45,907.768 1120.42,907.161C1107.21,899.421 1093.1,893.642 1077.67,890.725C1077.83,888.793 1077.96,886.824 1078.07,884.827C1078.15,883.29 1088.21,884.081 1089.64,880.971C1091.08,877.861 1088.55,867.435 1086.67,866.165C1084.8,864.895 1078.42,874.042 1078.43,873.333C1078.44,872.266 1078.44,871.18 1078.44,870.085C1078.39,856.916 1077.4,842.515 1075.36,826.713C1085.11,824.741 1093.17,819.699 1099.81,811.775\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1077.67,890.725C1093.1,893.642 1107.21,899.421 1120.42,907.161C1121.45,907.768 1109.41,914.918 1109.23,918.176C1109.06,921.433 1116.19,927.737 1119.37,926.715C1122.54,925.694 1127.19,911.329 1128.28,912.056C1139.49,919.455 1150.09,928.197 1160.34,937.693C1154.85,944.163 1149.35,950.54 1143.83,956.816C1143.15,957.589 1138.6,944.761 1135.34,944.926C1132.09,945.101 1123.84,954.782 1124.31,957.837C1124.77,960.892 1138.76,962.558 1138.14,963.257C1129.46,973.012 1120.75,982.527 1112.02,991.775C1108.65,995.345 1105.27,998.879 1101.88,1002.38C1094.27,993.597 1085.07,987.339 1074.95,982.057C1074.2,981.671 1070.85,996.008 1067.88,997.149C1064.91,998.281 1057.44,992.125 1057.12,988.885C1056.8,985.637 1067.06,978.202 1065.94,977.695C1059.7,974.843 1053.19,972.193 1046.57,969.404C1049.5,955.583 1054.06,946.261 1058.81,938.181C1059.6,936.847 1067.48,949.307 1070.94,948.405C1074.41,947.503 1080.56,936.193 1079.58,932.789C1078.59,929.384 1064.35,929.126 1065.04,927.994C1071.02,918.185 1076.27,908.081 1077.67,890.725\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1128.67,831.262C1134.33,819.944 1141.98,812.118 1150.77,806.286C1152.06,805.428 1154.07,822.277 1156.71,823.309C1159.37,824.341 1165.82,816.339 1166.67,812.477C1167.52,808.615 1160.33,800.836 1161.83,800.133C1170.78,795.942 1180.43,792.973 1190.08,789.995C1196.4,798.624 1203.27,806.523 1210.55,813.808C1211.5,814.754 1200.22,816.356 1200.18,819.765C1200.15,823.176 1207.17,833.929 1210.3,834.27C1213.43,834.601 1217.83,820.757 1218.95,821.778C1225.4,827.592 1232.13,832.991 1239.05,838.052C1233.29,845.892 1225.82,855.895 1218.43,865.603C1217.83,866.404 1215.14,854.818 1212.43,855.122C1209.71,855.416 1202.13,864.361 1202.14,867.398C1202.15,870.434 1213.35,872.257 1212.52,873.333C1206.17,881.578 1200.26,889.078 1196.02,894.139C1193.46,897.379 1190.9,900.59 1188.33,903.783C1180.89,888.894 1171.66,874.474 1159.79,860.708C1158.48,859.189 1155.74,872.496 1152.68,871.87C1149.62,871.235 1141.87,860.542 1141.43,856.916C1140.99,853.3 1151.16,851.294 1150.02,850.153C1143.61,843.684 1136.52,837.38 1128.67,831.262\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1675.7,67.391C1688.9,72.762 1701.81,77.825 1714.3,82.39C1715.4,82.794 1713.82,67.434 1716.12,65.435C1718.42,63.436 1726.7,66.954 1728.12,70.399C1729.55,73.843 1723.25,85.605 1724.66,86.1C1739.88,91.418 1754.37,95.879 1767.84,99.111C1769.19,93.886 1770.33,88.545 1771.24,83.082C1772.8,73.615 1773.69,63.785 1773.85,53.572C1773.88,51.996 1762.86,55.837 1760.74,52.971C1758.63,50.104 1759.03,38.436 1761.18,36.372C1763.34,34.309 1773.74,41.951 1773.68,40.591C1773.13,27.808 1771.5,14.448 1768.72,0.476L1707.68,0.476C1702.51,11.321 1697.14,22.578 1691.59,34.215C1691.16,35.098 1703.17,32.045 1704.3,34.449C1705.43,36.855 1701.22,47.167 1698.38,48.647C1695.54,50.126 1687.85,42.042 1687.23,43.326C1683.47,51.188 1679.63,59.213 1675.7,67.391\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1771.24,83.082C1775.4,86.904 1780.13,90.59 1785.51,94.129C1786.62,94.864 1787.87,81.443 1790.45,80.926C1793.04,80.409 1800.19,87.839 1801.01,91.024C1801.82,94.21 1794.53,99.596 1795.33,100.039C1806.15,105.98 1819.06,111.429 1834.41,116.304C1834.72,113.156 1834.96,110.032 1835.15,106.931C1835.49,101.174 1835.62,95.496 1835.56,89.899C1835.54,88.5 1845.25,92.709 1847.16,90.504C1849.07,88.3 1849.01,78.776 1847,76.671C1844.99,74.566 1835.2,79.056 1835.13,77.872C1834.67,70.503 1833.9,63.279 1832.86,56.2C1831.98,50.262 1830.9,44.425 1829.66,38.691C1829.27,36.901 1840.48,38.6 1842.17,35.746C1843.87,32.892 1842.37,23.051 1839.81,21.568C1837.25,20.086 1827.1,27.87 1826.83,26.852C1824.46,17.792 1821.7,9 1818.68,0.476L1768.72,0.476C1771.5,14.448 1773.13,27.808 1773.68,40.591C1773.74,41.951 1763.34,34.309 1761.18,36.372C1759.03,38.436 1758.63,50.104 1760.74,52.971C1762.86,55.837 1773.88,51.996 1773.85,53.572C1773.69,63.785 1772.8,73.615 1771.24,83.082\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1832.86,56.2C1860.26,55.431 1888.07,55.287 1917.92,60.108C1919.47,60.358 1911.37,74.428 1912.39,77.657C1913.41,80.887 1921.42,82.11 1924.04,79.489C1926.66,76.867 1927.41,61.798 1928.08,61.931C1934.06,63.114 1940.15,64.51 1946.31,66.152C1945.63,56.994 1944.76,48.195 1943.73,39.796C1943.51,37.996 1934.06,41.269 1931.58,38.497C1929.1,35.723 1927.11,25.061 1928.84,23.157C1930.58,21.253 1942.19,28.431 1941.99,27.07C1940.56,17.579 1938.93,8.69 1937.1,0.476L1818.68,0.476C1821.7,9 1824.46,17.792 1826.83,26.852C1827.1,27.87 1837.25,20.086 1839.81,21.568C1842.37,23.051 1843.87,32.892 1842.17,35.746C1840.48,38.6 1829.27,36.901 1829.66,38.691C1830.9,44.425 1831.98,50.262 1832.86,56.2\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1947.01,76.597C1959.08,73.422 1970.63,71.721 1981.81,71.081C1983.15,71.003 1978.01,83.788 1979.78,86.311C1981.54,88.834 1990.38,88.809 1992.39,86.22C1994.41,83.632 1991.03,70.783 1991.85,70.78C2007.99,70.726 2023.39,72.699 2038.5,75.375C2039.11,67.816 2039.7,60.219 2040.28,52.584C2040.45,50.417 2032.3,55.755 2030.76,52.612C2029.22,49.468 2029.28,36.124 2031.05,33.722C2032.82,31.32 2041.27,39.526 2041.37,38.198C2042.3,25.724 2043.2,13.149 2044.08,0.476L1937.1,0.476C1938.93,8.69 1940.56,17.579 1941.99,27.07C1942.19,28.431 1930.58,21.253 1928.84,23.157C1927.11,25.061 1929.1,35.723 1931.58,38.497C1934.06,41.269 1943.51,37.996 1943.73,39.796C1944.76,48.195 1945.63,56.994 1946.31,66.152C1946.57,69.584 1946.81,73.067 1947.01,76.597\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2036.01,105.748C2044.45,105.583 2052.95,105.495 2061.64,105.712C2063.62,105.762 2060.51,94.357 2062.86,91.638C2065.19,88.92 2074.05,86.982 2075.69,89.402C2077.32,91.823 2072,106.123 2072.68,106.162C2083.52,106.787 2094.74,108.007 2106.61,110.234C2112.21,94.131 2115.56,77.587 2117.05,60.678C2117.21,58.86 2107.19,65.082 2105.84,62.223C2104.49,59.363 2106.95,46.043 2108.95,43.523C2110.95,41.001 2117.82,47.992 2117.86,47.098C2118.33,31.813 2117.4,16.253 2115.36,0.476L2044.08,0.476C2043.2,13.149 2042.3,25.724 2041.37,38.198C2041.27,39.526 2032.82,31.32 2031.05,33.722C2029.28,36.124 2029.22,49.468 2030.76,52.612C2032.3,55.755 2040.45,50.417 2040.28,52.584C2039.7,60.219 2039.11,67.816 2038.5,75.375C2037.69,85.567 2036.86,95.691 2036.01,105.748\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2200.45,73.312C2193.89,65.715 2188.13,56.445 2182.96,44.836C2182.24,43.213 2172.71,52.323 2169.53,50.288C2166.36,48.254 2162.5,35.649 2163.89,32.629C2165.29,29.61 2178.37,33.498 2177.89,32.17C2174.56,22.914 2171.49,12.421 2168.61,0.476L2115.36,0.476C2117.4,16.253 2118.33,31.813 2117.86,47.098C2117.82,47.992 2110.95,41.001 2108.95,43.523C2106.95,46.043 2104.49,59.363 2105.84,62.223C2107.19,65.082 2117.21,58.86 2117.05,60.678C2115.56,77.587 2112.21,94.131 2106.61,110.234C2112.49,111.337 2118.53,112.687 2124.75,114.333C2126.15,114.704 2122.61,102.989 2125.14,101.123C2127.66,99.257 2138.38,100.482 2139.9,103.135C2141.43,105.788 2133.83,116.909 2134.26,117.041C2135.38,117.38 2136.55,117.744 2137.68,118.104C2145.1,120.473 2152.81,123.274 2160.83,126.582C2164.46,117.075 2167.16,108.58 2171.64,101.13C2172.33,99.99 2161.87,98.502 2162.1,95.423C2162.34,92.344 2170.54,83.061 2173.06,82.657C2175.58,82.252 2176.67,93.69 2177.21,92.998C2182.72,85.916 2189.26,80.035 2196.84,75.388C2198.02,74.666 2199.22,73.974 2200.45,73.312\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2200.45,73.312C2206.29,70.166 2212.71,67.695 2219.72,65.914C2220.49,65.715 2215.98,52.03 2217.79,49.154C2219.61,46.277 2228.86,46.155 2230.59,48.653C2232.32,51.151 2226.92,64.355 2228.2,64.143C2237.09,62.666 2246.81,62.177 2257.41,62.697L2257.41,0.476L2168.61,0.476C2171.49,12.421 2174.56,22.914 2177.89,32.17C2178.37,33.498 2165.29,29.61 2163.89,32.629C2162.5,35.649 2166.36,48.254 2169.53,50.288C2172.71,52.323 2182.24,43.213 2182.96,44.836C2188.13,56.445 2193.89,65.715 2200.45,73.312\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2160.83,126.582C2173.25,131.699 2186.43,138.029 2200.57,145.849C2203.33,137.327 2207.09,130.123 2211.89,124.276C2212.66,123.345 2216.67,136.801 2219.47,136.899C2222.27,136.998 2228.74,128.168 2228.69,124.867C2228.63,121.566 2218.2,117.853 2219.14,117.094C2228.86,109.331 2241.56,105.49 2257.41,105.761L2257.41,62.697C2246.81,62.177 2237.09,62.666 2228.2,64.143C2226.92,64.355 2232.32,51.151 2230.59,48.653C2228.86,46.155 2219.61,46.277 2217.79,49.154C2215.98,52.03 2220.49,65.715 2219.72,65.914C2212.71,67.695 2206.29,70.166 2200.45,73.312C2199.22,73.974 2198.02,74.666 2196.84,75.388C2189.26,80.035 2182.72,85.916 2177.21,92.998C2176.67,93.69 2175.58,82.252 2173.06,82.657C2170.54,83.061 2162.34,92.344 2162.1,95.423C2161.87,98.502 2172.33,99.99 2171.64,101.13C2167.16,108.58 2164.46,117.075 2160.83,126.582\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2257.41,105.761C2241.56,105.49 2228.86,109.331 2219.14,117.094C2218.2,117.853 2228.63,121.566 2228.69,124.867C2228.74,128.168 2222.27,136.998 2219.47,136.899C2216.67,136.801 2212.66,123.345 2211.89,124.276C2207.09,130.123 2203.33,137.327 2200.57,145.849C2198.26,152.967 2196.65,161.005 2195.74,169.939C2195.56,171.587 2187.13,160.609 2185.21,162.341C2183.28,164.074 2182.59,176.684 2184.21,180.332C2185.81,183.979 2194.9,182.522 2194.86,184.227C2194.72,189.537 2194.8,195.105 2195.06,200.928C2202.44,203.72 2210.37,207.468 2218.94,212.366C2219.98,212.961 2212.07,218.781 2213.25,222.074C2214.44,225.367 2223.16,232.548 2226.06,232.122C2228.96,231.696 2229.02,218.458 2230.66,219.517C2238.96,224.908 2247.86,231.315 2257.41,238.886L2257.41,105.761\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2160.83,126.582C2173.25,131.699 2186.43,138.029 2200.57,145.849C2198.26,152.967 2196.65,161.005 2195.74,169.939C2195.56,171.587 2187.13,160.609 2185.21,162.341C2183.28,164.074 2182.59,176.684 2184.21,180.332C2185.81,183.979 2194.9,182.522 2194.86,184.227C2194.72,189.537 2194.8,195.105 2195.06,200.928C2179.75,195.13 2166.76,193.441 2155.12,194.093C2154.67,188.931 2153.13,182.949 2151.26,179.277C2149.71,176.207 2147.67,173.429 2145.21,170.915C2132.62,157.996 2109.25,152.036 2085.61,149.195C2084.54,149.067 2090.22,162.513 2088.55,165.131C2086.89,167.748 2077.47,167.7 2075.62,164.901C2073.78,162.102 2078.4,148.419 2077.47,148.333C2060.74,146.787 2044.47,146.593 2032.45,146.371C2032.87,141.772 2033.28,137.158 2033.69,132.53C2033.83,131.013 2046.41,135.485 2049.12,133.214C2051.83,130.943 2052.37,120.862 2049.96,118.903C2047.55,116.944 2034.57,122.566 2034.66,121.461C2035.12,116.241 2035.56,111.004 2036.01,105.748C2044.45,105.583 2052.95,105.495 2061.64,105.712C2063.62,105.762 2060.51,94.357 2062.86,91.638C2065.19,88.92 2074.05,86.982 2075.69,89.402C2077.32,91.823 2072,106.123 2072.68,106.162C2083.52,106.787 2094.74,108.007 2106.61,110.234C2112.49,111.337 2118.53,112.687 2124.75,114.333C2126.15,114.704 2122.61,102.989 2125.14,101.123C2127.66,99.257 2138.38,100.482 2139.9,103.135C2141.43,105.788 2133.83,116.909 2134.26,117.041C2135.38,117.38 2136.55,117.744 2137.68,118.104C2145.1,120.473 2152.81,123.274 2160.83,126.582\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2145.21,170.915C2136.12,188.111 2123.76,199.906 2109.55,207.701C2108.7,208.171 2107.98,190.01 2104.88,188.708C2101.77,187.406 2091.45,196.069 2090.89,199.89C2090.32,203.71 2102.35,211.254 2101.46,211.632C2078.23,221.579 2051.09,222.37 2025.41,219.354C2025.96,214.1 2026.49,208.825 2027.01,203.53C2027.4,199.706 2027.77,195.873 2028.15,192.028C2028.27,190.864 2013.89,193.018 2011.62,190.335C2009.35,187.652 2011.61,177.322 2014.52,175.932C2017.44,174.54 2029.04,182.964 2029.13,181.988C2029.7,176.022 2030.27,170.03 2030.83,164.015C2031.38,158.157 2031.92,152.276 2032.45,146.371C2044.47,146.593 2060.74,146.787 2077.47,148.333C2078.4,148.419 2073.78,162.102 2075.62,164.901C2077.47,167.7 2086.89,167.748 2088.55,165.131C2090.22,162.513 2084.54,149.067 2085.61,149.195C2109.25,152.036 2132.62,157.996 2145.21,170.915\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2038.5,75.375C2023.39,72.699 2007.99,70.726 1991.85,70.78C1991.03,70.783 1994.41,83.632 1992.39,86.22C1990.38,88.809 1981.54,88.834 1979.78,86.311C1978.01,83.788 1983.15,71.003 1981.81,71.081C1970.63,71.721 1959.08,73.422 1947.01,76.597C1947.68,88.235 1948.05,100.395 1948.1,112.995C1948.1,113.776 1938.17,105.572 1936.19,107.802C1934.2,110.032 1934.2,123.758 1936.18,126.372C1938.15,128.987 1948.08,122.114 1948.06,123.491C1947.96,133.143 1947.66,143.031 1947.15,153.119C1956.7,151.704 1966.35,151.07 1976.15,151.413C1977.16,151.448 1973.51,137.095 1975.57,134.644C1977.62,132.193 1986.91,133.817 1988.46,136.705C1990.01,139.595 1984.18,151.913 1984.86,151.977C1999.82,153.395 2015.11,157.183 2030.83,164.015C2031.38,158.157 2031.92,152.276 2032.45,146.371C2032.87,141.772 2033.28,137.158 2033.69,132.53C2033.83,131.013 2046.41,135.485 2049.12,133.214C2051.83,130.943 2052.37,120.862 2049.96,118.903C2047.55,116.944 2034.57,122.566 2034.66,121.461C2035.12,116.241 2035.56,111.004 2036.01,105.748C2036.86,95.691 2037.69,85.567 2038.5,75.375\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1832.86,56.2C1860.26,55.431 1888.07,55.287 1917.92,60.108C1919.47,60.358 1911.37,74.428 1912.39,77.657C1913.41,80.887 1921.42,82.11 1924.04,79.489C1926.66,76.867 1927.41,61.798 1928.08,61.931C1934.06,63.114 1940.15,64.51 1946.31,66.152C1946.57,69.584 1946.81,73.067 1947.01,76.597C1947.68,88.235 1948.05,100.395 1948.1,112.995C1948.1,113.776 1938.17,105.572 1936.19,107.802C1934.2,110.032 1934.2,123.758 1936.18,126.372C1938.15,128.987 1948.08,122.114 1948.06,123.491C1947.96,133.143 1947.66,143.031 1947.15,153.119C1934.87,154.94 1922.79,158.053 1910.83,162.046C1913.05,145.239 1910.62,132.609 1904.14,123.612C1903.12,122.197 1901.28,133.275 1899.04,133.602C1896.8,133.929 1891.21,128.591 1890.69,125.575C1890.17,122.56 1896.61,116.002 1895.91,115.507C1895.23,115.024 1894.52,114.559 1893.8,114.114C1880.62,106.009 1860.57,104.057 1835.15,106.931C1835.49,101.174 1835.62,95.496 1835.56,89.899C1835.54,88.5 1845.25,92.709 1847.16,90.504C1849.07,88.3 1849.01,78.776 1847,76.671C1844.99,74.566 1835.2,79.056 1835.13,77.872C1834.67,70.503 1833.9,63.279 1832.86,56.2\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1947.15,153.119C1934.87,154.94 1922.79,158.053 1910.83,162.046C1910.23,166.56 1909.29,171.375 1908.01,176.502C1907.78,177.43 1919.64,172.157 1921.38,174.057C1923.12,175.958 1921.3,185.329 1918.44,187.904C1915.58,190.479 1904.74,187.948 1904.22,189.508C1903.2,192.627 1902.07,195.844 1900.82,199.161C1906.56,200.227 1912.32,201.192 1918.12,202.047C1935.36,204.588 1952.88,206.154 1970.75,206.511C1972.11,206.539 1966.24,217.214 1968.2,219.354C1970.15,221.494 1980.52,221.482 1982.46,219.354C1984.41,217.227 1979.22,206.59 1979.89,206.588C1995.32,206.536 2011.02,205.565 2027.01,203.53C2027.4,199.706 2027.77,195.873 2028.15,192.028C2028.27,190.864 2013.89,193.018 2011.62,190.335C2009.35,187.652 2011.61,177.322 2014.52,175.932C2017.44,174.54 2029.04,182.964 2029.13,181.988C2029.7,176.022 2030.27,170.03 2030.83,164.015C2015.11,157.183 1999.82,153.395 1984.86,151.977C1984.18,151.913 1990.01,139.595 1988.46,136.705C1986.91,133.817 1977.62,132.193 1975.57,134.644C1973.51,137.095 1977.16,151.448 1976.15,151.413C1966.35,151.07 1956.7,151.704 1947.15,153.119\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1910.83,162.046C1910.23,166.56 1909.29,171.375 1908.01,176.502C1907.78,177.43 1919.64,172.157 1921.38,174.057C1923.12,175.958 1921.3,185.329 1918.44,187.904C1915.58,190.479 1904.74,187.948 1904.22,189.508C1903.2,192.627 1902.07,195.844 1900.82,199.161C1888.6,196.89 1876.51,194.157 1864.54,191.051C1863.45,190.768 1868.24,178.348 1866.73,174.815C1865.21,171.282 1857.48,167.591 1855.46,169.851C1853.43,172.111 1855.42,188.611 1854.59,188.378C1843.07,185.181 1831.65,181.657 1820.29,177.882C1822.11,172.843 1823.74,167.854 1825.21,162.914C1825.66,161.369 1813.97,164.73 1812.3,162.154C1810.63,159.577 1812.56,149.031 1815.18,147.455C1817.79,145.88 1827.75,153.721 1828.01,152.7C1831.16,140.241 1833.24,128.109 1834.41,116.304C1834.72,113.156 1834.96,110.032 1835.15,106.931C1860.57,104.057 1880.62,106.009 1893.8,114.114C1894.52,114.559 1895.23,115.024 1895.91,115.507C1896.61,116.002 1890.17,122.56 1890.69,125.575C1891.21,128.591 1896.8,133.929 1899.04,133.602C1901.28,133.275 1903.12,122.197 1904.14,123.612C1910.62,132.609 1913.05,145.239 1910.83,162.046\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1746.51,148.736C1749.25,153.131 1752.34,157.481 1756.17,161.748C1757.08,162.768 1747.69,169.404 1748.42,173.105C1749.14,176.806 1757.79,184.455 1760.52,183.953C1763.25,183.452 1763.48,168.989 1764.79,170.096C1775.43,179.031 1790.51,187.397 1813.55,194.908C1816.03,189.172 1818.27,183.496 1820.29,177.882C1822.11,172.843 1823.74,167.854 1825.21,162.914C1825.66,161.369 1813.97,164.73 1812.3,162.154C1810.63,159.577 1812.56,149.031 1815.18,147.455C1817.79,145.88 1827.75,153.721 1828.01,152.7C1831.16,140.241 1833.24,128.109 1834.41,116.304C1819.06,111.429 1806.15,105.98 1795.33,100.039C1794.53,99.596 1801.82,94.21 1801.01,91.024C1800.19,87.839 1793.04,80.409 1790.45,80.926C1787.87,81.443 1786.62,94.864 1785.51,94.129C1780.13,90.59 1775.4,86.904 1771.24,83.082C1770.33,88.545 1769.19,93.886 1767.84,99.111C1765.2,109.266 1761.74,118.979 1757.49,128.28C1756.97,129.435 1748.16,118.744 1745.26,119.887C1742.35,121.031 1739.04,131.668 1740.04,135.141C1741.03,138.614 1752.24,138.881 1751.21,140.725C1749.72,143.432 1748.15,146.103 1746.51,148.736\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1652.13,116.304C1664.6,120.899 1676.66,126.375 1687.68,133.982C1688.26,134.383 1680.42,140.242 1681.22,143.117C1682.02,145.993 1689.93,151.631 1692.48,151.235C1695.03,150.838 1695.46,139.856 1696.49,140.736C1707.33,149.968 1716.87,161.881 1724.44,177.882C1732.76,168.679 1740.15,158.979 1746.51,148.736C1748.15,146.103 1749.72,143.432 1751.21,140.725C1752.24,138.881 1741.03,138.614 1740.04,135.141C1739.04,131.668 1742.35,121.031 1745.26,119.887C1748.16,118.744 1756.97,129.435 1757.49,128.28C1761.74,118.979 1765.2,109.266 1767.84,99.111C1754.37,95.879 1739.88,91.418 1724.66,86.1C1723.25,85.605 1729.55,73.843 1728.12,70.399C1726.7,66.954 1718.42,63.436 1716.12,65.435C1713.82,67.434 1715.4,82.794 1714.3,82.39C1701.81,77.825 1688.9,72.762 1675.7,67.391C1668.15,83.151 1660.28,99.48 1652.13,116.304\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1724.44,177.882C1716.87,161.881 1707.33,149.968 1696.49,140.736C1695.46,139.856 1695.03,150.838 1692.48,151.235C1689.93,151.631 1682.02,145.993 1681.22,143.117C1680.42,140.242 1688.26,134.383 1687.68,133.982C1676.66,126.375 1664.6,120.899 1652.13,116.304C1648.77,123.233 1645.37,130.247 1641.91,137.339C1641.55,138.076 1654.31,137.99 1654.97,140.659C1655.62,143.327 1648.72,152.483 1645.85,153.35C1642.98,154.218 1638.3,144.743 1637.76,145.865C1633.74,154.087 1629.67,162.412 1625.53,170.829C1622.65,176.684 1619.75,182.586 1616.81,188.529C1630.7,205.383 1643.18,213.564 1653.86,216.8C1655.03,217.152 1650.91,204.296 1652.85,202.066C1654.79,199.836 1663.88,200.694 1665.47,203.422C1667.07,206.151 1661.74,218.383 1662.42,218.437C1668.33,218.899 1673.54,217.895 1677.93,216.284C1686.06,213.312 1691.46,208.273 1693.6,206.577C1694.23,206.079 1684.62,199.085 1685.22,195.922C1685.82,192.761 1694.65,186.754 1697.18,187.604C1699.7,188.452 1699.59,201.693 1700.39,201.018C1709.08,193.668 1717.12,185.967 1724.44,177.882\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1813.55,194.908C1790.51,187.397 1775.43,179.031 1764.79,170.096C1763.48,168.989 1763.25,183.452 1760.52,183.953C1757.79,184.455 1749.14,176.806 1748.42,173.105C1747.69,169.404 1757.08,162.768 1756.17,161.748C1752.34,157.481 1749.25,153.131 1746.51,148.736C1740.15,158.979 1732.76,168.679 1724.44,177.882C1717.12,185.967 1709.08,193.668 1700.39,201.018C1699.59,201.693 1699.7,188.452 1697.18,187.604C1694.65,186.754 1685.82,192.761 1685.22,195.922C1684.62,199.085 1694.23,206.079 1693.6,206.577C1691.46,208.273 1686.06,213.312 1677.93,216.284C1679.37,221.021 1681.99,226.679 1685.04,232.147C1690.94,242.744 1698.44,252.624 1701.95,253.679C1703.66,254.192 1704.34,244.896 1706.57,244.742C1708.81,244.589 1714.84,249.966 1715.39,252.761C1715.95,255.556 1709.12,260.88 1709.89,261.511C1717.01,267.275 1724.91,270.193 1735.34,269.065C1731.03,250.19 1733.05,232.194 1742.4,219.634C1743.26,218.495 1745.04,231.137 1747.55,231.685C1750.07,232.234 1757.16,226.143 1757.48,222.926C1757.8,219.709 1748.83,212.874 1749.46,212.383C1763.6,201.333 1784.64,201.622 1805.43,212.22C1808.38,206.388 1811.09,200.617 1813.55,194.908\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1840.91,242.01C1826.6,258.614 1810.36,271.944 1792.94,283.169C1791.61,284.026 1787.98,272.132 1784.75,271.622C1781.53,271.111 1773.79,277.241 1773.63,280.106C1773.47,282.972 1784.73,288.264 1783.8,288.813C1773.32,295.01 1762.48,300.547 1751.42,305.665C1743.58,293.924 1738.13,281.31 1735.34,269.065C1731.03,250.19 1733.05,232.194 1742.4,219.634C1743.26,218.495 1745.04,231.137 1747.55,231.685C1750.07,232.234 1757.16,226.143 1757.48,222.926C1757.8,219.709 1748.83,212.874 1749.46,212.383C1763.6,201.333 1784.64,201.622 1805.43,212.22C1810.9,215.005 1816.35,218.504 1821.66,222.696C1822.41,223.287 1810.73,229.482 1810.48,232.132C1810.24,234.782 1817.26,239.246 1820.21,238.597C1823.14,237.948 1827.35,227.511 1828.14,228.241C1829.69,229.665 1831.22,231.15 1832.72,232.696C1835.64,235.687 1838.36,238.801 1840.91,242.01\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1923.09,243.356C1910.21,248.086 1898.01,253.869 1888.73,258.609C1888.33,258.811 1895.54,268.67 1894.83,270.804C1893.78,273.978 1886.57,277.783 1883.89,276.615C1881.22,275.447 1879.98,263.107 1878.79,263.796C1871.76,267.889 1865.58,271.985 1859.8,276.081C1855.74,264.386 1849.36,252.677 1840.91,242.01C1838.36,238.801 1835.64,235.687 1832.72,232.696C1831.22,231.15 1829.69,229.665 1828.14,228.241C1827.35,227.511 1823.14,237.948 1820.21,238.597C1817.26,239.246 1810.24,234.782 1810.48,232.132C1810.73,229.482 1822.41,223.287 1821.66,222.696C1816.35,218.504 1810.9,215.005 1805.43,212.22C1808.38,206.388 1811.09,200.617 1813.55,194.908C1816.03,189.172 1818.27,183.496 1820.29,177.882C1831.65,181.657 1843.07,185.181 1854.59,188.378C1855.42,188.611 1853.43,172.111 1855.46,169.851C1857.48,167.591 1865.21,171.282 1866.73,174.815C1868.24,178.348 1863.45,190.768 1864.54,191.051C1876.51,194.157 1888.6,196.89 1900.82,199.161C1906.56,200.227 1912.32,201.192 1918.12,202.047C1919.14,209.166 1920.05,216.083 1920.86,222.8C1920.97,223.672 1912.72,217.734 1910.78,219.33C1908.84,220.925 1907.38,230.354 1909.23,232.372C1911.08,234.389 1921.74,230.299 1921.86,231.433C1922.31,235.483 1922.72,239.457 1923.09,243.356\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1925.7,289.633C1937.42,285.241 1949.15,282.206 1960.87,280.475C1961.95,280.317 1958.05,291.349 1959.97,293.573C1961.88,295.796 1970.9,296.158 1972.36,293.815C1973.82,291.471 1967.89,279.592 1968.71,279.512C1985.35,277.876 2001.99,278.837 2018.62,282.247C2019.11,277.962 2019.59,273.664 2020.07,269.351C2020.2,268.258 2027.87,275.563 2029.76,274.195C2031.65,272.826 2032.89,263.237 2031.42,261.141C2029.94,259.045 2020.85,262.268 2020.92,261.619C2021.76,254.083 2022.57,246.505 2023.38,238.886C2024.07,232.406 2024.74,225.895 2025.41,219.354C2025.96,214.1 2026.49,208.825 2027.01,203.53C2011.02,205.565 1995.32,206.536 1979.89,206.588C1979.22,206.59 1984.41,217.227 1982.46,219.354C1980.52,221.482 1970.15,221.494 1968.2,219.354C1966.24,217.214 1972.11,206.539 1970.75,206.511C1952.88,206.154 1935.36,204.588 1918.12,202.047C1919.14,209.166 1920.05,216.083 1920.86,222.8C1920.97,223.672 1912.72,217.734 1910.78,219.33C1908.84,220.925 1907.38,230.354 1909.23,232.372C1911.08,234.389 1921.74,230.299 1921.86,231.433C1922.31,235.483 1922.72,239.457 1923.09,243.356C1924.68,260.166 1925.54,275.573 1925.7,289.633\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2143.87,266.609C2131.84,265.671 2119.76,264.057 2107.55,261.842C2106.06,261.572 2109.58,275.568 2106.92,278.141C2104.26,280.715 2093.39,280.37 2091.6,277.283C2089.81,274.196 2097.53,259.9 2096.19,259.617C2072.58,254.661 2048.45,247.574 2023.38,238.886C2024.07,232.406 2024.74,225.895 2025.41,219.354C2051.09,222.37 2078.23,221.579 2101.46,211.632C2102.35,211.254 2090.32,203.71 2090.89,199.89C2091.45,196.069 2101.77,187.406 2104.88,188.708C2107.98,190.01 2108.7,208.171 2109.55,207.701C2123.76,199.906 2136.12,188.111 2145.21,170.915C2147.67,173.429 2149.71,176.207 2151.26,179.277C2153.13,182.949 2154.67,188.931 2155.12,194.093C2156,204.343 2154.61,217.027 2152.05,230.82C2151.8,232.167 2142.46,224.148 2140,225.952C2137.54,227.756 2135.64,239.058 2137.29,241.643C2138.94,244.227 2150.12,240.414 2149.89,241.459C2148.11,249.67 2146.04,258.138 2143.87,266.609\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2200.57,305.497C2194.88,297.076 2188.26,290.85 2180.79,286.638C2179.89,286.129 2178.75,301.958 2176.39,303.908C2174.04,305.859 2167.28,301.822 2166.68,298.34C2166.09,294.858 2173.64,283.305 2172.82,283.013C2163.1,279.561 2152.16,278.962 2140.15,280.896C2141.39,276.162 2142.64,271.385 2143.87,266.609C2146.04,258.138 2148.11,249.67 2149.89,241.459C2150.12,240.414 2138.94,244.227 2137.29,241.643C2135.64,239.058 2137.54,227.756 2140,225.952C2142.46,224.148 2151.8,232.167 2152.05,230.82C2154.61,217.027 2156,204.343 2155.12,194.093C2166.76,193.441 2179.75,195.13 2195.06,200.928C2202.44,203.72 2210.37,207.468 2218.94,212.366C2219.98,212.961 2212.07,218.781 2213.25,222.074C2214.44,225.367 2223.16,232.548 2226.06,232.122C2228.96,231.696 2229.02,218.458 2230.66,219.517C2238.96,224.908 2247.86,231.315 2257.41,238.886C2240.47,252.046 2227.07,264.448 2217.12,276.987C2216.32,277.991 2226.56,280.07 2227.11,283.135C2227.66,286.198 2223.04,295.111 2220.44,295.37C2217.83,295.628 2212.08,283.758 2211.45,284.686C2206.84,291.484 2203.22,298.374 2200.57,305.497\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2203.7,384.059C2211.49,382.412 2219.18,381.913 2226.55,382.444C2228.08,382.553 2223.04,395.976 2224.98,399.173C2226.92,402.369 2236.03,404.13 2238.19,401.623C2240.36,399.117 2236.77,383.859 2237.97,384.132C2244.91,385.702 2251.45,388.222 2257.41,391.574L2257.41,238.886C2240.47,252.046 2227.07,264.448 2217.12,276.987C2216.32,277.991 2226.56,280.07 2227.11,283.135C2227.66,286.198 2223.04,295.111 2220.44,295.37C2217.83,295.628 2212.08,283.758 2211.45,284.686C2206.84,291.484 2203.22,298.374 2200.57,305.497C2196.31,316.938 2194.54,328.978 2195.2,342.197C2195.27,343.759 2206.5,334.257 2208.84,336.126C2211.17,337.995 2211.3,350.545 2209.2,353.411C2207.11,356.276 2196.14,352.337 2196.27,353.316C2197.62,362.87 2200.12,373.056 2203.7,384.059\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2203.7,384.059C2200.12,373.056 2197.62,362.87 2196.27,353.316C2196.14,352.337 2207.11,356.276 2209.2,353.411C2211.3,350.545 2211.17,337.995 2208.84,336.126C2206.5,334.257 2195.27,343.759 2195.2,342.197C2194.54,328.978 2196.31,316.938 2200.57,305.497C2194.88,297.076 2188.26,290.85 2180.79,286.638C2179.89,286.129 2178.75,301.958 2176.39,303.908C2174.04,305.859 2167.28,301.822 2166.68,298.34C2166.09,294.858 2173.64,283.305 2172.82,283.013C2163.1,279.561 2152.16,278.962 2140.15,280.896C2138.31,287.899 2136.48,294.807 2134.8,301.472C2134.41,302.98 2127.23,292.91 2124.57,294.518C2121.91,296.126 2117.64,307.838 2118.84,311.119C2120.02,314.399 2132.06,312.644 2131.7,314.199C2130.3,320.284 2129.09,326.052 2128.2,331.371C2126.96,338.789 2126.33,345.333 2126.59,350.644C2127.1,360.563 2131.75,370.073 2137.84,378.523C2138.41,379.321 2128.22,381.507 2128.06,384.779C2127.89,388.049 2134.12,397.857 2136.82,398.15C2139.52,398.445 2143.56,385.748 2144.26,386.544C2150.96,394.181 2158.18,400.554 2163.24,405.017C2174.15,394.887 2188.02,387.374 2203.7,384.059\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2097.79,335.762C2089.64,321.8 2079.14,312.55 2066.92,306.004C2066.06,305.546 2065.29,320.455 2062.7,322.302C2060.12,324.149 2052.15,320.483 2051.41,317.084C2050.66,313.686 2059.65,302.489 2058.27,301.911C2045.95,296.77 2032.22,293.653 2017.63,290.842C2017.96,287.983 2018.29,285.118 2018.62,282.247C2019.11,277.962 2019.59,273.664 2020.07,269.351C2020.2,268.258 2027.87,275.563 2029.76,274.195C2031.65,272.826 2032.89,263.237 2031.42,261.141C2029.94,259.045 2020.85,262.268 2020.92,261.619C2021.76,254.083 2022.57,246.505 2023.38,238.886C2048.45,247.574 2072.58,254.661 2096.19,259.617C2097.53,259.9 2089.81,274.196 2091.6,277.283C2093.39,280.37 2104.26,280.715 2106.92,278.141C2109.58,275.568 2106.06,261.572 2107.55,261.842C2119.76,264.057 2131.84,265.671 2143.87,266.609C2142.64,271.385 2141.39,276.162 2140.15,280.896C2138.31,287.899 2136.48,294.807 2134.8,301.472C2134.41,302.98 2127.23,292.91 2124.57,294.518C2121.91,296.126 2117.64,307.838 2118.84,311.119C2120.02,314.399 2132.06,312.644 2131.7,314.199C2130.3,320.284 2129.09,326.052 2128.2,331.371C2119.77,330.664 2111.96,331.454 2104.92,333.358C2102.45,334.027 2100.07,334.834 2097.79,335.762\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2018.62,282.247C2001.99,278.837 1985.35,277.876 1968.71,279.512C1967.89,279.592 1973.82,291.471 1972.36,293.815C1970.9,296.158 1961.88,295.796 1959.97,293.573C1958.05,291.349 1961.95,280.317 1960.87,280.475C1949.15,282.206 1937.42,285.241 1925.7,289.633C1925.82,300.219 1925.55,310.041 1924.9,319.122C1924.85,319.76 1934.6,314.613 1936.46,317.036C1938.32,319.461 1938.12,331.678 1936.05,333.667C1933.97,335.656 1924.12,327.87 1924,328.973C1923.02,337.789 1921.65,345.826 1919.88,353.105C1930.52,359.887 1941.38,365.805 1952.66,370.129C1954.4,370.797 1952.9,358.722 1955.14,357.185C1957.38,355.648 1964.89,358.203 1966.08,360.904C1967.27,363.605 1961.48,373.152 1962.31,373.394C1976.43,377.519 1991.24,378.938 2007.09,376.302C2007.44,373.645 2007.79,370.982 2008.14,368.313C2009.28,359.512 2010.42,350.649 2011.53,341.725C2011.72,340.208 2001.74,343.289 1999.87,340.041C1998,336.793 1998.12,323.764 2000.28,322.235C2002.45,320.705 2012.76,331.81 2012.88,330.866C2014.5,317.659 2016.08,304.319 2017.63,290.842C2017.96,287.983 2018.29,285.118 2018.62,282.247\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1923.09,243.356C1910.21,248.086 1898.01,253.869 1888.73,258.609C1888.33,258.811 1895.54,268.67 1894.83,270.804C1893.78,273.978 1886.57,277.783 1883.89,276.615C1881.22,275.447 1879.98,263.107 1878.79,263.796C1871.76,267.889 1865.58,271.985 1859.8,276.081C1863.22,285.951 1865,295.812 1864.99,305.03C1864.99,306.297 1853.16,299.307 1850.55,300.668C1847.95,302.03 1847.09,310.773 1849.36,313.2C1851.63,315.628 1864.37,314.206 1864.2,315.234C1862.94,323.065 1859.99,330.389 1855.6,336.292C1861.27,342.421 1866.93,347.298 1872.52,351.207C1873.27,351.733 1860.07,360.388 1860.43,363.459C1860.79,366.531 1870.71,370.531 1874.66,369.634C1878.61,368.737 1882.29,357.173 1884.13,358.078C1895.12,363.487 1905.74,365.801 1915.59,367.316C1917.21,362.944 1918.63,358.211 1919.88,353.105C1921.65,345.826 1923.02,337.789 1924,328.973C1924.12,327.87 1933.97,335.656 1936.05,333.667C1938.12,331.678 1938.32,319.461 1936.46,317.036C1934.6,314.613 1924.85,319.76 1924.9,319.122C1925.55,310.041 1925.82,300.219 1925.7,289.633C1925.54,275.573 1924.68,260.166 1923.09,243.356\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1751.42,305.665C1762.48,300.547 1773.32,295.01 1783.8,288.813C1784.73,288.264 1773.47,282.972 1773.63,280.106C1773.79,277.241 1781.53,271.111 1784.75,271.622C1787.98,272.132 1791.61,284.026 1792.94,283.169C1810.36,271.944 1826.6,258.614 1840.91,242.01C1849.36,252.677 1855.74,264.386 1859.8,276.081C1863.22,285.951 1865,295.812 1864.99,305.03C1864.99,306.297 1853.16,299.307 1850.55,300.668C1847.95,302.03 1847.09,310.773 1849.36,313.2C1851.63,315.628 1864.37,314.206 1864.2,315.234C1862.94,323.065 1859.99,330.389 1855.6,336.292C1847.9,346.481 1836.5,351.452 1823.58,351.521C1822.82,351.525 1827.89,340.143 1826.34,337.939C1824.8,335.735 1816.29,336.157 1814.3,338.299C1812.31,340.44 1815.77,351.008 1814.41,350.789C1806.73,349.551 1798.7,346.75 1790.76,342.445C1784.5,339.057 1778.29,334.739 1772.31,329.517C1771.55,328.857 1782.85,326.718 1782.58,323.909C1782.31,321.099 1773.52,312.81 1770.67,312.66C1767.82,312.51 1766.17,323.755 1765.44,323.01C1760.15,317.577 1755.47,311.738 1751.42,305.665\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1685.04,232.147C1671.62,243.03 1661.36,253.363 1652.79,265.247C1652.17,266.113 1660.61,268.301 1660.81,271.332C1661.01,274.362 1656.31,282.98 1654,283.431C1651.7,283.882 1647.53,273.129 1646.99,274.039C1640.34,285.076 1635.39,297.189 1631.86,311.196C1634.41,311.781 1636.97,312.333 1639.56,312.849C1645.03,313.939 1650.58,314.862 1656.26,315.575C1661.38,316.217 1666.58,316.69 1671.9,316.96C1672.45,316.989 1667.03,324.384 1668.4,326.324C1669.76,328.264 1678.41,330.123 1680.1,328.601C1681.77,327.078 1677.92,317.178 1678.48,317.188C1686.35,317.334 1694.46,317.025 1702.88,316.165C1707.02,315.744 1711.22,315.19 1715.5,314.491C1716.28,314.364 1717.13,314.218 1717.94,314.075C1718.66,313.95 1716.02,324.259 1717.98,325.617C1719.93,326.974 1728.41,324.389 1729.68,322.219C1730.96,320.049 1724.65,312.803 1725.63,312.597C1733.91,310.852 1742.49,308.567 1751.42,305.665C1743.58,293.924 1738.13,281.31 1735.34,269.065C1724.91,270.193 1717.01,267.275 1709.89,261.511C1709.12,260.88 1715.95,255.556 1715.39,252.761C1714.84,249.966 1708.81,244.589 1706.57,244.742C1704.34,244.896 1703.66,254.192 1701.95,253.679C1698.44,252.624 1690.94,242.744 1685.04,232.147\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1677.93,216.284C1673.54,217.895 1668.33,218.899 1662.42,218.437C1661.74,218.383 1667.07,206.151 1665.47,203.422C1663.88,200.694 1654.79,199.836 1652.85,202.066C1650.91,204.296 1655.03,217.152 1653.86,216.8C1643.18,213.564 1630.7,205.383 1616.81,188.529C1612.24,197.786 1607.59,207.145 1602.88,216.6C1597.35,227.705 1591.72,238.94 1586,250.289C1585.46,251.359 1597.05,248.21 1597.88,250.949C1598.72,253.688 1593.7,265.43 1591.02,266.72C1588.33,268.009 1581.94,258.318 1581.76,258.682C1581.02,260.159 1580.27,261.637 1579.52,263.118C1574.9,272.245 1570.22,281.441 1565.49,290.699C1570.97,292.519 1576.43,294.382 1581.89,296.236C1582.7,296.513 1576.81,305.447 1578.15,308.147C1579.49,310.847 1588.14,314.026 1589.93,312.436C1591.72,310.845 1588.35,298.419 1588.91,298.604C1596.61,301.186 1604.34,303.702 1612.19,306.009C1618.66,307.908 1625.2,309.664 1631.86,311.196C1635.39,297.189 1640.34,285.076 1646.99,274.039C1647.53,273.129 1651.7,283.882 1654,283.431C1656.31,282.98 1661.01,274.362 1660.81,271.332C1660.61,268.301 1652.17,266.113 1652.79,265.247C1661.36,253.363 1671.62,243.03 1685.04,232.147C1681.99,226.679 1679.37,221.021 1677.93,216.284\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1565.49,415.525C1575.75,404.792 1584.32,392.496 1591.27,378.732C1591.91,377.455 1581.04,375.977 1580.29,372.975C1579.55,369.974 1584.26,361.287 1586.81,360.723C1589.35,360.16 1595.16,370.517 1595.56,369.592C1603.73,350.798 1609.2,329.533 1612.19,306.009C1604.34,303.702 1596.61,301.186 1588.91,298.604C1588.35,298.419 1591.72,310.845 1589.93,312.436C1588.14,314.026 1579.49,310.847 1578.15,308.147C1576.81,305.447 1582.7,296.513 1581.89,296.236C1576.43,294.382 1570.97,292.519 1565.49,290.699C1560.51,300.414 1555.48,310.196 1550.39,320.036C1549.92,320.94 1544.81,312.044 1542.17,312.798C1539.55,313.553 1533.99,321.927 1534.63,324.56C1535.25,327.193 1546.57,327.416 1545.96,328.595C1543.1,334.103 1540.22,339.628 1537.32,345.168C1532.59,354.225 1527.8,363.325 1522.97,372.46C1529.22,379.202 1535.43,385.742 1541.62,392.065C1542.46,392.934 1544.76,380.457 1547.43,380.261C1550.1,380.065 1557.37,387.66 1557.64,390.887C1557.92,394.114 1548.27,398.795 1549.1,399.625C1554.59,405.106 1560.05,410.409 1565.49,415.525\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1612.19,306.009C1609.2,329.533 1603.73,350.798 1595.56,369.592C1595.16,370.517 1589.35,360.16 1586.81,360.723C1584.26,361.287 1579.55,369.974 1580.29,372.975C1581.04,375.977 1591.91,377.455 1591.27,378.732C1584.32,392.496 1575.75,404.792 1565.49,415.525C1574.69,424.199 1583.82,432.334 1592.87,439.88C1599.36,445.298 1605.8,450.413 1612.19,455.206C1616.12,448.529 1619.77,441.852 1623.15,435.175C1623.66,434.14 1628.48,444.097 1630.87,443.637C1633.26,443.176 1638.15,435.054 1637.47,432.411C1636.79,429.768 1626.38,428.601 1626.78,427.78C1631.66,417.528 1635.91,407.279 1639.56,397.03C1643.49,385.967 1646.73,374.903 1649.28,363.841C1649.52,362.817 1656.04,369.292 1657.96,367.867C1659.88,366.44 1661.92,357.381 1660.79,355.285C1659.64,353.188 1650.98,356.046 1651.12,355.289C1653.77,342.049 1655.47,328.812 1656.26,315.575C1650.58,314.862 1645.03,313.939 1639.56,312.849C1636.97,312.333 1634.41,311.781 1631.86,311.196C1625.2,309.664 1618.66,307.908 1612.19,306.009\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1639.56,397.03C1649.97,402.451 1660.39,407.873 1670.8,413.294C1671.62,413.724 1669.26,399.819 1671.16,398.445C1673.07,397.071 1681.12,401.967 1682.22,405.051C1683.33,408.136 1677.04,416.54 1677.82,416.95C1692.51,424.594 1707.2,432.236 1721.87,439.88C1726.74,429.364 1732.51,419.121 1738.72,409.339C1727.65,398.578 1719.2,387.629 1713.18,376.506C1712.99,376.139 1722.36,375.856 1722.57,373.03C1722.79,370.205 1716.74,360.408 1714.48,359.553C1712.22,358.698 1709.4,368.787 1709.02,367.898C1701.82,351.023 1700,333.762 1702.88,316.165C1694.46,317.025 1686.35,317.334 1678.48,317.188C1677.92,317.178 1681.77,327.078 1680.1,328.601C1678.41,330.123 1669.76,328.264 1668.4,326.324C1667.03,324.384 1672.45,316.989 1671.9,316.96C1666.58,316.69 1661.38,316.217 1656.26,315.575C1655.47,328.812 1653.77,342.049 1651.12,355.289C1650.98,356.046 1659.64,353.188 1660.79,355.285C1661.92,357.381 1659.88,366.44 1657.96,367.867C1656.04,369.292 1649.52,362.817 1649.28,363.841C1646.73,374.903 1643.49,385.967 1639.56,397.03\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1702.88,316.165C1700,333.762 1701.82,351.023 1709.02,367.898C1709.4,368.787 1712.22,358.698 1714.48,359.553C1716.74,360.408 1722.79,370.205 1722.57,373.03C1722.36,375.856 1712.99,376.139 1713.18,376.506C1719.2,387.629 1727.65,398.578 1738.72,409.339C1741.24,405.384 1743.82,401.504 1746.45,397.712C1747.54,396.136 1753.59,407.895 1756.39,407.007C1759.18,406.119 1763.72,395.564 1763.23,392.385C1762.74,389.207 1752.91,388.661 1753.44,387.935C1757.41,382.547 1761.42,377.375 1765.34,372.462C1774.66,360.831 1783.58,350.645 1790.76,342.445C1784.5,339.057 1778.29,334.739 1772.31,329.517C1771.55,328.857 1782.85,326.718 1782.58,323.909C1782.31,321.099 1773.52,312.81 1770.67,312.66C1767.82,312.51 1766.17,323.755 1765.44,323.01C1760.15,317.577 1755.47,311.738 1751.42,305.665C1742.49,308.567 1733.91,310.852 1725.63,312.597C1724.65,312.803 1730.96,320.049 1729.68,322.219C1728.41,324.389 1719.93,326.974 1717.98,325.617C1716.02,324.259 1718.66,313.95 1717.94,314.075C1717.13,314.218 1716.28,314.364 1715.5,314.491C1711.22,315.19 1707.02,315.744 1702.88,316.165\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1855.6,336.292C1861.27,342.421 1866.93,347.298 1872.52,351.207C1873.27,351.733 1860.07,360.388 1860.43,363.459C1860.79,366.531 1870.71,370.531 1874.66,369.634C1878.61,368.737 1882.29,357.173 1884.13,358.078C1895.12,363.487 1905.74,365.801 1915.59,367.316C1910.53,380.953 1903.64,391.062 1895.07,397.916C1885.39,405.649 1873.57,409.236 1859.8,409.066C1847.24,408.911 1833.04,405.63 1817.39,399.516C1815.91,398.94 1824.58,388.983 1823.33,386.258C1822.09,383.534 1812.94,381.822 1809.93,383.172C1806.92,384.521 1806.62,394.973 1805.27,394.354C1792.77,388.616 1779.43,381.276 1765.34,372.462C1774.66,360.831 1783.58,350.645 1790.76,342.445C1798.7,346.75 1806.73,349.551 1814.41,350.789C1815.77,351.008 1812.31,340.44 1814.3,338.299C1816.29,336.157 1824.8,335.735 1826.34,337.939C1827.89,340.143 1822.82,351.525 1823.58,351.521C1836.5,351.452 1847.9,346.481 1855.6,336.292\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2007.09,376.302C1991.24,378.938 1976.43,377.519 1962.31,373.394C1961.48,373.152 1967.27,363.605 1966.08,360.904C1964.89,358.203 1957.38,355.648 1955.14,357.185C1952.9,358.722 1954.4,370.797 1952.66,370.129C1941.38,365.805 1930.52,359.887 1919.88,353.105C1918.63,358.211 1917.21,362.944 1915.59,367.316C1910.53,380.953 1903.64,391.062 1895.07,397.916C1898.85,411.837 1909.18,423.603 1924.75,433.44C1925.76,434.078 1923.82,421.853 1926.43,420.963C1929.05,420.071 1939.03,425.065 1940.4,428.092C1941.79,431.118 1933.46,438.475 1934.72,439.121C1951.02,447.523 1971.58,454.307 1995.35,459.655C1996.04,455.064 1996.72,450.455 1997.4,445.828C1998.54,438.1 1999.66,430.322 2000.77,422.494C2001.05,420.502 1986.44,423.188 1984.6,420.505C1982.75,417.823 1986.67,408.439 1989.7,406.399C1992.73,404.359 2002.57,409.636 2002.77,408.264C2004.23,397.701 2005.67,387.048 2007.09,376.302\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1995.35,459.655C1971.58,454.307 1951.02,447.523 1934.72,439.121C1933.46,438.475 1941.79,431.118 1940.4,428.092C1939.03,425.065 1929.05,420.071 1926.43,420.963C1923.82,421.853 1925.76,434.078 1924.75,433.44C1909.18,423.603 1898.85,411.837 1895.07,397.916C1885.39,405.649 1873.57,409.236 1859.8,409.066C1861.2,418.361 1862.21,427.279 1862.6,435.62C1862.65,436.703 1853.32,429.405 1851.04,431.025C1848.74,432.647 1846.93,442.523 1848.87,445.346C1850.81,448.167 1862.76,446.039 1862.69,447.957C1862.41,455.147 1861.51,461.744 1859.8,467.586C1866.27,469.214 1872.97,470.751 1879.91,472.19C1881.21,472.461 1872.91,483.451 1874.39,486.071C1875.87,488.691 1886.14,489.88 1888.81,487.91C1891.48,485.941 1889.12,474.018 1890.39,474.257C1898.11,475.702 1906.12,477.033 1914.41,478.246C1917.94,478.761 1921.51,479.254 1925.14,479.726C1925.95,479.831 1919.75,487.781 1921.7,490.372C1923.65,492.963 1934.81,496.871 1936.84,495.276C1938.86,493.681 1933.03,480.707 1933.85,480.804C1951.73,482.905 1970.87,484.496 1991.38,485.529C1992.72,476.968 1994.05,468.344 1995.35,459.655\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1859.8,409.066C1861.2,418.361 1862.21,427.279 1862.6,435.62C1862.65,436.703 1853.32,429.405 1851.04,431.025C1848.74,432.647 1846.93,442.523 1848.87,445.346C1850.81,448.167 1862.76,446.039 1862.69,447.957C1862.41,455.147 1861.51,461.744 1859.8,467.586C1857.43,466.991 1855.1,466.385 1852.8,465.765C1840.53,462.469 1829.1,458.83 1818.45,454.877C1817.29,454.447 1820.83,467.501 1818.83,468.828C1816.82,470.155 1808.01,465.752 1806.43,462.839C1804.86,459.927 1810.46,451.797 1809.36,451.352C1802.46,448.557 1795.9,445.623 1789.65,442.557C1769.63,432.722 1752.9,421.548 1738.72,409.339C1741.24,405.384 1743.82,401.504 1746.45,397.712C1747.54,396.136 1753.59,407.895 1756.39,407.007C1759.18,406.119 1763.72,395.564 1763.23,392.385C1762.74,389.207 1752.91,388.661 1753.44,387.935C1757.41,382.547 1761.42,377.375 1765.34,372.462C1779.43,381.276 1792.77,388.616 1805.27,394.354C1806.62,394.973 1806.92,384.521 1809.93,383.172C1812.94,381.822 1822.09,383.534 1823.33,386.258C1824.58,388.983 1815.91,398.94 1817.39,399.516C1833.04,405.63 1847.24,408.911 1859.8,409.066\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1789.65,442.557C1782.66,455.087 1777.47,468.879 1773.98,483.878C1773.77,484.782 1784.02,480.805 1785.18,483.621C1786.35,486.437 1783.26,498.631 1780.98,500.774C1778.7,502.917 1771.75,494.899 1771.5,496.48C1769.65,507.807 1768.69,519.756 1768.58,532.307C1758.14,529.738 1746.9,528.132 1734.89,527.464C1734.28,527.43 1740.31,541.288 1739.08,543.726C1737.84,546.164 1729.34,544.847 1727.49,542.09C1725.64,539.334 1728.97,527.21 1727.99,527.186C1721.75,527.026 1715.31,527.108 1708.67,527.427C1708.58,521.138 1707.27,503.382 1707.23,501.245C1706.87,494.164 1707.09,487.902 1707.8,482.144C1707.93,481.038 1714.92,488.936 1716.79,487.098C1718.64,485.26 1720.12,473.799 1718.96,471.116C1717.8,468.433 1709.61,471.93 1709.84,471.001C1712.49,460.297 1716.81,450.824 1721.87,439.88C1726.74,429.364 1732.51,419.121 1738.72,409.339C1752.9,421.548 1769.63,432.722 1789.65,442.557\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1721.87,439.88C1707.2,432.236 1692.51,424.594 1677.82,416.95C1677.04,416.54 1683.33,408.136 1682.22,405.051C1681.12,401.967 1673.07,397.071 1671.16,398.445C1669.26,399.819 1671.62,413.724 1670.8,413.294C1660.39,407.873 1649.97,402.451 1639.56,397.03C1635.91,407.279 1631.66,417.528 1626.78,427.78C1626.38,428.601 1636.79,429.768 1637.47,432.411C1638.15,435.054 1633.26,443.176 1630.87,443.637C1628.48,444.097 1623.66,434.14 1623.15,435.175C1619.77,441.852 1616.12,448.529 1612.19,455.206C1619.28,460.514 1626.3,465.428 1633.26,469.921C1637.43,472.619 1641.59,475.166 1645.72,477.556C1646.42,477.964 1638.12,487.103 1638.69,490.006C1639.26,492.908 1646.95,496.47 1649.15,494.972C1651.34,493.474 1651.11,480.597 1651.88,481.015C1660.31,485.602 1668.65,489.516 1676.87,492.712C1687.16,496.715 1697.29,499.589 1707.23,501.245C1706.87,494.164 1707.09,487.902 1707.8,482.144C1707.93,481.038 1714.92,488.936 1716.79,487.098C1718.64,485.26 1720.12,473.799 1718.96,471.116C1717.8,468.433 1709.61,471.93 1709.84,471.001C1712.49,460.297 1716.81,450.824 1721.87,439.88\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1565.49,493.751C1568,486.183 1570.82,478.971 1573.95,472.119C1574.55,470.793 1564.84,469.882 1564.24,466.73C1563.64,463.577 1568.05,453.751 1570.37,453.201C1572.7,452.649 1577.77,464.197 1578.17,463.427C1582.56,454.972 1587.45,447.12 1592.87,439.88C1583.82,432.334 1574.69,424.199 1565.49,415.525C1560.05,410.409 1554.59,405.106 1549.1,399.625C1548.27,398.795 1557.92,394.114 1557.64,390.887C1557.37,387.66 1550.1,380.065 1547.43,380.261C1544.76,380.457 1542.46,392.934 1541.62,392.065C1535.43,385.742 1529.22,379.202 1522.97,372.46C1517.07,383.625 1511.09,394.841 1505.04,406.095C1504.82,406.52 1500.68,396.536 1498.23,397.076C1495.8,397.617 1490,406.477 1490.4,409.338C1490.8,412.2 1501.06,413.503 1500.66,414.244C1499.21,416.939 1497.76,419.637 1496.29,422.336C1494.02,426.538 1491.74,430.745 1489.44,434.955C1499.89,448.247 1511.55,460.121 1524.7,470.252C1525.35,470.751 1525.81,459.189 1528.43,458.578C1531.05,457.966 1539.7,463.653 1540.43,466.586C1541.17,469.519 1531.78,475.445 1532.85,476.177C1542.87,483.034 1553.72,488.934 1565.49,493.751\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1552.84,552.013C1555.46,530.717 1559.66,511.28 1565.49,493.751C1553.72,488.934 1542.87,483.034 1532.85,476.177C1531.78,475.445 1541.17,469.519 1540.43,466.586C1539.7,463.653 1531.05,457.966 1528.43,458.578C1525.81,459.189 1525.35,470.751 1524.7,470.252C1511.55,460.121 1499.89,448.247 1489.44,434.955C1486.24,440.836 1483.02,446.724 1479.79,452.617C1474.76,461.769 1469.69,470.933 1464.58,480.104C1463.96,481.22 1473.6,480.695 1474.29,483.092C1474.97,485.489 1471.06,493.655 1468.7,494.488C1466.34,495.322 1460.63,487.195 1460.12,488.093C1456.54,494.51 1452.92,500.931 1449.29,507.35C1459.22,510.63 1468.78,514.01 1477.98,517.486C1478.98,517.866 1473.12,523.985 1473.89,526.59C1474.67,529.195 1480.59,534.114 1482.62,533.118C1484.65,532.123 1484.94,520.163 1486.09,520.614C1491.02,522.554 1495.85,524.523 1500.58,526.52C1508.34,529.799 1515.81,533.153 1523.01,536.58C1524.3,537.192 1515.61,543.852 1516.3,546.205C1516.98,548.559 1524.56,551.61 1527.11,550.699C1529.66,549.789 1530.9,540.416 1531.56,540.741C1538.94,544.42 1546.04,548.179 1552.84,552.013\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1565.49,493.751C1559.66,511.28 1555.46,530.717 1552.84,552.013C1557.29,554.517 1561.62,557.053 1565.82,559.621C1566.89,560.272 1568.57,543.23 1570.7,541.891C1572.84,540.552 1578.24,547.868 1578.64,551.585C1579.05,555.304 1572.34,563.678 1573.16,564.198C1580.05,568.601 1586.61,573.092 1592.87,577.665C1596.11,563.387 1599.81,549.649 1604.03,536.516C1604.43,535.271 1609.87,544.521 1611.93,543.312C1614,542.105 1617.11,532.228 1616.41,529.267C1615.7,526.306 1607.14,527.198 1607.72,525.544C1614.84,505.366 1623.28,486.741 1633.26,469.921C1626.3,465.428 1619.28,460.514 1612.19,455.206C1605.8,450.413 1599.36,445.298 1592.87,439.88C1587.45,447.12 1582.56,454.972 1578.17,463.427C1577.77,464.197 1572.7,452.649 1570.37,453.201C1568.05,453.751 1563.64,463.577 1564.24,466.73C1564.84,469.882 1574.55,470.793 1573.95,472.119C1570.82,478.971 1568,486.183 1565.49,493.751\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1633.26,469.921C1623.28,486.741 1614.84,505.366 1607.72,525.544C1607.14,527.198 1615.7,526.306 1616.41,529.267C1617.11,532.228 1614,542.105 1611.93,543.312C1609.87,544.521 1604.43,535.271 1604.03,536.516C1599.81,549.649 1596.11,563.387 1592.87,577.665C1596.63,580.415 1600.28,583.196 1603.82,586.004C1614.58,594.534 1624.36,603.328 1633.26,612.358C1636.86,595.157 1641.02,578.596 1645.89,562.884C1646.35,561.404 1651.97,569.346 1654.06,568.046C1656.16,566.745 1659.19,557.8 1658.44,555.079C1657.68,552.358 1649.1,552.96 1649.53,551.72C1656.93,530.051 1665.88,510.184 1676.87,492.712C1668.65,489.516 1660.31,485.602 1651.88,481.015C1651.11,480.597 1651.34,493.474 1649.15,494.972C1646.95,496.47 1639.26,492.908 1638.69,490.006C1638.12,487.103 1646.42,477.964 1645.72,477.556C1641.59,475.166 1637.43,472.619 1633.26,469.921\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1676.87,492.712C1665.88,510.184 1656.93,530.051 1649.53,551.72C1649.1,552.96 1657.68,552.358 1658.44,555.079C1659.19,557.8 1656.16,566.745 1654.06,568.046C1651.97,569.346 1646.35,561.404 1645.89,562.884C1641.02,578.596 1636.86,595.157 1633.26,612.358C1636.88,616.036 1640.36,619.753 1643.7,623.508C1644.29,624.168 1647.27,610.987 1649.65,610.674C1652.03,610.36 1658.09,618.494 1657.96,621.626C1657.83,624.758 1648.13,628.599 1648.86,629.465C1652.33,633.578 1655.64,637.732 1658.81,641.926C1665.58,636.226 1671.83,630.223 1677.45,623.692C1677.78,623.31 1669.53,618.055 1669.46,615.238C1669.4,612.42 1674.74,606.641 1677.08,606.787C1679.41,606.934 1682.94,616.877 1683.51,616.115C1687.75,610.383 1691.53,604.259 1694.79,597.639C1697.49,592.183 1699.82,586.391 1701.77,580.204C1703.12,575.924 1704.29,571.456 1705.26,566.781C1705.53,565.503 1694.6,567.716 1692.89,564.764C1691.19,561.812 1692.63,550.885 1695.04,549.068C1697.45,547.253 1707.24,554.864 1707.36,553.866C1708.36,545.67 1708.8,536.883 1708.67,527.427C1708.58,521.138 1707.27,503.382 1707.23,501.245C1697.29,499.589 1687.16,496.715 1676.87,492.712\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1897.64,527.659C1909.08,536.844 1925.72,547.114 1955.16,563.031C1955.83,563.389 1955.01,552.775 1956.87,551.409C1958.73,550.042 1965.54,552.308 1966.34,554.83C1967.14,557.352 1961.21,566.284 1961.7,566.542C1966.34,569.022 1971.27,571.633 1976.52,574.391C1979.27,559.036 1981.95,543.46 1984.59,527.659C1985.54,521.947 1986.48,516.205 1987.42,510.434C1987.59,509.4 1997.39,517.914 1999.74,516.456C2002.08,514.997 2003.3,504.146 2001.48,501.682C1999.66,499.217 1988.66,502.727 1988.83,501.671C1989.69,496.315 1990.54,490.934 1991.38,485.529C1970.87,484.496 1951.73,482.905 1933.85,480.804C1933.03,480.707 1938.86,493.681 1936.84,495.276C1934.81,496.871 1923.65,492.963 1921.7,490.372C1919.75,487.781 1925.95,479.831 1925.14,479.726C1921.51,479.254 1917.94,478.761 1914.41,478.246C1909.66,497.07 1904.03,513.426 1897.64,527.659\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1780.08,622.333C1763.82,622.891 1747.3,622.254 1732.15,618.405C1730.92,618.09 1736.79,605.863 1735.56,602.402C1734.31,598.941 1726.64,595.381 1724.71,597.64C1722.78,599.899 1724.81,616.245 1723.97,615.952C1713.07,612.137 1703.1,606.314 1694.79,597.639C1697.49,592.183 1699.82,586.391 1701.77,580.204C1703.12,575.924 1704.29,571.456 1705.26,566.781C1705.53,565.503 1694.6,567.716 1692.89,564.764C1691.19,561.812 1692.63,550.885 1695.04,549.068C1697.45,547.253 1707.24,554.864 1707.36,553.866C1708.36,545.67 1708.8,536.883 1708.67,527.427C1715.31,527.108 1721.75,527.026 1727.99,527.186C1728.97,527.21 1725.64,539.334 1727.49,542.09C1729.34,544.847 1737.84,546.164 1739.08,543.726C1740.31,541.288 1734.28,527.43 1734.89,527.464C1746.9,528.132 1758.14,529.738 1768.58,532.307C1777.3,534.454 1785.47,537.274 1793.06,540.78C1789.67,552.851 1786.86,565.376 1784.71,578.381C1784.54,579.369 1795.62,575.375 1797.47,578.261C1799.32,581.147 1798.22,594.021 1795.84,595.696C1793.46,597.371 1783.35,587.238 1783.2,588.31C1781.68,599.31 1780.63,610.645 1780.08,622.333\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1852.8,465.765C1842.92,482.407 1836.19,498.437 1831.49,514.07C1831.08,515.454 1843.58,513.981 1844.67,517.275C1845.77,520.569 1840.75,532.629 1838.08,533.833C1835.41,535.038 1828.9,523.427 1828.64,524.503C1825.63,536.634 1823.73,548.551 1822.41,560.355C1813.84,552.364 1804.05,545.853 1793.06,540.78C1785.47,537.274 1777.3,534.454 1768.58,532.307C1768.69,519.756 1769.65,507.807 1771.5,496.48C1771.75,494.899 1778.7,502.917 1780.98,500.774C1783.26,498.631 1786.35,486.437 1785.18,483.621C1784.02,480.805 1773.77,484.782 1773.98,483.878C1777.47,468.879 1782.66,455.087 1789.65,442.557C1795.9,445.623 1802.46,448.557 1809.36,451.352C1810.46,451.797 1804.86,459.927 1806.43,462.839C1808.01,465.752 1816.82,470.155 1818.83,468.828C1820.83,467.501 1817.29,454.447 1818.45,454.877C1829.1,458.83 1840.53,462.469 1852.8,465.765\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1822.41,560.355C1823.73,548.551 1825.63,536.634 1828.64,524.503C1828.9,523.427 1835.41,535.038 1838.08,533.833C1840.75,532.629 1845.77,520.569 1844.67,517.275C1843.58,513.981 1831.08,515.454 1831.49,514.07C1836.19,498.437 1842.92,482.407 1852.8,465.765C1855.1,466.385 1857.43,466.991 1859.8,467.586C1866.27,469.214 1872.97,470.751 1879.91,472.19C1881.21,472.461 1872.91,483.451 1874.39,486.071C1875.87,488.691 1886.14,489.88 1888.81,487.91C1891.48,485.941 1889.12,474.018 1890.39,474.257C1898.11,475.702 1906.12,477.033 1914.41,478.246C1909.66,497.07 1904.03,513.426 1897.64,527.659C1894.47,534.739 1891.1,541.293 1887.57,547.364C1887.29,547.847 1896.2,546.663 1897.08,549.409C1897.97,552.156 1895.14,563.103 1892.9,563.843C1890.65,564.583 1883.94,553.34 1883.62,553.851C1878.73,561.498 1873.55,568.311 1868.1,574.391C1861.42,581.863 1854.34,588.229 1846.93,593.677C1844.73,589.265 1842.35,585.082 1839.77,581.123C1838.99,579.93 1832.78,593.024 1829.5,593.224C1826.22,593.425 1819.49,585.911 1820.07,582.328C1820.65,578.744 1833.76,572.726 1832.96,571.721C1829.68,567.646 1826.16,563.858 1822.41,560.355\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1965.18,634.914C1965.94,630.991 1966.71,627.053 1967.47,623.101C1968.24,619.105 1969.01,615.093 1969.77,611.066C1970,609.872 1957.72,612.518 1956.01,610.079C1954.3,607.64 1956.96,597.649 1959.52,596.433C1962.06,595.217 1971.19,603.484 1971.33,602.784C1973.08,593.405 1974.81,583.94 1976.52,574.391C1971.27,571.633 1966.34,569.022 1961.7,566.542C1961.21,566.284 1967.14,557.352 1966.34,554.83C1965.54,552.308 1958.73,550.042 1956.87,551.409C1955.01,552.775 1955.83,563.389 1955.16,563.031C1925.72,547.114 1909.08,536.844 1897.64,527.659C1894.47,534.739 1891.1,541.293 1887.57,547.364C1887.29,547.847 1896.2,546.663 1897.08,549.409C1897.97,552.156 1895.14,563.103 1892.9,563.843C1890.65,564.583 1883.94,553.34 1883.62,553.851C1878.73,561.498 1873.55,568.311 1868.1,574.391C1877.45,582.34 1887.18,589.843 1897.28,596.898C1898.04,597.424 1888.11,605.176 1888.79,608.309C1889.47,611.441 1898.72,616.75 1901.38,615.692C1904.03,614.635 1903.87,601.397 1904.72,601.964C1923.57,614.474 1943.71,625.469 1965.18,634.914\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1863.79,654.613C1845.83,656.258 1830.55,656.862 1817.3,656.682C1816.44,656.67 1823.49,667.164 1821.83,669.541C1820.17,671.919 1809.71,673.136 1807.33,670.945C1804.96,668.755 1808.67,656.446 1807.58,656.397C1797.11,655.915 1787.99,654.908 1779.82,653.532C1779.99,659.417 1780.29,665.385 1780.71,671.438C1781.53,683.053 1782.82,694.981 1784.61,707.234C1784.76,708.239 1795.64,699.246 1798.26,700.722C1800.87,702.198 1802.32,713.239 1800.32,716.089C1798.33,718.94 1786.06,716.448 1786.29,717.828C1788.08,728.472 1790.25,739.357 1792.82,750.491C1806.09,746.707 1819.26,743.54 1832.22,741.131C1833.28,740.933 1826.35,756.847 1828.25,759.27C1830.14,761.692 1841.41,758.953 1843.61,755.665C1845.79,752.378 1840.13,739.748 1841.4,739.545C1846.74,738.697 1852.04,737.985 1857.29,737.419C1859.26,737.207 1861.25,737.012 1863.25,736.833C1864.15,728.091 1864.81,719.64 1865.22,711.475C1865.26,710.663 1855.28,715.663 1853.39,713.457C1851.49,711.251 1851.8,699.84 1853.83,698.239C1855.86,696.637 1865.51,704.774 1865.54,703.848C1865.88,693.674 1865.83,683.965 1865.4,674.714C1865.08,667.755 1864.55,661.056 1863.79,654.613\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1780.71,671.438C1768.18,669.403 1756.26,670.224 1744.83,673.314C1743.84,673.58 1751.12,682.668 1750.08,685.513C1749.04,688.359 1740.75,692.001 1738.56,690.388C1736.36,688.775 1738.06,675.415 1736.9,675.838C1721.93,681.329 1707.77,690.613 1694.12,702.294C1692.01,697.551 1689.78,692.839 1687.43,688.162C1684.16,681.658 1680.65,675.219 1676.87,668.854C1676.48,668.203 1672.57,678.271 1670.36,677.714C1668.15,677.158 1663.38,668.382 1663.61,665.513C1663.84,662.645 1672.07,661.058 1671.72,660.504C1667.71,654.232 1663.41,648.037 1658.81,641.926C1665.58,636.226 1671.83,630.223 1677.45,623.692C1677.78,623.31 1669.53,618.055 1669.46,615.238C1669.4,612.42 1674.74,606.641 1677.08,606.787C1679.41,606.934 1682.94,616.877 1683.51,616.115C1687.75,610.383 1691.53,604.259 1694.79,597.639C1703.1,606.314 1713.07,612.137 1723.97,615.952C1724.81,616.245 1722.78,599.899 1724.71,597.64C1726.64,595.381 1734.31,598.941 1735.56,602.402C1736.79,605.863 1730.92,618.09 1732.15,618.405C1747.3,622.254 1763.82,622.891 1780.08,622.333C1779.97,624.583 1779.89,626.845 1779.82,629.122C1779.58,637.096 1779.57,645.231 1779.82,653.532C1779.99,659.417 1780.29,665.385 1780.71,671.438\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1780.71,671.438C1768.18,669.403 1756.26,670.224 1744.83,673.314C1743.84,673.58 1751.12,682.668 1750.08,685.513C1749.04,688.359 1740.75,692.001 1738.56,690.388C1736.36,688.775 1738.06,675.415 1736.9,675.838C1721.93,681.329 1707.77,690.613 1694.12,702.294C1698.76,712.728 1702.86,723.311 1706.52,734.01C1707.05,735.584 1695.6,734.512 1694.12,737.491C1692.64,740.47 1695.03,750.692 1697.67,751.883C1700.32,753.075 1709.62,743.438 1710.01,744.644C1713.36,755.296 1716.32,766.052 1719.01,776.879C1724.94,774.385 1730.88,771.962 1736.83,769.622C1737.74,769.266 1731.42,757.059 1733.07,753.379C1734.73,749.698 1744.36,745.51 1746.76,747.541C1749.14,749.571 1745.9,766.126 1747.4,765.562C1755.54,762.51 1763.69,759.629 1771.83,756.948C1778.85,754.639 1785.84,752.481 1792.82,750.491C1790.25,739.357 1788.08,728.472 1786.29,717.828C1786.06,716.448 1798.33,718.94 1800.32,716.089C1802.32,713.239 1800.87,702.198 1798.26,700.722C1795.64,699.246 1784.76,708.239 1784.61,707.234C1782.82,694.981 1781.53,683.053 1780.71,671.438\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1779.82,653.532C1787.99,654.908 1797.11,655.915 1807.58,656.397C1808.67,656.446 1804.96,668.755 1807.33,670.945C1809.71,673.136 1820.17,671.919 1821.83,669.541C1823.49,667.164 1816.44,656.67 1817.3,656.682C1830.55,656.862 1845.83,656.258 1863.79,654.613C1862.92,647.107 1861.76,639.949 1860.31,633.133C1859.99,631.602 1850.88,641.029 1847.96,639.585C1845.04,638.14 1841.17,627.345 1842.79,624.468C1844.41,621.59 1857.99,623.401 1857.69,622.317C1854.84,611.881 1851.26,602.34 1846.93,593.677C1844.73,589.265 1842.35,585.082 1839.77,581.123C1838.99,579.93 1832.78,593.024 1829.5,593.224C1826.22,593.425 1819.49,585.911 1820.07,582.328C1820.65,578.744 1833.76,572.726 1832.96,571.721C1829.68,567.646 1826.16,563.858 1822.41,560.355C1813.84,552.364 1804.05,545.853 1793.06,540.78C1789.67,552.851 1786.86,565.376 1784.71,578.381C1784.54,579.369 1795.62,575.375 1797.47,578.261C1799.32,581.147 1798.22,594.021 1795.84,595.696C1793.46,597.371 1783.35,587.238 1783.2,588.31C1781.68,599.31 1780.63,610.645 1780.08,622.333C1779.97,624.583 1779.89,626.845 1779.82,629.122C1779.58,637.096 1779.57,645.231 1779.82,653.532\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1965.18,634.914C1943.71,625.469 1923.57,614.474 1904.72,601.964C1903.87,601.397 1904.03,614.635 1901.38,615.692C1898.72,616.75 1889.47,611.441 1888.79,608.309C1888.11,605.176 1898.04,597.424 1897.28,596.898C1887.18,589.843 1877.45,582.34 1868.1,574.391C1861.42,581.863 1854.34,588.229 1846.93,593.677C1851.26,602.34 1854.84,611.881 1857.69,622.317C1857.99,623.401 1844.41,621.59 1842.79,624.468C1841.17,627.345 1845.04,638.14 1847.96,639.585C1850.88,641.029 1859.99,631.602 1860.31,633.133C1861.76,639.949 1862.92,647.107 1863.79,654.613C1864.55,661.056 1865.08,667.755 1865.4,674.714C1874.81,672.3 1884.57,670.371 1895.15,669.597C1895.93,669.539 1892.3,681.852 1894.11,684.278C1895.94,686.704 1904.59,686.659 1906.07,684.153C1907.56,681.648 1902.1,669.261 1903.01,669.247C1918.51,669.005 1935.85,671.381 1956.39,678.252C1959.37,664.017 1962.3,649.572 1965.18,634.914\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1956.39,678.252C1935.85,671.381 1918.51,669.005 1903.01,669.247C1902.1,669.261 1907.56,681.648 1906.07,684.153C1904.59,686.659 1895.94,686.704 1894.11,684.278C1892.3,681.852 1895.93,669.539 1895.15,669.597C1884.57,670.371 1874.81,672.3 1865.4,674.714C1865.83,683.965 1865.88,693.674 1865.54,703.848C1865.51,704.774 1855.86,696.637 1853.83,698.239C1851.8,699.84 1851.49,711.251 1853.39,713.457C1855.28,715.663 1865.26,710.663 1865.22,711.475C1864.81,719.64 1864.15,728.091 1863.25,736.833C1878.76,735.454 1895.17,735.092 1912.18,735.57C1922.4,735.856 1932.84,736.445 1943.44,737.297C1944.86,731.09 1946.27,724.842 1947.68,718.55C1947.82,717.924 1954.33,724.445 1956.31,723.111C1958.28,721.776 1960.62,712.778 1959.51,710.543C1958.4,708.31 1949.34,711.054 1949.64,709.708C1951.92,699.338 1954.16,688.853 1956.39,678.252\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1500.58,526.52C1495.85,524.523 1491.02,522.554 1486.09,520.614C1484.94,520.163 1484.65,532.123 1482.62,533.118C1480.59,534.114 1474.67,529.195 1473.89,526.59C1473.12,523.985 1478.98,517.866 1477.98,517.486C1468.78,514.01 1459.22,510.63 1449.29,507.35C1446.27,512.697 1443.24,518.043 1440.19,523.388C1438.86,525.714 1437.53,528.04 1436.2,530.364C1430.79,539.798 1425.35,549.225 1419.87,558.639C1419.48,559.311 1411.41,545.972 1408.79,546.532C1406.15,547.093 1403.11,558.533 1404.11,562.001C1405.11,565.47 1415.53,566.067 1414.78,567.345C1412.11,571.914 1409.42,576.48 1406.73,581.041C1411.26,586.904 1415.67,592.907 1420.06,598.862C1420.75,599.79 1424.17,586.247 1427.06,586.091C1429.95,585.934 1437.41,594.235 1437.41,597.924C1437.4,601.614 1426.06,606.96 1427.01,608.229C1430.38,612.715 1433.76,617.115 1437.19,621.345C1452.84,608.951 1466.71,592.789 1478.74,572.713C1479.5,571.434 1483.41,582.576 1485.75,581.713C1488.1,580.85 1492.98,570.807 1492.81,567.534C1492.64,564.26 1484.15,563.181 1484.74,562.074C1490.5,551.238 1495.78,539.392 1500.58,526.52\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1500.58,526.52C1508.34,529.799 1515.81,533.153 1523.01,536.58C1524.3,537.192 1515.61,543.852 1516.3,546.205C1516.98,548.559 1524.56,551.61 1527.11,550.699C1529.66,549.789 1530.9,540.416 1531.56,540.741C1538.94,544.42 1546.04,548.179 1552.84,552.013C1546.51,559.039 1540.49,566.325 1534.74,573.844C1525.73,585.634 1517.41,597.998 1509.64,610.834C1508.86,612.137 1502.36,598.868 1499.56,599.857C1496.76,600.846 1492.51,612.666 1492.87,616.767C1493.22,620.869 1502.6,622.869 1501.7,624.464C1495.44,635.613 1489.56,647.076 1483.97,658.79C1476.94,656.458 1470.43,652.885 1464.28,648.391C1463.24,647.633 1471.46,644.851 1470.81,641.905C1470.15,638.959 1462.87,630.803 1460.36,630.719C1457.84,630.635 1456.54,642.115 1455.75,641.399C1449.27,635.517 1443.15,628.686 1437.19,621.345C1452.84,608.951 1466.71,592.789 1478.74,572.713C1479.5,571.434 1483.41,582.576 1485.75,581.713C1488.1,580.85 1492.98,570.807 1492.81,567.534C1492.64,564.26 1484.15,563.181 1484.74,562.074C1490.5,551.238 1495.78,539.392 1500.58,526.52\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1470.39,689.03C1473.23,692.428 1476.09,695.741 1478.95,698.872C1479.97,699.993 1482,689.03 1484.57,689.03C1487.14,689.03 1493.85,695.764 1494.35,698.872C1494.86,701.981 1486.46,706.614 1487.62,707.682C1502.1,721.112 1516.92,727.543 1532.64,714.823C1527.41,703.929 1525.05,692.047 1525.37,680.671C1525.4,679.766 1532.82,685.147 1534.88,683.024C1536.93,680.901 1539.1,670.098 1537.7,667.933C1536.3,665.769 1526.27,671.268 1526.49,670.036C1528.91,657.005 1535.09,645.374 1544.74,637.695C1550.06,633.455 1555.96,630.814 1562.05,629.671C1561.04,622.736 1559.73,616.439 1558.11,610.746C1557.74,609.448 1569.01,610.605 1570.36,607.798C1571.71,604.991 1568.79,595.07 1566.19,593.906C1563.59,592.742 1555.08,601.616 1554.76,600.815C1549.75,588.239 1542.95,579.428 1534.74,573.844C1525.73,585.634 1517.41,597.998 1509.64,610.834C1508.86,612.137 1502.36,598.868 1499.56,599.857C1496.76,600.846 1492.51,612.666 1492.87,616.767C1493.22,620.869 1502.6,622.869 1501.7,624.464C1495.44,635.613 1489.56,647.076 1483.97,658.79C1479.24,668.702 1474.73,678.795 1470.39,689.03\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1534.74,573.844C1542.95,579.428 1549.75,588.239 1554.76,600.815C1555.08,601.616 1563.59,592.742 1566.19,593.906C1568.79,595.07 1571.71,604.991 1570.36,607.798C1569.01,610.605 1557.74,609.448 1558.11,610.746C1559.73,616.439 1561.04,622.736 1562.05,629.671C1571.31,627.935 1581.03,629.649 1589.96,634.448C1590.94,634.974 1582.09,643.462 1583.03,647.15C1583.97,650.838 1592.66,657.459 1595.57,656.577C1598.47,655.694 1599.4,640.928 1600.44,641.854C1605.19,646.131 1609.51,651.426 1613.1,657.665C1615.4,661.643 1617.29,665.794 1618.77,670.036C1633.34,661.016 1646.88,651.964 1658.81,641.926C1655.64,637.732 1652.33,633.578 1648.86,629.465C1648.13,628.599 1657.83,624.758 1657.96,621.626C1658.09,618.494 1652.03,610.36 1649.65,610.674C1647.27,610.987 1644.29,624.168 1643.7,623.508C1640.36,619.753 1636.88,616.036 1633.26,612.358C1624.36,603.328 1614.58,594.534 1603.82,586.004C1600.28,583.196 1596.63,580.415 1592.87,577.665C1586.61,573.092 1580.05,568.601 1573.16,564.198C1572.34,563.678 1579.05,555.304 1578.64,551.585C1578.24,547.868 1572.84,540.552 1570.7,541.891C1568.57,543.23 1566.89,560.272 1565.82,559.621C1561.62,557.053 1557.29,554.517 1552.84,552.013C1546.51,559.039 1540.49,566.325 1534.74,573.844\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1562.05,629.671C1571.31,627.935 1581.03,629.649 1589.96,634.448C1590.94,634.974 1582.09,643.462 1583.03,647.15C1583.97,650.838 1592.66,657.459 1595.57,656.577C1598.47,655.694 1599.4,640.928 1600.44,641.854C1605.19,646.131 1609.51,651.426 1613.1,657.665C1615.4,661.643 1617.29,665.794 1618.77,670.036C1624.63,686.778 1624.25,704.954 1618.19,719.66C1617.62,721.048 1612.04,707.206 1609.42,707.206C1606.79,707.206 1601.83,715.992 1602.44,719.66C1603.06,723.328 1613.44,728.714 1613.1,729.213C1610.44,733.169 1607.26,736.689 1603.56,739.629C1591.25,749.428 1575.93,750.679 1562.05,744.673C1560.08,743.82 1558.13,742.819 1556.22,741.675C1553.18,739.848 1550.25,737.654 1547.46,735.11C1546.94,734.633 1546.43,734.143 1545.92,733.642C1541.93,729.714 1538.3,725.038 1535.2,719.66C1534.28,718.073 1533.43,716.459 1532.64,714.823C1527.41,703.929 1525.05,692.047 1525.37,680.671C1525.4,679.766 1532.82,685.147 1534.88,683.024C1536.93,680.901 1539.1,670.098 1537.7,667.933C1536.3,665.769 1526.27,671.268 1526.49,670.036C1528.91,657.005 1535.09,645.374 1544.74,637.695C1550.06,633.455 1555.96,630.814 1562.05,629.671\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1687.43,688.162C1673.97,695.737 1664.09,718.358 1650.98,738.788C1650.65,739.304 1646.16,729.838 1643.57,730.484C1640.97,731.13 1635.12,739.858 1635.38,742.662C1635.65,745.466 1645.93,746.292 1645.18,747.309C1635.26,760.941 1623.27,772.297 1606.87,775.453C1601.06,776.571 1594.69,776.659 1587.66,775.453C1586.32,775.223 1589.94,788.932 1587.66,790.824C1585.38,792.715 1575.77,789.812 1573.99,786.802C1572.21,783.793 1578.2,773.162 1577,772.767C1570.59,770.666 1563.68,767.576 1556.22,763.346C1558.38,757.394 1560.32,751.172 1562.05,744.673C1575.93,750.679 1591.25,749.428 1603.56,739.629C1607.26,736.689 1610.44,733.169 1613.1,729.213C1613.44,728.714 1603.06,723.328 1602.44,719.66C1601.83,715.992 1606.79,707.206 1609.42,707.206C1612.04,707.206 1617.62,721.048 1618.19,719.66C1624.25,704.954 1624.63,686.778 1618.77,670.036C1633.34,661.016 1646.88,651.964 1658.81,641.926C1663.41,648.037 1667.71,654.232 1671.72,660.504C1672.07,661.058 1663.84,662.645 1663.61,665.513C1663.38,668.382 1668.15,677.158 1670.36,677.714C1672.57,678.271 1676.48,668.203 1676.87,668.854C1680.65,675.219 1684.16,681.658 1687.43,688.162\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1606.87,775.453C1607.24,783.519 1608.82,791.967 1611.66,800.402C1611.89,801.073 1614.47,807.761 1614.91,808.772C1617.12,813.792 1619.8,818.759 1622.95,823.591C1632.73,818.286 1642.76,812.983 1653.01,807.759C1654.37,807.063 1650.4,821.362 1653.09,822.981C1655.78,824.6 1667.25,820.981 1669.16,817.475C1671.08,813.969 1663.65,802.399 1664.57,801.945C1671.88,798.317 1679.27,794.741 1686.75,791.246C1690.66,789.415 1694.59,787.606 1698.54,785.823C1705.33,782.759 1712.16,779.772 1719.01,776.879C1716.32,766.052 1713.36,755.296 1710.01,744.644C1709.62,743.438 1700.32,753.075 1697.67,751.883C1695.03,750.692 1692.64,740.47 1694.12,737.491C1695.6,734.512 1707.05,735.584 1706.52,734.01C1702.86,723.311 1698.76,712.728 1694.12,702.294C1692.01,697.551 1689.78,692.839 1687.43,688.162C1673.97,695.737 1664.09,718.358 1650.98,738.788C1650.65,739.304 1646.16,729.838 1643.57,730.484C1640.97,731.13 1635.12,739.858 1635.38,742.662C1635.65,745.466 1645.93,746.292 1645.18,747.309C1635.26,760.941 1623.27,772.297 1606.87,775.453\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1622.95,823.591C1619.8,818.759 1617.12,813.792 1614.91,808.772C1614.47,807.761 1611.89,801.073 1611.66,800.402C1608.82,791.967 1607.24,783.519 1606.87,775.453C1601.06,776.571 1594.69,776.659 1587.66,775.453C1586.32,775.223 1589.94,788.932 1587.66,790.824C1585.38,792.715 1575.77,789.812 1573.99,786.802C1572.21,783.793 1578.2,773.162 1577,772.767C1570.59,770.666 1563.68,767.576 1556.22,763.346C1548.14,785.718 1537.08,804.291 1523.4,819.512C1522.71,820.288 1519.35,806.898 1516.69,806.898C1514.02,806.898 1507.39,816.241 1507.39,819.512C1507.39,822.784 1517.44,825.79 1516.69,826.525C1508.49,834.537 1499.48,841.503 1489.71,847.493C1493.73,853.162 1497.75,858.913 1501.78,864.748C1502.42,865.659 1508.81,853.438 1511.17,853.732C1513.53,854.018 1516.49,863.192 1515.94,866.505C1515.39,869.818 1507.07,872.413 1507.89,873.609C1510.72,877.759 1513.56,881.937 1516.41,886.17C1529.38,878.174 1544.63,868.769 1561.64,858.619C1563.08,857.763 1562.28,870.849 1565.04,872.072C1567.8,873.306 1577.19,869.165 1578.18,865.999C1579.18,862.833 1570.27,853.502 1571,853.061C1578.88,848.423 1587.08,843.656 1595.56,838.834C1604.4,833.8 1613.56,828.693 1622.95,823.591\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1459.9,806.574C1463.46,783.575 1478.1,759.538 1499.38,766.304C1500.37,766.62 1494.17,774.354 1495.25,776.929C1496.34,779.505 1503.91,782.985 1505.9,781.756C1507.89,780.525 1506.27,769.304 1507.16,769.551C1522.17,773.737 1538.87,748.229 1547.46,735.11C1550.25,737.654 1553.18,739.848 1556.22,741.675C1558.13,742.819 1560.08,743.82 1562.05,744.673C1560.32,751.172 1558.38,757.394 1556.22,763.346C1548.14,785.718 1537.08,804.291 1523.4,819.512C1522.71,820.288 1519.35,806.898 1516.69,806.898C1514.02,806.898 1507.39,816.241 1507.39,819.512C1507.39,822.784 1517.44,825.79 1516.69,826.525C1508.49,834.537 1499.48,841.503 1489.71,847.493C1484.45,840.067 1479.21,832.788 1473.99,825.632C1470.13,820.339 1466.27,815.118 1462.43,809.964C1461.59,808.831 1460.74,807.701 1459.9,806.574\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1459.9,806.574C1452.29,796.424 1444.73,786.536 1437.19,776.879C1439.99,768.831 1442.81,760.805 1445.69,752.817C1446.04,751.822 1436.39,750.251 1435.46,747.311C1434.52,744.371 1437.89,735.583 1440.07,735.178C1442.26,734.771 1448.24,745.741 1448.57,744.873C1452.25,734.776 1456.01,724.749 1459.9,714.823C1463.29,706.141 1466.78,697.536 1470.39,689.03C1473.23,692.428 1476.09,695.741 1478.95,698.872C1479.97,699.993 1482,689.03 1484.57,689.03C1487.14,689.03 1493.85,695.764 1494.35,698.872C1494.86,701.981 1486.46,706.614 1487.62,707.682C1502.1,721.112 1516.92,727.543 1532.64,714.823C1533.43,716.459 1534.28,718.073 1535.2,719.66C1538.3,725.038 1541.93,729.714 1545.92,733.642C1546.43,734.143 1546.94,734.633 1547.46,735.11C1538.87,748.229 1522.17,773.737 1507.16,769.551C1506.27,769.304 1507.89,780.525 1505.9,781.756C1503.91,782.985 1496.34,779.505 1495.25,776.929C1494.17,774.354 1500.37,766.62 1499.38,766.304C1478.1,759.538 1463.46,783.575 1459.9,806.574\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1380.3,625.148C1391.17,644.682 1403.59,662.402 1417.77,678.067C1418.29,678.638 1420.71,666.192 1423.09,665.608C1425.46,665.025 1432.03,671.565 1432.01,674.564C1431.98,677.563 1422.31,682.955 1422.93,683.605C1434.17,695.281 1446.46,705.725 1459.9,714.823C1463.29,706.141 1466.78,697.536 1470.39,689.03C1474.73,678.795 1479.24,668.702 1483.97,658.79C1476.94,656.458 1470.43,652.885 1464.28,648.391C1463.24,647.633 1471.46,644.851 1470.81,641.905C1470.15,638.959 1462.87,630.803 1460.36,630.719C1457.84,630.635 1456.54,642.115 1455.75,641.399C1449.27,635.517 1443.15,628.686 1437.19,621.345C1433.76,617.115 1430.38,612.715 1427.01,608.229C1426.06,606.96 1437.4,601.614 1437.41,597.924C1437.41,594.235 1429.95,585.934 1427.06,586.091C1424.17,586.247 1420.75,599.79 1420.06,598.862C1415.67,592.907 1411.26,586.904 1406.73,581.041C1402.93,587.464 1399.12,593.878 1395.3,600.28C1393.07,604.007 1390.83,607.73 1388.59,611.449C1388.13,612.216 1398.92,612.853 1399.6,615.341C1400.29,617.83 1395.16,626.004 1392.71,626.382C1390.25,626.759 1385.32,616.864 1384.88,617.603C1383.36,620.121 1381.83,622.635 1380.3,625.148\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1459.9,714.823C1446.46,705.725 1434.17,695.281 1422.93,683.605C1422.31,682.955 1431.98,677.563 1432.01,674.564C1432.03,671.565 1425.46,665.025 1423.09,665.608C1420.71,666.192 1418.29,678.638 1417.77,678.067C1403.59,662.402 1391.17,644.682 1380.3,625.148C1374.15,635.26 1367.96,645.335 1361.73,655.364C1358.05,661.292 1354.35,667.205 1350.64,673.098C1357.03,680.335 1363.44,687.659 1369.86,695.09C1370.39,695.699 1359.19,699.934 1358.77,702.481C1358.34,705.028 1364.67,710.72 1367.29,710.374C1369.91,710.028 1373.88,699.751 1374.45,700.404C1379.93,706.787 1385.43,713.252 1390.93,719.809C1395.12,724.786 1399.31,729.817 1403.51,734.908C1404.1,735.627 1396.18,741.704 1396.06,744.428C1395.93,747.152 1400.59,751.69 1402.78,751.251C1404.95,750.812 1408.68,741.204 1409.16,741.794C1412.92,746.397 1416.69,751.05 1420.47,755.756C1426.03,762.678 1431.6,769.714 1437.19,776.879C1439.99,768.831 1442.81,760.805 1445.69,752.817C1446.04,751.822 1436.39,750.251 1435.46,747.311C1434.52,744.371 1437.89,735.583 1440.07,735.178C1442.26,734.771 1448.24,745.741 1448.57,744.873C1452.25,734.776 1456.01,724.749 1459.9,714.823\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1390.93,719.809C1379.68,738.967 1367.96,756.493 1355.62,771.825C1354.93,772.682 1349.99,760.405 1347.6,760.474C1345.2,760.543 1340.82,769.24 1341.24,772.24C1341.65,775.241 1350.66,777.819 1350.1,778.477C1340.06,790.228 1329.61,800.511 1318.64,809.029C1325.48,818.332 1330.6,830.158 1333.12,845.635C1351.53,835.705 1368.44,832.586 1383.96,834.086C1386.26,821.331 1389.37,810.228 1393.11,800.427C1393.33,799.865 1398.21,808.205 1400.68,807.347C1403.14,806.489 1408.62,797.678 1407.87,795.282C1407.12,792.885 1395.71,794.016 1396.18,792.966C1402.92,777.774 1411.29,765.915 1420.47,755.756C1416.69,751.05 1412.92,746.397 1409.16,741.794C1408.68,741.204 1404.95,750.812 1402.78,751.251C1400.59,751.69 1395.93,747.152 1396.06,744.428C1396.18,741.704 1404.1,735.627 1403.51,734.908C1399.31,729.817 1395.12,724.786 1390.93,719.809\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1420.47,755.756C1411.29,765.915 1402.92,777.774 1396.18,792.966C1395.71,794.016 1407.12,792.885 1407.87,795.282C1408.62,797.678 1403.14,806.489 1400.68,807.347C1398.21,808.205 1393.33,799.865 1393.11,800.427C1389.37,810.228 1386.26,821.331 1383.96,834.086C1395.07,835.162 1405.48,838.604 1415.21,843.61C1416.11,844.07 1406.62,852.325 1407.09,854.984C1407.56,857.634 1415.28,860.625 1418.06,859.548C1420.83,858.462 1422.64,847.788 1423.77,848.487C1432.68,854.091 1441,860.873 1448.75,868.18C1450.33,865.686 1451.89,863.183 1453.43,860.662C1454.27,859.3 1459.08,874.079 1461.39,874.529C1463.7,874.99 1467.8,867.122 1467.32,863.413C1466.84,859.696 1458.2,852.831 1458.54,852.26C1463.82,843.49 1468.96,834.614 1473.99,825.632C1470.13,820.339 1466.27,815.118 1462.43,809.964C1461.59,808.831 1460.74,807.701 1459.9,806.574C1452.29,796.424 1444.73,786.536 1437.19,776.879C1431.6,769.714 1426.03,762.678 1420.47,755.756\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1538.53,919.786C1531.11,908.265 1523.73,897.075 1516.41,886.17C1513.56,881.937 1510.72,877.759 1507.89,873.609C1507.07,872.413 1515.39,869.818 1515.94,866.505C1516.49,863.192 1513.53,854.018 1511.17,853.732C1508.81,853.438 1502.42,865.659 1501.78,864.748C1497.75,858.913 1493.73,853.162 1489.71,847.493C1484.45,840.067 1479.21,832.788 1473.99,825.632C1468.96,834.614 1463.82,843.49 1458.54,852.26C1458.2,852.831 1466.84,859.696 1467.32,863.413C1467.8,867.122 1463.7,874.99 1461.39,874.529C1459.08,874.079 1454.27,859.3 1453.43,860.662C1451.89,863.183 1450.33,865.686 1448.75,868.18C1443.43,876.646 1437.98,885.002 1432.38,893.238C1444.04,901.648 1451.14,916.077 1457.69,931.372C1458.31,932.816 1446.64,935.503 1445.78,938.43C1444.91,941.347 1449.83,948.396 1452.52,948.911C1455.22,949.417 1461.55,940.509 1461.97,941.503C1468.9,957.929 1476.21,974.051 1488.77,983.649C1493.78,974.373 1498.81,965.769 1503.95,957.938C1505.15,956.098 1507.83,971.217 1510.85,971.125C1513.86,971.042 1521.91,961.435 1522.03,957.414C1522.14,953.402 1511.05,947.705 1511.54,947.034C1520.07,935.577 1528.96,926.338 1538.53,919.786\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1333.12,845.635C1351.53,835.705 1368.44,832.586 1383.96,834.086C1395.07,835.162 1405.48,838.604 1415.21,843.61C1416.11,844.07 1406.62,852.325 1407.09,854.984C1407.56,857.634 1415.28,860.625 1418.06,859.548C1420.83,858.462 1422.64,847.788 1423.77,848.487C1432.68,854.091 1441,860.873 1448.75,868.18C1443.43,876.646 1437.98,885.002 1432.38,893.238C1426.51,901.888 1420.48,910.4 1414.28,918.774C1403.74,908.946 1391.99,902.826 1379.24,899.771C1378.1,899.495 1381.5,912.222 1379.06,914.117C1376.62,916.022 1366.19,913.851 1364.63,911.173C1363.05,908.495 1370.73,898.188 1369.63,898.06C1357.96,896.67 1345.55,897.553 1332.53,900.268C1333.49,893.284 1334.13,886.713 1334.5,880.539C1334.57,879.379 1346.83,880.658 1348.74,878.072C1350.64,875.486 1348.24,866.284 1345.92,864.996C1343.61,863.717 1334.83,871.787 1334.85,870.37C1334.93,861.214 1334.32,853.005 1333.12,845.635\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1286.81,1648.9C1284.81,1640.52 1281.65,1632.7 1278,1628.05C1271.5,1636.21 1262.96,1641.99 1253.38,1644.23C1252.56,1644.41 1258.98,1628.9 1256.91,1626.74C1254.85,1624.58 1243.04,1628.2 1240.97,1631.28C1238.9,1634.37 1245.7,1645.25 1244.49,1645.25C1236.66,1645.25 1229.29,1642.92 1222.82,1638.8C1219.96,1644.84 1217.1,1651.22 1214.44,1658.13C1214.18,1658.81 1205.15,1649.7 1202.63,1651.01C1200.11,1652.32 1197.97,1663.08 1199.33,1665.98C1200.69,1668.89 1211.32,1666.81 1210.8,1668.45C1209.37,1672.88 1208.06,1677.52 1206.91,1682.43C1216.34,1685.39 1224.93,1688.69 1232.79,1692.31C1233.72,1692.74 1224.05,1705.88 1225.46,1708.95C1226.88,1712.01 1238.29,1712.62 1241.27,1710.73C1244.27,1708.84 1242.38,1697.07 1243.4,1697.62C1253.39,1703.05 1262.03,1709.04 1269.55,1715.49C1275.53,1704.93 1280.41,1695.15 1284.26,1686.17C1284.68,1685.2 1271.67,1685.66 1270.53,1682.82C1269.38,1679.97 1274.6,1669.8 1277.4,1669.1C1280.2,1668.4 1287,1679.48 1287.33,1678.63C1290.05,1671.52 1289.4,1659.75 1286.81,1648.9\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1249.26,823.776C1257.49,834.822 1265.17,846.527 1271.86,859.401C1272.45,860.542 1260.02,860.266 1259.09,863.487C1258.16,866.708 1263.36,877.75 1266.29,878.716C1269.23,879.683 1276.16,868.152 1276.68,869.275C1282.78,882.646 1287.8,897.296 1291.3,913.722C1296.3,911.596 1301.24,909.645 1306.11,907.897C1315.15,904.639 1323.97,902.053 1332.53,900.268C1333.49,893.284 1334.13,886.713 1334.5,880.539C1334.57,879.379 1346.83,880.658 1348.74,878.072C1350.64,875.486 1348.24,866.284 1345.92,864.996C1343.61,863.717 1334.83,871.787 1334.85,870.37C1334.93,861.214 1334.32,853.005 1333.12,845.635C1330.6,830.158 1325.48,818.332 1318.64,809.029C1314.65,803.582 1310.05,799 1305.05,795.055C1304.3,794.46 1313.53,787.847 1313.36,784.924C1313.2,782 1306.49,776.568 1304.07,777.512C1301.64,778.457 1299.68,791.141 1298.83,790.588C1292.84,786.667 1286.41,783.444 1279.81,780.591C1274.73,787.935 1269.63,795.226 1264.52,802.459C1263.98,803.21 1273.76,807.046 1274.17,809.832C1274.58,812.619 1269.37,819.312 1266.99,819.177C1264.6,819.043 1260.24,808.471 1259.85,809.029C1256.33,813.973 1252.79,818.889 1249.26,823.776\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1291.3,913.722C1287.8,897.296 1282.78,882.646 1276.68,869.275C1276.16,868.152 1269.23,879.683 1266.29,878.716C1263.36,877.75 1258.16,866.708 1259.09,863.487C1260.02,860.266 1272.45,860.542 1271.86,859.401C1265.17,846.527 1257.49,834.822 1249.26,823.776C1248.3,825.334 1244.42,830.755 1239.05,838.052C1233.29,845.892 1225.82,855.895 1218.43,865.603C1217.83,866.404 1215.14,854.818 1212.43,855.122C1209.71,855.416 1202.13,864.361 1202.14,867.398C1202.15,870.434 1213.35,872.257 1212.52,873.333C1206.17,881.578 1200.26,889.078 1196.02,894.139C1201.99,898.566 1207.37,903.48 1212.07,908.716C1213.1,909.866 1201.16,913.17 1201.82,917.182C1202.47,921.203 1212.72,932.181 1216.01,932.835C1219.28,933.488 1220.52,919.574 1221.49,921.093C1226.36,928.74 1229.84,936.773 1231.69,944.862C1241.07,939.276 1251.43,933.341 1260.57,928.5C1263.69,926.844 1266.8,925.243 1269.88,923.688C1270.96,923.154 1270.42,937.04 1273.1,938.835C1275.78,940.638 1285.24,937.62 1285.93,934.491C1286.63,931.362 1276.65,920.366 1277.28,920.062C1282,917.807 1286.68,915.691 1291.3,913.722\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1112.02,991.775C1118.8,996.266 1126.39,999.992 1134.35,1003.07C1136.1,1003.75 1135.8,991.628 1139.4,989.925C1143.02,988.223 1154.62,989.953 1156,992.852C1157.39,995.75 1146.21,1006.92 1147.7,1007.3C1162.42,1010.94 1176.69,1011.17 1189.23,1008.4C1205.97,1004.7 1219.61,995.651 1227.07,982.232C1227.89,980.751 1217.57,981.643 1216.59,978.404C1215.6,975.165 1218.69,963.883 1221.15,962.797C1223.61,961.702 1231.04,972.883 1231.33,971.852C1233.77,963.147 1233.77,953.981 1231.69,944.862C1229.84,936.773 1226.36,928.74 1221.49,921.093C1220.52,919.574 1219.28,933.488 1216.01,932.835C1212.72,932.181 1202.47,921.203 1201.82,917.182C1201.16,913.17 1213.1,909.866 1212.07,908.716C1207.37,903.48 1201.99,898.566 1196.02,894.139C1193.46,897.379 1190.9,900.59 1188.33,903.783C1184.92,908.026 1181.51,912.231 1178.09,916.409C1177.35,917.311 1173.48,907.823 1170.8,907.897C1168.12,907.98 1161.73,914.347 1162.04,916.869C1162.33,919.399 1173.16,922.39 1172.62,923.053C1168.53,927.985 1164.44,932.862 1160.34,937.693C1154.85,944.163 1149.35,950.54 1143.83,956.816C1143.15,957.589 1138.6,944.761 1135.34,944.926C1132.09,945.101 1123.84,954.782 1124.31,957.837C1124.77,960.892 1138.76,962.558 1138.14,963.257C1129.46,973.012 1120.75,982.527 1112.02,991.775\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1260.57,928.5C1261.26,956.162 1265.79,981.33 1275.58,1002.52C1276.27,1004.01 1280.31,991.195 1283.44,991.471C1286.58,991.756 1294.73,1000.52 1294.4,1004.23C1294.07,1007.93 1280.79,1012.58 1281.47,1013.7C1286.76,1022.58 1293.18,1030.6 1300.85,1037.62C1291.07,1045.41 1280.96,1052.92 1270.51,1060.15C1269.79,1060.65 1268,1044.56 1264.67,1042.44C1261.35,1040.33 1251.13,1043.45 1250.58,1047.44C1250.03,1051.42 1262.63,1065.51 1261.36,1066.35C1254.25,1071.06 1246.99,1075.64 1239.56,1080.09C1232.19,1068.02 1224.38,1056.07 1216.11,1044.26C1211.97,1038.37 1207.67,1032.42 1203.23,1026.5C1202.59,1025.65 1194.2,1039.39 1190.94,1039.18C1187.69,1038.98 1182.62,1028.64 1183.7,1025.26C1184.79,1021.88 1198.17,1019.83 1197.47,1018.92C1194.76,1015.4 1192.02,1011.89 1189.23,1008.4C1205.97,1004.7 1219.61,995.651 1227.07,982.232C1227.89,980.751 1217.57,981.643 1216.59,978.404C1215.6,975.165 1218.69,963.883 1221.15,962.797C1223.61,961.702 1231.04,972.883 1231.33,971.852C1233.77,963.147 1233.77,953.981 1231.69,944.862C1241.07,939.276 1251.43,933.341 1260.57,928.5\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1300.85,1037.62C1293.18,1030.6 1286.76,1022.58 1281.47,1013.7C1280.79,1012.58 1294.07,1007.93 1294.4,1004.23C1294.73,1000.52 1286.58,991.756 1283.44,991.471C1280.31,991.195 1276.27,1004.01 1275.58,1002.52C1265.79,981.33 1261.26,956.162 1260.57,928.5C1263.69,926.844 1266.8,925.243 1269.88,923.688C1270.96,923.154 1270.42,937.04 1273.1,938.835C1275.78,940.638 1285.24,937.62 1285.93,934.491C1286.63,931.362 1276.65,920.366 1277.28,920.062C1282,917.807 1286.68,915.691 1291.3,913.722C1296.3,911.596 1301.24,909.645 1306.11,907.897C1310.63,922.767 1316.11,935.945 1322.67,947.227C1323.31,948.331 1328.75,936.893 1332.27,936.773C1335.79,936.654 1344.47,943.316 1343.78,946.491C1343.1,949.666 1327.3,954.635 1328.14,955.831C1336.82,968.3 1347.11,977.898 1359.24,984.275C1341.11,1003.19 1321.71,1021.03 1300.85,1037.62\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1359.24,984.275C1347.11,977.898 1336.82,968.3 1328.14,955.831C1327.3,954.635 1343.1,949.666 1343.78,946.491C1344.47,943.316 1335.79,936.654 1332.27,936.773C1328.75,936.893 1323.31,948.331 1322.67,947.227C1316.11,935.945 1310.63,922.767 1306.11,907.897C1315.15,904.639 1323.97,902.053 1332.53,900.268C1345.55,897.553 1357.96,896.67 1369.63,898.06C1370.73,898.188 1363.05,908.495 1364.63,911.173C1366.19,913.851 1376.62,916.022 1379.06,914.117C1381.5,912.222 1378.1,899.495 1379.24,899.771C1391.99,902.826 1403.74,908.946 1414.28,918.774C1407.89,927.396 1401.33,935.881 1394.57,944.19C1391.77,947.65 1388.93,951.083 1386.05,954.478C1385.15,955.537 1381,941.374 1378.37,941.623C1375.74,941.871 1370.18,952.435 1370.27,955.951C1370.37,959.466 1379.66,961.923 1378.96,962.723C1372.56,970.048 1365.98,977.235 1359.24,984.275\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1488.77,983.649C1476.21,974.051 1468.9,957.929 1461.97,941.503C1461.55,940.509 1455.22,949.417 1452.52,948.911C1449.83,948.396 1444.91,941.347 1445.78,938.43C1446.64,935.503 1458.31,932.816 1457.69,931.372C1451.14,916.077 1444.04,901.648 1432.38,893.238C1426.51,901.888 1420.48,910.4 1414.28,918.774C1407.89,927.396 1401.33,935.881 1394.57,944.19C1398.59,953.3 1402.81,962.328 1407.24,971.272C1407.49,971.769 1398.72,973.315 1397.96,976.435C1397.2,979.545 1400.55,989.603 1402.71,989.962C1404.87,990.312 1410.36,977.475 1410.9,978.533C1414.59,985.72 1418.41,992.852 1422.38,999.919C1426.68,1007.57 1431.15,1015.15 1435.82,1022.66C1436.38,1023.57 1426.23,1028.11 1425.91,1031.25C1425.58,1034.38 1431.22,1041.33 1433.86,1041.45C1436.5,1041.57 1441.03,1030.91 1441.72,1031.98C1446.17,1038.86 1450.79,1045.67 1455.57,1052.42C1459.56,1043.63 1463.47,1035.08 1467.33,1026.83C1468.12,1025.14 1473.39,1036.96 1476.22,1035.27C1479.04,1033.58 1484.84,1020.05 1484.28,1016.69C1483.72,1013.33 1472.32,1016.25 1472.87,1015.09C1478.21,1003.96 1483.48,993.431 1488.77,983.649\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1538.53,919.786C1528.96,926.338 1520.07,935.577 1511.54,947.034C1511.05,947.705 1522.14,953.402 1522.03,957.414C1521.91,961.435 1513.86,971.042 1510.85,971.125C1507.83,971.217 1505.15,956.098 1503.95,957.938C1498.81,965.769 1493.78,974.373 1488.77,983.649C1483.48,993.431 1478.21,1003.96 1472.87,1015.09C1472.32,1016.25 1483.72,1013.33 1484.28,1016.69C1484.84,1020.05 1479.04,1033.58 1476.22,1035.27C1473.39,1036.96 1468.12,1025.14 1467.33,1026.83C1463.47,1035.08 1459.56,1043.63 1455.57,1052.42C1463.93,1064.22 1472.8,1075.83 1482.24,1087.21C1493.29,1068.95 1504.63,1051.12 1516.95,1034.73C1518.05,1033.26 1522.53,1046.52 1525.87,1046.46C1529.21,1046.41 1537.19,1037.96 1536.95,1034.4C1536.73,1030.83 1523.91,1025.77 1524.49,1025.05C1539.37,1006.63 1555.79,990.477 1574.86,978.238C1568.1,966.975 1561.38,955.997 1554.7,945.285C1549.28,936.617 1543.89,928.114 1538.53,919.786\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1300.85,1037.62C1305.85,1042.44 1310.57,1047.35 1315.01,1052.34C1315.88,1053.33 1321.2,1038.95 1323.49,1038.63C1325.77,1038.32 1329.14,1047.03 1328.69,1050.44C1328.23,1053.84 1320.29,1058.49 1320.76,1059.06C1324.99,1064.2 1328.92,1069.43 1332.53,1074.78C1347.25,1058.01 1362.92,1042.75 1379.69,1029.19C1380.36,1028.64 1380.02,1039.14 1382.36,1040.16C1384.7,1041.17 1393.25,1037.88 1393.75,1035.29C1394.26,1032.71 1384.93,1025.03 1385.39,1024.67C1397.17,1015.56 1409.48,1007.28 1422.38,999.919C1418.41,992.852 1414.59,985.72 1410.9,978.533C1410.36,977.475 1404.87,990.312 1402.71,989.962C1400.55,989.603 1397.2,979.545 1397.96,976.435C1398.72,973.315 1407.49,971.769 1407.24,971.272C1402.81,962.328 1398.59,953.3 1394.57,944.19C1391.77,947.65 1388.93,951.083 1386.05,954.478C1385.15,955.537 1381,941.374 1378.37,941.623C1375.74,941.871 1370.18,952.435 1370.27,955.951C1370.37,959.466 1379.66,961.923 1378.96,962.723C1372.56,970.048 1365.98,977.235 1359.24,984.275C1341.11,1003.19 1321.71,1021.03 1300.85,1037.62\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1348.78,1104.59C1357.14,1091.58 1366.7,1083.5 1377.25,1079.49C1378.04,1079.2 1374.63,1090.89 1376.42,1092.81C1378.21,1094.72 1386.59,1093.56 1387.99,1090.98C1389.39,1088.41 1384.12,1077.47 1384.79,1077.34C1401.96,1073.96 1421.4,1079.99 1442.33,1092.11C1445.73,1080.28 1450.08,1067.12 1455.57,1052.42C1450.79,1045.67 1446.17,1038.86 1441.72,1031.98C1441.03,1030.91 1436.5,1041.57 1433.86,1041.45C1431.22,1041.33 1425.58,1034.38 1425.91,1031.25C1426.23,1028.11 1436.38,1023.57 1435.82,1022.66C1431.15,1015.15 1426.68,1007.57 1422.38,999.919C1409.48,1007.28 1397.17,1015.56 1385.39,1024.67C1384.93,1025.03 1394.26,1032.71 1393.75,1035.29C1393.25,1037.88 1384.7,1041.17 1382.36,1040.16C1380.02,1039.14 1380.36,1028.64 1379.69,1029.19C1362.92,1042.75 1347.25,1058.01 1332.53,1074.78C1336.36,1080.44 1339.83,1086.21 1342.91,1092.11C1345.05,1096.21 1347.01,1100.37 1348.78,1104.59\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1342.91,1092.11C1332.13,1104.91 1320.7,1115.81 1308.62,1124.81C1308.01,1125.27 1318.17,1131.69 1317.51,1134.29C1316.84,1136.88 1307,1141.35 1304.64,1140.39C1302.28,1139.44 1304.07,1128.1 1303.37,1128.58C1294.03,1135.02 1284.32,1140.35 1274.23,1144.59C1271.05,1137.79 1267.74,1131.02 1264.3,1124.3C1263.74,1123.2 1257.84,1139.28 1255.33,1139.01C1252.83,1138.73 1248.45,1126.4 1249.28,1122.67C1250.1,1118.93 1260.75,1117.45 1260.31,1116.59C1258.24,1112.67 1256.13,1108.76 1253.98,1104.87C1249.38,1096.55 1244.57,1088.29 1239.56,1080.09C1246.99,1075.64 1254.25,1071.06 1261.36,1066.35C1262.63,1065.51 1250.03,1051.42 1250.58,1047.44C1251.13,1043.45 1261.35,1040.33 1264.67,1042.44C1268,1044.56 1269.79,1060.65 1270.51,1060.15C1280.96,1052.92 1291.07,1045.41 1300.85,1037.62C1305.85,1042.44 1310.57,1047.35 1315.01,1052.34C1315.88,1053.33 1321.2,1038.95 1323.49,1038.63C1325.77,1038.32 1329.14,1047.03 1328.69,1050.44C1328.23,1053.84 1320.29,1058.49 1320.76,1059.06C1324.99,1064.2 1328.92,1069.43 1332.53,1074.78C1336.36,1080.44 1339.83,1086.21 1342.91,1092.11\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1189.23,1008.4C1176.69,1011.17 1162.42,1010.94 1147.7,1007.3C1146.21,1006.92 1157.39,995.75 1156,992.852C1154.62,989.953 1143.02,988.223 1139.4,989.925C1135.8,991.628 1136.1,1003.75 1134.35,1003.07C1126.39,999.992 1118.8,996.266 1112.02,991.775C1108.65,995.345 1105.27,998.879 1101.88,1002.38C1096.44,1008 1090.99,1013.51 1085.53,1018.92C1092.58,1025.35 1099.52,1031.87 1106.14,1038.65C1107.01,1039.55 1092.51,1045.51 1091.9,1049.14C1091.3,1052.79 1098.88,1060.92 1102.51,1060.5C1106.13,1060.08 1113.12,1046.07 1113.65,1046.65C1123.59,1057.67 1132.52,1069.52 1139.59,1082.9C1142.62,1088.63 1145.3,1094.63 1147.58,1100.96C1159.59,1095.68 1170.3,1089.74 1179.72,1083.14C1181.09,1082.19 1172.47,1075.73 1173.49,1071.83C1174.52,1067.92 1183.2,1059.11 1185.87,1059.74C1188.54,1060.39 1188.64,1076.38 1189.49,1075.67C1200.63,1066.35 1209.5,1055.89 1216.11,1044.26C1211.97,1038.37 1207.67,1032.42 1203.23,1026.5C1202.59,1025.65 1194.2,1039.39 1190.94,1039.18C1187.69,1038.98 1182.62,1028.64 1183.7,1025.26C1184.79,1021.88 1198.17,1019.83 1197.47,1018.92C1194.76,1015.4 1192.02,1011.89 1189.23,1008.4\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1216.11,1044.26C1211.06,1053.15 1204.68,1061.36 1196.97,1068.9C1194.6,1071.22 1192.11,1073.48 1189.49,1075.67C1188.64,1076.38 1188.54,1060.39 1185.87,1059.74C1183.2,1059.11 1174.52,1067.92 1173.49,1071.83C1172.47,1075.73 1181.09,1082.19 1179.72,1083.14C1170.3,1089.74 1159.59,1095.68 1147.58,1100.96C1149.65,1106.75 1151.39,1112.81 1152.74,1119.19C1152.95,1120.17 1141.8,1116.69 1140.1,1119.19C1138.39,1121.7 1140.1,1132.64 1142.49,1134.25C1144.88,1135.86 1154.25,1127.48 1154.43,1128.83C1155.95,1139.52 1156.42,1151.07 1155.62,1163.64C1175.31,1157.29 1188.28,1146.59 1201.82,1135.6C1203.09,1134.56 1193.74,1128.91 1194.57,1125.34C1195.4,1121.76 1203.64,1113.96 1206.79,1114.14C1209.94,1114.31 1212.47,1127.13 1213.47,1126.38C1224.41,1118.15 1236.85,1110.39 1253.98,1104.87C1249.38,1096.55 1244.57,1088.29 1239.56,1080.09C1232.19,1068.02 1224.38,1056.07 1216.11,1044.26\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1101.42,1119.19C1107,1136.5 1109.3,1156.49 1108.62,1178.93C1108.58,1180.1 1097.22,1175.99 1094.63,1178.93C1092.03,1181.87 1090.86,1194.33 1093.07,1196.56C1095.28,1198.79 1107.98,1191.14 1107.89,1192.31C1106.33,1212.26 1102.66,1233.96 1097.06,1257.23C1093.29,1256.57 1089.44,1255.99 1085.5,1255.48C1078.97,1254.64 1072.19,1254.03 1065.18,1253.65C1063.95,1253.58 1073.4,1241.38 1071.84,1238.29C1070.27,1235.21 1058.46,1232.62 1055.78,1235.11C1053.11,1237.61 1056.67,1253.3 1055.78,1253.27C1048.76,1253.11 1041.51,1253.16 1034.05,1253.47C1034.03,1241.54 1034.57,1230.19 1035.68,1219.39C1035.78,1218.41 1036.86,1209.63 1037.06,1208.2C1037.21,1207.15 1049.92,1214.21 1053.04,1212.25C1056.16,1210.28 1058.08,1199.24 1055.78,1196.43C1053.48,1193.62 1038.94,1197 1039.27,1195.38C1040.84,1187.52 1042.77,1180.01 1045.05,1172.86C1048.9,1160.85 1053.74,1149.84 1059.59,1139.86C1064.19,1138.94 1068.84,1137.51 1073.53,1135.6C1074.85,1135.06 1071.71,1152.5 1074.39,1154.65C1077.06,1156.81 1088.18,1152.43 1089.6,1148.52C1091.02,1144.61 1081.76,1131.8 1082.9,1131.19C1089,1127.93 1095.17,1123.92 1101.42,1119.19\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1253.98,1104.87C1236.85,1110.39 1224.41,1118.15 1213.47,1126.38C1212.47,1127.13 1209.94,1114.31 1206.79,1114.14C1203.64,1113.96 1195.4,1121.76 1194.57,1125.34C1193.74,1128.91 1203.09,1134.56 1201.82,1135.6C1188.28,1146.59 1175.31,1157.29 1155.62,1163.64C1155.27,1169.21 1154.66,1174.98 1153.8,1180.96C1172.93,1183.12 1191.31,1183.79 1208.99,1183.1C1210.47,1183.04 1211.92,1182.98 1213.39,1182.9C1214.17,1182.86 1209.62,1193.65 1211.58,1196.19C1213.54,1198.73 1223.37,1200.46 1225.14,1198.15C1226.92,1195.84 1220.96,1182.42 1222.24,1182.32C1244.5,1180.55 1265.63,1176.56 1285.75,1170.58C1282.1,1161.86 1278.27,1153.2 1274.23,1144.59C1271.05,1137.79 1267.74,1131.02 1264.3,1124.3C1263.74,1123.2 1257.84,1139.28 1255.33,1139.01C1252.83,1138.73 1248.45,1126.4 1249.28,1122.67C1250.1,1118.93 1260.75,1117.45 1260.31,1116.59C1258.24,1112.67 1256.13,1108.76 1253.98,1104.87\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1285.75,1170.58C1265.63,1176.56 1244.5,1180.55 1222.24,1182.32C1220.96,1182.42 1226.92,1195.84 1225.14,1198.15C1223.37,1200.46 1213.54,1198.73 1211.58,1196.19C1209.62,1193.65 1214.17,1182.86 1213.39,1182.9C1211.92,1182.98 1210.47,1183.04 1208.99,1183.1C1191.31,1183.79 1172.93,1183.12 1153.8,1180.96C1152.42,1190.51 1150.37,1200.6 1147.58,1211.3C1181.86,1222.2 1216.13,1233.09 1250.42,1243.99C1252.78,1237.77 1255.34,1232.23 1258.07,1227.3C1258.82,1225.93 1262.95,1234.58 1265.61,1233.78C1268.29,1232.99 1274.42,1225.1 1274.07,1222.56C1273.71,1220.01 1262.85,1219.46 1263.5,1218.53C1272.56,1205.49 1283.05,1197.52 1294.16,1191.72C1291.47,1184.64 1288.67,1177.6 1285.75,1170.58\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1274.23,1144.59C1284.32,1140.35 1294.03,1135.02 1303.37,1128.58C1304.07,1128.1 1302.28,1139.44 1304.64,1140.39C1307,1141.35 1316.84,1136.88 1317.51,1134.29C1318.17,1131.69 1308.01,1125.27 1308.62,1124.81C1320.7,1115.81 1332.13,1104.91 1342.91,1092.11C1345.05,1096.21 1347.01,1100.37 1348.78,1104.59C1352.14,1112.63 1354.8,1120.88 1356.71,1129.39C1356.84,1129.95 1346.06,1127.31 1344.98,1129.79C1343.9,1132.28 1347.94,1142.73 1350.21,1144.33C1352.48,1145.94 1358.35,1137.79 1358.59,1139.41C1360.12,1149.49 1360.61,1159.91 1359.97,1170.69C1350.41,1176.02 1340.49,1182.14 1330.22,1189.05C1329.53,1189.51 1330.56,1172.36 1328.13,1170.96C1325.7,1169.57 1316.51,1176.83 1315.63,1180.68C1314.76,1184.53 1323.63,1193.55 1322.88,1194.08C1315.7,1199.08 1308.36,1204.46 1300.85,1210.22C1298.71,1204.02 1296.48,1197.86 1294.16,1191.72C1291.47,1184.64 1288.67,1177.6 1285.75,1170.58C1282.1,1161.86 1278.27,1153.2 1274.23,1144.59\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1348.78,1104.59C1357.14,1091.58 1366.7,1083.5 1377.25,1079.49C1378.04,1079.2 1374.63,1090.89 1376.42,1092.81C1378.21,1094.72 1386.59,1093.56 1387.99,1090.98C1389.39,1088.41 1384.12,1077.47 1384.79,1077.34C1401.96,1073.96 1421.4,1079.99 1442.33,1092.11C1441.59,1094.69 1440.89,1097.21 1440.24,1099.68C1440.02,1100.55 1432.81,1095.46 1430.56,1097.25C1428.32,1099.04 1425.63,1108.1 1426.79,1110.38C1427.94,1112.67 1437.71,1109.88 1437.47,1110.94C1434.55,1123.84 1432.96,1134.91 1432.38,1144.59C1427.35,1145.16 1422.16,1146.08 1416.82,1147.35C1416.13,1147.51 1420.61,1159.28 1419.36,1162.05C1418.11,1164.83 1410.87,1166.14 1409.32,1163.99C1407.78,1161.82 1410.78,1148.91 1410.07,1149.11C1402.38,1151.3 1394.38,1154.18 1386.07,1157.76C1377.69,1161.37 1368.99,1165.68 1359.97,1170.69C1360.61,1159.91 1360.12,1149.49 1358.59,1139.41C1358.35,1137.79 1352.48,1145.94 1350.21,1144.33C1347.94,1142.73 1343.9,1132.28 1344.98,1129.79C1346.06,1127.31 1356.84,1129.95 1356.71,1129.39C1354.8,1120.88 1352.14,1112.63 1348.78,1104.59\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1442.33,1092.11C1441.59,1094.69 1440.89,1097.21 1440.24,1099.68C1440.02,1100.55 1432.81,1095.46 1430.56,1097.25C1428.32,1099.04 1425.63,1108.1 1426.79,1110.38C1427.94,1112.67 1437.71,1109.88 1437.47,1110.94C1434.55,1123.84 1432.96,1134.91 1432.38,1144.59C1442.94,1143.39 1452.81,1143.74 1462,1145.63C1462.78,1145.79 1455.22,1154.51 1456.17,1157.67C1457.13,1160.83 1465.56,1166.27 1467.74,1164.57C1469.93,1162.88 1468.52,1147.26 1469.29,1147.5C1479.68,1150.7 1489.1,1156.03 1497.58,1163.52C1498.99,1160.13 1500.46,1156.76 1501.99,1153.39C1502.6,1152.04 1493.84,1149.42 1493.27,1145.95C1492.7,1142.47 1496.35,1132.95 1498.57,1132.56C1500.8,1132.16 1505.96,1144.93 1506.61,1143.59C1509.67,1137.35 1512.94,1131.12 1516.41,1124.96C1511.92,1120.42 1507.55,1115.85 1503.27,1111.23C1502.46,1110.35 1511.02,1104.46 1511.05,1100.72C1511.09,1096.96 1505.75,1088.07 1503.46,1088.74C1501.17,1089.4 1497.8,1105.23 1497.32,1104.7C1492.14,1098.92 1487.11,1093.1 1482.24,1087.21C1472.8,1075.83 1463.93,1064.22 1455.57,1052.42C1450.08,1067.12 1445.73,1080.28 1442.33,1092.11\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1574.86,978.238C1555.79,990.477 1539.37,1006.63 1524.49,1025.05C1523.91,1025.77 1536.73,1030.83 1536.95,1034.4C1537.19,1037.96 1529.21,1046.41 1525.87,1046.46C1522.53,1046.52 1518.05,1033.26 1516.95,1034.73C1504.63,1051.12 1493.29,1068.95 1482.24,1087.21C1487.11,1093.1 1492.14,1098.92 1497.32,1104.7C1497.8,1105.23 1501.17,1089.4 1503.46,1088.74C1505.75,1088.07 1511.09,1096.96 1511.05,1100.72C1511.02,1104.46 1502.46,1110.35 1503.27,1111.23C1507.55,1115.85 1511.92,1120.42 1516.41,1124.96C1525,1109.65 1534.79,1094.65 1545.71,1080.09C1548.44,1076.43 1551.26,1072.81 1554.13,1069.22C1554.58,1068.66 1545.79,1064.24 1545.95,1060.69C1546.11,1057.14 1552.85,1047.57 1555.09,1047.92C1557.33,1048.27 1558.69,1063.63 1559.39,1062.78C1563.9,1057.38 1568.55,1052.06 1573.37,1046.81C1581.68,1037.78 1590.44,1028.99 1599.63,1020.5C1596.45,1014.95 1593.27,1009.44 1590.1,1004C1589.66,1003.25 1583.76,1014.21 1581.04,1014.18C1578.33,1014.15 1572.92,1006.55 1573.83,1003.82C1574.72,1001.08 1586.78,998.327 1586.44,997.747C1582.56,991.149 1578.71,984.643 1574.86,978.238\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1420.65,1229.27C1427.47,1223.97 1434.5,1220.4 1441.69,1218.19C1442.69,1217.87 1437.4,1227.8 1438.95,1230.13C1440.5,1232.46 1448.93,1234.5 1451.01,1232.15C1453.08,1229.79 1450.45,1216.13 1451.4,1215.99C1460.87,1214.59 1470.59,1215.18 1480.44,1216.95C1481.54,1212.04 1482.78,1207.11 1484.15,1202.18C1487.74,1189.26 1492.23,1176.33 1497.58,1163.52C1489.1,1156.03 1479.68,1150.7 1469.29,1147.5C1468.52,1147.26 1469.93,1162.88 1467.74,1164.57C1465.56,1166.27 1457.13,1160.83 1456.17,1157.67C1455.22,1154.51 1462.78,1145.79 1462,1145.63C1452.81,1143.74 1442.94,1143.39 1432.38,1144.59C1427.35,1145.16 1422.16,1146.08 1416.82,1147.35C1416.13,1147.51 1420.61,1159.28 1419.36,1162.05C1418.11,1164.83 1410.87,1166.14 1409.32,1163.99C1407.78,1161.82 1410.78,1148.91 1410.07,1149.11C1402.38,1151.3 1394.38,1154.18 1386.07,1157.76C1387.8,1165.55 1389.15,1173.37 1390.17,1181.16C1390.3,1182.06 1378.62,1179.04 1376.7,1181.36C1374.8,1183.67 1376.31,1193.53 1378.74,1195.02C1381.16,1196.52 1391.12,1189.02 1391.26,1190.32C1391.88,1196.49 1392.34,1202.62 1392.64,1208.68C1404.87,1205.07 1413.85,1213.24 1420.65,1229.27\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1392.64,1252.99C1379.99,1252.14 1367.34,1252.82 1354.69,1254.94C1353.95,1255.06 1360.17,1266.04 1358.69,1268.27C1357.23,1270.5 1347.9,1270.28 1345.89,1268.32C1343.88,1266.35 1347.72,1256.25 1346.61,1256.49C1336.87,1258.58 1327.13,1261.52 1317.38,1265.25C1314.94,1255.75 1312.32,1246.32 1309.5,1236.95C1309.14,1235.77 1301.51,1244.28 1299.53,1243.25C1297.55,1242.21 1296.34,1233.03 1297.62,1230.73C1298.89,1228.44 1307.4,1230.09 1307.2,1229.48C1305.18,1223.03 1303.06,1216.61 1300.85,1210.22C1308.36,1204.46 1315.7,1199.08 1322.88,1194.08C1323.63,1193.55 1314.76,1184.53 1315.63,1180.68C1316.51,1176.83 1325.7,1169.57 1328.13,1170.96C1330.56,1172.36 1329.53,1189.51 1330.22,1189.05C1340.49,1182.14 1350.41,1176.02 1359.97,1170.69C1368.99,1165.68 1377.69,1161.37 1386.07,1157.76C1387.8,1165.55 1389.15,1173.37 1390.17,1181.16C1390.3,1182.06 1378.62,1179.04 1376.7,1181.36C1374.8,1183.67 1376.31,1193.53 1378.74,1195.02C1381.16,1196.52 1391.12,1189.02 1391.26,1190.32C1391.88,1196.49 1392.34,1202.62 1392.64,1208.68C1393.4,1224.02 1393.22,1238.95 1392.64,1252.99\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1294.16,1191.72C1283.05,1197.52 1272.56,1205.49 1263.5,1218.53C1262.85,1219.46 1273.71,1220.01 1274.07,1222.56C1274.42,1225.1 1268.29,1232.99 1265.61,1233.78C1262.95,1234.58 1258.82,1225.93 1258.07,1227.3C1255.34,1232.23 1252.78,1237.77 1250.42,1243.99C1247.67,1251.21 1245.2,1259.37 1243.03,1268.61C1251.59,1272.76 1258.14,1284.63 1263.45,1301.32C1263.68,1302.06 1253.62,1299.12 1252.41,1301.14C1251.21,1303.18 1254.09,1312.43 1256.24,1313.5C1258.39,1314.57 1265.13,1306.9 1265.32,1307.57C1268.51,1318.89 1271.23,1332.02 1273.68,1346.21C1281.87,1343.52 1290.15,1341.66 1298.51,1340.56C1299.21,1340.46 1293.61,1330.43 1295.1,1328C1296.61,1325.56 1305.58,1323.98 1307.51,1325.93C1309.43,1327.88 1306.12,1339.75 1306.66,1339.71C1315.21,1339.07 1323.84,1339.16 1332.53,1339.91C1331.52,1333.21 1330.41,1326.54 1329.23,1319.9C1325.95,1301.48 1322.01,1283.26 1317.38,1265.25C1314.94,1255.75 1312.32,1246.32 1309.5,1236.95C1309.14,1235.77 1301.51,1244.28 1299.53,1243.25C1297.55,1242.21 1296.34,1233.03 1297.62,1230.73C1298.89,1228.44 1307.4,1230.09 1307.2,1229.48C1305.18,1223.03 1303.06,1216.61 1300.85,1210.22C1298.71,1204.02 1296.48,1197.86 1294.16,1191.72\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1147.58,1211.3C1181.86,1222.2 1216.13,1233.09 1250.42,1243.99C1247.67,1251.21 1245.2,1259.37 1243.03,1268.61C1234.66,1264.55 1224.38,1267.88 1211.49,1281.3C1207.29,1274.58 1202.01,1264.03 1196.91,1266.37C1194.72,1267.37 1201.24,1276.22 1199.67,1278.23C1198.1,1280.23 1189.45,1280.15 1187.5,1278.38C1185.55,1276.6 1191.53,1267.51 1187.98,1267.58C1182.03,1267.71 1175.99,1276.89 1168.42,1284.48C1162.5,1280.43 1156.03,1276.7 1149,1273.33C1148.35,1273.02 1148.62,1288.9 1146.1,1289.98C1143.57,1291.06 1134.48,1283.05 1133.86,1279.78C1133.25,1276.5 1142.88,1270.55 1142.39,1270.34C1138.15,1268.52 1133.73,1266.84 1129.12,1265.28C1132.87,1256.22 1136.18,1247.5 1139.08,1239.13C1139.43,1238.15 1149.86,1248.15 1152.89,1246.96C1155.92,1245.77 1158.97,1235.01 1157.24,1231.97C1155.52,1228.94 1142.23,1229.68 1142.52,1228.77C1144.42,1222.77 1146.11,1216.95 1147.58,1211.3\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1243.03,1268.61C1251.59,1272.76 1258.14,1284.63 1263.45,1301.32C1263.68,1302.06 1253.62,1299.12 1252.41,1301.14C1251.21,1303.18 1254.09,1312.43 1256.24,1313.5C1258.39,1314.57 1265.13,1306.9 1265.32,1307.57C1268.51,1318.89 1271.23,1332.02 1273.68,1346.21C1257.25,1351.59 1241.19,1360.31 1225.54,1373.03C1223.54,1366.58 1221.34,1360.31 1218.9,1354.25C1216.58,1348.47 1214.05,1342.88 1211.29,1337.49C1211.04,1337 1207.57,1346.9 1205.47,1346.95C1203.38,1347 1198.28,1340.35 1198.74,1337.8C1199.18,1335.25 1208.45,1332.16 1208.17,1331.67C1207.39,1330.28 1206.6,1328.9 1205.79,1327.54C1211.56,1321.82 1223.1,1310.39 1220.36,1300.25C1219.24,1296.06 1215.9,1288.38 1211.49,1281.3C1224.38,1267.88 1234.66,1264.55 1243.03,1268.61\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1092.78,1373.03C1100.66,1363.17 1111.04,1350.21 1122.2,1336.69C1123.61,1335 1124.93,1347.63 1128.28,1346.61C1132.09,1345.45 1143.99,1333.81 1145,1329.74C1146.01,1325.68 1133.21,1323.52 1134.34,1322.19C1146.08,1308.37 1158.02,1294.9 1168.42,1284.48C1175.99,1276.89 1182.03,1267.71 1187.98,1267.58C1191.53,1267.51 1185.55,1276.6 1187.5,1278.38C1189.45,1280.15 1198.1,1280.23 1199.67,1278.23C1201.24,1276.22 1194.72,1267.37 1196.91,1266.37C1202.01,1264.03 1207.29,1274.58 1211.49,1281.3C1215.9,1288.38 1219.24,1296.06 1220.36,1300.25C1223.1,1310.39 1211.56,1321.82 1205.79,1327.54C1203.34,1323.43 1200.74,1319.46 1197.98,1315.63C1179.83,1332.6 1164.06,1351.16 1151.86,1372.3C1151.14,1373.55 1166.61,1378.02 1166.82,1381.78C1167.02,1385.55 1156.74,1394.25 1153.07,1394.9C1149.4,1395.56 1145.49,1384.22 1144.79,1385.7C1137.84,1400.19 1132.51,1415.86 1129.12,1432.98C1123.74,1426.79 1118.43,1419.6 1113.2,1411.37C1112.82,1410.78 1108.55,1424.18 1106.32,1424.35C1104.09,1424.53 1099.28,1415.56 1099.81,1412.39C1100.35,1409.23 1110.03,1406.22 1109.52,1405.37C1106.61,1400.5 1103.73,1395.3 1100.88,1389.78C1098.15,1384.5 1095.45,1378.91 1092.78,1373.03\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1100.88,1389.78L1051.04,1420.87C1048.72,1410.91 1046.28,1401.13 1043.73,1391.55C1041.35,1382.58 1038.86,1373.79 1036.28,1365.15C1036.08,1364.51 1026.35,1372.73 1024.11,1371.18C1021.87,1369.64 1021.32,1358.45 1022.87,1355.88C1024.42,1353.3 1033.74,1356.85 1033.38,1355.69C1031.13,1348.52 1028.82,1341.45 1026.42,1334.5C1032.75,1333.58 1038.43,1332.13 1043.54,1330.14C1044.31,1329.85 1038.37,1323.39 1039.41,1320.68C1040.44,1317.98 1047.87,1312.89 1049.77,1313.91C1051.66,1314.93 1050.06,1327.17 1050.77,1326.78C1058.19,1322.7 1064.16,1317.26 1068.94,1310.52C1071.78,1319.27 1074.65,1327.61 1077.55,1335.56C1077.85,1336.37 1083.46,1322.82 1086.32,1323.65C1089.17,1324.48 1095.64,1337.24 1094.68,1340.55C1093.71,1343.85 1080.14,1342.53 1080.52,1343.52C1084.55,1354.1 1088.63,1363.93 1092.78,1373.03C1095.45,1378.91 1098.15,1384.5 1100.88,1389.78\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1197.98,1315.63C1179.83,1332.6 1164.06,1351.16 1151.86,1372.3C1151.14,1373.55 1166.61,1378.02 1166.82,1381.78C1167.02,1385.55 1156.74,1394.25 1153.07,1394.9C1149.4,1395.56 1145.49,1384.22 1144.79,1385.7C1137.84,1400.19 1132.51,1415.86 1129.12,1432.98C1133.61,1438.15 1138.15,1442.62 1142.74,1446.41C1150.22,1452.59 1157.84,1456.97 1165.58,1459.63C1165.59,1438.74 1169.75,1420.91 1176.32,1405.87C1177.03,1404.26 1183.72,1415.2 1187.06,1414.01C1190.4,1412.81 1197.04,1402.18 1196.35,1398.68C1195.65,1395.17 1182.07,1394.38 1182.9,1392.97C1192.99,1375.84 1206.19,1363.14 1218.9,1354.25C1216.58,1348.47 1214.05,1342.88 1211.29,1337.49C1211.04,1337 1207.57,1346.9 1205.47,1346.95C1203.38,1347 1198.28,1340.35 1198.74,1337.8C1199.18,1335.25 1208.45,1332.16 1208.17,1331.67C1207.39,1330.28 1206.6,1328.9 1205.79,1327.54C1203.34,1323.43 1200.74,1319.46 1197.98,1315.63\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1218.9,1354.25C1206.19,1363.14 1192.99,1375.84 1182.9,1392.97C1182.07,1394.38 1195.65,1395.17 1196.35,1398.68C1197.04,1402.18 1190.4,1412.81 1187.06,1414.01C1183.72,1415.2 1177.03,1404.26 1176.32,1405.87C1169.75,1420.91 1165.59,1438.74 1165.58,1459.63C1175.12,1462.92 1184.85,1463.6 1194.76,1461.82C1195.55,1461.68 1190.37,1453.34 1192.18,1450.78C1193.99,1448.22 1203.54,1445.05 1205.63,1446.46C1207.73,1447.86 1202.85,1459.86 1204.76,1459.21C1215.93,1455.42 1227.32,1448.63 1238.9,1439.06C1238.02,1431.75 1237.19,1425.25 1236.23,1418.9C1235.13,1411.76 1233.84,1404.84 1232.09,1397.25C1231.95,1396.63 1243.14,1398.26 1244.6,1395.65C1246.05,1393.05 1243.37,1383.05 1240.85,1381.61C1238.33,1380.15 1229.71,1387.93 1229.46,1386.97C1228.26,1382.24 1226.95,1377.59 1225.54,1373.03C1223.54,1366.58 1221.34,1360.31 1218.9,1354.25\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1236.23,1418.9C1251.86,1417.79 1265.75,1416.79 1281.39,1415.67C1282.1,1415.62 1276.7,1406.65 1278.56,1404.4C1280.41,1402.17 1290.58,1400.45 1292.52,1402.22C1294.47,1404 1289.15,1415.11 1290.24,1415.04C1306.9,1413.84 1323.58,1412.65 1340.25,1411.45C1339.43,1399.13 1338.38,1386.89 1337.05,1374.72C1336.94,1373.69 1324.37,1378.81 1321.55,1377.04C1318.74,1375.26 1317.78,1366.19 1320.16,1364.06C1322.55,1361.92 1336.05,1365.88 1335.85,1364.23C1334.86,1356.09 1333.76,1347.98 1332.53,1339.91C1323.84,1339.16 1315.21,1339.07 1306.66,1339.71C1306.12,1339.75 1309.43,1327.88 1307.51,1325.93C1305.58,1323.98 1296.61,1325.56 1295.1,1328C1293.61,1330.43 1299.21,1340.46 1298.51,1340.56C1290.15,1341.66 1281.87,1343.52 1273.68,1346.21C1257.25,1351.59 1241.19,1360.31 1225.54,1373.03C1226.95,1377.59 1228.26,1382.24 1229.46,1386.97C1229.71,1387.93 1238.33,1380.15 1240.85,1381.61C1243.37,1383.05 1246.05,1393.05 1244.6,1395.65C1243.14,1398.26 1231.95,1396.63 1232.09,1397.25C1233.84,1404.84 1235.13,1411.76 1236.23,1418.9\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1317.38,1265.25C1327.13,1261.52 1336.87,1258.58 1346.61,1256.49C1347.72,1256.25 1343.88,1266.35 1345.89,1268.32C1347.9,1270.28 1357.23,1270.5 1358.69,1268.27C1360.17,1266.04 1353.95,1255.06 1354.69,1254.94C1367.34,1252.82 1379.99,1252.14 1392.64,1252.99C1392.11,1265.64 1391.26,1277.58 1390.47,1288.44C1390.42,1289.12 1382.84,1280.12 1380.83,1281.88C1378.81,1283.66 1376.88,1296.45 1378.38,1299.06C1379.88,1301.66 1389.89,1296.52 1389.82,1297.52C1389.09,1308.13 1388.55,1317.47 1388.65,1325.15C1378.11,1327.48 1367.55,1327.79 1357,1326.54C1356.38,1326.47 1360.94,1314.55 1359.54,1312.1C1358.15,1309.63 1350.26,1309.56 1348.62,1311.78C1347,1314.01 1350.85,1325.64 1349.76,1325.44C1342.92,1324.17 1336.07,1322.28 1329.23,1319.9C1325.95,1301.48 1322.01,1283.26 1317.38,1265.25\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1403.63,1351.71C1402.92,1368.33 1392.1,1375.31 1384.12,1385.94C1383.59,1386.65 1392.49,1390.07 1392.78,1392.61C1393.06,1395.13 1387.99,1401.06 1385.8,1401.13C1383.62,1401.21 1380.11,1392.19 1379.67,1393.07C1375.03,1402.46 1373.38,1415.34 1379.95,1437.11C1366.96,1442.49 1354.28,1445.72 1341.89,1446.51C1341.56,1434.76 1341.01,1423.07 1340.25,1411.45C1339.43,1399.13 1338.38,1386.89 1337.05,1374.72C1336.94,1373.69 1324.37,1378.81 1321.55,1377.04C1318.74,1375.26 1317.78,1366.19 1320.16,1364.06C1322.55,1361.92 1336.05,1365.88 1335.85,1364.23C1334.86,1356.09 1333.76,1347.98 1332.53,1339.91C1331.52,1333.21 1330.41,1326.54 1329.23,1319.9C1336.07,1322.28 1342.92,1324.17 1349.76,1325.44C1350.85,1325.64 1347,1314.01 1348.62,1311.78C1350.26,1309.56 1358.15,1309.63 1359.54,1312.1C1360.94,1314.55 1356.38,1326.47 1357,1326.54C1367.55,1327.79 1378.11,1327.48 1388.65,1325.15C1388.8,1335.18 1390.03,1342.4 1393.36,1345.89C1396.33,1349.02 1399.75,1350.92 1403.63,1351.71\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1440.24,1339.91C1439.18,1328.15 1438.03,1316.69 1436.75,1305.74C1436.61,1304.5 1445.97,1307.3 1447.62,1304.27C1449.27,1301.25 1448.69,1289.2 1446.64,1287.58C1444.6,1285.97 1435.48,1295.49 1435.36,1294.57C1431.84,1267.8 1427.27,1244.84 1420.65,1229.27C1413.85,1213.24 1404.87,1205.07 1392.64,1208.68C1393.4,1224.02 1393.22,1238.95 1392.64,1252.99C1392.11,1265.64 1391.26,1277.58 1390.47,1288.44C1390.42,1289.12 1382.84,1280.12 1380.83,1281.88C1378.81,1283.66 1376.88,1296.45 1378.38,1299.06C1379.88,1301.66 1389.89,1296.52 1389.82,1297.52C1389.09,1308.13 1388.55,1317.47 1388.65,1325.15C1388.8,1335.18 1390.03,1342.4 1393.36,1345.89C1396.33,1349.02 1399.75,1350.92 1403.63,1351.71C1407.61,1352.52 1412.07,1352.18 1417.03,1350.83C1417.7,1350.64 1409.7,1339.47 1410.86,1336.56C1412.01,1333.66 1421.79,1331.42 1423.95,1333.4C1426.12,1335.38 1422.87,1348.87 1423.86,1348.46C1428.89,1346.39 1434.35,1343.5 1440.24,1339.91\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1480.44,1216.95C1470.59,1215.18 1460.87,1214.59 1451.4,1215.99C1450.45,1216.13 1453.08,1229.79 1451.01,1232.15C1448.93,1234.5 1440.5,1232.46 1438.95,1230.13C1437.4,1227.8 1442.69,1217.87 1441.69,1218.19C1434.5,1220.4 1427.47,1223.97 1420.65,1229.27C1427.27,1244.84 1431.84,1267.8 1435.36,1294.57C1435.48,1295.49 1444.6,1285.97 1446.64,1287.58C1448.69,1289.2 1449.27,1301.25 1447.62,1304.27C1445.97,1307.3 1436.61,1304.5 1436.75,1305.74C1438.03,1316.69 1439.18,1328.15 1440.24,1339.91C1451.03,1333.34 1463.27,1324.42 1477.04,1313.85C1476.05,1308.14 1475.29,1302.37 1474.76,1296.55C1474.67,1295.69 1466.1,1301.47 1464.11,1299.27C1462.12,1297.08 1461.19,1285.34 1462.85,1283.38C1464.52,1281.41 1474.16,1288.69 1474.1,1287.49C1473.71,1280.13 1473.67,1272.72 1473.98,1265.25C1474.3,1257.34 1475,1249.38 1476.06,1241.39C1476.13,1240.92 1484.64,1247.04 1487.04,1245.02C1489.46,1243 1492.13,1231.35 1490.52,1229.26C1488.92,1227.16 1477.26,1233.38 1477.41,1232.44C1478.27,1227.29 1479.28,1222.12 1480.44,1216.95\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1403.63,1351.71C1402.92,1368.33 1392.1,1375.31 1384.12,1385.94C1383.59,1386.65 1392.49,1390.07 1392.78,1392.61C1393.06,1395.13 1387.99,1401.06 1385.8,1401.13C1383.62,1401.21 1380.11,1392.19 1379.67,1393.07C1375.03,1402.46 1373.38,1415.34 1379.95,1437.11C1385.58,1434.77 1391.27,1432.03 1397.02,1428.9C1398.26,1428.23 1397.24,1443.23 1400.25,1444.23C1403.25,1445.24 1414.09,1438.36 1415.03,1434.95C1415.96,1431.56 1404.99,1424.34 1405.86,1423.82C1412.7,1419.69 1419.63,1415.03 1426.65,1409.89C1435.39,1403.49 1444.27,1396.34 1453.3,1388.52C1454.07,1387.85 1456.39,1403.29 1459.69,1403.84C1462.99,1404.39 1472.89,1395.53 1473.1,1391.85C1473.32,1388.16 1460.11,1382.51 1461,1381.7C1470.1,1373.5 1479.36,1364.64 1488.76,1355.19C1487.01,1350.85 1485.42,1346.46 1483.98,1342.01C1483.69,1341.11 1477.46,1350.19 1474.83,1349.58C1472.21,1348.96 1467.08,1340.85 1468.21,1338.31C1469.36,1335.77 1481.93,1335.28 1481.67,1334.32C1479.78,1327.59 1478.24,1320.76 1477.04,1313.85C1463.27,1324.42 1451.03,1333.34 1440.24,1339.91C1434.35,1343.5 1428.89,1346.39 1423.86,1348.46C1422.87,1348.87 1426.12,1335.38 1423.95,1333.4C1421.79,1331.42 1412.01,1333.66 1410.86,1336.56C1409.7,1339.47 1417.7,1350.64 1417.03,1350.83C1412.07,1352.18 1407.61,1352.52 1403.63,1351.71\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1139.59,1082.9C1132.52,1069.52 1123.59,1057.67 1113.65,1046.65C1113.12,1046.07 1106.13,1060.08 1102.51,1060.5C1098.88,1060.92 1091.3,1052.79 1091.9,1049.14C1092.51,1045.51 1107.01,1039.55 1106.14,1038.65C1099.52,1031.87 1092.58,1025.35 1085.53,1018.92C1078.68,1025.7 1071.81,1032.32 1064.93,1038.75C1063.64,1039.96 1059.55,1025.09 1056.07,1024.87C1052.59,1024.64 1044.48,1033.33 1044.05,1037.39C1043.63,1041.46 1054.77,1048.11 1053.51,1049.25C1047.31,1054.86 1041.1,1060.31 1034.89,1065.6C1039.26,1073.63 1043.13,1082.18 1046.53,1091.23C1046.99,1092.48 1035.19,1091.78 1034.04,1095.46C1032.9,1099.15 1036.89,1112.03 1039.66,1113.33C1042.43,1114.63 1050.26,1101.99 1050.67,1103.28C1054.29,1114.75 1057.25,1126.95 1059.59,1139.86C1064.19,1138.94 1068.84,1137.51 1073.53,1135.6C1074.85,1135.06 1071.71,1152.5 1074.39,1154.65C1077.06,1156.81 1088.18,1152.43 1089.6,1148.52C1091.02,1144.61 1081.76,1131.8 1082.9,1131.19C1089,1127.93 1095.17,1123.92 1101.42,1119.19C1113.89,1109.76 1126.63,1097.51 1139.59,1082.9\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M946.28,1178.93C960.566,1170.21 974.64,1164.81 988.488,1162.71C990.65,1162.38 984.177,1176.51 987.022,1178.2C989.875,1179.9 1002.87,1175.61 1005.58,1172.86C1008.05,1170.36 1002.03,1161.67 1003.32,1161.7C1017.47,1161.95 1031.38,1165.69 1045.05,1172.86C1048.9,1160.85 1053.74,1149.84 1059.59,1139.86C1057.25,1126.95 1054.29,1114.75 1050.67,1103.28C1050.26,1101.99 1042.43,1114.63 1039.66,1113.33C1036.89,1112.03 1032.9,1099.15 1034.04,1095.46C1035.19,1091.78 1046.99,1092.48 1046.53,1091.23C1043.13,1082.18 1039.26,1073.63 1034.89,1065.6C1031.24,1068.71 1027.58,1071.77 1023.93,1074.78C1021.38,1076.87 1018.82,1078.93 1016.28,1080.97C1014.97,1082.01 1024.07,1086.89 1023.33,1090.11C1022.58,1093.32 1014.63,1100.49 1011.79,1100.27C1008.95,1100.06 1007.27,1088.05 1006.28,1088.81C993.863,1098.38 981.082,1107.6 967.971,1116.49C961.632,1120.79 955.213,1125.01 948.725,1129.15C947.628,1129.85 957.447,1138.25 956.655,1141.79C955.856,1145.32 947.291,1151.22 943.968,1150.38C940.653,1149.52 938.6,1135.53 936.751,1136.66C930.975,1140.23 925.145,1143.73 919.259,1147.17C928.671,1157.07 937.675,1167.67 946.28,1178.93\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1139.59,1082.9C1142.62,1088.63 1145.3,1094.63 1147.58,1100.96C1149.65,1106.75 1151.39,1112.81 1152.74,1119.19C1152.95,1120.17 1141.8,1116.69 1140.1,1119.19C1138.39,1121.7 1140.1,1132.64 1142.49,1134.25C1144.88,1135.86 1154.25,1127.48 1154.43,1128.83C1155.95,1139.52 1156.42,1151.07 1155.62,1163.64C1155.27,1169.21 1154.66,1174.98 1153.8,1180.96C1152.42,1190.51 1150.37,1200.6 1147.58,1211.3C1146.11,1216.95 1144.42,1222.77 1142.52,1228.77C1142.23,1229.68 1155.52,1228.94 1157.24,1231.97C1158.97,1235.01 1155.92,1245.77 1152.89,1246.96C1149.86,1248.15 1139.43,1238.15 1139.08,1239.13C1136.18,1247.5 1132.87,1256.22 1129.12,1265.28C1119.26,1261.95 1108.56,1259.24 1097.06,1257.23C1102.66,1233.96 1106.33,1212.26 1107.89,1192.31C1107.98,1191.14 1095.28,1198.79 1093.07,1196.56C1090.86,1194.33 1092.03,1181.87 1094.63,1178.93C1097.22,1175.99 1108.58,1180.1 1108.62,1178.93C1109.3,1156.49 1107,1136.5 1101.42,1119.19C1113.89,1109.76 1126.63,1097.51 1139.59,1082.9\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1092.78,1373.03C1100.66,1363.17 1111.04,1350.21 1122.2,1336.69C1123.61,1335 1124.93,1347.63 1128.28,1346.61C1132.09,1345.45 1143.99,1333.81 1145,1329.74C1146.01,1325.68 1133.21,1323.52 1134.34,1322.19C1146.08,1308.37 1158.02,1294.9 1168.42,1284.48C1162.5,1280.43 1156.03,1276.7 1149,1273.33C1148.35,1273.02 1148.62,1288.9 1146.1,1289.98C1143.57,1291.06 1134.48,1283.05 1133.86,1279.78C1133.25,1276.5 1142.88,1270.55 1142.39,1270.34C1138.15,1268.52 1133.73,1266.84 1129.12,1265.28C1119.26,1261.95 1108.56,1259.24 1097.06,1257.23C1093.29,1256.57 1089.44,1255.99 1085.5,1255.48C1084.62,1264.72 1083.32,1273.23 1081.45,1280.98C1081.22,1281.99 1072.58,1271.09 1070.16,1272.47C1067.73,1273.85 1065.49,1286.16 1066.89,1289.26C1068.3,1292.36 1078.97,1289.88 1078.59,1291.03C1076.09,1298.39 1072.93,1304.91 1068.94,1310.52C1071.78,1319.27 1074.65,1327.61 1077.55,1335.56C1077.85,1336.37 1083.46,1322.82 1086.32,1323.65C1089.17,1324.48 1095.64,1337.24 1094.68,1340.55C1093.71,1343.85 1080.14,1342.53 1080.52,1343.52C1084.55,1354.1 1088.63,1363.93 1092.78,1373.03\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M946.28,1178.93C960.566,1170.21 974.64,1164.81 988.488,1162.71C990.65,1162.38 984.177,1176.51 987.022,1178.2C989.875,1179.9 1002.87,1175.61 1005.58,1172.86C1008.05,1170.36 1002.03,1161.67 1003.32,1161.7C1017.47,1161.95 1031.38,1165.69 1045.05,1172.86C1042.77,1180.01 1040.84,1187.52 1039.27,1195.38C1038.94,1197 1053.48,1193.62 1055.78,1196.43C1058.08,1199.24 1056.16,1210.28 1053.04,1212.25C1049.92,1214.21 1037.21,1207.15 1037.06,1208.2C1036.86,1209.63 1035.78,1218.41 1035.68,1219.39C1034.57,1230.19 1034.03,1241.54 1034.05,1253.47C1021.44,1253.97 1008.21,1255.17 994.373,1257.12C990.93,1250.18 987.39,1243.4 983.754,1236.78C977.822,1226 971.633,1215.64 965.182,1205.74C961.835,1200.59 958.419,1195.57 954.931,1190.66C954.594,1190.18 951.256,1199.18 948.866,1199.31C946.484,1199.45 940.199,1193.71 940.63,1191.46C941.068,1189.22 951.852,1186.38 951.46,1185.85C949.751,1183.51 948.027,1181.2 946.28,1178.93\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1085.5,1255.48C1084.62,1264.72 1083.32,1273.23 1081.45,1280.98C1081.22,1281.99 1072.58,1271.09 1070.16,1272.47C1067.73,1273.85 1065.49,1286.16 1066.89,1289.26C1068.3,1292.36 1078.97,1289.88 1078.59,1291.03C1076.09,1298.39 1072.93,1304.91 1068.94,1310.52C1064.16,1317.26 1058.19,1322.7 1050.77,1326.78C1050.06,1327.17 1051.66,1314.93 1049.77,1313.91C1047.87,1312.89 1040.44,1317.98 1039.41,1320.68C1038.37,1323.39 1044.31,1329.85 1043.54,1330.14C1038.43,1332.13 1032.75,1333.58 1026.42,1334.5C1023.06,1324.71 1019.54,1315.17 1015.88,1305.86C1013.06,1298.67 1010.16,1291.63 1007.17,1284.73C1006.9,1284.1 1000.72,1297.15 997.978,1296.76C995.243,1296.4 989.734,1285.64 990.752,1282.46C991.763,1279.29 1004.47,1278.6 1004.08,1277.71C1000.93,1270.69 997.696,1263.83 994.373,1257.12C1008.21,1255.17 1021.44,1253.97 1034.05,1253.47C1041.51,1253.16 1048.76,1253.11 1055.78,1253.27C1056.67,1253.3 1053.11,1237.61 1055.78,1235.11C1058.46,1232.62 1070.27,1235.21 1071.84,1238.29C1073.4,1241.38 1063.95,1253.58 1065.18,1253.65C1072.19,1254.03 1078.97,1254.64 1085.5,1255.48\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1466.8,1473.76C1492.72,1461.65 1507.96,1475.85 1521.99,1475.62C1523.01,1475.6 1515.77,1466.46 1516.74,1463.64C1517.69,1460.8 1525.69,1456.88 1527.72,1458.63C1529.74,1460.39 1528.22,1474.43 1528.89,1474.14C1536.59,1470.76 1544.4,1460.87 1553.94,1437.55C1549.73,1434.58 1545.65,1431.45 1541.71,1428.16C1535.45,1422.93 1529.54,1417.31 1524.02,1411.29C1523.34,1410.57 1535.33,1402.64 1535.43,1399.4C1535.52,1396.15 1527.46,1390.94 1524.57,1391.8C1521.68,1392.65 1518.66,1405.2 1518.1,1404.52C1514.53,1400.23 1511.16,1395.77 1507.97,1391.12C1500.44,1380.14 1493.99,1368.14 1488.76,1355.19C1479.36,1364.64 1470.1,1373.5 1461,1381.7C1460.11,1382.51 1473.32,1388.16 1473.1,1391.85C1472.89,1395.53 1462.99,1404.39 1459.69,1403.84C1456.39,1403.29 1454.07,1387.85 1453.3,1388.52C1444.27,1396.34 1435.39,1403.49 1426.65,1409.89C1434.22,1420.73 1441.43,1431.57 1448.24,1442.41C1448.93,1443.51 1436.87,1446.8 1435.96,1450.83C1435.05,1454.86 1439.58,1466.1 1442.77,1466.57C1445.98,1467.05 1454.37,1452.36 1455.15,1453.65C1459.19,1460.35 1463.07,1467.06 1466.8,1473.76\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1431.37,1530.08C1418.17,1522.25 1403.7,1517.02 1388.3,1513.71C1387.06,1513.44 1391.56,1528.27 1389.24,1530.89C1386.91,1533.5 1375.92,1532.54 1374.35,1529.41C1372.77,1526.28 1380.53,1512.21 1379.79,1512.09C1367.57,1510.04 1354.82,1509.09 1341.71,1508.89C1341.84,1504.79 1341.95,1500.68 1342.04,1496.58C1342.23,1487.36 1342.31,1478.17 1342.26,1469.02C1342.25,1467.59 1353.49,1476.17 1355.57,1474.54C1357.64,1472.9 1356.95,1461.6 1354.71,1459.21C1352.48,1456.83 1342.18,1460.98 1342.18,1460.22C1342.11,1455.64 1342.01,1451.08 1341.89,1446.51C1354.28,1445.72 1366.96,1442.49 1379.95,1437.11C1385.58,1434.77 1391.27,1432.03 1397.02,1428.9C1398.26,1428.23 1397.24,1443.23 1400.25,1444.23C1403.25,1445.24 1414.09,1438.36 1415.03,1434.95C1415.96,1431.56 1404.99,1424.34 1405.86,1423.82C1412.7,1419.69 1419.63,1415.03 1426.65,1409.89C1434.22,1420.73 1441.43,1431.57 1448.24,1442.41C1448.93,1443.51 1436.87,1446.8 1435.96,1450.83C1435.05,1454.86 1439.58,1466.1 1442.77,1466.57C1445.98,1467.05 1454.37,1452.36 1455.15,1453.65C1459.19,1460.35 1463.07,1467.06 1466.8,1473.76C1469.19,1478.07 1471.52,1482.37 1473.78,1486.68C1454.07,1494.93 1440.11,1509.58 1431.37,1530.08\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1340.25,1411.45C1323.58,1412.65 1306.9,1413.84 1290.24,1415.04C1289.15,1415.11 1294.47,1404 1292.52,1402.22C1290.58,1400.45 1280.41,1402.17 1278.56,1404.4C1276.7,1406.65 1282.1,1415.62 1281.39,1415.67C1265.75,1416.79 1251.86,1417.79 1236.23,1418.9C1237.19,1425.25 1238.02,1431.75 1238.9,1439.06C1240.51,1452.26 1241.67,1465.85 1242.52,1479.71C1256.16,1480.34 1269.54,1481.41 1281.63,1482.94C1283.25,1483.14 1275.71,1495.34 1277.87,1498.11C1280.02,1500.88 1291.87,1501.77 1294.57,1499.54C1297.26,1497.31 1292.44,1484.46 1294.03,1484.72C1311.91,1487.58 1327.92,1491.53 1342.04,1496.58C1342.23,1487.36 1342.31,1478.17 1342.26,1469.02C1342.25,1467.59 1353.49,1476.17 1355.57,1474.54C1357.64,1472.9 1356.95,1461.6 1354.71,1459.21C1352.48,1456.83 1342.18,1460.98 1342.18,1460.22C1342.11,1455.64 1342.01,1451.08 1341.89,1446.51C1341.56,1434.76 1341.01,1423.07 1340.25,1411.45\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1156.17,1514.35C1163.2,1546.3 1134.07,1559.01 1145.11,1597.1C1138.33,1598.98 1131.72,1601.48 1125.28,1604.5C1118.29,1607.78 1111.5,1611.7 1104.87,1616.18C1104.09,1616.72 1114.74,1630.21 1114.12,1634.03C1113.48,1637.87 1104,1641.16 1101.08,1639.18C1098.14,1637.21 1097.6,1621.37 1096.53,1622.18C1091.49,1626.03 1086.54,1630.21 1081.67,1634.68C1080.77,1621.98 1079.74,1609.48 1078.6,1597.19C1078.51,1596.21 1069.2,1603.83 1067.41,1601.81C1065.62,1599.78 1066.17,1587.93 1067.83,1585.04C1069.49,1582.14 1077.57,1586.47 1077.37,1584.44C1076.44,1575.19 1075.43,1566.04 1074.37,1557.01C1073.56,1550.21 1072.72,1543.48 1071.84,1536.81C1071.74,1536.03 1064,1541.94 1061.54,1540.07C1059.07,1538.21 1055.54,1527.67 1057.05,1525.64C1058.57,1523.62 1070.76,1528.87 1070.63,1527.91C1069.89,1522.63 1069.14,1517.4 1068.36,1512.21C1082.71,1510.57 1095.95,1512.67 1109.83,1514.4C1114.6,1515.01 1119.44,1515.57 1124.44,1515.92C1125.21,1515.98 1118.89,1526.88 1120.34,1529.53C1121.79,1532.18 1131.14,1534.03 1133.13,1531.83C1135.13,1529.62 1131.34,1516.26 1132.28,1516.28C1139.78,1516.42 1147.66,1515.95 1156.17,1514.35\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1342.04,1496.58C1327.92,1491.53 1311.91,1487.58 1294.03,1484.72C1292.44,1484.46 1297.26,1497.31 1294.57,1499.54C1291.87,1501.77 1280.02,1500.88 1277.87,1498.11C1275.71,1495.34 1283.25,1483.14 1281.63,1482.94C1269.54,1481.41 1256.16,1480.34 1242.52,1479.71C1242.7,1482.74 1242.87,1485.79 1243.03,1488.84C1243.77,1503.4 1244.21,1518.23 1244.49,1533.2C1250.96,1533.2 1257.12,1534.8 1262.72,1537.68C1263.61,1538.14 1250.39,1550.47 1251.21,1554.3C1252.03,1558.12 1264.55,1562.65 1267.65,1560.64C1270.75,1558.62 1269.08,1541.67 1269.78,1542.21C1276.16,1547.21 1281.47,1554.04 1285.17,1562.08C1291.68,1558.45 1298.53,1556.39 1305.63,1555.54C1306.42,1555.45 1297.54,1542.66 1298.42,1539.85C1299.29,1537.03 1308.45,1536.09 1310.89,1538.62C1313.33,1541.16 1312.33,1555.08 1313.05,1555.08C1321.42,1555.01 1330.11,1556.39 1338.98,1558.64C1339.76,1548.33 1340.41,1538.06 1340.92,1527.84C1340.99,1526.38 1328.43,1532.33 1326.44,1530.1C1324.44,1527.87 1326.46,1516.69 1328.95,1514.46C1331.45,1512.23 1341.38,1517.82 1341.42,1516.72C1341.53,1514.11 1341.62,1511.51 1341.71,1508.89C1341.84,1504.79 1341.95,1500.68 1342.04,1496.58\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1341.71,1508.89C1354.82,1509.09 1367.57,1510.04 1379.79,1512.09C1380.53,1512.21 1372.77,1526.28 1374.35,1529.41C1375.92,1532.54 1386.91,1533.5 1389.24,1530.89C1391.56,1528.27 1387.06,1513.44 1388.3,1513.71C1403.7,1517.02 1418.17,1522.25 1431.37,1530.08C1425.56,1543.7 1422.06,1559.91 1420.72,1578.53C1420.69,1578.97 1430.6,1574.51 1432.82,1576.33C1435.04,1578.14 1436.09,1587.89 1434.03,1589.4C1431.96,1590.91 1420.45,1584.6 1420.42,1585.38C1420.26,1589.54 1420.1,1594.18 1420.1,1595.14C1420.06,1600.63 1420.19,1606.3 1420.47,1612.13C1407.7,1610.57 1394.31,1607.82 1380.3,1603.86C1379.56,1603.65 1389.65,1593.62 1388.25,1590.69C1386.85,1587.77 1374.67,1584.53 1371.92,1586.3C1369.17,1588.07 1373.01,1601.72 1371.78,1601.33C1360.37,1597.79 1348.56,1593.47 1336.35,1588.38C1337.35,1578.43 1338.23,1568.51 1338.98,1558.64C1339.76,1548.33 1340.41,1538.06 1340.92,1527.84C1340.99,1526.38 1328.43,1532.33 1326.44,1530.1C1324.44,1527.87 1326.46,1516.69 1328.95,1514.46C1331.45,1512.23 1341.38,1517.82 1341.42,1516.72C1341.53,1514.11 1341.62,1511.51 1341.71,1508.89\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1420.47,1612.13C1420.19,1606.3 1420.06,1600.63 1420.1,1595.14C1420.1,1594.18 1420.26,1589.54 1420.42,1585.38C1420.45,1584.6 1431.96,1590.91 1434.03,1589.4C1436.09,1587.89 1435.04,1578.14 1432.82,1576.33C1430.6,1574.51 1420.69,1578.97 1420.72,1578.53C1422.06,1559.91 1425.56,1543.7 1431.37,1530.08C1440.11,1509.58 1454.07,1494.93 1473.78,1486.68C1476.89,1492.6 1479.88,1498.52 1482.73,1504.45C1483.53,1506.09 1471.67,1505.71 1471,1509.01C1470.33,1512.31 1475.85,1523.08 1478.71,1524.25C1481.57,1525.43 1487.6,1514.79 1488.16,1516.04C1492.11,1524.74 1495.77,1533.43 1499.14,1542.13C1492.16,1548.29 1487.18,1557.88 1484.94,1569.07C1484.76,1569.96 1495.66,1565.67 1497.94,1567.81C1500.23,1569.94 1501.02,1580.05 1498.66,1581.87C1496.28,1583.7 1483.8,1577.43 1483.72,1578.75C1483.38,1584.94 1483.83,1591.43 1485.18,1597.96C1485.89,1601.41 1486.82,1604.73 1487.94,1607.86C1476.27,1611.25 1463.85,1613.17 1450.64,1613.6C1441,1613.9 1430.94,1613.42 1420.47,1612.13\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1553.94,1437.55C1544.4,1460.87 1536.59,1470.76 1528.89,1474.14C1528.22,1474.43 1529.74,1460.39 1527.72,1458.63C1525.69,1456.88 1517.69,1460.8 1516.74,1463.64C1515.77,1466.46 1523.01,1475.6 1521.99,1475.62C1507.96,1475.85 1492.72,1461.65 1466.8,1473.76C1469.19,1478.07 1471.52,1482.37 1473.78,1486.68C1476.89,1492.6 1479.88,1498.52 1482.73,1504.45C1483.53,1506.09 1471.67,1505.71 1471,1509.01C1470.33,1512.31 1475.85,1523.08 1478.71,1524.25C1481.57,1525.43 1487.6,1514.79 1488.16,1516.04C1492.11,1524.74 1495.77,1533.43 1499.14,1542.13C1502.47,1539.2 1506.25,1537.04 1510.41,1535.87C1516.03,1534.26 1521.74,1534.62 1527.16,1536.61C1528.11,1536.96 1519.23,1546.78 1520.23,1550.13C1521.23,1553.48 1530.95,1558.45 1533.17,1556.72C1535.38,1554.99 1532.91,1539.38 1533.51,1539.77C1541.61,1544.86 1548.65,1553.66 1553.2,1564.91C1560.76,1556.07 1567.7,1546.06 1574.04,1534.86C1578.37,1527.2 1582.42,1518.98 1586.18,1510.22C1586.69,1509.01 1575.78,1506.62 1574.77,1503.69C1573.76,1500.77 1577.59,1493.14 1580.14,1492.63C1582.69,1492.14 1589.65,1501.78 1590.08,1500.68C1594.65,1488.91 1598.75,1476.26 1602.39,1462.71C1593.55,1459.47 1585.02,1455.72 1576.87,1451.48C1576.38,1451.22 1575.42,1464.45 1573.02,1465.54C1570.62,1466.64 1563.17,1461.14 1562.48,1458.06C1561.78,1454.98 1569.73,1447.59 1568.83,1447.06C1563.7,1444.1 1558.74,1440.93 1553.94,1437.55\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1499.14,1542.13C1502.47,1539.2 1506.25,1537.04 1510.41,1535.87C1516.03,1534.26 1521.74,1534.62 1527.16,1536.61C1528.11,1536.96 1519.23,1546.78 1520.23,1550.13C1521.23,1553.48 1530.95,1558.45 1533.17,1556.72C1535.38,1554.99 1532.91,1539.38 1533.51,1539.77C1541.61,1544.86 1548.65,1553.66 1553.2,1564.91C1554.8,1568.85 1556.08,1573.09 1557.01,1577.57C1558.36,1584.15 1558.81,1590.69 1558.46,1596.92C1557.63,1611.38 1552.49,1624.2 1544.37,1632.17C1540.73,1635.74 1536.49,1638.33 1531.77,1639.67C1530.57,1640.02 1534.98,1626.82 1533,1624.57C1531.01,1622.3 1521.67,1623.46 1519.86,1626.12C1518.04,1628.79 1522.97,1640.63 1522.1,1640.55C1507.94,1639.19 1494.58,1626.53 1487.94,1607.86C1486.82,1604.73 1485.89,1601.41 1485.18,1597.96C1483.83,1591.43 1483.38,1584.94 1483.72,1578.75C1483.8,1577.43 1496.28,1583.7 1498.66,1581.87C1501.02,1580.05 1500.23,1569.94 1497.94,1567.81C1495.66,1565.67 1484.76,1569.96 1484.94,1569.07C1487.18,1557.88 1492.16,1548.29 1499.14,1542.13\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1642.79,1569.2C1650.42,1553.91 1655.73,1541.71 1659.71,1529.82C1660.22,1528.26 1649.87,1532.14 1649.09,1528.97C1648.31,1525.81 1652.56,1513.07 1655.04,1510.81C1657.5,1508.53 1663.39,1517.53 1663.93,1515.35C1666.77,1504.07 1668.8,1492.07 1670.81,1477.11C1662.82,1476.51 1654.95,1475.58 1647.25,1474.33C1643.26,1473.68 1639.32,1472.95 1635.42,1472.13C1633.27,1471.67 1631.14,1471.2 1629.03,1470.69C1628.33,1470.53 1633.27,1459.39 1631.57,1456.59C1629.86,1453.77 1620.88,1451.88 1618.81,1453.81C1616.73,1455.73 1620.47,1468.5 1619.1,1468.11C1613.41,1466.5 1607.84,1464.7 1602.39,1462.71C1598.75,1476.26 1594.65,1488.91 1590.08,1500.68C1589.65,1501.78 1582.69,1492.14 1580.14,1492.63C1577.59,1493.14 1573.76,1500.77 1574.77,1503.69C1575.78,1506.62 1586.69,1509.01 1586.18,1510.22C1582.42,1518.98 1578.37,1527.2 1574.04,1534.86C1583.35,1538.16 1592.45,1541.77 1601.32,1545.79C1602.53,1546.35 1591.69,1554.77 1592.72,1558.22C1593.75,1561.67 1604.4,1567.78 1607.49,1566.5C1610.57,1565.22 1610.34,1550.07 1611.24,1550.52C1622.21,1556.01 1632.76,1562.18 1642.79,1569.2\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1670.81,1477.11C1668.8,1492.07 1666.77,1504.07 1663.93,1515.35C1663.39,1517.53 1657.5,1508.53 1655.04,1510.81C1652.56,1513.07 1648.31,1525.81 1649.09,1528.97C1649.87,1532.14 1660.22,1528.26 1659.71,1529.82C1655.73,1541.71 1650.42,1553.91 1642.79,1569.2C1649.48,1573.89 1655.94,1578.95 1662.13,1584.43C1674.52,1595.38 1685.87,1608 1695.97,1622.68C1702.48,1610.87 1711.58,1601.62 1723.93,1595.61C1720.18,1585.67 1717.09,1575.71 1714.62,1565.74C1714.47,1565.12 1726.02,1566.96 1727.88,1564.9C1729.73,1562.84 1728.2,1554.18 1725.77,1553.37C1723.33,1552.55 1713.45,1560.78 1713.27,1560.01C1712.19,1555.17 1711.24,1550.32 1710.43,1545.47C1708.54,1534.11 1707.41,1522.72 1706.96,1511.37C1706.9,1509.73 1716.12,1513.04 1718.04,1510.84C1719.97,1508.62 1720.38,1499.77 1718.5,1498.11C1716.62,1496.45 1706.74,1501.92 1706.74,1500.89C1706.72,1493.1 1707.01,1485.34 1707.59,1477.58C1701.96,1477.84 1696.39,1477.95 1690.86,1477.92C1690.07,1477.91 1695.1,1488.98 1693.71,1491.19C1692.33,1493.39 1684.12,1493.38 1682.56,1491.14C1681.01,1488.91 1685,1477.82 1684.36,1477.81C1679.8,1477.68 1675.29,1477.44 1670.81,1477.11\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1710.43,1545.47C1724.26,1532.79 1742.82,1520.77 1764.63,1510.81C1765.61,1510.36 1767.48,1523.87 1770.2,1524.96C1772.93,1526.04 1780.48,1520.27 1780.98,1517.29C1781.48,1514.3 1772.47,1507.37 1773.22,1507.05C1788.52,1500.68 1805.2,1495.33 1822.82,1491.43C1820.47,1485.45 1818.08,1479.44 1815.65,1473.41C1815.36,1472.71 1805.63,1481.81 1802.91,1481.43C1800.2,1481.05 1797.64,1473.44 1799.37,1471.13C1801.1,1468.83 1813.6,1468.37 1813.3,1467.62C1811.9,1464.21 1810.5,1460.78 1809.08,1457.36C1796.75,1461.65 1784.46,1465.26 1772.26,1468.18C1767,1469.45 1761.76,1470.59 1756.54,1471.61C1756.15,1471.69 1757.05,1458.58 1754.51,1456.94C1751.96,1455.29 1742.1,1459.08 1741.25,1461.74C1740.4,1464.41 1749.78,1472.86 1749.4,1472.92C1744.67,1473.75 1739.96,1474.47 1735.27,1475.08C1731.98,1475.52 1728.69,1475.9 1725.42,1476.24C1719.43,1476.85 1713.48,1477.3 1707.59,1477.58C1707.01,1485.34 1706.72,1493.1 1706.74,1500.89C1706.74,1501.92 1716.62,1496.45 1718.5,1498.11C1720.38,1499.77 1719.97,1508.62 1718.04,1510.84C1716.12,1513.04 1706.9,1509.73 1706.96,1511.37C1707.41,1522.72 1708.54,1534.11 1710.43,1545.47\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1822.82,1491.43C1805.2,1495.33 1788.52,1500.68 1773.22,1507.05C1772.47,1507.37 1781.48,1514.3 1780.98,1517.29C1780.48,1520.27 1772.93,1526.04 1770.2,1524.96C1767.48,1523.87 1765.61,1510.36 1764.63,1510.81C1742.82,1520.77 1724.26,1532.79 1710.43,1545.47C1711.24,1550.32 1712.19,1555.17 1713.27,1560.01C1713.45,1560.78 1723.33,1552.55 1725.77,1553.37C1728.2,1554.18 1729.73,1562.84 1727.88,1564.9C1726.02,1566.96 1714.47,1565.12 1714.62,1565.74C1717.09,1575.71 1720.18,1585.67 1723.93,1595.61C1730.49,1592.42 1737.95,1590.14 1746.41,1588.85C1747.62,1588.67 1743.13,1602.7 1745.33,1605.08C1747.52,1607.46 1757.81,1605.99 1759.55,1603.12C1761.28,1600.25 1754.8,1587.92 1755.75,1587.86C1764.24,1587.33 1773.61,1587.68 1783.95,1588.98C1783.95,1573.24 1787.01,1559.89 1793.35,1549.12C1793.93,1548.12 1798.76,1558.81 1801.41,1558.5C1804.05,1558.19 1809.68,1550.08 1809.23,1547.27C1808.77,1544.44 1798.01,1542.35 1798.67,1541.58C1806.87,1531.82 1818.59,1524.82 1834.07,1520.77C1830.44,1511.07 1826.69,1501.29 1822.82,1491.43\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1796.41,1654.57C1805.12,1645.09 1813.01,1636.55 1820.95,1629C1821.84,1628.16 1823.42,1640.5 1826.73,1641.85C1830.03,1643.19 1840.43,1640.39 1840.79,1637.05C1841.16,1633.71 1828,1622.58 1828.93,1621.8C1838.94,1613.26 1849.45,1606.28 1862.12,1600.97C1859.92,1594.22 1857.66,1587.38 1855.32,1580.47C1853,1573.6 1850.61,1566.65 1848.15,1559.64C1847.94,1559.05 1861.73,1559.36 1863.4,1556.97C1865.07,1554.58 1861.19,1546.2 1858.17,1545.3C1855.16,1544.39 1845.51,1552.15 1845.3,1551.57C1843.89,1547.59 1842.45,1543.59 1840.99,1539.56C1838.73,1533.34 1836.43,1527.08 1834.07,1520.77C1818.59,1524.82 1806.87,1531.82 1798.67,1541.58C1798.01,1542.35 1808.77,1544.44 1809.23,1547.27C1809.68,1550.08 1804.05,1558.19 1801.41,1558.5C1798.76,1558.81 1793.93,1548.12 1793.35,1549.12C1787.01,1559.89 1783.95,1573.24 1783.95,1588.98C1783.95,1595.6 1784.49,1602.64 1785.55,1610.09C1785.74,1611.42 1792.78,1603.81 1795.06,1605.06C1797.33,1606.3 1800.48,1614.91 1799.21,1617.57C1797.94,1620.23 1787.21,1619.87 1787.43,1621.01C1789.51,1631.49 1792.52,1642.68 1796.41,1654.57\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1862.12,1600.97C1849.45,1606.28 1838.94,1613.26 1828.93,1621.8C1828,1622.58 1841.16,1633.71 1840.79,1637.05C1840.43,1640.39 1830.03,1643.19 1826.73,1641.85C1823.42,1640.5 1821.84,1628.16 1820.95,1629C1813.01,1636.55 1805.12,1645.09 1796.41,1654.57C1802.21,1672.29 1809.97,1691.54 1819.57,1712.23C1827.24,1705.49 1836.1,1699.86 1846.52,1695.7C1847.9,1695.15 1845.19,1709.58 1848.14,1711.91C1851.09,1714.24 1862.87,1712.93 1864.22,1709.68C1865.57,1706.43 1855.41,1692.63 1856.24,1692.39C1865.6,1689.72 1876.11,1688.11 1887.95,1687.77C1885.41,1678.29 1882.68,1668.47 1879.76,1658.34C1879.4,1657.1 1893.41,1660.09 1894.86,1657.06C1896.32,1654.03 1891.57,1641.98 1888.47,1640.19C1885.38,1638.41 1876.68,1647.8 1876.25,1646.38C1873.67,1637.66 1870.94,1628.73 1868.09,1619.62C1866.16,1613.49 1864.17,1607.27 1862.12,1600.97\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1887.95,1687.77C1876.11,1688.11 1865.6,1689.72 1856.24,1692.39C1855.41,1692.63 1865.57,1706.43 1864.22,1709.68C1862.87,1712.93 1851.09,1714.24 1848.14,1711.91C1845.19,1709.58 1847.9,1695.15 1846.52,1695.7C1836.1,1699.86 1827.24,1705.49 1819.57,1712.23C1821.62,1716.66 1823.75,1721.14 1825.97,1725.7C1826.58,1726.95 1815.67,1725.81 1815.15,1728.73C1814.64,1731.65 1820.34,1742.21 1822.89,1743.22C1825.44,1744.22 1829.93,1733.72 1830.46,1734.77C1835.73,1745.29 1841.42,1756.14 1847.53,1767.3L1906.35,1767.3C1904.54,1757.46 1902.3,1746.64 1899.65,1734.96C1899.39,1733.77 1911.2,1737.95 1913.45,1735C1915.69,1732.06 1915.83,1718.98 1913.14,1717.28C1910.44,1715.58 1897.54,1725.78 1897.31,1724.81C1895.83,1718.54 1894.24,1712.05 1892.54,1705.36C1891.09,1699.64 1889.56,1693.78 1887.95,1687.77\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1796.41,1654.57C1790.52,1661.33 1784.46,1667.52 1778.23,1673.12C1777.73,1673.56 1786.6,1680.11 1786.31,1682.6C1786.02,1685.1 1778.88,1688.77 1776.49,1688.08C1774.11,1687.38 1772.94,1677.69 1772.02,1678.43C1766.41,1683.03 1760.66,1687.13 1754.76,1690.72C1757.99,1701.94 1759.6,1715.02 1759.06,1728.92C1758.96,1731.47 1758.79,1733.99 1758.56,1736.46C1758.5,1737.08 1750.85,1732.36 1748.71,1734.01C1746.56,1735.64 1744.22,1744.37 1745.66,1746.31C1747.1,1748.26 1757.47,1744.97 1757.35,1745.67C1756.03,1753.49 1754.04,1760.78 1751.51,1767.3L1847.53,1767.3C1841.42,1756.14 1835.73,1745.29 1830.46,1734.77C1829.93,1733.72 1825.44,1744.22 1822.89,1743.22C1820.34,1742.21 1814.64,1731.65 1815.15,1728.73C1815.67,1725.81 1826.58,1726.95 1825.97,1725.7C1823.75,1721.14 1821.62,1716.66 1819.57,1712.23C1809.97,1691.54 1802.21,1672.29 1796.41,1654.57\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1754.76,1690.72C1760.66,1687.13 1766.41,1683.03 1772.02,1678.43C1772.94,1677.69 1774.11,1687.38 1776.49,1688.08C1778.88,1688.77 1786.02,1685.1 1786.31,1682.6C1786.6,1680.11 1777.73,1673.56 1778.23,1673.12C1784.46,1667.52 1790.52,1661.33 1796.41,1654.57C1792.52,1642.68 1789.51,1631.49 1787.43,1621.01C1787.21,1619.87 1797.94,1620.23 1799.21,1617.57C1800.48,1614.91 1797.33,1606.3 1795.06,1605.06C1792.78,1603.81 1785.74,1611.42 1785.55,1610.09C1784.49,1602.64 1783.95,1595.6 1783.95,1588.98C1773.61,1587.68 1764.24,1587.33 1755.75,1587.86C1754.8,1587.92 1761.28,1600.25 1759.55,1603.12C1757.81,1605.99 1747.52,1607.46 1745.33,1605.08C1743.13,1602.7 1747.62,1588.67 1746.41,1588.85C1737.95,1590.14 1730.49,1592.42 1723.93,1595.61C1711.58,1601.62 1702.48,1610.87 1695.97,1622.68C1698.04,1625.68 1700.05,1628.76 1702,1631.94C1702.45,1632.66 1711.21,1622.31 1714.08,1623.03C1716.94,1623.75 1720.57,1633.68 1719.2,1636.24C1717.83,1638.81 1705.44,1637.69 1705.86,1638.4C1709.01,1643.93 1712.02,1649.7 1714.85,1655.75C1717.51,1654.86 1720.24,1654.45 1723.03,1654.6C1737,1655.36 1748.72,1669.75 1754.76,1690.72\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1751.51,1767.3C1754.04,1760.78 1756.03,1753.49 1757.35,1745.67C1757.47,1744.97 1747.1,1748.26 1745.66,1746.31C1744.22,1744.37 1746.56,1735.64 1748.71,1734.01C1750.85,1732.36 1758.5,1737.08 1758.56,1736.46C1758.79,1733.99 1758.96,1731.47 1759.06,1728.92C1759.6,1715.02 1757.99,1701.94 1754.76,1690.72C1748.72,1669.75 1737,1655.36 1723.03,1654.6C1720.24,1654.45 1717.51,1654.86 1714.85,1655.75C1711.61,1656.85 1708.47,1658.68 1705.51,1661.16C1704.89,1661.69 1715.62,1668.97 1715.57,1671.94C1715.52,1674.91 1707.7,1679.92 1705.18,1678.98C1702.67,1678.02 1700.93,1665.68 1700.46,1666.21C1689.83,1678.71 1682.34,1700.12 1681.38,1724.76C1681.2,1729.36 1681.26,1733.88 1681.53,1738.28C1681.58,1738.94 1693.36,1733.85 1695.67,1735.29C1697.99,1736.72 1697.68,1745.22 1695.43,1746.87C1693.18,1748.52 1682.07,1744.44 1682.16,1745.17C1683.1,1753.16 1684.77,1760.63 1687.05,1767.3L1751.51,1767.3\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1662.13,1584.43C1657.74,1593.91 1652.68,1602.47 1647.25,1610.5C1646.69,1611.33 1640.53,1598.43 1637.57,1598.67C1634.61,1598.91 1628.69,1608.81 1629.48,1611.96C1630.27,1615.11 1642.95,1616.69 1642.32,1617.55C1637.09,1624.8 1631.62,1631.67 1626.17,1638.49C1627.02,1639.55 1627.84,1640.62 1628.66,1641.72C1634.36,1649.39 1639.33,1657.98 1643.66,1667.5C1644.06,1668.39 1647.54,1657.13 1650.22,1658.47C1652.9,1659.81 1660.2,1672.5 1659.75,1675.53C1659.29,1678.55 1647.03,1675.44 1647.5,1676.63C1653.12,1691.1 1657.46,1707.5 1660.68,1725.92C1667.43,1725.61 1674.4,1725.23 1681.38,1724.76C1682.34,1700.12 1689.83,1678.71 1700.46,1666.21C1700.93,1665.68 1702.67,1678.02 1705.18,1678.98C1707.7,1679.92 1715.52,1674.91 1715.57,1671.94C1715.62,1668.97 1704.89,1661.69 1705.51,1661.16C1708.47,1658.68 1711.61,1656.85 1714.85,1655.75C1712.02,1649.7 1709.01,1643.93 1705.86,1638.4C1705.44,1637.69 1717.83,1638.81 1719.2,1636.24C1720.57,1633.68 1716.94,1623.75 1714.08,1623.03C1711.21,1622.31 1702.45,1632.66 1702,1631.94C1700.05,1628.76 1698.04,1625.68 1695.97,1622.68C1685.87,1608 1674.52,1595.38 1662.13,1584.43\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1626.17,1638.49C1631.62,1631.67 1637.09,1624.8 1642.32,1617.55C1642.95,1616.69 1630.27,1615.11 1629.48,1611.96C1628.69,1608.81 1634.61,1598.91 1637.57,1598.67C1640.53,1598.43 1646.69,1611.33 1647.25,1610.5C1652.68,1602.47 1657.74,1593.91 1662.13,1584.43C1655.94,1578.95 1649.48,1573.89 1642.79,1569.2C1632.76,1562.18 1622.21,1556.01 1611.24,1550.52C1610.34,1550.07 1610.57,1565.22 1607.49,1566.5C1604.4,1567.78 1593.75,1561.67 1592.72,1558.22C1591.69,1554.77 1602.53,1546.35 1601.32,1545.79C1592.45,1541.77 1583.35,1538.16 1574.04,1534.86C1567.7,1546.06 1560.76,1556.07 1553.2,1564.91C1554.8,1568.85 1556.08,1573.09 1557.01,1577.57C1558.36,1584.15 1558.81,1590.69 1558.46,1596.92C1568.36,1599.38 1577.44,1602.57 1585.77,1606.53C1586.81,1607.03 1578.28,1615.83 1579.2,1619.39C1580.13,1622.94 1589.02,1629.37 1591.34,1627.86C1593.66,1626.35 1592.4,1609.93 1593.13,1610.34C1606.07,1617.6 1617,1626.96 1626.17,1638.49\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1528.55,1715.59C1539.41,1718.68 1551.24,1721.07 1563.97,1722.84C1569.11,1723.54 1574.4,1724.15 1579.84,1724.67C1583.17,1707.93 1588.81,1693.92 1595.74,1681.4C1596.47,1680.06 1585.99,1681.66 1585.96,1678.42C1585.92,1675.18 1592.99,1662.98 1595.54,1661.93C1598.08,1660.89 1600.7,1672.99 1601.21,1672.19C1608.8,1660.21 1617.47,1649.41 1626.17,1638.49C1617,1626.96 1606.07,1617.6 1593.13,1610.34C1592.4,1609.93 1593.66,1626.35 1591.34,1627.86C1589.02,1629.37 1580.13,1622.94 1579.2,1619.39C1578.28,1615.83 1586.81,1607.03 1585.77,1606.53C1577.44,1602.57 1568.36,1599.38 1558.46,1596.92C1557.63,1611.38 1552.49,1624.2 1544.37,1632.17C1550.42,1643.18 1551.73,1660.19 1546.87,1678.54C1546.51,1679.91 1537.37,1669.49 1534.66,1671.03C1531.95,1672.56 1529.26,1684.48 1530.62,1687.75C1531.98,1691.01 1543.37,1689.25 1542.81,1690.64C1539.4,1699.03 1534.7,1707.5 1528.55,1715.59\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1626.17,1638.49C1617.47,1649.41 1608.8,1660.21 1601.21,1672.19C1600.7,1672.99 1598.08,1660.89 1595.54,1661.93C1592.99,1662.98 1585.92,1675.18 1585.96,1678.42C1585.99,1681.66 1596.47,1680.06 1595.74,1681.4C1588.81,1693.92 1583.17,1707.93 1579.84,1724.67C1590.67,1725.68 1602.07,1726.31 1613.96,1726.56C1615.2,1726.59 1607.12,1735.29 1609.39,1737.33C1611.67,1739.37 1625.37,1740.59 1627.58,1738.81C1629.79,1737.03 1621.82,1726.68 1622.66,1726.69C1634.86,1726.77 1647.54,1726.51 1660.68,1725.92C1657.46,1707.5 1653.12,1691.1 1647.5,1676.63C1647.03,1675.44 1659.29,1678.55 1659.75,1675.53C1660.2,1672.5 1652.9,1659.81 1650.22,1658.47C1647.54,1657.13 1644.06,1668.39 1643.66,1667.5C1639.33,1657.98 1634.36,1649.39 1628.66,1641.72C1627.84,1640.62 1627.02,1639.55 1626.17,1638.49\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1563.97,1722.84C1562.38,1727.6 1561.43,1731.99 1560.97,1736.15C1560.86,1737.07 1575.96,1735.93 1578.44,1738.31C1580.92,1740.7 1578.83,1749.39 1575.86,1750.45C1572.9,1751.52 1560.62,1743.73 1560.66,1744.69C1560.96,1752.35 1562.74,1759.52 1564.95,1767.3L1687.05,1767.3C1684.77,1760.63 1683.1,1753.16 1682.16,1745.17C1682.07,1744.44 1693.18,1748.52 1695.43,1746.87C1697.68,1745.22 1697.99,1736.72 1695.67,1735.29C1693.36,1733.85 1681.58,1738.94 1681.53,1738.28C1681.26,1733.88 1681.2,1729.36 1681.38,1724.76C1674.4,1725.23 1667.43,1725.61 1660.68,1725.92C1647.54,1726.51 1634.86,1726.77 1622.66,1726.69C1621.82,1726.68 1629.79,1737.03 1627.58,1738.81C1625.37,1740.59 1611.67,1739.37 1609.39,1737.33C1607.12,1735.29 1615.2,1726.59 1613.96,1726.56C1602.07,1726.31 1590.67,1725.68 1579.84,1724.67C1574.4,1724.15 1569.11,1723.54 1563.97,1722.84\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1528.55,1715.59C1534.7,1707.5 1539.4,1699.03 1542.81,1690.64C1543.37,1689.25 1531.98,1691.01 1530.62,1687.75C1529.26,1684.48 1531.95,1672.56 1534.66,1671.03C1537.37,1669.49 1546.51,1679.91 1546.87,1678.54C1551.73,1660.19 1550.42,1643.18 1544.37,1632.17C1540.73,1635.74 1536.49,1638.33 1531.77,1639.67C1530.57,1640.02 1534.98,1626.82 1533,1624.57C1531.01,1622.3 1521.67,1623.46 1519.86,1626.12C1518.04,1628.79 1522.97,1640.63 1522.1,1640.55C1507.94,1639.19 1494.58,1626.53 1487.94,1607.86C1476.27,1611.25 1463.85,1613.17 1450.64,1613.6C1450.3,1617.79 1450.16,1621.85 1450.2,1625.78C1450.21,1626.9 1436.26,1622.03 1434.01,1624.22C1431.76,1626.41 1433.91,1637.02 1436.7,1638.9C1439.49,1640.79 1450.63,1634.56 1450.74,1635.55C1451.42,1642.44 1452.75,1648.87 1454.7,1654.87C1456.24,1659.6 1458.16,1664.06 1460.44,1668.26C1461.07,1669.42 1447.48,1672.55 1446.97,1676.06C1446.46,1679.57 1454.3,1689.25 1457.4,1689.3C1460.49,1689.35 1464.9,1675.48 1465.54,1676.36C1470.31,1683 1476.14,1688.89 1482.95,1694.09C1495.15,1703.38 1510.49,1710.45 1528.55,1715.59\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1482.95,1694.09C1477.41,1701.07 1473.93,1707.86 1471.92,1714.64C1471.61,1715.71 1483.88,1714.23 1485.65,1716.89C1487.42,1719.55 1485.14,1729.55 1482.55,1730.59C1479.97,1731.62 1470.23,1722.34 1470.13,1723.11C1468.31,1737.03 1471.65,1751.23 1475.07,1767.3L1564.95,1767.3C1562.74,1759.52 1560.96,1752.35 1560.66,1744.69C1560.62,1743.73 1572.9,1751.52 1575.86,1750.45C1578.83,1749.39 1580.92,1740.7 1578.44,1738.31C1575.96,1735.93 1560.86,1737.07 1560.97,1736.15C1561.43,1731.99 1562.38,1727.6 1563.97,1722.84C1551.24,1721.07 1539.41,1718.68 1528.55,1715.59C1510.49,1710.45 1495.15,1703.38 1482.95,1694.09\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1409.48,1711.24C1408.21,1717.71 1407.31,1724.6 1406.71,1731.85C1406.55,1733.72 1398.64,1725.39 1396.3,1727.34C1393.94,1729.3 1391.01,1741.09 1392.64,1743.55C1394.28,1746.01 1406.11,1741.3 1406.08,1742.09C1405.73,1750.14 1405.71,1758.57 1405.93,1767.3L1475.07,1767.3C1471.65,1751.23 1468.31,1737.03 1470.13,1723.11C1470.23,1722.34 1479.97,1731.62 1482.55,1730.59C1485.14,1729.55 1487.42,1719.55 1485.65,1716.89C1483.88,1714.23 1471.61,1715.71 1471.92,1714.64C1473.93,1707.86 1477.41,1701.07 1482.95,1694.09C1476.14,1688.89 1470.31,1683 1465.54,1676.36C1464.9,1675.48 1460.49,1689.35 1457.4,1689.3C1454.3,1689.25 1446.46,1679.57 1446.97,1676.06C1447.48,1672.55 1461.07,1669.42 1460.44,1668.26C1458.16,1664.06 1456.24,1659.6 1454.7,1654.87C1442.54,1657.98 1433.17,1664.06 1426.06,1672.57C1422.5,1676.82 1419.51,1681.68 1417,1687.09C1416.59,1687.98 1410.86,1677.51 1408.5,1678.66C1406.14,1679.82 1401.94,1691.3 1402.83,1694.01C1403.72,1696.73 1414.12,1694.11 1413.83,1694.95C1412.05,1700.02 1410.62,1705.46 1409.48,1711.24\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1330.19,1639.84C1331.3,1631.83 1332.34,1623.83 1333.31,1615.85C1333.52,1614.09 1342.39,1623.2 1344.93,1621.58C1347.47,1619.96 1350.25,1609.38 1348.57,1606.15C1346.9,1602.92 1334.7,1603.95 1334.89,1602.21C1335.4,1597.59 1335.89,1592.98 1336.35,1588.38C1348.56,1593.47 1360.37,1597.79 1371.78,1601.33C1373.01,1601.72 1369.17,1588.07 1371.92,1586.3C1374.67,1584.53 1386.85,1587.77 1388.25,1590.69C1389.65,1593.62 1379.56,1603.65 1380.3,1603.86C1394.31,1607.82 1407.7,1610.57 1420.47,1612.13C1430.94,1613.42 1441,1613.9 1450.64,1613.6C1450.3,1617.79 1450.16,1621.85 1450.2,1625.78C1450.21,1626.9 1436.26,1622.03 1434.01,1624.22C1431.76,1626.41 1433.91,1637.02 1436.7,1638.9C1439.49,1640.79 1450.63,1634.56 1450.74,1635.55C1451.42,1642.44 1452.75,1648.87 1454.7,1654.87C1442.54,1657.98 1433.17,1664.06 1426.06,1672.57C1414.91,1660 1399.3,1651.39 1380.66,1647.48C1380.12,1647.37 1383.58,1664.77 1381.38,1667.1C1379.18,1669.43 1368.83,1664.98 1367.44,1661.49C1366.05,1658.01 1374.09,1646.32 1373.05,1646.17C1359.6,1644.35 1344.77,1644.85 1329.05,1647.9\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1409.48,1711.24C1393.35,1703.94 1379.25,1700.57 1366.87,1699.58C1365.94,1699.51 1371.93,1715.54 1369.63,1717.97C1367.32,1720.4 1354.89,1717.27 1353.05,1714.15C1351.2,1711.03 1359.48,1699.26 1358.55,1699.26C1342.66,1699.31 1329.86,1703.17 1319.36,1706.92C1321.06,1697.67 1322.66,1688.45 1324.19,1679.25C1324.43,1677.83 1337.04,1684 1339.33,1681.73C1341.61,1679.47 1340.1,1668.11 1337.91,1665.64C1335.72,1663.19 1325.96,1668.3 1326.17,1666.96C1327.18,1660.59 1328.13,1654.24 1329.05,1647.9C1344.77,1644.85 1359.6,1644.35 1373.05,1646.17C1374.09,1646.32 1366.05,1658.01 1367.44,1661.49C1368.83,1664.98 1379.18,1669.43 1381.38,1667.1C1383.58,1664.77 1380.12,1647.37 1380.66,1647.48C1399.3,1651.39 1414.91,1660 1426.06,1672.57C1422.5,1676.82 1419.51,1681.68 1417,1687.09C1416.59,1687.98 1410.86,1677.51 1408.5,1678.66C1406.14,1679.82 1401.94,1691.3 1402.83,1694.01C1403.72,1696.73 1414.12,1694.11 1413.83,1694.95C1412.05,1700.02 1410.62,1705.46 1409.48,1711.24\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1409.48,1711.24C1393.35,1703.94 1379.25,1700.57 1366.87,1699.58C1365.94,1699.51 1371.93,1715.54 1369.63,1717.97C1367.32,1720.4 1354.89,1717.27 1353.05,1714.15C1351.2,1711.03 1359.48,1699.26 1358.55,1699.26C1342.66,1699.31 1329.86,1703.17 1319.36,1706.92C1318.61,1711.03 1317.84,1715.14 1317.05,1719.27C1316.91,1720.05 1329.19,1718.09 1331.06,1720.43C1332.94,1722.78 1330.9,1732.2 1328.31,1733.34C1325.72,1734.48 1315.76,1726.01 1315.52,1727.23C1315.32,1728.26 1313.83,1735.76 1313.57,1737.03C1311.55,1747.08 1309.43,1757.18 1307.22,1767.3L1405.93,1767.3C1405.71,1758.57 1405.73,1750.14 1406.08,1742.09C1406.11,1741.3 1394.28,1746.01 1392.64,1743.55C1391.01,1741.09 1393.94,1729.3 1396.3,1727.34C1398.64,1725.39 1406.55,1733.72 1406.71,1731.85C1407.31,1724.6 1408.21,1717.71 1409.48,1711.24\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1278,1628.05C1281.65,1632.7 1284.81,1640.52 1286.81,1648.9C1290.41,1646.88 1296,1644.82 1302.35,1643.17C1303.25,1642.93 1308.45,1641.76 1309.22,1641.61C1316.3,1640.23 1323.76,1639.46 1330.19,1639.84C1331.3,1631.83 1332.34,1623.83 1333.31,1615.85C1333.52,1614.09 1342.39,1623.2 1344.93,1621.58C1347.47,1619.96 1350.25,1609.38 1348.57,1606.15C1346.9,1602.92 1334.7,1603.95 1334.89,1602.21C1335.4,1597.59 1335.89,1592.98 1336.35,1588.38C1337.35,1578.43 1338.23,1568.51 1338.98,1558.64C1330.11,1556.39 1321.42,1555.01 1313.05,1555.08C1312.33,1555.08 1313.33,1541.16 1310.89,1538.62C1308.45,1536.09 1299.29,1537.03 1298.42,1539.85C1297.54,1542.66 1306.42,1555.45 1305.63,1555.54C1298.53,1556.39 1291.68,1558.45 1285.17,1562.08C1288.89,1570.12 1291,1579.38 1291,1589.23C1291,1596.97 1289.69,1604.35 1287.33,1611.06C1287.04,1611.88 1277.87,1597.48 1274.96,1597.82C1272.05,1598.16 1268.3,1609.68 1269.85,1613.09C1271.4,1616.5 1284.71,1617.37 1284.26,1618.26\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1278,1628.05C1271.5,1636.21 1262.96,1641.99 1253.38,1644.23C1252.56,1644.41 1258.98,1628.9 1256.91,1626.74C1254.85,1624.58 1243.04,1628.2 1240.97,1631.28C1238.9,1634.37 1245.7,1645.25 1244.49,1645.25C1236.66,1645.25 1229.29,1642.92 1222.82,1638.8C1209.31,1630.22 1199.73,1613.84 1198.19,1594.67C1198.05,1592.87 1197.98,1591.06 1197.98,1589.23C1197.98,1578.59 1200.44,1568.65 1204.71,1560.18C1205.63,1558.36 1209.18,1571.04 1212.68,1570.43C1216.19,1569.82 1225.76,1560.19 1225.72,1556.54C1225.7,1552.9 1211.65,1549.54 1212.51,1548.56C1220.85,1539.04 1232.1,1533.2 1244.49,1533.2C1250.96,1533.2 1257.12,1534.8 1262.72,1537.68C1263.61,1538.14 1250.39,1550.47 1251.21,1554.3C1252.03,1558.12 1264.55,1562.65 1267.65,1560.64C1270.75,1558.62 1269.08,1541.67 1269.78,1542.21C1276.16,1547.21 1281.47,1554.04 1285.17,1562.08C1288.89,1570.12 1291,1579.38 1291,1589.23C1291,1596.97 1289.69,1604.35 1287.33,1611.06C1287.04,1611.88 1277.87,1597.48 1274.96,1597.82C1272.05,1598.16 1268.3,1609.68 1269.85,1613.09C1271.4,1616.5 1284.71,1617.37 1284.26,1618.26\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1330.19,1639.84C1323.76,1639.46 1316.3,1640.23 1309.22,1641.61C1308.45,1641.76 1303.25,1642.93 1302.35,1643.17C1296,1644.82 1290.41,1646.88 1286.81,1648.9C1289.4,1659.75 1290.05,1671.52 1287.33,1678.63C1287,1679.48 1280.2,1668.4 1277.4,1669.1C1274.6,1669.8 1269.38,1679.97 1270.53,1682.82C1271.67,1685.66 1284.68,1685.2 1284.26,1686.17C1280.41,1695.15 1275.53,1704.93 1269.55,1715.49C1271.87,1717.48 1273.99,1719.48 1275.93,1721.51C1276.76,1722.38 1268.56,1725.38 1268.54,1728.56C1268.53,1731.74 1273.56,1740.5 1275.86,1740.61C1278.16,1740.71 1281.65,1728.2 1282.34,1729.16C1290.49,1740.48 1293.79,1752.8 1293.79,1767.3L1307.22,1767.3C1309.43,1757.18 1311.55,1747.08 1313.57,1737.03C1313.83,1735.76 1315.32,1728.26 1315.52,1727.23C1315.76,1726.01 1325.72,1734.48 1328.31,1733.34C1330.9,1732.2 1332.94,1722.78 1331.06,1720.43C1329.19,1718.09 1316.91,1720.05 1317.05,1719.27C1317.84,1715.14 1318.61,1711.03 1319.36,1706.92C1321.06,1697.67 1322.66,1688.45 1324.19,1679.25C1324.43,1677.83 1337.04,1684 1339.33,1681.73C1341.61,1679.47 1340.1,1668.11 1337.91,1665.64C1335.72,1663.19 1325.96,1668.3 1326.17,1666.96C1327.18,1660.59 1328.13,1654.24 1329.05,1647.9C1329.43,1645.22 1329.82,1642.53 1330.19,1639.84\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1027.08,1564C1044.46,1564.69 1060.2,1562.33 1074.37,1557.01C1073.56,1550.21 1072.72,1543.48 1071.84,1536.81C1071.74,1536.03 1064,1541.94 1061.54,1540.07C1059.07,1538.21 1055.54,1527.67 1057.05,1525.64C1058.57,1523.62 1070.76,1528.87 1070.63,1527.91C1069.89,1522.63 1069.14,1517.4 1068.36,1512.21C1067.22,1504.67 1066.04,1497.22 1064.79,1489.85C1051.49,1490.07 1038.89,1491.55 1027.08,1494.41C1014.43,1497.48 1002.68,1502.13 991.904,1508.5C990.886,1509.1 999.992,1518.01 999.239,1520.64C998.487,1523.27 989.953,1525.42 987.39,1524.26C984.836,1523.1 984.648,1513.14 983.88,1513.69C976.858,1518.64 970.299,1524.42 964.226,1531.06C966.255,1533.46 967.799,1535.77 968.739,1537.93C970.761,1542.57 970.369,1547.39 968.473,1552.12C975.792,1554.62 982.9,1556.72 989.804,1558.42C990.917,1558.7 988.064,1550.66 990.321,1548.89C992.586,1547.13 1001.85,1545.85 1003.42,1547.81C1005,1549.77 998.73,1560.44 999.764,1560.65C1009.29,1562.54 1018.38,1563.66 1027.08,1564\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1027.08,1564C1026.2,1574.51 1024.79,1584.4 1022.81,1593.65C1022.58,1594.74 1033.6,1588.18 1035.23,1591.28C1036.87,1594.39 1035.11,1610.22 1032.63,1612.29C1030.15,1614.35 1020.62,1602.81 1020.38,1603.68C1017.26,1615.16 1013.17,1625.5 1008.1,1634.68C1015.22,1639.07 1022.21,1643.15 1029,1646.92C1037.15,1651.43 1045.01,1655.49 1052.5,1659.06C1053.35,1659.46 1044.7,1668.2 1045.55,1671.36C1046.4,1674.52 1055.31,1679.51 1057.61,1677.98C1059.9,1676.47 1058.51,1661.84 1059.32,1662.21C1068.23,1666.22 1076.52,1669.46 1083.97,1671.88C1083.31,1659.29 1082.55,1646.89 1081.67,1634.68C1080.77,1621.98 1079.74,1609.48 1078.6,1597.19C1078.51,1596.21 1069.2,1603.83 1067.41,1601.81C1065.62,1599.78 1066.17,1587.93 1067.83,1585.04C1069.49,1582.14 1077.57,1586.47 1077.37,1584.44C1076.44,1575.19 1075.43,1566.04 1074.37,1557.01C1060.2,1562.33 1044.46,1564.69 1027.08,1564\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1051.04,1420.87L1100.88,1389.78C1103.73,1395.3 1106.61,1400.5 1109.52,1405.37C1110.03,1406.22 1100.35,1409.23 1099.81,1412.39C1099.28,1415.56 1104.09,1424.53 1106.32,1424.35C1108.55,1424.18 1112.82,1410.78 1113.2,1411.37C1118.43,1419.6 1123.74,1426.79 1129.12,1432.98C1133.61,1438.15 1138.15,1442.62 1142.74,1446.41C1134.04,1455.13 1127.36,1462.62 1122.36,1470.19C1121.48,1471.52 1138.79,1471.91 1140.41,1474.86C1142.05,1477.83 1136.14,1486.85 1132.12,1487.94C1128.09,1489.03 1116.8,1480.11 1116.24,1481.39C1112.2,1490.7 1110.24,1501.01 1109.83,1514.4C1095.95,1512.67 1082.71,1510.57 1068.36,1512.21C1067.22,1504.67 1066.04,1497.22 1064.79,1489.85C1062.87,1478.41 1060.81,1467.17 1058.63,1456.15C1058.53,1455.64 1048.56,1462.11 1045.62,1460.82C1042.66,1459.54 1038.99,1450.37 1040.94,1448.47C1042.88,1446.59 1057.46,1450.33 1057.29,1449.48C1055.31,1439.78 1053.23,1430.24 1051.04,1420.87\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1142.74,1446.41C1134.04,1455.13 1127.36,1462.62 1122.36,1470.19C1121.48,1471.52 1138.79,1471.91 1140.41,1474.86C1142.05,1477.83 1136.14,1486.85 1132.12,1487.94C1128.09,1489.03 1116.8,1480.11 1116.24,1481.39C1112.2,1490.7 1110.24,1501.01 1109.83,1514.4C1114.6,1515.01 1119.44,1515.57 1124.44,1515.92C1125.21,1515.98 1118.89,1526.88 1120.34,1529.53C1121.79,1532.18 1131.14,1534.03 1133.13,1531.83C1135.13,1529.62 1131.34,1516.26 1132.28,1516.28C1139.78,1516.42 1147.66,1515.95 1156.17,1514.35C1163.88,1512.9 1171.83,1511.13 1180,1509.06C1181.37,1508.7 1179.15,1521.56 1182.38,1523.84C1185.6,1526.12 1197.95,1525.69 1199.33,1522.75C1200.7,1519.81 1189.82,1506.44 1190.63,1506.21C1207.29,1501.54 1224.79,1495.7 1243.03,1488.84C1242.87,1485.79 1242.7,1482.74 1242.52,1479.71C1241.67,1465.85 1240.51,1452.26 1238.9,1439.06C1227.32,1448.63 1215.93,1455.42 1204.76,1459.21C1202.85,1459.86 1207.73,1447.86 1205.63,1446.46C1203.54,1445.05 1193.99,1448.22 1192.18,1450.78C1190.37,1453.34 1195.55,1461.68 1194.76,1461.82C1184.85,1463.6 1175.12,1462.92 1165.58,1459.63C1157.84,1456.97 1150.22,1452.59 1142.74,1446.41\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1156.17,1514.35C1163.2,1546.3 1134.07,1559.01 1145.11,1597.1C1151.73,1595.25 1158.51,1593.96 1165.47,1593.3C1166.5,1593.2 1162.83,1608.97 1164.69,1611.26C1166.56,1613.54 1175.23,1610.09 1176.65,1607.02C1178.07,1603.94 1172.42,1592.85 1173.21,1592.82C1181.3,1592.59 1189.61,1593.18 1198.19,1594.67C1198.05,1592.87 1197.98,1591.06 1197.98,1589.23C1197.98,1578.59 1200.44,1568.65 1204.71,1560.18C1205.63,1558.36 1209.18,1571.04 1212.68,1570.43C1216.19,1569.82 1225.76,1560.19 1225.72,1556.54C1225.7,1552.9 1211.65,1549.54 1212.51,1548.56C1220.85,1539.04 1232.1,1533.2 1244.49,1533.2C1244.21,1518.23 1243.77,1503.4 1243.03,1488.84C1224.79,1495.7 1207.29,1501.54 1190.63,1506.21C1189.82,1506.44 1200.7,1519.81 1199.33,1522.75C1197.95,1525.69 1185.6,1526.12 1182.38,1523.84C1179.15,1521.56 1181.37,1508.7 1180,1509.06C1171.83,1511.13 1163.88,1512.9 1156.17,1514.35\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1293.79,1767.3C1293.79,1752.8 1290.49,1740.48 1282.34,1729.16C1281.65,1728.2 1278.16,1740.71 1275.86,1740.61C1273.56,1740.5 1268.53,1731.74 1268.54,1728.56C1268.56,1725.38 1276.76,1722.38 1275.93,1721.51C1273.99,1719.48 1271.87,1717.48 1269.55,1715.49C1262.03,1709.04 1253.39,1703.05 1243.4,1697.62C1242.38,1697.07 1244.27,1708.84 1241.27,1710.73C1238.29,1712.62 1226.88,1712.01 1225.46,1708.95C1224.05,1705.88 1233.72,1692.74 1232.79,1692.31C1224.93,1688.69 1216.34,1685.39 1206.91,1682.43C1205.24,1689.58 1203.91,1697.25 1203.07,1705.6C1202.17,1714.65 1201.84,1724.49 1202.29,1735.24C1202.36,1736.9 1212,1729.1 1214.45,1731.31C1216.9,1733.52 1218.9,1746.08 1216.99,1748.5C1215.07,1750.91 1202.89,1745.02 1202.95,1745.81C1203.52,1752.61 1204.4,1759.77 1205.62,1767.3L1293.79,1767.3\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1125.28,1604.5C1136.13,1617.06 1143.8,1633.34 1148.2,1653.43C1148.4,1654.35 1139.11,1651.71 1137.39,1654.65C1135.67,1657.57 1135.82,1669.79 1137.89,1671.02C1139.97,1672.25 1149.66,1660.98 1149.84,1662.06C1151.65,1673.07 1152.58,1685.12 1152.6,1698.21C1159.04,1697.96 1165.48,1698.19 1171.93,1698.86C1172.91,1698.97 1167.8,1708.42 1169.56,1711.25C1171.32,1714.08 1180.8,1717.77 1182.46,1715.88C1184.12,1713.98 1178.86,1699.77 1179.54,1699.88C1187.38,1701.14 1195.22,1703.05 1203.07,1705.6C1203.91,1697.25 1205.24,1689.58 1206.91,1682.43C1208.06,1677.52 1209.37,1672.88 1210.8,1668.45C1211.32,1666.81 1200.69,1668.89 1199.33,1665.98C1197.97,1663.08 1200.11,1652.32 1202.63,1651.01C1205.15,1649.7 1214.18,1658.81 1214.44,1658.13C1217.1,1651.22 1219.96,1644.84 1222.82,1638.8C1209.31,1630.22 1199.73,1613.84 1198.19,1594.67C1189.61,1593.18 1181.3,1592.59 1173.21,1592.82C1172.42,1592.85 1178.07,1603.94 1176.65,1607.02C1175.23,1610.09 1166.56,1613.54 1164.69,1611.26C1162.83,1608.97 1166.5,1593.2 1165.47,1593.3C1158.51,1593.96 1151.73,1595.25 1145.11,1597.1C1138.33,1598.98 1131.72,1601.48 1125.28,1604.5\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1125.28,1604.5C1136.13,1617.06 1143.8,1633.34 1148.2,1653.43C1148.4,1654.35 1139.11,1651.71 1137.39,1654.65C1135.67,1657.57 1135.82,1669.79 1137.89,1671.02C1139.97,1672.25 1149.66,1660.98 1149.84,1662.06C1151.65,1673.07 1152.58,1685.12 1152.6,1698.21C1141.75,1698.62 1130.89,1700.36 1120.04,1703.51C1119.08,1703.79 1126.29,1713.14 1125.1,1715.63C1123.9,1718.12 1115.27,1719.94 1112.85,1718.43C1110.44,1716.93 1111.92,1706.12 1110.62,1706.59C1102.37,1709.61 1094.12,1713.46 1085.87,1718.16C1085.61,1710 1085.32,1701.92 1085,1693.9C1084.97,1693.31 1074.85,1703.28 1072.79,1702.31C1070.72,1701.36 1070.66,1691 1072.63,1688.12C1074.6,1685.23 1084.67,1686.19 1084.61,1685.01C1084.41,1680.62 1084.2,1676.24 1083.97,1671.88C1083.31,1659.29 1082.55,1646.89 1081.67,1634.68C1086.54,1630.21 1091.49,1626.03 1096.53,1622.18C1097.6,1621.37 1098.14,1637.21 1101.08,1639.18C1104,1641.16 1113.48,1637.87 1114.12,1634.03C1114.74,1630.21 1104.09,1616.72 1104.87,1616.18C1111.5,1611.7 1118.29,1607.78 1125.28,1604.5\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1203.07,1705.6C1195.22,1703.05 1187.38,1701.14 1179.54,1699.88C1178.86,1699.77 1184.12,1713.98 1182.46,1715.88C1180.8,1717.77 1171.32,1714.08 1169.56,1711.25C1167.8,1708.42 1172.91,1698.97 1171.93,1698.86C1165.48,1698.19 1159.04,1697.96 1152.6,1698.21C1141.75,1698.62 1130.89,1700.36 1120.04,1703.51C1119.08,1703.79 1126.29,1713.14 1125.1,1715.63C1123.9,1718.12 1115.27,1719.94 1112.85,1718.43C1110.44,1716.93 1111.92,1706.12 1110.62,1706.59C1102.37,1709.61 1094.12,1713.46 1085.87,1718.16C1086.04,1723.87 1086.19,1729.61 1086.32,1735.39C1086.4,1738.75 1086.47,1742.11 1086.52,1745.5C1086.54,1746.18 1094.7,1742.41 1096.55,1743.61C1098.42,1744.83 1099.35,1751.58 1097.7,1752.77C1096.04,1753.95 1086.61,1750.26 1086.62,1750.7C1086.7,1756.2 1086.77,1761.73 1086.83,1767.3L1205.62,1767.3C1204.4,1759.77 1203.52,1752.61 1202.95,1745.81C1202.89,1745.02 1215.07,1750.91 1216.99,1748.5C1218.9,1746.08 1216.9,1733.52 1214.45,1731.31C1212,1729.1 1202.36,1736.9 1202.29,1735.24C1201.84,1724.49 1202.17,1714.65 1203.07,1705.6\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2145.13,488.394C2153.03,477.703 2162.13,468.936 2172.44,462.161C2173.47,461.484 2170.58,474.761 2173.56,476.081C2176.53,477.401 2188.82,473.35 2190.28,470.078C2191.75,466.806 2181.58,456.829 2182.34,456.45C2203.09,446.058 2228.09,442.755 2257.41,446.995L2257.41,391.574C2251.45,388.222 2244.91,385.702 2237.97,384.132C2236.77,383.859 2240.36,399.117 2238.19,401.623C2236.03,404.13 2226.92,402.369 2224.98,399.173C2223.04,395.976 2228.08,382.553 2226.55,382.444C2219.18,381.913 2211.49,382.412 2203.7,384.059C2188.02,387.374 2174.15,394.887 2163.24,405.017C2157.09,410.734 2151.9,417.285 2147.86,424.387C2147.16,425.623 2160.78,427.603 2161.72,430.581C2162.68,433.558 2156.6,441.824 2153.58,442.25C2150.56,442.675 2144.01,432.149 2143.61,433.136C2141.49,438.317 2139.97,443.707 2139.12,449.212C2138.09,455.845 2138.03,462.647 2139.08,469.45C2140.13,476.25 2142.2,482.599 2145.13,488.394\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2139.12,449.212C2125.83,446.295 2114.02,441.998 2103.93,436.536C2103.37,436.235 2108.48,429.336 2107.53,426.368C2106.58,423.4 2100.04,417.767 2098.22,418.73C2096.39,419.694 2097.29,432.619 2096.58,432.15C2088.13,426.592 2081.22,420.097 2076.05,412.831C2065.18,425.279 2060.37,444.324 2060.76,463.327C2060.91,470.99 2061.9,478.646 2063.68,485.86C2063.85,486.54 2071.65,476.886 2074.21,477.629C2076.75,478.371 2080.3,487.462 2078.99,490.314C2077.68,493.167 2065.96,493.648 2066.35,494.742C2068.77,501.46 2071.93,507.56 2075.79,512.615C2079.55,517.551 2083.97,521.49 2089,524.037C2089.76,524.42 2088.49,512.491 2090.98,511.175C2093.47,509.857 2102.84,513.52 2103.93,516.134C2105.02,518.747 2096.3,526.649 2097.52,526.855C2101.94,527.601 2107.16,528.113 2113.13,527.063C2117.1,526.367 2121.38,524.983 2125.99,522.523C2126.95,522.01 2127.66,535.914 2130.46,536.712C2133.25,537.509 2141.8,530.836 2142.77,527.309C2143.73,523.782 2135.11,516.473 2136.23,515.547C2141.18,511.454 2146.41,506.065 2151.92,499.014C2149.32,495.73 2147.04,492.179 2145.13,488.394C2142.2,482.599 2140.13,476.25 2139.08,469.45C2138.03,462.647 2138.09,455.845 2139.12,449.212\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1997.4,445.828C2006.44,445.671 2015.49,446.551 2024.53,448.597C2025.45,448.806 2017.68,459.598 2018.56,461.992C2019.44,464.386 2027.47,464.845 2029.79,462.962C2032.1,461.079 2031.45,450.388 2032.46,450.694C2041.89,453.549 2051.32,457.713 2060.76,463.327C2060.91,470.99 2061.9,478.646 2063.68,485.86C2063.85,486.54 2071.65,476.886 2074.21,477.629C2076.75,478.371 2080.3,487.462 2078.99,490.314C2077.68,493.167 2065.96,493.648 2066.35,494.742C2068.77,501.46 2071.93,507.56 2075.79,512.615C2061.19,524.336 2046.17,530.497 2030.82,532.503C2024.82,533.287 2018.77,533.436 2012.68,533.034C2011.64,532.965 2015.66,543.78 2013.61,546.006C2011.57,548.231 2001.98,548.698 2000.42,546.387C1998.87,544.075 2004.96,532.239 2004.25,532.136C1997.74,531.188 1991.18,529.663 1984.59,527.659C1985.54,521.947 1986.48,516.205 1987.42,510.434C1987.59,509.4 1997.39,517.914 1999.74,516.456C2002.08,514.997 2003.3,504.146 2001.48,501.682C1999.66,499.217 1988.66,502.727 1988.83,501.671C1989.69,496.315 1990.54,490.934 1991.38,485.529C1992.72,476.968 1994.05,468.344 1995.35,459.655C1996.04,455.064 1996.72,450.455 1997.4,445.828\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2029.75,643.146C2019.58,643.834 2010.64,643.075 2002.64,641.218C2001.58,640.971 2007.22,629.924 2005.53,626.686C2003.86,623.449 1994.81,619.913 1992.56,621.793C1990.32,623.673 1993.32,638.439 1992.1,637.968C1982.76,634.336 1974.77,629.127 1967.47,623.101C1968.24,619.105 1969.01,615.093 1969.77,611.066C1970,609.872 1957.72,612.518 1956.01,610.079C1954.3,607.64 1956.96,597.649 1959.52,596.433C1962.06,595.217 1971.19,603.484 1971.33,602.784C1973.08,593.405 1974.81,583.94 1976.52,574.391C1979.27,559.036 1981.95,543.46 1984.59,527.659C1991.18,529.663 1997.74,531.188 2004.25,532.136C2004.96,532.239 1998.87,544.075 2000.42,546.387C2001.98,548.698 2011.57,548.231 2013.61,546.006C2015.66,543.78 2011.64,532.965 2012.68,533.034C2018.77,533.436 2024.82,533.287 2030.82,532.503C2031.68,544.032 2032.26,555.527 2032.56,566.981C2032.57,567.448 2041.29,559.021 2043.01,560.404C2044.92,561.938 2045.77,574.777 2044.05,577.582C2042.34,580.389 2032.73,576.313 2032.74,577.243C2032.84,587.64 2032.69,598.006 2032.26,608.336C2031.78,619.986 2030.96,631.591 2029.75,643.146\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2124.97,604.12C2109.86,597.474 2094.74,594.302 2079.64,594.766C2078.89,594.789 2081.4,606.448 2079.57,608.832C2077.75,611.216 2070.14,611.299 2068.69,609.069C2067.23,606.838 2071.9,595.317 2070.84,595.448C2057.98,597.05 2045.12,601.311 2032.26,608.336C2032.69,598.006 2032.84,587.64 2032.74,577.243C2032.73,576.313 2042.34,580.389 2044.05,577.582C2045.77,574.777 2044.92,561.938 2043.01,560.404C2041.29,559.021 2032.57,567.448 2032.56,566.981C2032.26,555.527 2031.68,544.032 2030.82,532.503C2046.17,530.497 2061.19,524.336 2075.79,512.615C2079.55,517.551 2083.97,521.49 2089,524.037C2089.76,524.42 2088.49,512.491 2090.98,511.175C2093.47,509.857 2102.84,513.52 2103.93,516.134C2105.02,518.747 2096.3,526.649 2097.52,526.855C2101.94,527.601 2107.16,528.113 2113.13,527.063C2115.54,537.389 2120.34,558.04 2122.34,573.412C2123.68,583.683 2124.55,593.919 2124.97,604.12\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2257.41,446.995C2228.09,442.755 2203.09,446.058 2182.34,456.45C2181.58,456.829 2191.75,466.806 2190.28,470.078C2188.82,473.35 2176.53,477.401 2173.56,476.081C2170.58,474.761 2173.47,461.484 2172.44,462.161C2162.13,468.936 2153.03,477.703 2145.13,488.394C2147.04,492.179 2149.32,495.73 2151.92,499.014C2160.67,510.035 2173.03,518.07 2187.26,522.032C2188.35,522.333 2183.85,506.843 2186.42,504.242C2188.99,501.64 2200.86,503.111 2202.69,506.423C2204.53,509.735 2196.44,523.982 2197.43,524.115C2206.24,525.3 2215.55,525 2225.01,522.998C2237.05,520.452 2248.03,515.392 2257.41,508.615L2257.41,446.995\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2122.34,573.412C2131.63,572.877 2140.93,572.342 2150.22,571.807C2151.47,571.735 2145.54,581.837 2148.07,584.042C2150.61,586.248 2162.79,587.208 2165.42,585.038C2168.03,582.869 2162.78,571.085 2163.79,571.026C2183.74,569.876 2203.7,568.728 2223.66,567.579C2224.93,567.506 2219.44,578.435 2222.08,580.564C2224.72,582.693 2236.85,582.656 2239.5,580.354C2242.15,578.053 2235.72,566.885 2237.97,566.755C2244.45,566.381 2250.93,566.009 2257.41,565.636L2257.41,508.615C2248.03,515.392 2237.05,520.452 2225.01,522.998C2215.55,525 2206.24,525.3 2197.43,524.115C2196.44,523.982 2204.53,509.735 2202.69,506.423C2200.86,503.111 2188.99,501.64 2186.42,504.242C2183.85,506.843 2188.35,522.333 2187.26,522.032C2173.03,518.07 2160.67,510.035 2151.92,499.014C2146.41,506.065 2141.18,511.454 2136.23,515.547C2135.11,516.473 2143.73,523.782 2142.77,527.309C2141.8,530.836 2133.25,537.509 2130.46,536.712C2127.66,535.914 2126.95,522.01 2125.99,522.523C2121.38,524.983 2117.1,526.367 2113.13,527.063C2115.54,537.389 2120.34,558.04 2122.34,573.412\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2162.61,626.131C2172.19,627.203 2181.68,627.608 2191.1,627.321C2192.52,627.277 2188.51,641.113 2190.55,643.463C2192.61,645.813 2201.61,644.208 2203.39,641.421C2205.16,638.634 2200.18,626.828 2201.22,626.739C2220.32,625.123 2239.06,620.566 2257.41,612.813L2257.41,565.636C2250.93,566.009 2244.45,566.381 2237.97,566.755C2235.72,566.885 2242.15,578.053 2239.5,580.354C2236.85,582.656 2224.72,582.693 2222.08,580.564C2219.44,578.435 2224.93,567.506 2223.66,567.579C2203.7,568.728 2183.74,569.876 2163.79,571.026C2162.78,571.085 2168.03,582.869 2165.42,585.038C2162.79,587.208 2150.61,586.248 2148.07,584.042C2145.54,581.837 2151.47,571.735 2150.22,571.807C2140.93,572.342 2131.63,572.877 2122.34,573.412C2123.68,583.683 2124.55,593.919 2124.97,604.12C2125.18,609.013 2125.28,613.897 2125.28,618.773C2137.85,622.281 2150.3,624.756 2162.61,626.131\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2164.12,675.05C2183.2,679.254 2201.5,682.119 2218.56,682.906C2219.64,682.956 2216.26,668.275 2218.03,665.492C2219.79,662.709 2227.49,663.269 2229.17,666.207C2230.85,669.146 2227.4,683.126 2228.12,683.125C2238.37,683.111 2248.17,682.249 2257.41,680.366L2257.41,612.813C2239.06,620.566 2220.32,625.123 2201.22,626.739C2200.18,626.828 2205.16,638.634 2203.39,641.421C2201.61,644.208 2192.61,645.813 2190.55,643.463C2188.51,641.113 2192.52,627.277 2191.1,627.321C2181.68,627.608 2172.19,627.203 2162.61,626.131C2163.87,642.879 2164.4,659.223 2164.12,675.05\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2148.47,775.481C2154.16,758.7 2158.21,740.567 2160.77,721.343C2161.47,716.165 2162.05,710.908 2162.52,705.576C2162.66,704.104 2176.12,710.962 2178.36,709.302C2180.61,707.642 2178.49,698.21 2176,695.616C2173.51,693.023 2163.35,694.781 2163.41,693.743C2163.78,687.599 2164.01,681.366 2164.12,675.05C2164.4,659.223 2163.87,642.879 2162.61,626.131C2150.3,624.756 2137.85,622.281 2125.28,618.773C2125.28,628.565 2124.87,638.323 2124.08,648.048C2123.98,649.278 2113.33,639.395 2111.26,641.16C2109.2,642.924 2109.7,655.927 2111.7,658.633C2113.69,661.338 2123.3,656.447 2123.2,657.392C2122.17,667.037 2120.76,676.648 2119,686.226C2116.92,697.502 2114.35,708.731 2111.32,719.913C2111.05,720.876 2102.82,710.785 2100.45,712.229C2098.08,713.673 2095.72,725.738 2097.08,728.577C2098.45,731.416 2108.86,728.626 2108.67,729.262C2105.35,740.513 2101.55,751.715 2097.34,762.867C2102.98,764.172 2108.59,765.499 2114.14,766.842C2115.28,767.119 2116.08,753.404 2119.53,751.279C2122.97,749.154 2133.77,751.019 2134.82,754.092C2135.88,757.164 2124.52,769.381 2125.87,769.716C2133.52,771.619 2141.06,773.546 2148.47,775.481\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2119,686.226C2105.05,679.628 2090.39,674.703 2074.82,671.9C2073.94,671.738 2076.56,683.441 2074.25,684.916C2071.95,686.391 2062.42,683.149 2061.01,680.752C2059.61,678.354 2067.06,670.684 2065.81,670.528C2053.23,668.967 2040.06,668.785 2026.22,670.209C2027.63,661.219 2028.81,652.199 2029.75,643.146C2030.96,631.591 2031.78,619.986 2032.26,608.336C2045.12,601.311 2057.98,597.05 2070.84,595.448C2071.9,595.317 2067.23,606.838 2068.69,609.069C2070.14,611.299 2077.75,611.216 2079.57,608.832C2081.4,606.448 2078.89,594.789 2079.64,594.766C2094.74,594.302 2109.86,597.474 2124.97,604.12C2125.18,609.013 2125.28,613.897 2125.28,618.773C2125.28,628.565 2124.87,638.323 2124.08,648.048C2123.98,649.278 2113.33,639.395 2111.26,641.16C2109.2,642.924 2109.7,655.927 2111.7,658.633C2113.69,661.338 2123.3,656.447 2123.2,657.392C2122.17,667.037 2120.76,676.648 2119,686.226\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2029.75,643.146C2019.58,643.834 2010.64,643.075 2002.64,641.218C2001.58,640.971 2007.22,629.924 2005.53,626.686C2003.86,623.449 1994.81,619.913 1992.56,621.793C1990.32,623.673 1993.32,638.439 1992.1,637.968C1982.76,634.336 1974.77,629.127 1967.47,623.101C1966.71,627.053 1965.94,630.991 1965.18,634.914C1962.3,649.572 1959.37,664.017 1956.39,678.252C1954.16,688.853 1951.92,699.338 1949.64,709.708C1949.34,711.054 1958.4,708.31 1959.51,710.543C1960.62,712.778 1958.28,721.776 1956.31,723.111C1954.33,724.445 1947.82,717.924 1947.68,718.55C1946.27,724.842 1944.86,731.09 1943.44,737.297C1949.06,737.75 1954.73,738.277 1960.43,738.872C1961.01,738.931 1956.86,751.923 1958.57,754.254C1960.28,756.586 1968.69,755.233 1970.71,752.859C1972.72,750.485 1969.88,739.915 1970.68,740.01C1971.88,740.15 1973.07,740.292 1974.26,740.438C1985.47,741.805 1996.79,743.414 2008.14,745.221C2011.22,735.893 2013.98,726.522 2016.44,717.112C2016.95,715.154 2026.39,726.169 2028.82,724.515C2031.27,722.86 2032.69,710.218 2031.08,707.186C2029.46,704.154 2018.94,707.079 2019.12,706.322C2021.95,694.346 2024.3,682.306 2026.22,670.209C2027.63,661.219 2028.81,652.199 2029.75,643.146\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2119,686.226C2105.05,679.628 2090.39,674.703 2074.82,671.9C2073.94,671.738 2076.56,683.441 2074.25,684.916C2071.95,686.391 2062.42,683.149 2061.01,680.752C2059.61,678.354 2067.06,670.684 2065.81,670.528C2053.23,668.967 2040.06,668.785 2026.22,670.209C2024.3,682.306 2021.95,694.346 2019.12,706.322C2018.94,707.079 2029.46,704.154 2031.08,707.186C2032.69,710.218 2031.27,722.86 2028.82,724.515C2026.39,726.169 2016.95,715.154 2016.44,717.112C2013.98,726.522 2011.22,735.893 2008.14,745.221C2012.81,745.964 2017.48,746.742 2022.15,747.549C2030.09,748.92 2038.02,750.379 2045.94,751.911C2046.93,752.104 2042.3,762.205 2044.4,764.937C2046.5,767.67 2055.89,769.993 2058.58,768.306C2061.26,766.619 2058.35,754.373 2060.48,754.812C2069.1,756.578 2077.65,758.421 2086.14,760.32C2089.89,761.158 2093.62,762.008 2097.34,762.867C2101.55,751.715 2105.35,740.513 2108.67,729.262C2108.86,728.626 2098.45,731.416 2097.08,728.577C2095.72,725.738 2098.08,713.673 2100.45,712.229C2102.82,710.785 2111.05,720.876 2111.32,719.913C2114.35,708.731 2116.92,697.502 2119,686.226\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2160.77,721.343C2180.58,728.607 2199.79,734.475 2218.36,738.853C2219.53,739.129 2215.44,752.558 2217.06,755.358C2218.68,758.158 2226.1,758.008 2228.12,755.654C2230.12,753.3 2228.09,741.021 2229.12,741.235C2238.73,743.225 2248.16,744.8 2257.41,745.948L2257.41,680.366C2248.17,682.249 2238.37,683.111 2228.12,683.125C2227.4,683.126 2230.85,669.146 2229.17,666.207C2227.49,663.269 2219.79,662.709 2218.03,665.492C2216.26,668.275 2219.64,682.956 2218.56,682.906C2201.5,682.119 2183.2,679.254 2164.12,675.05C2164.01,681.366 2163.78,687.599 2163.41,693.743C2163.35,694.781 2173.51,693.023 2176,695.616C2178.49,698.21 2180.61,707.642 2178.36,709.302C2176.12,710.962 2162.66,704.104 2162.52,705.576C2162.05,710.908 2161.47,716.165 2160.77,721.343\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2257.41,745.948C2248.16,744.8 2238.73,743.225 2229.12,741.235C2228.09,741.021 2230.12,753.3 2228.12,755.654C2226.1,758.008 2218.68,758.158 2217.06,755.358C2215.44,752.558 2219.53,739.129 2218.36,738.853C2199.79,734.475 2180.58,728.607 2160.77,721.343C2158.21,740.567 2154.16,758.7 2148.47,775.481C2172.71,781.804 2195.52,788.209 2216.02,794.139C2217.03,794.432 2214,781.782 2215.77,779.706C2217.54,777.629 2225.09,778.843 2226.61,781.68C2228.14,784.517 2224.14,796.499 2224.92,796.728C2236.67,800.162 2247.57,803.399 2257.41,806.325L2257.41,745.948\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2152.55,842.451C2166.98,830.133 2187.22,846.757 2211.28,860.68C2212.02,861.103 2213.06,849.269 2215.3,848.193C2217.52,847.116 2223.92,851.358 2224.65,854.211C2225.38,857.064 2218.53,864.711 2219.69,865.309C2231.53,871.428 2244.17,876.131 2257.41,876.002L2257.41,806.325C2247.57,803.399 2236.67,800.162 2224.92,796.728C2224.14,796.499 2228.14,784.517 2226.61,781.68C2225.09,778.843 2217.54,777.629 2215.77,779.706C2214,781.782 2217.03,794.432 2216.02,794.139C2195.52,788.209 2172.71,781.804 2148.47,775.481C2143.53,786.807 2141.59,796.762 2141.67,805.807C2141.68,807.288 2150.11,799.252 2152.45,801.095C2154.8,802.938 2157.35,814.195 2155.74,816.866C2154.14,819.536 2142.63,816.084 2142.83,817.116C2144.62,826.204 2148.28,834.454 2152.55,842.451\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2257.41,876.002C2244.17,876.131 2231.53,871.428 2219.69,865.309C2218.53,864.711 2225.38,857.064 2224.65,854.211C2223.92,851.358 2217.52,847.116 2215.3,848.193C2213.06,849.269 2212.02,861.103 2211.28,860.68C2187.22,846.757 2166.98,830.133 2152.55,842.451C2146.26,847.815 2141.07,858.674 2137.16,877.631C2140.06,879.315 2142.96,881.008 2145.86,882.729C2153.89,887.495 2161.87,892.4 2169.74,897.369C2170.85,898.069 2163.62,906.102 2164.99,909.415C2166.36,912.719 2175.36,918.084 2177.97,917.237C2180.57,916.39 2179.37,903.516 2180.63,904.326C2188.23,909.231 2195.67,914.154 2202.92,919.031C2206.45,921.396 2209.93,923.761 2213.35,926.089C2214.14,926.632 2208.49,936.286 2209.18,939.46C2209.87,942.644 2215.69,946.656 2217.48,945.184C2219.28,943.702 2219.14,930.056 2219.95,930.617C2222.85,932.614 2225.7,934.583 2228.51,936.534C2232.42,939.249 2236.23,941.908 2239.94,944.512C2240.69,945.037 2235.72,958.767 2236.77,961.886C2237.83,965.015 2244.59,965.318 2246.28,963.248C2247.97,961.168 2246.2,948.92 2246.93,949.426C2250.54,951.975 2254.04,954.441 2257.41,956.816L2257.41,876.002\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2079.78,848.211C2085.22,836.938 2088.15,824.036 2089.12,809.854C2089.29,807.315 2078.41,812.572 2076.27,809.085C2074.13,805.598 2074.1,791.893 2076.28,788.932C2078.47,785.971 2089.42,793.11 2089.35,791.321C2088.96,781.435 2087.85,771.07 2086.14,760.32C2089.89,761.158 2093.62,762.008 2097.34,762.867C2102.98,764.172 2108.59,765.499 2114.14,766.842C2115.28,767.119 2116.08,753.404 2119.53,751.279C2122.97,749.154 2133.77,751.019 2134.82,754.092C2135.88,757.164 2124.52,769.381 2125.87,769.716C2133.52,771.619 2141.06,773.546 2148.47,775.481C2143.53,786.807 2141.59,796.762 2141.67,805.807C2141.68,807.288 2150.11,799.252 2152.45,801.095C2154.8,802.938 2157.35,814.195 2155.74,816.866C2154.14,819.536 2142.63,816.084 2142.83,817.116C2144.62,826.204 2148.28,834.454 2152.55,842.451C2146.26,847.815 2141.07,858.674 2137.16,877.631C2129.87,873.425 2122.56,869.349 2115.27,865.474C2112.05,863.763 2108.84,862.088 2105.63,860.45C2105.05,860.156 2114.87,848.892 2114.56,845.533C2114.24,842.174 2106.3,838.356 2103.73,840.297C2101.16,842.239 2100,857.625 2099.1,857.183C2092.61,853.981 2086.15,850.981 2079.78,848.211\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2012.06,829.131C2015.67,818.836 2018.73,808.249 2020.77,797.13C2021.83,791.31 2022.62,785.345 2023.06,779.2C2023.14,778.011 2010.96,780.279 2008.56,777.399C2006.17,774.521 2006.19,763.501 2008.68,761.926C2011.16,760.35 2023.46,769.514 2023.46,767.945C2023.46,761.373 2023.05,754.587 2022.15,747.549C2030.09,748.92 2038.02,750.379 2045.94,751.911C2046.93,752.104 2042.3,762.205 2044.4,764.937C2046.5,767.67 2055.89,769.993 2058.58,768.306C2061.26,766.619 2058.35,754.373 2060.48,754.812C2069.1,756.578 2077.65,758.421 2086.14,760.32C2087.85,771.07 2088.96,781.435 2089.35,791.321C2089.42,793.11 2078.47,785.971 2076.28,788.932C2074.1,791.893 2074.13,805.598 2076.27,809.085C2078.41,812.572 2089.29,807.315 2089.12,809.854C2088.15,824.036 2085.22,836.938 2079.78,848.211C2071.98,844.816 2064.31,841.779 2056.82,839.165C2049.97,836.791 2043.28,834.767 2036.8,833.166C2035.59,832.862 2043.06,823.506 2041.57,820.886C2040.07,818.265 2030.58,815.802 2027.85,817.44C2025.12,819.078 2026.51,830.94 2025.19,830.713C2020.68,829.938 2016.3,829.404 2012.06,829.131\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2020.77,797.13C2002.15,793.132 1984.27,795.51 1966.7,798.954C1966.23,799.046 1970.16,787.154 1968.35,785.327C1966.55,783.501 1957.5,785.449 1955.87,787.996C1954.24,790.544 1959.22,800.474 1958.55,800.613C1949.08,802.59 1939.68,804.639 1930.3,805.912C1914.83,808.01 1899.4,808.006 1883.71,802.115C1884.37,799.917 1885.05,797.728 1885.75,795.549C1886.94,791.849 1888.2,788.175 1889.54,784.528C1890.02,783.215 1879.21,782.7 1878.2,779.242C1877.2,775.785 1880.98,764.606 1883.52,763.785C1886.07,762.966 1892.7,775.262 1893.46,774.32C1902.12,763.645 1908.38,755.928 1912.18,735.57C1922.4,735.856 1932.84,736.445 1943.44,737.297C1949.06,737.75 1954.73,738.277 1960.43,738.872C1961.01,738.931 1956.86,751.923 1958.57,754.254C1960.28,756.586 1968.69,755.233 1970.71,752.859C1972.72,750.485 1969.88,739.915 1970.68,740.01C1971.88,740.15 1973.07,740.292 1974.26,740.438C1985.47,741.805 1996.79,743.414 2008.14,745.221C2012.81,745.964 2017.48,746.742 2022.15,747.549C2023.05,754.587 2023.46,761.373 2023.46,767.945C2023.46,769.514 2011.16,760.35 2008.68,761.926C2006.19,763.501 2006.17,774.521 2008.56,777.399C2010.96,780.279 2023.14,778.011 2023.06,779.2C2022.62,785.345 2021.83,791.31 2020.77,797.13\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1878.86,820.545C1861.26,813.511 1845.72,808.209 1830.33,807.482C1829.03,807.42 1833.28,823.098 1830.81,826.115C1828.33,829.132 1817.59,828.619 1815.49,825.584C1813.39,822.549 1819.68,807.727 1818.21,807.906C1806.39,809.336 1794.35,813.871 1781.24,822.798C1779.17,813.811 1777.46,804.894 1776.07,796.039C1775.78,794.174 1787.34,798.462 1789.5,795.614C1791.64,792.767 1791.54,781.247 1788.97,778.953C1786.41,776.659 1774.3,783.457 1774.1,781.854C1773.09,773.506 1772.35,765.207 1771.83,756.948C1778.85,754.639 1785.84,752.481 1792.82,750.491C1806.09,746.707 1819.26,743.54 1832.22,741.131C1833.28,740.933 1826.35,756.847 1828.25,759.27C1830.14,761.692 1841.41,758.953 1843.61,755.665C1845.79,752.378 1840.13,739.748 1841.4,739.545C1846.74,738.697 1852.04,737.985 1857.29,737.419C1859.26,737.207 1861.25,737.012 1863.25,736.833C1878.76,735.454 1895.17,735.092 1912.18,735.57C1908.38,755.928 1902.12,763.645 1893.46,774.32C1892.7,775.262 1886.07,762.966 1883.52,763.785C1880.98,764.606 1877.2,775.785 1878.2,779.242C1879.21,782.7 1890.02,783.215 1889.54,784.528C1888.2,788.175 1886.94,791.849 1885.75,795.549C1885.05,797.728 1884.37,799.917 1883.71,802.115C1881.91,808.184 1880.29,814.327 1878.86,820.545\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1723.13,857.708C1722.59,846.84 1720.12,836.828 1715.93,827.577C1714.99,825.482 1709.76,835.53 1706.69,834.454C1703.63,833.368 1697.04,824.132 1697.54,821.094C1698.04,818.057 1710.26,817.086 1709.7,816.227C1703.79,807.133 1696.06,798.842 1686.75,791.246C1690.66,789.415 1694.59,787.606 1698.54,785.823C1705.33,782.759 1712.16,779.772 1719.01,776.879C1724.94,774.385 1730.88,771.962 1736.83,769.622C1737.74,769.266 1731.42,757.059 1733.07,753.379C1734.73,749.698 1744.36,745.51 1746.76,747.541C1749.14,749.571 1745.9,766.126 1747.4,765.562C1755.54,762.51 1763.69,759.629 1771.83,756.948C1772.35,765.207 1773.09,773.506 1774.1,781.854C1774.3,783.457 1786.41,776.659 1788.97,778.953C1791.54,781.247 1791.64,792.767 1789.5,795.614C1787.34,798.462 1775.78,794.174 1776.07,796.039C1777.46,804.894 1779.17,813.811 1781.24,822.798C1784.54,837.132 1788.74,851.653 1794.06,866.395C1787.22,868.474 1781.08,872.579 1776.11,878.128C1769.92,871.64 1763.3,866.855 1756.32,863.533C1755.19,862.999 1754.66,872.174 1752.15,873.398C1749.65,874.621 1742.13,873.112 1741.28,870.876C1740.41,868.649 1747.95,860.284 1747.02,860.018C1739.4,857.837 1731.42,857.156 1723.13,857.708\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1686.75,791.246C1696.06,798.842 1703.79,807.133 1709.7,816.227C1710.26,817.086 1698.04,818.057 1697.54,821.094C1697.04,824.132 1703.63,833.368 1706.69,834.454C1709.76,835.53 1714.99,825.482 1715.93,827.577C1720.12,836.828 1722.59,846.84 1723.13,857.708C1709.28,858.628 1694.56,862.99 1679.29,869.606C1669.73,873.747 1659.94,878.772 1650.01,884.376C1648.93,884.992 1649.87,868.723 1647.41,867.398C1644.96,866.082 1636.53,872.652 1635.28,876.462C1634.02,880.281 1641,889.593 1639.85,890.284C1636.74,892.143 1633.63,894.038 1630.5,895.971C1623.49,888.186 1617.61,880.658 1612.69,873.37C1611.89,872.183 1622.18,871.125 1623.05,867.609C1623.93,864.103 1620.67,852.978 1617.94,852.325C1615.19,851.662 1607.1,864.49 1606.64,863.68C1601.71,855.104 1598.1,846.84 1595.56,838.834C1604.4,833.8 1613.56,828.693 1622.95,823.591C1632.73,818.286 1642.76,812.983 1653.01,807.759C1654.37,807.063 1650.4,821.362 1653.09,822.981C1655.78,824.6 1667.25,820.981 1669.16,817.475C1671.08,813.969 1663.65,802.399 1664.57,801.945C1671.88,798.317 1679.27,794.741 1686.75,791.246\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1595.56,838.834C1598.1,846.84 1601.71,855.104 1606.64,863.68C1607.1,864.49 1615.19,851.662 1617.94,852.325C1620.67,852.978 1623.93,864.103 1623.05,867.609C1622.18,871.125 1611.89,872.183 1612.69,873.37C1617.61,880.658 1623.49,888.186 1630.5,895.971C1625.23,899.228 1619.94,902.596 1614.64,906.029C1611.48,908.072 1608.31,910.142 1605.14,912.231C1595.14,918.801 1585.09,925.519 1575.09,932.099C1574.4,932.559 1573.43,916.114 1570.75,914.992C1568.05,913.86 1559.76,921.47 1558.93,925.335C1558.11,929.2 1566.97,937.417 1565.81,938.172C1562.09,940.574 1558.39,942.957 1554.7,945.285C1549.28,936.617 1543.89,928.114 1538.53,919.786C1531.11,908.265 1523.73,897.075 1516.41,886.17C1529.38,878.174 1544.63,868.769 1561.64,858.619C1563.08,857.763 1562.28,870.849 1565.04,872.072C1567.8,873.306 1577.19,869.165 1578.18,865.999C1579.18,862.833 1570.27,853.502 1571,853.061C1578.88,848.423 1587.08,843.656 1595.56,838.834\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1659.06,974.143C1649.98,966.091 1642.05,957.267 1635.27,947.659C1634.55,946.638 1646.24,946.077 1646.68,942.506C1647.12,938.927 1641.08,927.359 1637.9,926.218C1634.73,925.077 1628.59,937.335 1627.63,935.669C1622.36,926.421 1618.02,916.547 1614.64,906.029C1611.48,908.072 1608.31,910.142 1605.14,912.231C1595.14,918.801 1585.09,925.519 1575.09,932.099C1574.4,932.559 1573.43,916.114 1570.75,914.992C1568.05,913.86 1559.76,921.47 1558.93,925.335C1558.11,929.2 1566.97,937.417 1565.81,938.172C1562.09,940.574 1558.39,942.957 1554.7,945.285C1561.38,955.997 1568.1,966.975 1574.86,978.238C1578.71,984.643 1582.56,991.149 1586.44,997.747C1586.78,998.327 1574.72,1001.08 1573.83,1003.82C1572.92,1006.55 1578.33,1014.15 1581.04,1014.18C1583.76,1014.21 1589.66,1003.25 1590.1,1004C1593.27,1009.44 1596.45,1014.95 1599.63,1020.5C1601.75,1018.56 1603.88,1016.63 1606.04,1014.71C1607.1,1013.77 1608.68,1029.83 1611.92,1030.97C1615.15,1032.11 1625.1,1025.45 1625.47,1021.57C1625.84,1017.7 1613.25,1008.44 1614.12,1007.7C1619.66,1003.01 1625.35,998.428 1631.16,993.956C1637.94,988.757 1644.89,983.723 1652.02,978.855C1654.35,977.263 1656.7,975.699 1659.06,974.143\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1715.3,942.699C1707.83,934.537 1701.48,925.62 1696.17,916.013C1695.4,914.624 1709.15,914.679 1709.81,911.108C1710.48,907.547 1703.55,896.09 1700.16,894.609C1696.77,893.136 1690.26,904.096 1689.47,902.247C1685.11,892.014 1681.74,881.118 1679.29,869.606C1669.73,873.747 1659.94,878.772 1650.01,884.376C1648.93,884.992 1649.87,868.723 1647.41,867.398C1644.96,866.082 1636.53,872.652 1635.28,876.462C1634.02,880.281 1641,889.593 1639.85,890.284C1636.74,892.143 1633.63,894.038 1630.5,895.971C1625.23,899.228 1619.94,902.596 1614.64,906.029C1618.02,916.547 1622.36,926.421 1627.63,935.669C1628.59,937.335 1634.73,925.077 1637.9,926.218C1641.08,927.359 1647.12,938.927 1646.68,942.506C1646.24,946.077 1634.55,946.638 1635.27,947.659C1642.05,957.267 1649.98,966.091 1659.06,974.143C1664.16,970.794 1669.35,967.545 1674.61,964.389C1676.09,963.496 1676.47,974.926 1679.74,975.892C1683,976.858 1693.45,973.048 1694.23,970.186C1695,967.315 1683.77,959.033 1684.39,958.684C1685.43,958.104 1686.53,957.478 1687.56,956.908C1696.77,951.773 1706.03,947.043 1715.3,942.699\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1679.29,869.606C1681.74,881.118 1685.11,892.014 1689.47,902.247C1690.26,904.096 1696.77,893.136 1700.16,894.609C1703.55,896.09 1710.48,907.547 1709.81,911.108C1709.15,914.679 1695.4,914.624 1696.17,916.013C1701.48,925.62 1707.83,934.537 1715.3,942.699C1719.7,940.638 1724.12,938.66 1728.53,936.773C1732.15,935.218 1735.78,933.727 1739.42,932.292C1740.4,931.896 1747.29,929.264 1748.22,928.924C1753.6,926.936 1758.96,925.077 1764.31,923.356C1763.69,920.025 1763.36,916.574 1763.36,913.022C1763.36,910.344 1763.55,907.713 1763.91,905.145C1764.11,903.783 1771.76,911.946 1774.67,910.381C1777.58,908.808 1782.8,898.096 1781.35,895.713C1779.89,893.33 1765.7,896.955 1765.98,896.072C1767.5,891.342 1769.63,886.962 1772.26,883.069C1773.45,881.321 1774.74,879.674 1776.11,878.128C1769.92,871.64 1763.3,866.855 1756.32,863.533C1755.19,862.999 1754.66,872.174 1752.15,873.398C1749.65,874.621 1742.13,873.112 1741.28,870.876C1740.41,868.649 1747.95,860.284 1747.02,860.018C1739.4,857.837 1731.42,857.156 1723.13,857.708C1714.15,858.305 1704.8,860.348 1695.18,863.516C1689.96,865.233 1684.66,867.28 1679.29,869.606\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1794.06,866.395C1797.36,865.382 1800.82,864.849 1804.39,864.849C1812.16,864.849 1819.43,867.389 1825.63,871.806C1826.88,872.698 1817.34,879.453 1817.71,883.115C1818.08,886.787 1824.92,894.112 1827.86,893.808C1830.78,893.504 1834.31,880.032 1835.26,881.311C1840.5,888.324 1844.02,897.139 1845.08,906.848C1845.3,908.872 1845.42,910.933 1845.42,913.022C1845.42,919.556 1844.3,925.786 1842.3,931.464C1841.99,932.347 1832.97,919.399 1830.28,920.108C1827.58,920.817 1824.68,932.549 1826.11,935.724C1827.54,938.899 1839.38,938.218 1838.85,939.157C1836.34,943.712 1833.2,947.733 1829.56,951.055C1822.61,957.414 1813.88,961.196 1804.39,961.196C1802.7,961.196 1808.99,949.85 1806.71,946.868C1804.43,943.896 1793.24,941.365 1790.7,943.353C1788.17,945.331 1792.75,959.254 1791.51,958.776C1777.89,953.484 1767.42,940.031 1764.31,923.356C1763.69,920.025 1763.36,916.574 1763.36,913.022C1763.36,910.344 1763.55,907.713 1763.91,905.145C1764.11,903.783 1771.76,911.946 1774.67,910.381C1777.58,908.808 1782.8,898.096 1781.35,895.713C1779.89,893.33 1765.7,896.955 1765.98,896.072C1767.5,891.342 1769.63,886.962 1772.26,883.069C1773.45,881.321 1774.74,879.674 1776.11,878.128C1781.08,872.579 1787.22,868.474 1794.06,866.395\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1878.86,820.545C1861.26,813.511 1845.72,808.209 1830.33,807.482C1829.03,807.42 1833.28,823.098 1830.81,826.115C1828.33,829.132 1817.59,828.619 1815.49,825.584C1813.39,822.549 1819.68,807.727 1818.21,807.906C1806.39,809.336 1794.35,813.871 1781.24,822.798C1784.54,837.132 1788.74,851.653 1794.06,866.395C1797.36,865.382 1800.82,864.849 1804.39,864.849C1812.16,864.849 1819.43,867.389 1825.63,871.806C1826.88,872.698 1817.34,879.453 1817.71,883.115C1818.08,886.787 1824.92,894.112 1827.86,893.808C1830.78,893.504 1834.31,880.032 1835.26,881.311C1840.5,888.324 1844.02,897.139 1845.08,906.848C1854.12,906.084 1863.03,905.707 1871.83,905.707C1871.05,891.747 1871.19,878.146 1872.18,864.876C1872.32,863.008 1881.61,872.505 1883.73,870.83C1885.85,869.155 1886.61,857.809 1884.87,854.828C1883.14,851.837 1873.19,854.027 1873.32,852.904C1874.13,845.865 1875.18,838.926 1876.47,832.077C1877.19,828.204 1877.99,824.36 1878.86,820.545\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1912.18,908.495C1912.81,892.4 1915.47,879.25 1918.56,867.297C1918.9,865.981 1908.53,869.671 1907.2,867.03C1905.87,864.389 1908.09,853.53 1910.57,851.45C1913.05,849.371 1921.51,856.512 1922.07,854.542C1926.53,838.797 1930.71,824.156 1930.3,805.912C1914.83,808.01 1899.4,808.006 1883.71,802.115C1881.91,808.184 1880.29,814.327 1878.86,820.545C1877.99,824.36 1877.19,828.204 1876.47,832.077C1875.18,838.926 1874.13,845.865 1873.32,852.904C1873.19,854.027 1883.14,851.837 1884.87,854.828C1886.61,857.809 1885.85,869.155 1883.73,870.83C1881.61,872.505 1872.32,863.008 1872.18,864.876C1871.19,878.146 1871.05,891.747 1871.83,905.707C1876.61,905.707 1881.36,905.817 1886.07,906.038C1886.57,906.065 1880.82,916.611 1882.31,918.976C1883.8,921.341 1893.21,922.298 1895,920.209C1896.79,918.13 1892.4,906.415 1893.06,906.461C1897.41,906.774 1901.74,907.188 1906.02,907.694C1908.09,907.933 1910.14,908.2 1912.18,908.495\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1930.3,805.912C1930.71,824.156 1926.53,838.797 1922.07,854.542C1921.51,856.512 1913.05,849.371 1910.57,851.45C1908.09,853.53 1905.87,864.389 1907.2,867.03C1908.53,869.671 1918.9,865.981 1918.56,867.297C1915.47,879.25 1912.81,892.4 1912.18,908.495C1918.15,909.341 1924.02,910.381 1929.79,911.605C1933.82,912.461 1937.8,913.409 1941.72,914.449C1944.19,890.836 1948.14,872.017 1953.81,859.76C1956.38,854.22 1959.46,849.509 1963.03,845.57C1963.88,844.622 1965.8,855.702 1968.76,856.42C1971.71,857.137 1980.31,852.932 1980.78,849.877C1981.25,846.831 1970.47,838.871 1971.56,838.126C1982.49,830.729 1996.3,828.118 2012.06,829.131C2015.67,818.836 2018.73,808.249 2020.77,797.13C2002.15,793.132 1984.27,795.51 1966.7,798.954C1966.23,799.046 1970.16,787.154 1968.35,785.327C1966.55,783.501 1957.5,785.449 1955.87,787.996C1954.24,790.544 1959.22,800.474 1958.55,800.613C1949.08,802.59 1939.68,804.639 1930.3,805.912\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2002.35,940.473C2009.25,921.268 2017.73,902.375 2027.99,883.833C2028.77,882.434 2033.15,895.225 2036.03,894.443C2038.92,893.661 2045.6,882.683 2045.3,879.131C2044.98,875.569 2033.46,874.263 2034.16,873.094C2040.99,861.646 2048.53,850.328 2056.82,839.165C2049.97,836.791 2043.28,834.767 2036.8,833.166C2035.59,832.862 2043.06,823.506 2041.57,820.886C2040.07,818.265 2030.58,815.802 2027.85,817.44C2025.12,819.078 2026.51,830.94 2025.19,830.713C2020.68,829.938 2016.3,829.404 2012.06,829.131C1996.3,828.118 1982.49,830.729 1971.56,838.126C1970.47,838.871 1981.25,846.831 1980.78,849.877C1980.31,852.932 1971.71,857.137 1968.76,856.42C1965.8,855.702 1963.88,844.622 1963.03,845.57C1959.46,849.509 1956.38,854.22 1953.81,859.76C1948.14,872.017 1944.19,890.836 1941.72,914.449C1945.69,915.507 1949.61,916.648 1953.48,917.89C1954.74,918.295 1955.9,903.47 1959.01,901.97C1962.12,900.461 1971.23,905.578 1972.12,908.863C1973,912.139 1963.08,921.194 1964.31,921.663C1977.81,926.743 1990.54,933.028 2002.35,940.473\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2056.82,839.165C2048.53,850.328 2040.99,861.646 2034.16,873.094C2033.46,874.263 2044.98,875.569 2045.3,879.131C2045.6,882.683 2038.92,893.661 2036.03,894.443C2033.15,895.225 2028.77,882.434 2027.99,883.833C2017.73,902.375 2009.25,921.268 2002.35,940.473C2010.75,945.764 2018.68,951.644 2026.08,958.095C2031.39,962.723 2036.43,967.647 2041.18,972.864C2042.05,973.803 2033.07,979.269 2033.03,982.932C2032.97,986.594 2038.4,995.189 2040.88,994.812C2043.35,994.434 2047.21,979.821 2047.88,980.649C2051.01,984.496 2053.99,988.49 2056.82,992.621C2060.56,974.567 2065.7,957.763 2071.96,941.991C2072.32,941.052 2075.94,950.678 2078.34,950.346C2080.75,950.024 2086.93,942.681 2086.39,940.031C2085.85,937.371 2074.73,935.227 2075.09,934.399C2085.94,909.111 2099.7,886.474 2115.27,865.474C2112.05,863.763 2108.84,862.088 2105.63,860.45C2105.05,860.156 2114.87,848.892 2114.56,845.533C2114.24,842.174 2106.3,838.356 2103.73,840.297C2101.16,842.239 2100,857.625 2099.1,857.183C2092.61,853.981 2086.15,850.981 2079.78,848.211C2071.98,844.816 2064.31,841.779 2056.82,839.165\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2127.25,977.291C2125.8,959.42 2125.51,946.012 2126.17,935.43C2126.26,934.049 2133.54,942.488 2135.69,940.923C2137.85,939.35 2140.5,928.629 2139.09,926.007C2137.68,923.384 2127.07,926.172 2127.22,925.178C2130.03,906.332 2136.8,897.572 2145.86,882.729C2142.96,881.008 2140.06,879.315 2137.16,877.631C2129.87,873.425 2122.56,869.349 2115.27,865.474C2099.7,886.474 2085.94,909.111 2075.09,934.399C2074.73,935.227 2085.85,937.371 2086.39,940.031C2086.93,942.681 2080.75,950.024 2078.34,950.346C2075.94,950.678 2072.32,941.052 2071.96,941.991C2065.7,957.763 2060.56,974.567 2056.82,992.621C2059.65,996.762 2062.33,1001.05 2064.86,1005.48C2065.23,1006.14 2069.93,991.407 2072.2,991.508C2074.46,991.609 2078.92,1002.36 2078.45,1006.09C2077.97,1009.83 2068.9,1012.98 2069.38,1013.91C2071.74,1018.61 2073.93,1023.45 2075.95,1028.45C2083.6,1023.57 2091.06,1018.12 2098.22,1011.76C2099.16,1010.93 2091.27,1005.87 2091.81,1002.45C2092.34,999.026 2099.16,990.809 2101.43,991.223C2103.7,991.646 2104.74,1005.64 2105.43,1004.95C2113.15,997.158 2120.47,988.094 2127.25,977.291\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2127.25,977.291C2125.8,959.42 2125.51,946.012 2126.17,935.43C2126.26,934.049 2133.54,942.488 2135.69,940.923C2137.85,939.35 2140.5,928.629 2139.09,926.007C2137.68,923.384 2127.07,926.172 2127.22,925.178C2130.03,906.332 2136.8,897.572 2145.86,882.729C2153.89,887.495 2161.87,892.4 2169.74,897.369C2170.85,898.069 2163.62,906.102 2164.99,909.415C2166.36,912.719 2175.36,918.084 2177.97,917.237C2180.57,916.39 2179.37,903.516 2180.63,904.326C2188.23,909.231 2195.67,914.154 2202.92,919.031C2199.76,933.313 2196.76,947.567 2193.91,961.776C2193.6,963.331 2201.27,959.438 2202.16,962.411C2203.06,965.383 2201.06,977.87 2199.31,979.61C2197.57,981.349 2191.95,971.65 2191.72,972.864C2189.33,985.103 2187.05,997.324 2184.89,1009.51C2175.88,1001.07 2167.13,994.379 2158.64,989.281C2157.7,988.72 2164.27,975.248 2163.13,972.34C2161.97,969.441 2153.95,969.809 2151.76,971.852C2149.57,973.895 2151.09,985.14 2149.99,984.606C2142.21,980.852 2134.63,978.459 2127.25,977.291\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2228.51,936.534C2223.95,993.459 2219.38,1050.38 2214.81,1107.32C2208.51,1106.64 2202.25,1105.69 2196,1104.54C2195.03,1104.36 2201.9,1088.89 2200.77,1085.5C2199.63,1082.1 2191.5,1081.26 2189.19,1084.12C2186.88,1086.99 2188.17,1102.98 2186.89,1102.71C2181.61,1101.57 2176.36,1100.31 2171.11,1098.94C2172.13,1091.09 2173.2,1083.25 2174.33,1075.37C2175.54,1066.93 2176.81,1058.47 2178.13,1050C2178.37,1048.49 2184.85,1057.29 2186.53,1055.41C2188.2,1053.52 2189.29,1041.49 2188.19,1038.7C2187.09,1035.9 2179.75,1039.85 2179.95,1038.63C2181.52,1028.94 2183.17,1019.23 2184.89,1009.51C2187.05,997.324 2189.33,985.103 2191.72,972.864C2191.95,971.65 2197.57,981.349 2199.31,979.61C2201.06,977.87 2203.06,965.383 2202.16,962.411C2201.27,959.438 2193.6,963.331 2193.91,961.776C2196.76,947.567 2199.76,933.313 2202.92,919.031C2206.45,921.396 2209.93,923.761 2213.35,926.089C2214.14,926.632 2208.49,936.286 2209.18,939.46C2209.87,942.644 2215.69,946.656 2217.48,945.184C2219.28,943.702 2219.14,930.056 2219.95,930.617C2222.85,932.614 2225.7,934.583 2228.51,936.534\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2228.51,936.534C2223.95,993.459 2219.38,1050.38 2214.81,1107.32C2219.63,1107.83 2224.47,1108.2 2229.33,1108.38C2230.86,1108.45 2227.64,1091.2 2229.31,1088.22C2230.97,1085.24 2237.83,1087.12 2239.3,1090.5C2240.78,1093.88 2237.27,1108.53 2238.17,1108.52C2244.54,1108.47 2250.95,1108.09 2257.41,1107.32L2257.41,956.816C2254.04,954.441 2250.54,951.975 2246.93,949.426C2246.2,948.92 2247.97,961.168 2246.28,963.248C2244.59,965.318 2237.83,965.015 2236.77,961.886C2235.72,958.767 2240.69,945.037 2239.94,944.512C2236.23,941.908 2232.42,939.249 2228.51,936.534\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2065.21,379.231C2057.51,382.049 2049.8,382.861 2042.08,381.95C2040.88,381.808 2047.09,369.687 2045.75,367.137C2044.42,364.586 2036.03,364.437 2034.08,366.649C2032.13,368.861 2034.73,380.592 2034.04,380.41C2025.41,378.138 2016.77,373.928 2008.14,368.313C2009.28,359.512 2010.42,350.649 2011.53,341.725C2011.72,340.208 2001.74,343.289 1999.87,340.041C1998,336.793 1998.12,323.764 2000.28,322.235C2002.45,320.705 2012.76,331.81 2012.88,330.866C2014.5,317.659 2016.08,304.319 2017.63,290.842C2032.22,293.653 2045.95,296.77 2058.27,301.911C2059.65,302.489 2050.66,313.686 2051.41,317.084C2052.15,320.483 2060.12,324.149 2062.7,322.302C2065.29,320.455 2066.06,305.546 2066.92,306.004C2079.14,312.55 2089.64,321.8 2097.79,335.762C2087.77,339.84 2079.7,346.26 2074.1,353.615C2073.68,354.174 2087.12,356.629 2087.86,359.598C2088.59,362.565 2081.48,371.433 2078.54,371.425C2075.61,371.418 2070.68,358.738 2070.23,359.553C2067.32,364.854 2065.62,370.42 2065.31,375.805C2065.25,376.955 2065.21,378.097 2065.21,379.231\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2128.2,331.371C2119.77,330.664 2111.96,331.454 2104.92,333.358C2102.45,334.027 2100.07,334.834 2097.79,335.762C2087.77,339.84 2079.7,346.26 2074.1,353.615C2073.68,354.174 2087.12,356.629 2087.86,359.598C2088.59,362.565 2081.48,371.433 2078.54,371.425C2075.61,371.418 2070.68,358.738 2070.23,359.553C2067.32,364.854 2065.62,370.42 2065.31,375.805C2065.25,376.955 2065.21,378.097 2065.21,379.231C2065.2,391.577 2069,402.92 2076.05,412.831C2081.22,420.097 2088.13,426.592 2096.58,432.15C2097.29,432.619 2096.39,419.694 2098.22,418.73C2100.04,417.767 2106.58,423.4 2107.53,426.368C2108.48,429.336 2103.37,436.235 2103.93,436.536C2114.02,441.998 2125.83,446.295 2139.12,449.212C2139.97,443.707 2141.49,438.317 2143.61,433.136C2144.01,432.149 2150.56,442.675 2153.58,442.25C2156.6,441.824 2162.68,433.558 2161.72,430.581C2160.78,427.603 2147.16,425.623 2147.86,424.387C2151.9,417.285 2157.09,410.734 2163.24,405.017C2158.18,400.554 2150.96,394.181 2144.26,386.544C2143.56,385.748 2139.52,398.445 2136.82,398.15C2134.12,397.857 2127.89,388.049 2128.06,384.779C2128.22,381.507 2138.41,379.321 2137.84,378.523C2131.75,370.073 2127.1,360.563 2126.59,350.644C2126.33,345.333 2126.96,338.789 2128.2,331.371\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2008.14,368.313C2016.77,373.928 2025.41,378.138 2034.04,380.41C2034.73,380.592 2032.13,368.861 2034.08,366.649C2036.03,364.437 2044.42,364.586 2045.75,367.137C2047.09,369.687 2040.88,381.808 2042.08,381.95C2049.8,382.861 2057.51,382.049 2065.21,379.231C2065.2,391.577 2069,402.92 2076.05,412.831C2065.18,425.279 2060.37,444.324 2060.76,463.327C2051.32,457.713 2041.89,453.549 2032.46,450.694C2031.45,450.388 2032.1,461.079 2029.79,462.962C2027.47,464.845 2019.44,464.386 2018.56,461.992C2017.68,459.598 2025.45,448.806 2024.53,448.597C2015.49,446.551 2006.44,445.671 1997.4,445.828C1998.54,438.1 1999.66,430.322 2000.77,422.494C2001.05,420.502 1986.44,423.188 1984.6,420.505C1982.75,417.823 1986.67,408.439 1989.7,406.399C1992.73,404.359 2002.57,409.636 2002.77,408.264C2004.23,397.701 2005.67,387.048 2007.09,376.302C2007.44,373.645 2007.79,370.982 2008.14,368.313\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2127.25,977.291C2120.47,988.094 2113.15,997.158 2105.43,1004.95C2104.74,1005.64 2103.7,991.646 2101.43,991.223C2099.16,990.809 2092.34,999.026 2091.81,1002.45C2091.27,1005.87 2099.16,1010.93 2098.22,1011.76C2091.06,1018.12 2083.6,1023.57 2075.95,1028.45C2077.77,1032.95 2079.42,1037.52 2080.9,1042.15C2083.87,1051.41 2086.16,1060.9 2087.8,1070.55C2099.7,1068.84 2111.81,1067.88 2124.24,1068.05C2125.27,1068.07 2119.73,1055.33 2121.59,1052.8C2123.45,1050.29 2133.41,1050.36 2135.39,1052.96C2137.38,1055.56 2132.72,1068.36 2133.49,1068.4C2146.68,1069.21 2160.24,1071.38 2174.33,1075.37C2175.54,1066.93 2176.81,1058.47 2178.13,1050C2178.37,1048.49 2184.85,1057.29 2186.53,1055.41C2188.2,1053.52 2189.29,1041.49 2188.19,1038.7C2187.09,1035.9 2179.75,1039.85 2179.95,1038.63C2181.52,1028.94 2183.17,1019.23 2184.89,1009.51C2175.88,1001.07 2167.13,994.379 2158.64,989.281C2157.7,988.72 2164.27,975.248 2163.13,972.34C2161.97,969.441 2153.95,969.809 2151.76,971.852C2149.57,973.895 2151.09,985.14 2149.99,984.606C2142.21,980.852 2134.63,978.459 2127.25,977.291\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2002.98,993.956C2010.68,982.002 2018.39,970.048 2026.08,958.095C2031.39,962.723 2036.43,967.647 2041.18,972.864C2042.05,973.803 2033.07,979.269 2033.03,982.932C2032.97,986.594 2038.4,995.189 2040.88,994.812C2043.35,994.434 2047.21,979.821 2047.88,980.649C2051.01,984.496 2053.99,988.49 2056.82,992.621C2059.65,996.762 2062.33,1001.05 2064.86,1005.48C2065.23,1006.14 2069.93,991.407 2072.2,991.508C2074.46,991.609 2078.92,1002.36 2078.45,1006.09C2077.97,1009.83 2068.9,1012.98 2069.38,1013.91C2071.74,1018.61 2073.93,1023.45 2075.95,1028.45C2077.77,1032.95 2079.42,1037.52 2080.9,1042.15C2074.4,1046.8 2067.63,1050.82 2060.51,1054C2058.94,1054.7 2057.37,1055.35 2055.77,1055.97C2054.74,1056.37 2053.7,1056.74 2052.66,1057.11C2051.79,1057.4 2054.18,1044.06 2052.2,1042.02C2050.23,1039.97 2042.11,1041.9 2040.83,1044.82C2039.55,1047.72 2045.76,1059.21 2044.54,1059.5C2038.63,1060.95 2032.48,1061.82 2026.03,1062.02C2019.6,1062.22 2012.88,1061.74 2005.83,1060.51C2006.64,1058.45 2007.38,1056.33 2008.07,1054.15C2010.31,1046.95 2011.65,1039.75 2012.16,1032.84C2012.27,1031.36 2003.07,1036.88 2000.76,1034.29C1998.44,1031.68 1996.37,1019.53 1998.28,1017.26C2000.17,1014.99 2012.27,1022.11 2012.16,1020.68C2011.32,1009.74 2008.15,1000.29 2002.98,993.956\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1957.46,1005.68C1943.74,997.443 1934.65,986.097 1929.86,971.88C1927.87,965.999 1926.61,959.622 1926.07,952.776C1925.95,951.156 1937.95,958.021 1940.11,955.343C1942.26,952.656 1941.37,939.359 1938.99,936.672C1936.63,933.994 1925.81,940.887 1925.88,939.23C1926.28,930.635 1927.59,921.424 1929.79,911.605C1933.82,912.461 1937.8,913.409 1941.72,914.449C1945.69,915.507 1949.61,916.648 1953.48,917.89C1954.74,918.295 1955.9,903.47 1959.01,901.97C1962.12,900.461 1971.23,905.578 1972.12,908.863C1973,912.139 1963.08,921.194 1964.31,921.663C1977.81,926.743 1990.54,933.028 2002.35,940.473C2010.75,945.764 2018.68,951.644 2026.08,958.095C2018.39,970.048 2010.68,982.002 2002.98,993.956C2000.54,990.965 1997.65,988.674 1994.35,987.257C1993.24,986.769 1994.19,1001.31 1991.97,1003.07C1989.76,1004.81 1982.25,1000.65 1981.06,997.765C1979.87,994.876 1985.64,985.665 1984.83,985.738C1975.28,986.557 1965.32,993.919 1957.46,1005.68\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1860.08,982.297C1848.03,976.821 1837.87,966.395 1829.56,951.055C1833.2,947.733 1836.34,943.712 1838.85,939.157C1839.38,938.218 1827.54,938.899 1826.11,935.724C1824.68,932.549 1827.58,920.817 1830.28,920.108C1832.97,919.399 1841.99,932.347 1842.3,931.464C1844.3,925.786 1845.42,919.556 1845.42,913.022C1845.42,910.933 1845.3,908.872 1845.08,906.848C1854.12,906.084 1863.03,905.707 1871.83,905.707C1876.61,905.707 1881.36,905.817 1886.07,906.038C1886.57,906.065 1880.82,916.611 1882.31,918.976C1883.8,921.341 1893.21,922.298 1895,920.209C1896.79,918.13 1892.4,906.415 1893.06,906.461C1897.41,906.774 1901.74,907.188 1906.02,907.694C1908.09,907.933 1910.14,908.2 1912.18,908.495C1918.15,909.341 1924.02,910.381 1929.79,911.605C1927.59,921.424 1926.28,930.635 1925.88,939.23C1925.81,940.887 1936.63,933.994 1938.99,936.672C1941.37,939.359 1942.26,952.656 1940.11,955.343C1937.95,958.021 1925.95,951.156 1926.07,952.776C1926.61,959.622 1927.87,965.999 1929.86,971.88C1922.65,975.892 1915.74,979.103 1909.15,981.496C1908.3,981.809 1910.46,966.11 1908.17,963.736C1905.88,961.352 1896.93,963.763 1895.41,967.242C1893.89,970.72 1900.49,984.238 1899.07,984.588C1895.29,985.527 1891.61,986.171 1888.05,986.52C1877.81,987.533 1868.49,986.125 1860.08,982.297\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1728.53,936.773C1732.15,935.218 1735.78,933.727 1739.42,932.292C1740.4,931.896 1747.29,929.264 1748.22,928.924C1753.6,926.936 1758.96,925.077 1764.31,923.356C1767.42,940.031 1777.89,953.484 1791.51,958.776C1792.75,959.254 1788.17,945.331 1790.7,943.353C1793.24,941.365 1804.43,943.896 1806.71,946.868C1808.99,949.85 1802.7,961.196 1804.39,961.196C1813.88,961.196 1822.61,957.414 1829.56,951.055C1837.87,966.395 1848.03,976.821 1860.08,982.297C1850.54,1002.2 1836.69,1014.11 1821.99,1021.63C1821.32,1021.97 1821.42,1006.96 1818.37,1005.5C1815.33,1004.05 1804.98,1009.38 1803.69,1012.88C1802.4,1016.4 1812.4,1025.92 1810.63,1026.58C1797.89,1031.29 1785.18,1033.44 1774.68,1035.29C1769.5,1021.05 1763.78,1007.3 1757.63,993.956C1754.26,986.64 1750.77,979.453 1747.18,972.367C1746.57,971.18 1737.01,980.916 1733.61,979.619C1730.21,978.312 1725.53,967.683 1726.79,964.564C1728.06,961.444 1741.86,962.098 1741.21,960.874C1736.93,952.794 1733.02,944.623 1728.53,936.773\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1728.53,936.773C1733.02,944.623 1736.93,952.794 1741.21,960.874C1741.86,962.098 1728.06,961.444 1726.79,964.564C1725.53,967.683 1730.21,978.312 1733.61,979.619C1737.01,980.916 1746.57,971.18 1747.18,972.367C1750.77,979.453 1754.26,986.64 1757.63,993.956C1747.42,998.17 1737.45,1002.51 1728.03,1007.13C1717.87,1012.1 1708.36,1017.4 1699.85,1023.23C1699.09,1023.75 1698.34,1024.28 1697.59,1024.81C1696.89,1025.31 1696.85,1009.61 1694.34,1008.58C1691.84,1007.55 1683.55,1014.73 1682.57,1018.63C1681.58,1022.53 1689.48,1031.05 1688.42,1031.95C1682.43,1037.09 1677.23,1042.63 1673.01,1048.67C1659.06,1030.43 1645.11,1012.2 1631.16,993.956C1637.94,988.757 1644.89,983.723 1652.02,978.855C1654.35,977.263 1656.7,975.699 1659.06,974.143C1664.16,970.794 1669.35,967.545 1674.61,964.389C1676.09,963.496 1676.47,974.926 1679.74,975.892C1683,976.858 1693.45,973.048 1694.23,970.186C1695,967.315 1683.77,959.033 1684.39,958.684C1685.43,958.104 1686.53,957.478 1687.56,956.908C1696.77,951.773 1706.03,947.043 1715.3,942.699C1719.7,940.638 1724.12,938.66 1728.53,936.773\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1662.54,1102.61C1656.49,1105.2 1650.45,1107.81 1644.41,1110.39C1643.19,1110.92 1644.18,1097.3 1641.3,1095.65C1638.42,1094 1628.59,1097.2 1627.13,1100.52C1625.66,1103.82 1633.52,1115.08 1632.54,1115.5C1627.13,1117.83 1621.71,1120.15 1616.28,1122.48C1611.04,1112.86 1605.73,1103.24 1600.34,1093.64C1599.51,1092.17 1594.32,1104.14 1591.15,1103.64C1587.99,1103.13 1580.72,1093.89 1581.32,1090.59C1581.94,1087.29 1595.32,1084.75 1594.79,1083.82C1587.77,1071.46 1580.63,1059.13 1573.37,1046.81C1581.68,1037.78 1590.44,1028.99 1599.63,1020.5C1601.75,1018.56 1603.88,1016.63 1606.04,1014.71C1607.1,1013.77 1608.68,1029.83 1611.92,1030.97C1615.15,1032.11 1625.1,1025.45 1625.47,1021.57C1625.84,1017.7 1613.25,1008.44 1614.12,1007.7C1619.66,1003.01 1625.35,998.428 1631.16,993.956C1645.11,1012.2 1659.06,1030.43 1673.01,1048.67C1670.29,1052.56 1668,1056.65 1666.15,1060.97C1665.81,1061.79 1657.73,1050.35 1654.75,1051.54C1651.77,1052.74 1646.94,1064.79 1648.26,1068.15C1649.57,1071.53 1662.93,1070.56 1662.66,1071.79C1662.21,1073.74 1661.86,1075.74 1661.59,1077.78C1661.43,1078.98 1661.31,1080.2 1661.21,1081.43C1660.71,1088 1661.11,1095.04 1662.54,1102.61\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1649.35,1185.26C1645.69,1190.81 1641.26,1195.47 1636.15,1199.31C1635.35,1199.91 1645.89,1210.91 1645.3,1214.17C1644.72,1217.43 1635.45,1220.51 1632.61,1218.88C1629.76,1217.25 1629.27,1203.8 1628.23,1204.36C1623.78,1206.76 1618.92,1208.69 1613.72,1210.22C1611.64,1206.06 1609.54,1201.9 1607.44,1197.74C1605.76,1194.43 1604.07,1191.11 1602.39,1187.8C1598.27,1179.69 1594.11,1171.6 1589.94,1163.52C1587.91,1159.6 1585.88,1155.67 1583.83,1151.76C1583.03,1150.22 1594.71,1147.42 1595.58,1143.61C1596.45,1139.8 1591.96,1129.37 1589.04,1128.9C1586.14,1128.44 1578.77,1142.06 1578.13,1140.83C1567.49,1120.54 1556.69,1100.3 1545.71,1080.09C1548.44,1076.43 1551.26,1072.81 1554.13,1069.22C1554.58,1068.66 1545.79,1064.24 1545.95,1060.69C1546.11,1057.14 1552.85,1047.57 1555.09,1047.92C1557.33,1048.27 1558.69,1063.63 1559.39,1062.78C1563.9,1057.38 1568.55,1052.06 1573.37,1046.81C1580.63,1059.13 1587.77,1071.46 1594.79,1083.82C1595.32,1084.75 1581.94,1087.29 1581.32,1090.59C1580.72,1093.89 1587.99,1103.13 1591.15,1103.64C1594.32,1104.14 1599.51,1092.17 1600.34,1093.64C1605.73,1103.24 1611.04,1112.86 1616.28,1122.48C1621.27,1131.63 1626.18,1140.79 1631.03,1149.96C1631.74,1151.29 1621.66,1151.93 1621.42,1155.27C1621.18,1158.63 1626.75,1168.55 1629.61,1170.06C1632.46,1171.56 1637.62,1162.49 1638.55,1164.29C1642.18,1171.27 1645.78,1178.26 1649.35,1185.26\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1589.94,1163.52C1565.76,1178.62 1541.59,1191.81 1517.42,1198.19C1516.84,1198.34 1522.68,1207.68 1521.26,1210.24C1519.82,1212.79 1510.66,1215.28 1508.84,1213.55C1507.01,1211.82 1511.23,1199.67 1510.29,1199.86C1501.57,1201.67 1492.86,1202.52 1484.15,1202.18C1487.74,1189.26 1492.23,1176.33 1497.58,1163.52C1498.99,1160.13 1500.46,1156.76 1501.99,1153.39C1502.6,1152.04 1493.84,1149.42 1493.27,1145.95C1492.7,1142.47 1496.35,1132.95 1498.57,1132.56C1500.8,1132.16 1505.96,1144.93 1506.61,1143.59C1509.67,1137.35 1512.94,1131.12 1516.41,1124.96C1525,1109.65 1534.79,1094.65 1545.71,1080.09C1556.69,1100.3 1567.49,1120.54 1578.13,1140.83C1578.77,1142.06 1586.14,1128.44 1589.04,1128.9C1591.96,1129.37 1596.45,1139.8 1595.58,1143.61C1594.71,1147.42 1583.03,1150.22 1583.83,1151.76C1585.88,1155.67 1587.91,1159.6 1589.94,1163.52\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1662.54,1102.61C1656.49,1105.2 1650.45,1107.81 1644.41,1110.39C1643.19,1110.92 1644.18,1097.3 1641.3,1095.65C1638.42,1094 1628.59,1097.2 1627.13,1100.52C1625.66,1103.82 1633.52,1115.08 1632.54,1115.5C1627.13,1117.83 1621.71,1120.15 1616.28,1122.48C1621.27,1131.63 1626.18,1140.79 1631.03,1149.96C1631.74,1151.29 1621.66,1151.93 1621.42,1155.27C1621.18,1158.63 1626.75,1168.55 1629.61,1170.06C1632.46,1171.56 1637.62,1162.49 1638.55,1164.29C1642.18,1171.27 1645.78,1178.26 1649.35,1185.26C1654.59,1195.56 1659.75,1205.88 1664.82,1216.22C1669.57,1212.67 1674.39,1209.28 1679.29,1206.01C1680.13,1205.45 1672.1,1197.52 1672.61,1193.92C1673.13,1190.32 1680.16,1183.16 1682.39,1184.45C1684.63,1185.74 1685.02,1202.29 1686.02,1201.64C1693.16,1197.13 1700.46,1192.9 1707.89,1188.92C1702.18,1181.54 1697.05,1174.46 1692.47,1167.67C1691.59,1166.34 1700.49,1165.96 1701,1162.44C1701.51,1158.9 1698.17,1147.54 1695.53,1146.5C1692.88,1145.47 1685.79,1157.32 1685.11,1156.22C1680.32,1148.37 1676.3,1140.92 1673.01,1133.85C1667.74,1122.52 1664.32,1112.15 1662.54,1102.61\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1673.01,1133.85C1679.89,1125.93 1686.52,1118.13 1695.28,1111.06C1695.77,1110.67 1696.63,1122.69 1698.94,1123.83C1701.25,1124.96 1708.72,1120.75 1709.14,1117.85C1709.57,1114.96 1700.61,1107.05 1701.51,1106.43C1711.79,1099.43 1724.97,1093.39 1743.78,1089.04C1740.85,1078.03 1738.23,1067 1735.95,1055.98C1735.59,1054.25 1727.39,1064.1 1724.67,1062.19C1721.94,1060.28 1718.15,1047.77 1719.59,1044.51C1721.04,1041.26 1733.53,1043.68 1733.35,1042.68C1731.17,1030.83 1729.4,1018.99 1728.03,1007.13C1717.87,1012.1 1708.36,1017.4 1699.85,1023.23C1699.09,1023.75 1698.34,1024.28 1697.59,1024.81C1696.89,1025.31 1696.85,1009.61 1694.34,1008.58C1691.84,1007.55 1683.55,1014.73 1682.57,1018.63C1681.58,1022.53 1689.48,1031.05 1688.42,1031.95C1682.43,1037.09 1677.23,1042.63 1673.01,1048.67C1670.29,1052.56 1668,1056.65 1666.15,1060.97C1665.81,1061.79 1657.73,1050.35 1654.75,1051.54C1651.77,1052.74 1646.94,1064.79 1648.26,1068.15C1649.57,1071.53 1662.93,1070.56 1662.66,1071.79C1662.21,1073.74 1661.86,1075.74 1661.59,1077.78C1661.43,1078.98 1661.31,1080.2 1661.21,1081.43C1660.71,1088 1661.11,1095.04 1662.54,1102.61C1664.32,1112.15 1667.74,1122.52 1673.01,1133.85\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1768.32,1163.34C1762.55,1148.61 1757.3,1133.88 1752.61,1119.15C1752.15,1117.74 1744.55,1127.41 1741.55,1125.68C1738.55,1123.95 1733.4,1111.98 1734.59,1108.79C1735.79,1105.59 1749.11,1107.85 1748.71,1106.49C1746.98,1100.67 1745.34,1094.86 1743.78,1089.04C1740.85,1078.03 1738.23,1067 1735.95,1055.98C1735.59,1054.25 1727.39,1064.1 1724.67,1062.19C1721.94,1060.28 1718.15,1047.77 1719.59,1044.51C1721.04,1041.26 1733.53,1043.68 1733.35,1042.68C1731.17,1030.83 1729.4,1018.99 1728.03,1007.13C1737.45,1002.51 1747.42,998.17 1757.63,993.956C1763.78,1007.3 1769.5,1021.05 1774.68,1035.29C1777.64,1043.46 1780.43,1051.79 1783.01,1060.31C1783.42,1061.67 1792.47,1050.22 1795.37,1051.99C1798.27,1053.78 1801.81,1067.27 1800.41,1071.01C1799.02,1074.75 1786.67,1073.07 1787.04,1074.43C1789.18,1082.42 1791.15,1090.57 1792.9,1098.9C1794.51,1106.5 1795.94,1114.26 1797.19,1122.16C1797.36,1123.23 1808.48,1114.51 1810.75,1116.06C1813.01,1117.62 1812.79,1128.77 1810.79,1131.54C1808.78,1134.31 1798.55,1131.38 1798.74,1132.68C1799.67,1139.66 1800.47,1146.77 1801.1,1154.01C1792.14,1156.2 1783.34,1158.63 1774.68,1161.32C1772.55,1161.98 1770.43,1162.65 1768.32,1163.34\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1673.01,1133.85C1679.89,1125.93 1686.52,1118.13 1695.28,1111.06C1695.77,1110.67 1696.63,1122.69 1698.94,1123.83C1701.25,1124.96 1708.72,1120.75 1709.14,1117.85C1709.57,1114.96 1700.61,1107.05 1701.51,1106.43C1711.79,1099.43 1724.97,1093.39 1743.78,1089.04C1745.34,1094.86 1746.98,1100.67 1748.71,1106.49C1749.11,1107.85 1735.79,1105.59 1734.59,1108.79C1733.4,1111.98 1738.55,1123.95 1741.55,1125.68C1744.55,1127.41 1752.15,1117.74 1752.61,1119.15C1757.3,1133.88 1762.55,1148.61 1768.32,1163.34C1757.36,1166.93 1746.64,1170.93 1736.19,1175.4C1735.36,1175.76 1735.7,1161.15 1733.37,1160C1731.04,1158.84 1722.95,1165.38 1722.24,1168.47C1721.53,1171.55 1730.05,1178.07 1729.11,1178.5C1721.91,1181.75 1714.84,1185.22 1707.89,1188.92C1702.18,1181.54 1697.05,1174.46 1692.47,1167.67C1691.59,1166.34 1700.49,1165.96 1701,1162.44C1701.51,1158.9 1698.17,1147.54 1695.53,1146.5C1692.88,1145.47 1685.79,1157.32 1685.11,1156.22C1680.32,1148.37 1676.3,1140.92 1673.01,1133.85\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1860.08,982.297C1850.54,1002.2 1836.69,1014.11 1821.99,1021.63C1821.32,1021.97 1821.42,1006.96 1818.37,1005.5C1815.33,1004.05 1804.98,1009.38 1803.69,1012.88C1802.4,1016.4 1812.4,1025.92 1810.63,1026.58C1797.89,1031.29 1785.18,1033.44 1774.68,1035.29C1777.64,1043.46 1780.43,1051.79 1783.01,1060.31C1783.42,1061.67 1792.47,1050.22 1795.37,1051.99C1798.27,1053.78 1801.81,1067.27 1800.41,1071.01C1799.02,1074.75 1786.67,1073.07 1787.04,1074.43C1789.18,1082.42 1791.15,1090.57 1792.9,1098.9C1810.6,1098.03 1826.31,1095.67 1841.25,1091.45C1842.02,1091.24 1833.64,1080.87 1834.87,1077.82C1836.11,1074.77 1846.14,1071.34 1848.65,1073.16C1851.16,1074.98 1848.86,1089.13 1849.94,1088.78C1867.34,1082.92 1883.99,1074.39 1901.92,1062.64C1898.6,1055.58 1895.81,1047.83 1893.63,1039.35C1893.26,1037.91 1885.19,1047.76 1883.01,1045.58C1880.82,1043.41 1879.18,1029.51 1880.49,1026.28C1881.79,1023.04 1891.08,1027.67 1890.82,1026.17C1888.78,1014.2 1887.81,1001 1888.05,986.52C1877.81,987.533 1868.49,986.125 1860.08,982.297\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1792.9,1098.9C1810.6,1098.03 1826.31,1095.67 1841.25,1091.45C1842.02,1091.24 1833.64,1080.87 1834.87,1077.82C1836.11,1074.77 1846.14,1071.34 1848.65,1073.16C1851.16,1074.98 1848.86,1089.13 1849.94,1088.78C1867.34,1082.92 1883.99,1074.39 1901.92,1062.64C1905.66,1070.61 1910.09,1077.68 1915.1,1083.88C1915.74,1084.66 1905.46,1087.85 1905.05,1090.75C1904.65,1093.63 1910.05,1101.3 1912.68,1101.24C1915.3,1101.17 1920.23,1089.71 1920.85,1090.35C1925.43,1095.05 1930.4,1099.13 1935.71,1102.61C1929.93,1112.51 1925.63,1124.18 1923.02,1137.83C1901.03,1138.78 1879.65,1140.54 1858.93,1143.28C1858.27,1143.37 1865.1,1152.11 1863.2,1154.62C1861.3,1157.13 1849.74,1160.01 1847.53,1158.33C1845.34,1156.64 1851.14,1144.37 1850,1144.53C1833.26,1147 1816.95,1150.13 1801.1,1154.01C1800.47,1146.77 1799.67,1139.66 1798.74,1132.68C1798.55,1131.38 1808.78,1134.31 1810.79,1131.54C1812.79,1128.77 1813.01,1117.62 1810.75,1116.06C1808.48,1114.51 1797.36,1123.23 1797.19,1122.16C1795.94,1114.26 1794.51,1106.5 1792.9,1098.9\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1901.92,1062.64C1905.66,1070.61 1910.09,1077.68 1915.1,1083.88C1915.74,1084.66 1905.46,1087.85 1905.05,1090.75C1904.65,1093.63 1910.05,1101.3 1912.68,1101.24C1915.3,1101.17 1920.23,1089.71 1920.85,1090.35C1925.43,1095.05 1930.4,1099.13 1935.71,1102.61C1939.7,1095.8 1944.38,1089.82 1949.71,1084.6C1945.52,1077.77 1943.12,1068.46 1942.77,1057.99C1942.73,1056.81 1952.08,1063.18 1953.69,1061.24C1955.3,1059.31 1954.2,1048.53 1952.42,1046.38C1950.64,1044.24 1942.94,1049.3 1943.02,1048.34C1943.56,1041.69 1944.89,1034.76 1947.05,1027.85C1949.68,1019.43 1953.27,1011.93 1957.46,1005.68C1943.74,997.443 1934.65,986.097 1929.86,971.88C1922.65,975.892 1915.74,979.103 1909.15,981.496C1908.3,981.809 1910.46,966.11 1908.17,963.736C1905.88,961.352 1896.93,963.763 1895.41,967.242C1893.89,970.72 1900.49,984.238 1899.07,984.588C1895.29,985.527 1891.61,986.171 1888.05,986.52C1887.81,1001 1888.78,1014.2 1890.82,1026.17C1891.08,1027.67 1881.79,1023.04 1880.49,1026.28C1879.18,1029.51 1880.82,1043.41 1883.01,1045.58C1885.19,1047.76 1893.26,1037.91 1893.63,1039.35C1895.81,1047.83 1898.6,1055.58 1901.92,1062.64\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2002.98,993.956C2008.15,1000.29 2011.32,1009.74 2012.16,1020.68C2012.27,1022.11 2000.17,1014.99 1998.28,1017.26C1996.37,1019.53 1998.44,1031.68 2000.76,1034.29C2003.07,1036.88 2012.27,1031.36 2012.16,1032.84C2011.65,1039.75 2010.31,1046.95 2008.07,1054.15C2007.38,1056.33 2006.64,1058.45 2005.83,1060.51C1997.56,1081.6 1983.15,1095.55 1969.66,1096.3C1968.69,1096.36 1973.16,1083.47 1971.7,1080.95C1970.25,1078.43 1962.73,1078.87 1960.9,1081.17C1959.09,1083.47 1961.63,1095.11 1960.76,1094.74C1956.3,1092.82 1952.58,1089.29 1949.71,1084.6C1945.52,1077.77 1943.12,1068.46 1942.77,1057.99C1942.73,1056.81 1952.08,1063.18 1953.69,1061.24C1955.3,1059.31 1954.2,1048.53 1952.42,1046.38C1950.64,1044.24 1942.94,1049.3 1943.02,1048.34C1943.56,1041.69 1944.89,1034.76 1947.05,1027.85C1949.68,1019.43 1953.27,1011.93 1957.46,1005.68C1965.32,993.919 1975.28,986.557 1984.83,985.738C1985.64,985.665 1979.87,994.876 1981.06,997.765C1982.25,1000.65 1989.76,1004.81 1991.97,1003.07C1994.19,1001.31 1993.24,986.769 1994.35,987.257C1997.65,988.674 2000.54,990.965 2002.98,993.956\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2029.43,1138.83C2030.71,1129.6 2031.3,1120.11 2031.24,1110.37C2031.23,1109.41 2022.86,1114.28 2020.96,1112.02C2019.05,1109.76 2018.14,1098.69 2019.8,1096.78C2021.47,1094.87 2031.02,1101.76 2030.96,1100.52C2030.32,1088.08 2028.67,1075.24 2026.03,1062.02C2032.48,1061.82 2038.63,1060.95 2044.54,1059.5C2045.76,1059.21 2039.55,1047.72 2040.83,1044.82C2042.11,1041.9 2050.23,1039.97 2052.2,1042.02C2054.18,1044.06 2051.79,1057.4 2052.66,1057.11C2053.7,1056.74 2054.74,1056.37 2055.77,1055.97C2057.37,1055.35 2058.94,1054.7 2060.51,1054C2067.63,1050.82 2074.4,1046.8 2080.9,1042.15C2083.87,1051.41 2086.16,1060.9 2087.8,1070.55C2089.36,1079.75 2090.33,1089.1 2090.72,1098.56C2090.76,1099.36 2102.14,1092.26 2104.27,1094.06C2106.4,1095.85 2105.73,1107.02 2103.51,1109.32C2101.29,1111.61 2090.93,1106.82 2090.94,1107.81C2090.95,1115.21 2090.63,1122.69 2089.97,1130.2C2089.61,1134.44 2089.13,1138.69 2088.55,1142.94C2068.49,1141.24 2048.78,1139.83 2029.43,1138.83\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1923.02,1137.83C1925.63,1124.18 1929.93,1112.51 1935.71,1102.61C1939.7,1095.8 1944.38,1089.82 1949.71,1084.6C1952.58,1089.29 1956.3,1092.82 1960.76,1094.74C1961.63,1095.11 1959.09,1083.47 1960.9,1081.17C1962.73,1078.87 1970.25,1078.43 1971.7,1080.95C1973.16,1083.47 1968.69,1096.36 1969.66,1096.3C1983.15,1095.55 1997.56,1081.6 2005.83,1060.51C2012.88,1061.74 2019.6,1062.22 2026.03,1062.02C2028.67,1075.24 2030.32,1088.08 2030.96,1100.52C2031.02,1101.76 2021.47,1094.87 2019.8,1096.78C2018.14,1098.69 2019.05,1109.76 2020.96,1112.02C2022.86,1114.28 2031.23,1109.41 2031.24,1110.37C2031.3,1120.11 2030.71,1129.6 2029.43,1138.83C2020.71,1138.37 2012.08,1137.99 2003.51,1137.7C2002.41,1137.66 2008.3,1152.1 2006.32,1154.3C2004.34,1156.49 1993.54,1153.69 1991.65,1150.88C1989.76,1148.07 1995.92,1137.46 1994.97,1137.44C1970.32,1136.77 1946.33,1136.84 1923.02,1137.83\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1923.02,1196.02C1922.27,1189.19 1921.54,1182.32 1921.27,1174.22C1921.23,1173.12 1931.57,1178.07 1933.98,1175.52C1936.39,1172.96 1937.87,1160.73 1935.74,1158.85C1933.6,1156.98 1921.15,1165.84 1921.18,1164.3C1921.3,1156.8 1921.83,1148.18 1923.02,1137.83C1946.33,1136.84 1970.32,1136.77 1994.97,1137.44C1995.92,1137.46 1989.76,1148.07 1991.65,1150.88C1993.54,1153.69 2004.34,1156.49 2006.32,1154.3C2008.3,1152.1 2002.41,1137.66 2003.51,1137.7C2012.08,1137.99 2020.71,1138.37 2029.43,1138.83C2048.78,1139.83 2068.49,1141.24 2088.55,1142.94C2087.74,1148.9 2086.73,1154.88 2085.51,1160.86C2085.33,1161.71 2075.3,1154.54 2072.35,1156.04C2069.39,1157.55 2066.02,1167.24 2067.8,1169.9C2069.57,1172.55 2083.37,1170.58 2083.02,1171.99C2081.49,1178.32 2079.72,1184.65 2077.75,1190.98C2076.62,1194.59 2075.43,1198.2 2074.16,1201.81C2057.04,1199.92 2040.24,1198.42 2023.76,1197.33C2021.97,1197.2 2028.88,1183.1 2026.84,1180.22C2024.8,1177.35 2013.91,1177.33 2011.54,1180.06C2009.16,1182.8 2013.64,1196.7 2012.59,1196.64C1999.47,1195.92 1986.56,1195.45 1973.87,1195.25C1956.51,1195 1939.55,1195.25 1923.02,1196.02\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1774.68,1161.32C1775.53,1168.7 1776.82,1176.26 1779,1184.16C1779.33,1185.36 1766.88,1184.06 1765.38,1187.08C1763.88,1190.1 1767.2,1201.05 1770.02,1202.29C1772.84,1203.53 1781.86,1193.26 1782.31,1194.5C1784.83,1201.41 1788.1,1208.61 1792.38,1216.22C1800.6,1213.86 1808.88,1211.72 1817.28,1209.78C1818.74,1209.44 1809.89,1197.06 1811.44,1194.11C1812.98,1191.17 1824.31,1189.82 1826.54,1192.14C1828.77,1194.47 1824.42,1208.19 1824.84,1208.1C1836.19,1205.67 1847.76,1203.6 1859.63,1201.88C1866.04,1200.95 1872.55,1200.12 1879.15,1199.39C1880.27,1199.27 1875.39,1189.56 1877.15,1186.9C1878.91,1184.24 1887.71,1181.52 1889.69,1183.43C1891.68,1185.34 1887.6,1198.51 1889.04,1198.37C1897.59,1197.57 1906.32,1196.92 1915.24,1196.43C1917.18,1196.32 1921.07,1196.12 1923.02,1196.02C1922.27,1189.19 1921.54,1182.32 1921.27,1174.22C1921.23,1173.12 1931.57,1178.07 1933.98,1175.52C1936.39,1172.96 1937.87,1160.73 1935.74,1158.85C1933.6,1156.98 1921.15,1165.84 1921.18,1164.3C1921.3,1156.8 1921.83,1148.18 1923.02,1137.83C1901.03,1138.78 1879.65,1140.54 1858.93,1143.28C1858.27,1143.37 1865.1,1152.11 1863.2,1154.62C1861.3,1157.13 1849.74,1160.01 1847.53,1158.33C1845.34,1156.64 1851.14,1144.37 1850,1144.53C1833.26,1147 1816.95,1150.13 1801.1,1154.01C1792.14,1156.2 1783.34,1158.63 1774.68,1161.32\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1792.38,1216.22C1788.1,1208.61 1784.83,1201.41 1782.31,1194.5C1781.86,1193.26 1772.84,1203.53 1770.02,1202.29C1767.2,1201.05 1763.88,1190.1 1765.38,1187.08C1766.88,1184.06 1779.33,1185.36 1779,1184.16C1776.82,1176.26 1775.53,1168.7 1774.68,1161.32C1772.55,1161.98 1770.43,1162.65 1768.32,1163.34C1757.36,1166.93 1746.64,1170.93 1736.19,1175.4C1735.36,1175.76 1735.7,1161.15 1733.37,1160C1731.04,1158.84 1722.95,1165.38 1722.24,1168.47C1721.53,1171.55 1730.05,1178.07 1729.11,1178.5C1721.91,1181.75 1714.84,1185.22 1707.89,1188.92C1700.46,1192.9 1693.16,1197.13 1686.02,1201.64C1685.02,1202.29 1684.63,1185.74 1682.39,1184.45C1680.16,1183.16 1673.13,1190.32 1672.61,1193.92C1672.1,1197.52 1680.13,1205.45 1679.29,1206.01C1674.39,1209.28 1669.57,1212.67 1664.82,1216.22C1672.59,1232.01 1680.17,1247.84 1687.56,1263.7C1695.73,1258.24 1704.19,1253.14 1712.92,1248.37C1713.72,1247.93 1712.41,1258.91 1714.66,1260.21C1716.9,1261.51 1725.49,1258.77 1726.36,1256.18C1727.23,1253.59 1719.34,1244.95 1719.86,1244.68C1730.28,1239.29 1741.07,1234.36 1752.24,1229.9C1762.46,1225.81 1772.99,1222.1 1783.82,1218.76C1786.65,1217.88 1789.51,1217.04 1792.38,1216.22\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1719.96,1336.17C1708.21,1345.48 1697.78,1349.73 1682.21,1353.28C1678.77,1345.74 1675.32,1338.21 1671.83,1330.68C1671.45,1329.86 1665.15,1341.9 1662.57,1341.31C1660,1340.72 1655.65,1330.67 1656.38,1327.15C1657.1,1323.62 1667.57,1321.49 1666.95,1320.18C1662.12,1309.8 1657.23,1299.44 1652.3,1289.09C1645.16,1274.1 1637.92,1259.14 1630.59,1244.19C1625.02,1232.85 1619.39,1221.53 1613.72,1210.22C1618.92,1208.69 1623.78,1206.76 1628.23,1204.36C1629.27,1203.8 1629.76,1217.25 1632.61,1218.88C1635.45,1220.51 1644.72,1217.43 1645.3,1214.17C1645.89,1210.91 1635.35,1199.91 1636.15,1199.31C1641.26,1195.47 1645.69,1190.81 1649.35,1185.26C1654.59,1195.56 1659.75,1205.88 1664.82,1216.22C1672.59,1232.01 1680.17,1247.84 1687.56,1263.7C1692.16,1273.58 1696.7,1283.49 1701.17,1293.4C1701.73,1294.66 1709.34,1283.58 1712.27,1284.63C1715.2,1285.67 1719.86,1296.54 1718.77,1299.71C1717.68,1302.87 1705.26,1302.54 1705.73,1303.6C1708.99,1310.93 1712.21,1318.25 1715.39,1325.58C1716.92,1329.11 1718.45,1332.64 1719.96,1336.17\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1484.15,1202.18C1492.86,1202.52 1501.57,1201.67 1510.29,1199.86C1511.23,1199.67 1507.01,1211.82 1508.84,1213.55C1510.66,1215.28 1519.82,1212.79 1521.26,1210.24C1522.68,1207.68 1516.84,1198.34 1517.42,1198.19C1541.59,1191.81 1565.76,1178.62 1589.94,1163.52C1594.11,1171.6 1598.27,1179.69 1602.39,1187.8C1565.45,1198.75 1545.46,1214.03 1546.29,1234.6C1546.31,1235.23 1554.33,1227.47 1556.06,1228.61C1557.8,1229.75 1558.18,1239.32 1556.72,1241.45C1555.24,1243.57 1547.04,1240.44 1547.26,1241.34C1550.59,1255.03 1562.34,1270.86 1583.5,1289.09C1574.13,1298.72 1565.2,1308.45 1556.82,1318.35C1541.06,1300.2 1525.65,1285.68 1510.72,1276.43C1509.81,1275.87 1518.99,1267.38 1518.11,1264.08C1517.22,1260.77 1507.88,1255.26 1505.41,1256.62C1502.95,1257.99 1504.02,1272.62 1503.33,1272.27C1493.29,1267.19 1483.49,1264.68 1473.98,1265.25C1474.3,1257.34 1475,1249.38 1476.06,1241.39C1476.13,1240.92 1484.64,1247.04 1487.04,1245.02C1489.46,1243 1492.13,1231.35 1490.52,1229.26C1488.92,1227.16 1477.26,1233.38 1477.41,1232.44C1478.27,1227.29 1479.28,1222.12 1480.44,1216.95C1481.54,1212.04 1482.78,1207.11 1484.15,1202.18\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1583.5,1289.09C1562.34,1270.86 1550.59,1255.03 1547.26,1241.34C1547.04,1240.44 1555.24,1243.57 1556.72,1241.45C1558.18,1239.32 1557.8,1229.75 1556.06,1228.61C1554.33,1227.47 1546.31,1235.23 1546.29,1234.6C1545.46,1214.03 1565.45,1198.75 1602.39,1187.8C1604.07,1191.11 1605.76,1194.43 1607.44,1197.74C1609.54,1201.9 1611.64,1206.06 1613.72,1210.22C1619.39,1221.53 1625.02,1232.85 1630.59,1244.19C1623.02,1251 1615.62,1257.79 1608.42,1264.59C1607.45,1265.51 1606.49,1266.42 1605.52,1267.34C1604.9,1267.94 1601.65,1254.74 1599.59,1254.34C1597.52,1253.94 1593.24,1261.73 1593.14,1264.95C1593.04,1268.16 1600.05,1272.61 1598.97,1273.64C1593.69,1278.77 1588.53,1283.92 1583.5,1289.09\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1473.98,1265.25C1483.49,1264.68 1493.29,1267.19 1503.33,1272.27C1504.02,1272.62 1502.95,1257.99 1505.41,1256.62C1507.88,1255.26 1517.22,1260.77 1518.11,1264.08C1518.99,1267.38 1509.81,1275.87 1510.72,1276.43C1525.65,1285.68 1541.06,1300.2 1556.82,1318.35C1547.06,1329.87 1538.02,1341.62 1529.82,1353.74C1529.5,1354.2 1525.11,1340.08 1522.97,1339.93C1520.85,1339.78 1516.6,1349.51 1517.06,1352.84C1517.52,1356.18 1526.27,1359.1 1525.72,1359.94C1519.19,1370.05 1513.25,1380.42 1507.97,1391.12C1500.44,1380.14 1493.99,1368.14 1488.76,1355.19C1487.01,1350.85 1485.42,1346.46 1483.98,1342.01C1483.69,1341.11 1477.46,1350.19 1474.83,1349.58C1472.21,1348.96 1467.08,1340.85 1468.21,1338.31C1469.36,1335.77 1481.93,1335.28 1481.67,1334.32C1479.78,1327.59 1478.24,1320.76 1477.04,1313.85C1476.05,1308.14 1475.29,1302.37 1474.76,1296.55C1474.67,1295.69 1466.1,1301.47 1464.11,1299.27C1462.12,1297.08 1461.19,1285.34 1462.85,1283.38C1464.52,1281.41 1474.16,1288.69 1474.1,1287.49C1473.71,1280.13 1473.67,1272.72 1473.98,1265.25\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1589.94,1353.56C1580.07,1365.47 1571.04,1377.57 1562.99,1389.9C1562.6,1390.51 1572.57,1393.26 1573.07,1396.89C1573.57,1400.54 1568.53,1411.5 1565.97,1411.74C1563.39,1411.98 1558.24,1397.39 1557.67,1398.33C1551.69,1408.11 1546.35,1418.05 1541.71,1428.16C1535.45,1422.93 1529.54,1417.31 1524.02,1411.29C1523.34,1410.57 1535.33,1402.64 1535.43,1399.4C1535.52,1396.15 1527.46,1390.94 1524.57,1391.8C1521.68,1392.65 1518.66,1405.2 1518.1,1404.52C1514.53,1400.23 1511.16,1395.77 1507.97,1391.12C1513.25,1380.42 1519.19,1370.05 1525.72,1359.94C1526.27,1359.1 1517.52,1356.18 1517.06,1352.84C1516.6,1349.51 1520.85,1339.78 1522.97,1339.93C1525.11,1340.08 1529.5,1354.2 1529.82,1353.74C1538.02,1341.62 1547.06,1329.87 1556.82,1318.35C1565.2,1308.45 1574.13,1298.72 1583.5,1289.09C1588.53,1283.92 1593.69,1278.77 1598.97,1273.64C1600.05,1272.61 1593.04,1268.16 1593.14,1264.95C1593.24,1261.73 1597.52,1253.94 1599.59,1254.34C1601.65,1254.74 1604.9,1267.94 1605.52,1267.34C1606.49,1266.42 1607.45,1265.51 1608.42,1264.59C1615.62,1257.79 1623.02,1251 1630.59,1244.19C1637.92,1259.14 1645.16,1274.1 1652.3,1289.09C1640.29,1300.08 1628.78,1311.16 1617.92,1322.4C1617.25,1323.1 1628.01,1330.21 1627.86,1334.06C1627.72,1337.91 1619.87,1346.2 1617.04,1345.48C1614.22,1344.76 1611.82,1328.81 1610.93,1329.76C1603.59,1337.61 1596.57,1345.55 1589.94,1353.56\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1639.56,1402.11C1635.28,1394.5 1630.9,1387.36 1626.13,1380.95C1625.59,1380.25 1621.38,1392.09 1618.56,1392.1C1615.74,1392.1 1608.8,1383.91 1609.2,1380.98C1609.61,1378.06 1621.43,1375.07 1620.95,1374.52C1612.45,1364.74 1602.57,1357.31 1589.94,1353.56C1596.57,1345.55 1603.59,1337.61 1610.93,1329.76C1611.82,1328.81 1614.22,1344.76 1617.04,1345.48C1619.87,1346.2 1627.72,1337.91 1627.86,1334.06C1628.01,1330.21 1617.25,1323.1 1617.92,1322.4C1628.78,1311.16 1640.29,1300.08 1652.3,1289.09C1657.23,1299.44 1662.12,1309.8 1666.95,1320.18C1667.57,1321.49 1657.1,1323.62 1656.38,1327.15C1655.65,1330.67 1660,1340.72 1662.57,1341.31C1665.15,1341.9 1671.45,1329.86 1671.83,1330.68C1675.32,1338.21 1678.77,1345.74 1682.21,1353.28C1686.51,1362.71 1690.76,1372.15 1694.98,1381.6C1686.07,1389.16 1677,1395.22 1667.68,1398.91C1666.83,1399.25 1668.21,1381.07 1666.24,1378.62C1664.28,1376.16 1657.13,1380.38 1655.89,1384.21C1654.65,1388.06 1659.92,1401.41 1658.81,1401.66C1652.52,1403.06 1646.12,1403.29 1639.56,1402.11\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1589.94,1353.56C1602.57,1357.31 1612.45,1364.74 1620.95,1374.52C1621.43,1375.07 1609.61,1378.06 1609.2,1380.98C1608.8,1383.91 1615.74,1392.1 1618.56,1392.1C1621.38,1392.09 1625.59,1380.25 1626.13,1380.95C1630.9,1387.36 1635.28,1394.5 1639.56,1402.11C1625.93,1432.4 1653.82,1446.38 1647.25,1474.33C1643.26,1473.68 1639.32,1472.95 1635.42,1472.13C1633.27,1471.67 1631.14,1471.2 1629.03,1470.69C1628.33,1470.53 1633.27,1459.39 1631.57,1456.59C1629.86,1453.77 1620.88,1451.88 1618.81,1453.81C1616.73,1455.73 1620.47,1468.5 1619.1,1468.11C1613.41,1466.5 1607.84,1464.7 1602.39,1462.71C1593.55,1459.47 1585.02,1455.72 1576.87,1451.48C1576.38,1451.22 1575.42,1464.45 1573.02,1465.54C1570.62,1466.64 1563.17,1461.14 1562.48,1458.06C1561.78,1454.98 1569.73,1447.59 1568.83,1447.06C1563.7,1444.1 1558.74,1440.93 1553.94,1437.55C1549.73,1434.58 1545.65,1431.45 1541.71,1428.16C1546.35,1418.05 1551.69,1408.11 1557.67,1398.33C1558.24,1397.39 1563.39,1411.98 1565.97,1411.74C1568.53,1411.5 1573.57,1400.54 1573.07,1396.89C1572.57,1393.26 1562.6,1390.51 1562.99,1389.9C1571.04,1377.57 1580.07,1365.47 1589.94,1353.56\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1647.25,1474.33C1653.82,1446.38 1625.93,1432.4 1639.56,1402.11C1646.12,1403.29 1652.52,1403.06 1658.81,1401.66C1659.92,1401.41 1654.65,1388.06 1655.89,1384.21C1657.13,1380.38 1664.28,1376.16 1666.24,1378.62C1668.21,1381.07 1666.83,1399.25 1667.68,1398.91C1677,1395.22 1686.07,1389.16 1694.98,1381.6C1701.56,1396.35 1708.04,1411.12 1714.44,1425.92C1714.86,1426.91 1723.06,1413.39 1725.89,1414.28C1728.72,1415.16 1732.65,1427.68 1731.43,1431.22C1730.2,1434.75 1717.94,1434.06 1718.55,1435.49C1724.2,1448.66 1729.77,1461.87 1735.27,1475.08C1731.98,1475.52 1728.69,1475.9 1725.42,1476.24C1719.43,1476.85 1713.48,1477.3 1707.59,1477.58C1701.96,1477.84 1696.39,1477.95 1690.86,1477.92C1690.07,1477.91 1695.1,1488.98 1693.71,1491.19C1692.33,1493.39 1684.12,1493.38 1682.56,1491.14C1681.01,1488.91 1685,1477.82 1684.36,1477.81C1679.8,1477.68 1675.29,1477.44 1670.81,1477.11C1662.82,1476.51 1654.95,1475.58 1647.25,1474.33\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1719.96,1336.17C1726.03,1350.34 1731.96,1364.54 1737.76,1378.77C1738.18,1379.81 1726.13,1379.71 1725.15,1383.21C1724.16,1386.71 1729.01,1398.69 1731.85,1399.79C1734.7,1400.9 1741.75,1388.62 1742.25,1389.87C1748.02,1404.25 1753.67,1418.65 1759.16,1433.07C1763.62,1444.75 1767.98,1456.47 1772.26,1468.18C1767,1469.45 1761.76,1470.59 1756.54,1471.61C1756.15,1471.69 1757.05,1458.58 1754.51,1456.94C1751.96,1455.29 1742.1,1459.08 1741.25,1461.74C1740.4,1464.41 1749.78,1472.86 1749.4,1472.92C1744.67,1473.75 1739.96,1474.47 1735.27,1475.08C1729.77,1461.87 1724.2,1448.66 1718.55,1435.49C1717.94,1434.06 1730.2,1434.75 1731.43,1431.22C1732.65,1427.68 1728.72,1415.16 1725.89,1414.28C1723.06,1413.39 1714.86,1426.91 1714.44,1425.92C1708.04,1411.12 1701.56,1396.35 1694.98,1381.6C1690.76,1372.15 1686.51,1362.71 1682.21,1353.28C1697.78,1349.73 1708.21,1345.48 1719.96,1336.17\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1715.39,1325.58C1716.52,1325.03 1717.66,1324.53 1718.83,1324.04C1727.12,1320.56 1735.5,1318.79 1743.55,1318.58C1744.65,1318.55 1737.81,1331 1739.4,1333.67C1740.99,1336.34 1750.59,1337.01 1753.07,1334.61C1755.55,1332.2 1752.77,1319 1754.27,1319.23C1757.58,1319.72 1760.79,1320.5 1763.87,1321.53C1766.3,1309.16 1766.62,1297.15 1765.53,1285.38C1765.39,1283.86 1756.89,1292.03 1754.39,1290.07C1751.88,1288.12 1748.92,1276.61 1750.49,1273.66C1752.05,1270.69 1764.03,1273.85 1763.77,1272.32C1761.24,1257.96 1756.96,1243.9 1752.24,1229.9C1741.07,1234.36 1730.28,1239.29 1719.86,1244.68C1719.34,1244.95 1727.23,1253.59 1726.36,1256.18C1725.49,1258.77 1716.9,1261.51 1714.66,1260.21C1712.41,1258.91 1713.72,1247.93 1712.92,1248.37C1704.19,1253.14 1695.73,1258.24 1687.56,1263.7C1692.16,1273.58 1696.7,1283.49 1701.17,1293.4C1701.73,1294.66 1709.34,1283.58 1712.27,1284.63C1715.2,1285.67 1719.86,1296.54 1718.77,1299.71C1717.68,1302.87 1705.26,1302.54 1705.73,1303.6C1708.99,1310.93 1712.21,1318.25 1715.39,1325.58\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2015.03,1308.76C2004.9,1297.01 1996.18,1282.17 1989.24,1263.7C1985.33,1253.3 1981.98,1241.75 1979.25,1228.96C1978.91,1227.37 1990.5,1233.35 1992.53,1230.35C1994.56,1227.36 1994.11,1213.5 1991.47,1211C1988.82,1208.49 1976.84,1216.36 1976.66,1215.31C1975.59,1208.91 1974.66,1202.23 1973.87,1195.25C1986.56,1195.45 1999.47,1195.92 2012.59,1196.64C2013.64,1196.7 2009.16,1182.8 2011.54,1180.06C2013.91,1177.33 2024.8,1177.35 2026.84,1180.22C2028.88,1183.1 2021.97,1197.2 2023.76,1197.33C2040.24,1198.42 2057.04,1199.92 2074.16,1201.81C2070.66,1211.8 2066.62,1221.77 2062.08,1231.65C2061.57,1232.76 2056.93,1218.71 2054.5,1219.38C2052.06,1220.05 2046.95,1232.04 2047.45,1235.67C2047.95,1239.31 2058.18,1239.88 2057.51,1241.24C2056.24,1243.81 2054.93,1246.37 2053.6,1248.92C2046.06,1263.31 2037.46,1277.47 2027.87,1291.28C2023.77,1297.18 2019.48,1303 2015.03,1308.76\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1915.24,1196.43C1913.79,1213.54 1913.96,1230.18 1915.48,1246.41C1915.59,1247.64 1926.78,1237.34 1929.5,1239.18C1932.24,1241.01 1933.95,1254.01 1931.88,1257.42C1929.79,1260.84 1916.79,1257.95 1917.03,1259.67C1918.99,1273.67 1921.92,1287.38 1925.65,1300.86C1932.81,1297.76 1940.25,1294.1 1947.97,1289.87C1948.98,1289.32 1947.12,1304.15 1949.77,1305.74C1952.41,1307.31 1962.64,1302.84 1963.84,1299.34C1965.05,1295.84 1955.76,1285.46 1957.01,1284.74C1967.28,1278.69 1978.01,1271.69 1989.24,1263.7C1985.33,1253.3 1981.98,1241.75 1979.25,1228.96C1978.91,1227.37 1990.5,1233.35 1992.53,1230.35C1994.56,1227.36 1994.11,1213.5 1991.47,1211C1988.82,1208.49 1976.84,1216.36 1976.66,1215.31C1975.59,1208.91 1974.66,1202.23 1973.87,1195.25C1956.51,1195 1939.55,1195.25 1923.02,1196.02C1921.07,1196.12 1917.18,1196.32 1915.24,1196.43\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1859.63,1201.88C1861.58,1208.45 1863.07,1214.79 1864.17,1220.88C1864.4,1222.12 1852.38,1217.33 1850.14,1220.09C1847.89,1222.86 1848.1,1235.31 1850.72,1237.47C1853.35,1239.64 1865.74,1231.58 1865.89,1233.08C1869.5,1268.6 1859.67,1294.92 1850.75,1311.28C1858.55,1313.4 1866.99,1314.25 1876.08,1313.78C1877.23,1313.72 1873.59,1294.6 1875.63,1291.13C1877.69,1287.66 1886.64,1289.36 1888.37,1292.96C1890.09,1296.57 1885.3,1312.89 1885.97,1312.79C1891.74,1311.94 1897.75,1310.6 1904.01,1308.76C1910.92,1306.74 1918.13,1304.11 1925.65,1300.86C1921.92,1287.38 1918.99,1273.67 1917.03,1259.67C1916.79,1257.95 1929.79,1260.84 1931.88,1257.42C1933.95,1254.01 1932.24,1241.01 1929.5,1239.18C1926.78,1237.34 1915.59,1247.64 1915.48,1246.41C1913.96,1230.18 1913.79,1213.54 1915.24,1196.43C1906.32,1196.92 1897.59,1197.57 1889.04,1198.37C1887.6,1198.51 1891.68,1185.34 1889.69,1183.43C1887.71,1181.52 1878.91,1184.24 1877.15,1186.9C1875.39,1189.56 1880.27,1199.27 1879.15,1199.39C1872.55,1200.12 1866.04,1200.95 1859.63,1201.88\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1850.75,1311.28C1859.67,1294.92 1869.5,1268.6 1865.89,1233.08C1865.74,1231.58 1853.35,1239.64 1850.72,1237.47C1848.1,1235.31 1847.89,1222.86 1850.14,1220.09C1852.38,1217.33 1864.4,1222.12 1864.17,1220.88C1863.07,1214.79 1861.58,1208.45 1859.63,1201.88C1847.76,1203.6 1836.19,1205.67 1824.84,1208.1C1824.42,1208.19 1828.77,1194.47 1826.54,1192.14C1824.31,1189.82 1812.98,1191.17 1811.44,1194.11C1809.89,1197.06 1818.74,1209.44 1817.28,1209.78C1808.88,1211.72 1800.6,1213.86 1792.38,1216.22C1789.51,1217.04 1786.65,1217.88 1783.82,1218.76C1785.47,1225.82 1787.3,1232.51 1789.32,1238.82C1789.61,1239.73 1800.5,1228.2 1803.44,1229.55C1806.38,1230.9 1808.67,1243.61 1806.93,1246.92C1805.2,1250.25 1792.56,1248.23 1793.03,1249.45C1805.83,1283.1 1824.82,1304.23 1850.75,1311.28\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1795.69,1352.69C1807.76,1348.69 1819.23,1343.49 1829.41,1335.62C1837.45,1329.41 1844.68,1321.54 1850.75,1311.28C1824.82,1304.23 1805.83,1283.1 1793.03,1249.45C1792.56,1248.23 1805.2,1250.25 1806.93,1246.92C1808.67,1243.61 1806.38,1230.9 1803.44,1229.55C1800.5,1228.2 1789.61,1239.73 1789.32,1238.82C1787.3,1232.51 1785.47,1225.82 1783.82,1218.76C1772.99,1222.1 1762.46,1225.81 1752.24,1229.9C1756.96,1243.9 1761.24,1257.96 1763.77,1272.32C1764.03,1273.85 1752.05,1270.69 1750.49,1273.66C1748.92,1276.61 1751.88,1288.12 1754.39,1290.07C1756.89,1292.03 1765.39,1283.86 1765.53,1285.38C1766.62,1297.15 1766.3,1309.16 1763.87,1321.53C1778.55,1326.45 1790.34,1337.31 1795.69,1352.69\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1715.39,1325.58C1716.92,1329.11 1718.45,1332.64 1719.96,1336.17C1726.03,1350.34 1731.96,1364.54 1737.76,1378.77C1738.18,1379.81 1726.13,1379.71 1725.15,1383.21C1724.16,1386.71 1729.01,1398.69 1731.85,1399.79C1734.7,1400.9 1741.75,1388.62 1742.25,1389.87C1748.02,1404.25 1753.67,1418.65 1759.16,1433.07C1774.32,1425.01 1786.03,1412.18 1792.65,1397.68C1793.4,1396.06 1781.87,1397.66 1781.06,1393.74C1780.25,1389.82 1785.15,1375.53 1787.8,1374.17C1790.43,1372.81 1796.59,1386.79 1796.88,1385.6C1799.4,1375.35 1799.4,1364.72 1796.34,1354.68C1796.14,1354.01 1795.92,1353.34 1795.69,1352.69C1790.34,1337.31 1778.55,1326.45 1763.87,1321.53C1760.79,1320.5 1757.58,1319.72 1754.27,1319.23C1752.77,1319 1755.55,1332.2 1753.07,1334.61C1750.59,1337.01 1740.99,1336.34 1739.4,1333.67C1737.81,1331 1744.65,1318.55 1743.55,1318.58C1735.5,1318.79 1727.12,1320.56 1718.83,1324.04C1717.66,1324.53 1716.52,1325.03 1715.39,1325.58\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1829.41,1335.62C1835.68,1346.62 1841.28,1357.61 1846.12,1368.61C1846.59,1369.68 1855.45,1356.11 1858.27,1356.9C1861.09,1357.69 1864.3,1369.55 1863.05,1373.36C1861.8,1377.16 1850.3,1378.56 1850.75,1379.73C1857.75,1397.51 1862.72,1415.29 1865.36,1433.07C1862.02,1434.8 1858.67,1436.48 1855.32,1438.11C1849.44,1440.97 1843.55,1443.68 1837.66,1446.23C1836.5,1446.72 1838.88,1430.81 1836.39,1428.78C1833.9,1426.75 1824.37,1430.38 1822.73,1434.05C1821.09,1437.73 1827.83,1450.33 1826.58,1450.83C1820.74,1453.16 1814.9,1455.34 1809.08,1457.36C1796.75,1461.65 1784.46,1465.26 1772.26,1468.18C1767.98,1456.47 1763.62,1444.75 1759.16,1433.07C1774.32,1425.01 1786.03,1412.18 1792.65,1397.68C1793.4,1396.06 1781.87,1397.66 1781.06,1393.74C1780.25,1389.82 1785.15,1375.53 1787.8,1374.17C1790.43,1372.81 1796.59,1386.79 1796.88,1385.6C1799.4,1375.35 1799.4,1364.72 1796.34,1354.68C1796.14,1354.01 1795.92,1353.34 1795.69,1352.69C1807.76,1348.69 1819.23,1343.49 1829.41,1335.62\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1931.45,1391.27C1923.34,1397.43 1914.97,1403.35 1906.35,1409.02C1902.32,1411.67 1898.24,1414.28 1894.1,1416.81C1893.15,1417.4 1895.49,1405.36 1892.77,1403.79C1890.06,1402.22 1879.26,1404.26 1877.85,1407.39C1876.44,1410.54 1885.31,1422.08 1884.33,1422.65C1881.95,1424.02 1879.56,1425.38 1877.15,1426.73C1873.23,1428.91 1869.3,1431.03 1865.36,1433.07C1862.72,1415.29 1857.75,1397.51 1850.75,1379.73C1850.3,1378.56 1861.8,1377.16 1863.05,1373.36C1864.3,1369.55 1861.09,1357.69 1858.27,1356.9C1855.45,1356.11 1846.59,1369.68 1846.12,1368.61C1841.28,1357.61 1835.68,1346.62 1829.41,1335.62C1837.45,1329.41 1844.68,1321.54 1850.75,1311.28C1858.55,1313.4 1866.99,1314.25 1876.08,1313.78C1877.23,1313.72 1873.59,1294.6 1875.63,1291.13C1877.69,1287.66 1886.64,1289.36 1888.37,1292.96C1890.09,1296.57 1885.3,1312.89 1885.97,1312.79C1891.74,1311.94 1897.75,1310.6 1904.01,1308.76C1905.82,1321.67 1908.23,1333.88 1911.35,1345.25C1911.72,1346.6 1922.56,1333.26 1925.4,1334.12C1928.25,1334.96 1930.18,1346.54 1928.44,1350.35C1926.7,1354.17 1914.47,1355.59 1914.96,1357.02C1919.3,1369.79 1924.74,1381.29 1931.45,1391.27\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1931.45,1391.27C1924.74,1381.29 1919.3,1369.79 1914.96,1357.02C1914.47,1355.59 1926.7,1354.17 1928.44,1350.35C1930.18,1346.54 1928.25,1334.96 1925.4,1334.12C1922.56,1333.26 1911.72,1346.6 1911.35,1345.25C1908.23,1333.88 1905.82,1321.67 1904.01,1308.76C1910.92,1306.74 1918.13,1304.11 1925.65,1300.86C1932.81,1297.76 1940.25,1294.1 1947.97,1289.87C1948.98,1289.32 1947.12,1304.15 1949.77,1305.74C1952.41,1307.31 1962.64,1302.84 1963.84,1299.34C1965.05,1295.84 1955.76,1285.46 1957.01,1284.74C1967.28,1278.69 1978.01,1271.69 1989.24,1263.7C1996.18,1282.17 2004.9,1297.01 2015.03,1308.76C2011.22,1313.69 2007.28,1318.55 2003.21,1323.35C2002.59,1324.09 2002.08,1312.41 1999.94,1312.08C1997.8,1311.74 1990.86,1318.32 1990.39,1321.36C1989.92,1324.41 1997.62,1329.84 1997.16,1330.36C1990.23,1338.2 1982.97,1345.87 1975.38,1353.32C1968.97,1359.62 1962.33,1365.75 1955.47,1371.73C1954.37,1372.69 1954.9,1360.24 1952.7,1359.52C1950.51,1358.8 1943.38,1364.01 1942.29,1367.37C1941.19,1370.73 1947.45,1378.56 1946.12,1379.67C1941.33,1383.62 1936.44,1387.49 1931.45,1391.27\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2089.97,1130.2C2099.68,1131.06 2109.38,1131.91 2119.07,1132.78C2120.48,1132.9 2115.2,1142.53 2116.62,1145.07C2118.05,1147.62 2125.82,1150.01 2127.63,1148.08C2129.43,1146.15 2126.66,1133.45 2127.45,1133.52L2166.51,1136.98C2167.91,1124.33 2169.44,1111.65 2171.11,1098.94C2172.13,1091.09 2173.2,1083.25 2174.33,1075.37C2160.24,1071.38 2146.68,1069.21 2133.49,1068.4C2132.72,1068.36 2137.38,1055.56 2135.39,1052.96C2133.41,1050.36 2123.45,1050.29 2121.59,1052.8C2119.73,1055.33 2125.27,1068.07 2124.24,1068.05C2111.81,1067.88 2099.7,1068.84 2087.8,1070.55C2089.36,1079.75 2090.33,1089.1 2090.72,1098.56C2090.76,1099.36 2102.14,1092.26 2104.27,1094.06C2106.4,1095.85 2105.73,1107.02 2103.51,1109.32C2101.29,1111.61 2090.93,1106.82 2090.94,1107.81C2090.95,1115.21 2090.63,1122.69 2089.97,1130.2\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2162.99,1171.79C2175.01,1173.71 2187.03,1175.63 2199.04,1177.55C2200.23,1177.73 2196.38,1164.76 2198.76,1162.8C2201.14,1160.84 2211.39,1163.03 2213.31,1165.79C2215.22,1168.54 2209.22,1179.17 2210.24,1179.33C2225.96,1181.85 2241.69,1184.36 2257.41,1186.86L2257.41,1107.32C2250.95,1108.09 2244.54,1108.47 2238.17,1108.52C2237.27,1108.53 2240.78,1093.88 2239.3,1090.5C2237.83,1087.12 2230.97,1085.24 2229.31,1088.22C2227.64,1091.2 2230.86,1108.45 2229.33,1108.38C2224.47,1108.2 2219.63,1107.83 2214.81,1107.32C2208.51,1106.64 2202.25,1105.69 2196,1104.54C2195.03,1104.36 2201.9,1088.89 2200.77,1085.5C2199.63,1082.1 2191.5,1081.26 2189.19,1084.12C2186.88,1086.99 2188.17,1102.98 2186.89,1102.71C2181.61,1101.57 2176.36,1100.31 2171.11,1098.94C2169.44,1111.65 2167.91,1124.33 2166.51,1136.98C2165.22,1148.61 2164.05,1160.21 2162.99,1171.79\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2166.51,1136.98L2127.45,1133.52C2126.66,1133.45 2129.43,1146.15 2127.63,1148.08C2125.82,1150.01 2118.05,1147.62 2116.62,1145.07C2115.2,1142.53 2120.48,1132.9 2119.07,1132.78C2109.38,1131.91 2099.68,1131.06 2089.97,1130.2C2089.61,1134.44 2089.13,1138.69 2088.55,1142.94C2087.74,1148.9 2086.73,1154.88 2085.51,1160.86C2085.33,1161.71 2075.3,1154.54 2072.35,1156.04C2069.39,1157.55 2066.02,1167.24 2067.8,1169.9C2069.57,1172.55 2083.37,1170.58 2083.02,1171.99C2081.49,1178.32 2079.72,1184.65 2077.75,1190.98C2087.93,1195.12 2099.07,1197.79 2110.76,1199.22C2111.66,1199.34 2107.8,1186.68 2109.39,1184.45C2110.97,1182.23 2118.91,1183.33 2120.28,1185.9C2121.66,1188.48 2116.78,1199.85 2117.62,1199.92C2131.59,1201.03 2146.2,1200.49 2160.74,1198.62C2161.43,1189.7 2162.17,1180.75 2162.99,1171.79C2164.05,1160.21 2165.22,1148.61 2166.51,1136.98\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2257.41,1186.86C2241.69,1184.36 2225.96,1181.85 2210.24,1179.33C2209.22,1179.17 2215.22,1168.54 2213.31,1165.79C2211.39,1163.03 2201.14,1160.84 2198.76,1162.8C2196.38,1164.76 2200.23,1177.73 2199.04,1177.55C2187.03,1175.63 2175.01,1173.71 2162.99,1171.79C2162.17,1180.75 2161.43,1189.7 2160.74,1198.62C2159.91,1209.48 2159.19,1220.31 2158.56,1231.12C2164.39,1231.62 2169.95,1234.09 2175.16,1238.16C2176.33,1239.08 2168.55,1247.04 2168.99,1250.46C2169.44,1253.86 2175.59,1259.51 2177.8,1258.6C2180.01,1257.69 2181.72,1244.37 2182.27,1244.98C2183.08,1245.89 2183.97,1246.93 2184.72,1247.89C2187.37,1251.25 2189.9,1255.04 2192.28,1259.2C2201.2,1247.22 2212.8,1242.86 2224.71,1242.22C2225.97,1242.16 2221.59,1253.88 2223.5,1256.15C2225.41,1258.43 2234.25,1258.13 2236.19,1255.86C2238.12,1253.59 2234.19,1242.43 2235.09,1242.53C2242.9,1243.32 2250.57,1245.22 2257.41,1247.15L2257.41,1186.86\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2053.6,1248.92C2066.26,1257.07 2080.35,1263.41 2095.84,1267.78C2097.31,1268.19 2095.7,1253.98 2098.55,1252.74C2101.39,1251.49 2111.12,1257.27 2112.89,1260.31C2114.67,1263.35 2107.53,1270.65 2109.18,1270.98C2123.85,1273.9 2139.66,1275.18 2156.6,1274.7C2157.06,1260.21 2157.72,1245.69 2158.56,1231.12C2159.19,1220.31 2159.91,1209.48 2160.74,1198.62C2146.2,1200.49 2131.59,1201.03 2117.62,1199.92C2116.78,1199.85 2121.66,1188.48 2120.28,1185.9C2118.91,1183.33 2110.97,1182.23 2109.39,1184.45C2107.8,1186.68 2111.66,1199.34 2110.76,1199.22C2099.07,1197.79 2087.93,1195.12 2077.75,1190.98C2076.62,1194.59 2075.43,1198.2 2074.16,1201.81C2070.66,1211.8 2066.62,1221.77 2062.08,1231.65C2061.57,1232.76 2056.93,1218.71 2054.5,1219.38C2052.06,1220.05 2046.95,1232.04 2047.45,1235.67C2047.95,1239.31 2058.18,1239.88 2057.51,1241.24C2056.24,1243.81 2054.93,1246.37 2053.6,1248.92\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2155.76,1338.02C2161.6,1337.01 2167.44,1336.01 2173.28,1335.01C2174.62,1334.78 2170.67,1351.14 2172.97,1353.63C2175.28,1356.14 2185.4,1353.41 2187.12,1350.02C2188.85,1346.63 2182.42,1333.44 2183.31,1333.29C2193.62,1331.52 2203.93,1329.74 2214.23,1327.98C2212.61,1317.48 2210.41,1307.27 2207.72,1297.67C2207.34,1296.29 2219.94,1298.95 2221.24,1296.14C2222.53,1293.31 2218.29,1282.27 2215.49,1280.74C2212.69,1279.21 2204.82,1288.1 2204.44,1286.96C2200.97,1276.64 2196.88,1267.23 2192.28,1259.2C2189.9,1255.04 2187.37,1251.25 2184.72,1247.89C2183.97,1246.93 2183.08,1245.89 2182.27,1244.98C2181.72,1244.37 2180.01,1257.69 2177.8,1258.6C2175.59,1259.51 2169.44,1253.86 2168.99,1250.46C2168.55,1247.04 2176.33,1239.08 2175.16,1238.16C2169.95,1234.09 2164.39,1231.62 2158.56,1231.12C2157.72,1245.69 2157.06,1260.21 2156.6,1274.7C2156.28,1284.64 2156.04,1294.56 2155.9,1304.47C2155.88,1305.83 2146.19,1300.27 2144.16,1302.47C2142.12,1304.67 2141.74,1315.55 2143.68,1317.64C2145.62,1319.75 2155.78,1314.25 2155.78,1315.09C2155.72,1322.74 2155.71,1330.39 2155.76,1338.02\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2257.41,1247.15C2250.57,1245.22 2242.9,1243.32 2235.09,1242.53C2234.19,1242.43 2238.12,1253.59 2236.19,1255.86C2234.25,1258.13 2225.41,1258.43 2223.5,1256.15C2221.59,1253.88 2225.97,1242.16 2224.71,1242.22C2212.8,1242.86 2201.2,1247.22 2192.28,1259.2C2196.88,1267.23 2200.97,1276.64 2204.44,1286.96C2204.82,1288.1 2212.69,1279.21 2215.49,1280.74C2218.29,1282.27 2222.53,1293.31 2221.24,1296.14C2219.94,1298.95 2207.34,1296.29 2207.72,1297.67C2210.41,1307.27 2212.61,1317.48 2214.23,1327.98C2216.04,1339.64 2217.14,1351.65 2217.47,1363.6C2221.59,1363.33 2225.7,1363.07 2229.81,1362.79C2230.95,1362.72 2226.09,1348.35 2227.59,1345.32C2229.1,1342.3 2237.06,1341.83 2238.86,1344.64C2240.66,1347.47 2237.55,1362.28 2238.41,1362.23C2244.74,1361.81 2251.08,1361.4 2257.41,1360.99L2257.41,1247.15\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2156.6,1274.7C2139.66,1275.18 2123.85,1273.9 2109.18,1270.98C2107.53,1270.65 2114.67,1263.35 2112.89,1260.31C2111.12,1257.27 2101.39,1251.49 2098.55,1252.74C2095.7,1253.98 2097.31,1268.19 2095.84,1267.78C2080.35,1263.41 2066.26,1257.07 2053.6,1248.92C2046.06,1263.31 2037.46,1277.47 2027.87,1291.28C2030.06,1297.77 2033.41,1303.54 2037.68,1308.63C2038.4,1309.49 2026.91,1316.01 2026.85,1319.25C2026.79,1322.49 2034.42,1328.79 2037.3,1328.12C2040.17,1327.43 2043.53,1314.69 2044.11,1315.2C2049.68,1320.14 2056.25,1324.28 2063.47,1327.67C2074.45,1332.84 2086.95,1336.3 2099.85,1338.28C2100.92,1338.44 2094.81,1347.02 2096.91,1349.38C2099.01,1351.74 2109.96,1354.07 2112.44,1352.46C2114.92,1350.84 2110.29,1339.55 2111.75,1339.67C2126.95,1340.94 2142.22,1340.27 2155.76,1338.02C2155.71,1330.39 2155.72,1322.74 2155.78,1315.09C2155.78,1314.25 2145.62,1319.75 2143.68,1317.64C2141.74,1315.55 2142.12,1304.67 2144.16,1302.47C2146.19,1300.27 2155.88,1305.83 2155.9,1304.47C2156.04,1294.56 2156.28,1284.64 2156.6,1274.7\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2214.23,1327.98C2203.93,1329.74 2193.62,1331.52 2183.31,1333.29C2182.42,1333.44 2188.85,1346.63 2187.12,1350.02C2185.4,1353.41 2175.28,1356.14 2172.97,1353.63C2170.67,1351.14 2174.62,1334.78 2173.28,1335.01C2167.44,1336.01 2161.6,1337.01 2155.76,1338.02C2155.86,1353.89 2156.18,1369.71 2156.75,1385.46C2156.87,1388.81 2157.01,1392.16 2157.15,1395.5C2157.16,1395.89 2148.9,1391.92 2147.14,1394.32C2145.39,1396.71 2144.88,1408.4 2146.6,1409.87C2148.32,1411.34 2157.44,1401.99 2157.49,1403.16C2157.89,1411.68 2158.37,1420.19 2158.91,1428.68C2169.14,1424.27 2178.24,1419.47 2186.06,1414.23C2191.9,1410.31 2197.03,1406.15 2201.35,1401.73C2202.2,1400.86 2204.34,1412.58 2207.27,1412.31C2210.2,1412.02 2218.76,1403.2 2218.92,1400.07C2219.07,1396.94 2207.62,1394.36 2208.2,1393.53C2214.52,1384.56 2217.78,1374.62 2217.47,1363.6C2217.14,1351.65 2216.04,1339.64 2214.23,1327.98\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2217.47,1363.6C2217.78,1374.62 2214.52,1384.56 2208.2,1393.53C2207.62,1394.36 2219.07,1396.94 2218.92,1400.07C2218.76,1403.2 2210.2,1412.02 2207.27,1412.31C2204.34,1412.58 2202.2,1400.86 2201.35,1401.73C2197.03,1406.15 2191.9,1410.31 2186.06,1414.23C2191.45,1436.89 2200.59,1451.74 2211.7,1459.05C2212.39,1459.51 2211.57,1442.2 2213.78,1440.54C2215.98,1438.88 2223.87,1445.35 2224.93,1449.11C2226,1452.86 2219,1462.72 2220.16,1463.07C2231.67,1466.59 2244.62,1463.21 2257.41,1453.19L2257.41,1360.99C2251.08,1361.4 2244.74,1361.81 2238.41,1362.23C2237.55,1362.28 2240.66,1347.47 2238.86,1344.64C2237.06,1341.83 2229.1,1342.3 2227.59,1345.32C2226.09,1348.35 2230.95,1362.72 2229.81,1362.79C2225.7,1363.07 2221.59,1363.33 2217.47,1363.6\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2036.03,1447.94C2028.36,1437.98 2026.39,1425.67 2028.81,1410.74C2028.93,1409.95 2037.99,1417.35 2040.28,1415.9C2042.59,1414.44 2044.22,1404.27 2042.59,1402.03C2040.96,1399.78 2030.25,1403.56 2030.53,1402.41C2035.61,1382.05 2047.51,1357.32 2063.47,1327.67C2074.45,1332.84 2086.95,1336.3 2099.85,1338.28C2100.92,1338.44 2094.81,1347.02 2096.91,1349.38C2099.01,1351.74 2109.96,1354.07 2112.44,1352.46C2114.92,1350.84 2110.29,1339.55 2111.75,1339.67C2126.95,1340.94 2142.22,1340.27 2155.76,1338.02C2155.86,1353.89 2156.18,1369.71 2156.75,1385.46C2129.57,1377.87 2109.16,1377.93 2096,1387.03C2095.38,1387.45 2104.95,1394.2 2104.7,1397.21C2104.45,1400.24 2096.92,1405.98 2094.48,1405.17C2092.03,1404.35 2090.76,1391.5 2090.03,1392.33C2081.31,1402.19 2077.41,1418.17 2078.57,1441.02C2072.7,1438.49 2066.58,1437.59 2060.45,1438.14C2059.63,1438.21 2063.92,1427.31 2061.91,1425.76C2059.89,1424.2 2050.15,1426.44 2048.34,1428.83C2046.54,1431.22 2052.44,1439.65 2051.07,1440.09C2045.93,1441.76 2040.87,1444.42 2036.03,1447.94\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2036.03,1447.94C2028.36,1437.98 2026.39,1425.67 2028.81,1410.74C2028.93,1409.95 2037.99,1417.35 2040.28,1415.9C2042.59,1414.44 2044.22,1404.27 2042.59,1402.03C2040.96,1399.78 2030.25,1403.56 2030.53,1402.41C2035.61,1382.05 2047.51,1357.32 2063.47,1327.67C2056.25,1324.28 2049.68,1320.14 2044.11,1315.2C2043.53,1314.69 2040.17,1327.43 2037.3,1328.12C2034.42,1328.79 2026.79,1322.49 2026.85,1319.25C2026.91,1316.01 2038.4,1309.49 2037.68,1308.63C2033.41,1303.54 2030.06,1297.77 2027.87,1291.28C2023.77,1297.18 2019.48,1303 2015.03,1308.76C2011.22,1313.69 2007.28,1318.55 2003.21,1323.35C2002.59,1324.09 2002.08,1312.41 1999.94,1312.08C1997.8,1311.74 1990.86,1318.32 1990.39,1321.36C1989.92,1324.41 1997.62,1329.84 1997.16,1330.36C1990.23,1338.2 1982.97,1345.87 1975.38,1353.32C1977.27,1363.21 1979.21,1372.83 1981.19,1382.11C1981.4,1383.08 1991.98,1374.9 1994.85,1375.96C1997.71,1377.02 2000.33,1386.02 1998.36,1388.45C1996.39,1390.88 1982.83,1389.68 1983.03,1390.56C1987.53,1410.93 1992.21,1429.52 1996.99,1445.7C2001.07,1459.5 2005.22,1471.56 2009.4,1481.51C2016.3,1467.03 2025.65,1455.48 2036.03,1447.94\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1906.35,1409.02C1907.46,1417.2 1909.24,1424.73 1911.68,1431.6C1912.09,1432.75 1922.44,1422.52 1926.02,1423.29C1929.58,1424.07 1934.84,1433.34 1933.1,1436.26C1931.35,1439.17 1915.12,1439.9 1915.54,1440.77C1919.63,1449.12 1924.9,1456.31 1931.35,1462.36C1941.91,1472.28 1955.61,1479.12 1972.38,1482.95C1974.8,1477.05 1977.65,1471.43 1980.9,1466.15C1981.36,1465.38 1970.93,1463.22 1970.5,1460.55C1970.07,1457.89 1976.05,1450.05 1978.29,1450.18C1980.54,1450.32 1983.7,1461.79 1983.96,1461.4C1987.86,1455.69 1992.23,1450.44 1996.99,1445.7C1992.21,1429.52 1987.53,1410.93 1983.03,1390.56C1982.83,1389.68 1996.39,1390.88 1998.36,1388.45C2000.33,1386.02 1997.71,1377.02 1994.85,1375.96C1991.98,1374.9 1981.4,1383.08 1981.19,1382.11C1979.21,1372.83 1977.27,1363.21 1975.38,1353.32C1968.97,1359.62 1962.33,1365.75 1955.47,1371.73C1954.37,1372.69 1954.9,1360.24 1952.7,1359.52C1950.51,1358.8 1943.38,1364.01 1942.29,1367.37C1941.19,1370.73 1947.45,1378.56 1946.12,1379.67C1941.33,1383.62 1936.44,1387.49 1931.45,1391.27C1923.34,1397.43 1914.97,1403.35 1906.35,1409.02\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1855.32,1438.11C1860.74,1446.21 1865.62,1454.16 1870,1461.96C1870.75,1463.31 1857.92,1463.76 1856.55,1467.03C1855.17,1470.32 1858.65,1480.88 1861.75,1481.63C1864.84,1482.36 1874.7,1470.66 1875.12,1471.48C1882.72,1486.2 1888.47,1500.39 1892.54,1514.1C1899.93,1509.09 1906.59,1503.58 1912.29,1497.41C1913.38,1496.23 1915.95,1507.98 1919.12,1507.28C1922.29,1506.59 1931.1,1496.64 1931.35,1493.24C1931.59,1489.85 1919.84,1488.03 1920.59,1486.93C1925.44,1479.64 1929.12,1471.51 1931.35,1462.36C1924.9,1456.31 1919.63,1449.12 1915.54,1440.77C1915.12,1439.9 1931.35,1439.17 1933.1,1436.26C1934.84,1433.34 1929.58,1424.07 1926.02,1423.29C1922.44,1422.52 1912.09,1432.75 1911.68,1431.6C1909.24,1424.73 1907.46,1417.2 1906.35,1409.02C1902.32,1411.67 1898.24,1414.28 1894.1,1416.81C1893.15,1417.4 1895.49,1405.36 1892.77,1403.79C1890.06,1402.22 1879.26,1404.26 1877.85,1407.39C1876.44,1410.54 1885.31,1422.08 1884.33,1422.65C1881.95,1424.02 1879.56,1425.38 1877.15,1426.73C1873.23,1428.91 1869.3,1431.03 1865.36,1433.07C1862.02,1434.8 1858.67,1436.48 1855.32,1438.11\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1855.32,1438.11C1860.74,1446.21 1865.62,1454.16 1870,1461.96C1870.75,1463.31 1857.92,1463.76 1856.55,1467.03C1855.17,1470.32 1858.65,1480.88 1861.75,1481.63C1864.84,1482.36 1874.7,1470.66 1875.12,1471.48C1882.72,1486.2 1888.47,1500.39 1892.54,1514.1C1886.1,1518.46 1879.1,1522.45 1871.69,1526.17C1870.83,1526.6 1871.29,1510.58 1869.08,1509.04C1866.87,1507.49 1859.25,1513.46 1858.42,1516.92C1857.59,1520.39 1865.05,1529.38 1864.1,1529.82C1856.69,1533.25 1848.94,1536.46 1840.99,1539.56C1838.73,1533.34 1836.43,1527.08 1834.07,1520.77C1830.44,1511.07 1826.69,1501.29 1822.82,1491.43C1820.47,1485.45 1818.08,1479.44 1815.65,1473.41C1815.36,1472.71 1805.63,1481.81 1802.91,1481.43C1800.2,1481.05 1797.64,1473.44 1799.37,1471.13C1801.1,1468.83 1813.6,1468.37 1813.3,1467.62C1811.9,1464.21 1810.5,1460.78 1809.08,1457.36C1814.9,1455.34 1820.74,1453.16 1826.58,1450.83C1827.83,1450.33 1821.09,1437.73 1822.73,1434.05C1824.37,1430.38 1833.9,1426.75 1836.39,1428.78C1838.88,1430.81 1836.5,1446.72 1837.66,1446.23C1843.55,1443.68 1849.44,1440.97 1855.32,1438.11\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1840.99,1539.56C1848.94,1536.46 1856.69,1533.25 1864.1,1529.82C1865.05,1529.38 1857.59,1520.39 1858.42,1516.92C1859.25,1513.46 1866.87,1507.49 1869.08,1509.04C1871.29,1510.58 1870.83,1526.6 1871.69,1526.17C1879.1,1522.45 1886.1,1518.46 1892.54,1514.1C1899.93,1509.09 1906.59,1503.58 1912.29,1497.41C1913.38,1496.23 1915.95,1507.98 1919.12,1507.28C1922.29,1506.59 1931.1,1496.64 1931.35,1493.24C1931.59,1489.85 1919.84,1488.03 1920.59,1486.93C1925.44,1479.64 1929.12,1471.51 1931.35,1462.36C1941.91,1472.28 1955.61,1479.12 1972.38,1482.95C1969.88,1489.08 1967.83,1495.5 1966.3,1502.17C1966.08,1503.16 1957.92,1496.53 1955.73,1498.09C1953.55,1499.66 1951.71,1509.43 1953.19,1511.59C1954.67,1513.74 1964.8,1509.81 1964.61,1511.05C1963.62,1517.47 1963.1,1524.08 1963.1,1530.82C1963.1,1535.68 1963.37,1540.46 1963.89,1545.15C1943.66,1546.25 1926.31,1549.02 1911.21,1553.14C1910.23,1553.4 1919.3,1563.91 1918.13,1566.55C1916.97,1569.18 1907,1570.69 1904.22,1568.94C1901.44,1567.2 1902.81,1555.63 1901.47,1556.07C1882.81,1562.28 1867.88,1570.68 1855.32,1580.47C1853,1573.6 1850.61,1566.65 1848.15,1559.64C1847.94,1559.05 1861.73,1559.36 1863.4,1556.97C1865.07,1554.58 1861.19,1546.2 1858.17,1545.3C1855.16,1544.39 1845.51,1552.15 1845.3,1551.57C1843.89,1547.59 1842.45,1543.59 1840.99,1539.56\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1996.99,1445.7C1992.23,1450.44 1987.86,1455.69 1983.96,1461.4C1983.7,1461.79 1980.54,1450.32 1978.29,1450.18C1976.05,1450.05 1970.07,1457.89 1970.5,1460.55C1970.93,1463.22 1981.36,1465.38 1980.9,1466.15C1977.65,1471.43 1974.8,1477.05 1972.38,1482.95C1969.88,1489.08 1967.83,1495.5 1966.3,1502.17C1966.08,1503.16 1957.92,1496.53 1955.73,1498.09C1953.55,1499.66 1951.71,1509.43 1953.19,1511.59C1954.67,1513.74 1964.8,1509.81 1964.61,1511.05C1963.62,1517.47 1963.1,1524.08 1963.1,1530.82C1963.1,1535.68 1963.37,1540.46 1963.89,1545.15C1964.73,1552.71 1966.22,1560.03 1968.3,1567.05C1968.63,1568.19 1956.87,1565.02 1955.47,1567.82C1954.06,1570.62 1957.18,1582.44 1959.86,1583.87C1962.53,1585.32 1971.05,1575.28 1971.5,1576.47C1975.93,1587.89 1981.96,1598.33 1989.27,1607.38C1993.5,1596.02 1999.23,1584.79 2006.77,1573.71C2001.13,1562.64 1998,1548.89 1997.82,1534.08C1997.81,1533.35 1997.81,1532.62 1997.82,1531.88C1997.82,1531.17 2006.47,1540.36 2008.32,1539.59C2010.18,1538.82 2010.64,1529.68 2008.93,1527.27C2007.22,1524.87 1998.01,1525.96 1998.06,1525.15C1998.29,1521.67 1998.68,1518.13 1999.24,1514.58C2000.15,1508.76 2001.51,1502.88 2003.33,1497.05C2005.04,1491.57 2007.09,1486.37 2009.4,1481.51C2005.22,1471.56 2001.07,1459.5 1996.99,1445.7\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2110.6,1509.41C2092.18,1512.99 2075.54,1515.65 2060.86,1517.27C2059.51,1517.41 2062.37,1505.24 2059.76,1503.31C2057.14,1501.38 2047.12,1503.17 2045.19,1505.69C2043.26,1508.21 2049.88,1518.33 2048.2,1518.45C2026.28,1520.08 2009.7,1518.93 1999.24,1514.58C2000.15,1508.76 2001.51,1502.88 2003.33,1497.05C2005.04,1491.57 2007.09,1486.37 2009.4,1481.51C2016.3,1467.03 2025.65,1455.48 2036.03,1447.94C2040.87,1444.42 2045.93,1441.76 2051.07,1440.09C2052.44,1439.65 2046.54,1431.22 2048.34,1428.83C2050.15,1426.44 2059.89,1424.2 2061.91,1425.76C2063.92,1427.31 2059.63,1438.21 2060.45,1438.14C2066.58,1437.59 2072.7,1438.49 2078.57,1441.02C2089.78,1445.84 2098.41,1455.85 2103.88,1468.86C2105.5,1472.7 2106.84,1476.8 2107.89,1481.1C2108.12,1482.04 2097.9,1478.07 2096.33,1479.66C2094.76,1481.25 2096.3,1489.28 2098.46,1490.64C2100.62,1492.02 2109.14,1487.07 2109.27,1487.87C2110.42,1494.7 2110.88,1501.94 2110.6,1509.41\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2078.57,1441.02C2077.41,1418.17 2081.31,1402.19 2090.03,1392.33C2090.76,1391.5 2092.03,1404.35 2094.48,1405.17C2096.92,1405.98 2104.45,1400.24 2104.7,1397.21C2104.95,1394.2 2095.38,1387.45 2096,1387.03C2109.16,1377.93 2129.57,1377.87 2156.75,1385.46C2156.87,1388.81 2157.01,1392.16 2157.15,1395.5C2157.16,1395.89 2148.9,1391.92 2147.14,1394.32C2145.39,1396.71 2144.88,1408.4 2146.6,1409.87C2148.32,1411.34 2157.44,1401.99 2157.49,1403.16C2157.89,1411.68 2158.37,1420.19 2158.91,1428.68C2159.42,1436.67 2160,1444.66 2160.64,1452.63C2152.85,1454.86 2145.06,1457.09 2137.28,1459.31C2136.3,1459.59 2141.62,1470.15 2139.96,1473.33C2138.31,1476.49 2129.76,1480.1 2127.37,1478.32C2124.97,1476.55 2127.32,1462.15 2125.61,1462.64C2118.37,1464.72 2111.12,1466.79 2103.88,1468.86C2098.41,1455.85 2089.78,1445.84 2078.57,1441.02\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2186.06,1414.23C2178.24,1419.47 2169.14,1424.27 2158.91,1428.68C2159.42,1436.67 2160,1444.66 2160.64,1452.63C2161.68,1465.74 2162.9,1478.81 2164.29,1491.84C2164.41,1492.95 2176.31,1483.39 2178.68,1484.59C2181.06,1485.79 2180.74,1495.96 2178.55,1499.02C2176.36,1502.08 2165.37,1501.63 2165.52,1502.94C2166.8,1514.22 2168.22,1525.48 2169.77,1536.69C2180.67,1535.03 2191.42,1532.99 2201.76,1530.77C2202.87,1530.53 2196.82,1518.59 2198.35,1516.27C2199.88,1513.96 2208.79,1514.81 2210.95,1516.87C2213.12,1518.93 2209.85,1528.98 2211.37,1528.64C2228.46,1524.73 2244.2,1520.51 2257.41,1516.96L2257.41,1453.19C2244.62,1463.21 2231.67,1466.59 2220.16,1463.07C2219,1462.72 2226,1452.86 2224.93,1449.11C2223.87,1445.35 2215.98,1438.88 2213.78,1440.54C2211.57,1442.2 2212.39,1459.51 2211.7,1459.05C2200.59,1451.74 2191.45,1436.89 2186.06,1414.23\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2103.88,1468.86C2111.12,1466.79 2118.37,1464.72 2125.61,1462.64C2127.32,1462.15 2124.97,1476.55 2127.37,1478.32C2129.76,1480.1 2138.31,1476.49 2139.96,1473.33C2141.62,1470.15 2136.3,1459.59 2137.28,1459.31C2145.06,1457.09 2152.85,1454.86 2160.64,1452.63C2161.68,1465.74 2162.9,1478.81 2164.29,1491.84C2164.41,1492.95 2176.31,1483.39 2178.68,1484.59C2181.06,1485.79 2180.74,1495.96 2178.55,1499.02C2176.36,1502.08 2165.37,1501.63 2165.52,1502.94C2166.8,1514.22 2168.22,1525.48 2169.77,1536.69C2160.93,1538.05 2151.98,1539.15 2143.06,1539.89C2141.38,1540.04 2145.03,1526.35 2142.89,1524.18C2140.75,1522.01 2132.01,1524.1 2130.2,1526.86C2128.4,1529.61 2133.26,1540.62 2132.05,1540.69C2122.95,1541.22 2113.92,1541.39 2105.16,1540.87C2108.46,1530.33 2110.22,1519.66 2110.6,1509.41C2110.88,1501.94 2110.42,1494.7 2109.27,1487.87C2109.14,1487.07 2100.62,1492.02 2098.46,1490.64C2096.3,1489.28 2094.76,1481.25 2096.33,1479.66C2097.9,1478.07 2108.12,1482.04 2107.89,1481.1C2106.84,1476.8 2105.5,1472.7 2103.88,1468.86\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1999.24,1514.58C2009.7,1518.93 2026.28,1520.08 2048.2,1518.45C2049.88,1518.33 2043.26,1508.21 2045.19,1505.69C2047.12,1503.17 2057.14,1501.38 2059.76,1503.31C2062.37,1505.24 2059.51,1517.41 2060.86,1517.27C2075.54,1515.65 2092.18,1512.99 2110.6,1509.41C2110.22,1519.66 2108.46,1530.33 2105.16,1540.87C2101.57,1552.38 2096.53,1562.61 2090.53,1571.17C2076.09,1591.81 2056.11,1602.89 2037.51,1599.26C2036.71,1599.1 2044.29,1589.28 2043.19,1586.88C2042.08,1584.5 2033.11,1583.23 2030.9,1584.9C2028.69,1586.57 2030.89,1597.33 2029.92,1596.9C2020.09,1592.68 2012.25,1584.46 2006.77,1573.71C2001.13,1562.64 1998,1548.89 1997.82,1534.08C1997.81,1533.35 1997.81,1532.62 1997.82,1531.88C1997.82,1531.17 2006.47,1540.36 2008.32,1539.59C2010.18,1538.82 2010.64,1529.68 2008.93,1527.27C2007.22,1524.87 1998.01,1525.96 1998.06,1525.15C1998.29,1521.67 1998.68,1518.13 1999.24,1514.58\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2090.53,1571.17C2096.01,1577.82 2105.39,1582.02 2118.44,1583.96C2125.06,1584.93 2132.6,1585.33 2141.07,1585.15C2142.34,1585.12 2135.93,1596.88 2137.61,1598.57C2139.28,1600.25 2149.18,1597.58 2151.09,1595.29C2153.01,1593.01 2148.49,1584.87 2149.11,1584.83C2157.24,1584.36 2166.12,1583.44 2175.7,1582.07C2178.15,1581.72 2180.63,1581.34 2183.16,1580.94C2190.93,1579.69 2199.13,1578.19 2207.76,1576.42C2208.74,1576.22 2206.65,1587.01 2209.22,1588.74C2211.8,1590.48 2221.71,1589.26 2223.2,1586.83C2224.68,1584.41 2216.83,1574.49 2218.17,1574.19C2230.47,1571.48 2243.56,1568.27 2257.41,1564.59L2257.41,1516.96C2244.2,1520.51 2228.46,1524.73 2211.37,1528.64C2209.85,1528.98 2213.12,1518.93 2210.95,1516.87C2208.79,1514.81 2199.88,1513.96 2198.35,1516.27C2196.82,1518.59 2202.87,1530.53 2201.76,1530.77C2191.42,1532.99 2180.67,1535.03 2169.77,1536.69C2160.93,1538.05 2151.98,1539.15 2143.06,1539.89C2141.38,1540.04 2145.03,1526.35 2142.89,1524.18C2140.75,1522.01 2132.01,1524.1 2130.2,1526.86C2128.4,1529.61 2133.26,1540.62 2132.05,1540.69C2122.95,1541.22 2113.92,1541.39 2105.16,1540.87C2101.57,1552.38 2096.53,1562.61 2090.53,1571.17\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2175.7,1582.07C2179.1,1601.44 2191.36,1616.06 2199.9,1632.79C2200.35,1633.67 2188.46,1632.06 2187.15,1634.86C2185.84,1637.68 2189.21,1648.42 2192.04,1649.64C2194.87,1650.87 2203.65,1640.96 2204.13,1642.23C2207.62,1651.42 2209.49,1661.5 2207.99,1673.45C2214.72,1674.88 2221.4,1676.25 2227.98,1677.53C2228.77,1677.69 2223.23,1689.87 2225.09,1693.59C2226.96,1697.31 2237.47,1702.31 2239.15,1699.86C2240.84,1697.41 2234.61,1678.79 2235.16,1678.89C2242.76,1680.28 2250.2,1681.39 2257.41,1682.37L2257.41,1564.59C2243.56,1568.27 2230.47,1571.48 2218.17,1574.19C2216.83,1574.49 2224.68,1584.41 2223.2,1586.83C2221.71,1589.26 2211.8,1590.48 2209.22,1588.74C2206.65,1587.01 2208.74,1576.22 2207.76,1576.42C2199.13,1578.19 2190.93,1579.69 2183.16,1580.94C2180.63,1581.34 2178.15,1581.72 2175.7,1582.07\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2118.44,1583.96C2118.87,1597.22 2117.63,1609.35 2114.85,1620.47C2114.54,1621.72 2106.99,1613.2 2104.46,1614.29C2101.94,1615.38 2098.41,1624.52 2099.7,1627.04C2100.99,1629.56 2112.49,1628.64 2112.22,1629.43C2109.16,1638.4 2105.04,1646.65 2099.95,1654.25C2105.62,1654.56 2111.5,1655.12 2117.57,1655.87C2125.33,1656.84 2133.4,1658.12 2141.66,1659.61C2142.72,1659.8 2134.79,1671.03 2136.8,1673.92C2138.8,1676.81 2151.21,1679.03 2153.68,1676.95C2156.15,1674.88 2150.57,1661.28 2151.64,1661.48C2161.59,1663.43 2171.76,1665.6 2181.97,1667.82C2190.65,1669.7 2199.36,1671.62 2207.99,1673.45C2209.49,1661.5 2207.62,1651.42 2204.13,1642.23C2203.65,1640.96 2194.87,1650.87 2192.04,1649.64C2189.21,1648.42 2185.84,1637.68 2187.15,1634.86C2188.46,1632.06 2200.35,1633.67 2199.9,1632.79C2191.36,1616.06 2179.1,1601.44 2175.7,1582.07C2166.12,1583.44 2157.24,1584.36 2149.11,1584.83C2148.49,1584.87 2153.01,1593.01 2151.09,1595.29C2149.18,1597.58 2139.28,1600.25 2137.61,1598.57C2135.93,1596.88 2142.34,1585.12 2141.07,1585.15C2132.6,1585.33 2125.06,1584.93 2118.44,1583.96\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1985.31,1619.62C1995.86,1622.49 2005.72,1627.14 2014.78,1633.89C2015.35,1634.31 2006.55,1638.94 2007.23,1641.66C2007.91,1644.38 2016.54,1650.64 2018.85,1650.21C2021.15,1649.77 2020.16,1638.21 2021.06,1639.01C2029.44,1646.5 2037.07,1656.01 2043.84,1667.82C2049.21,1662.6 2056.14,1659.07 2064.31,1656.89C2065.34,1656.62 2065.19,1670.33 2067.84,1672.46C2070.48,1674.61 2079.45,1672.6 2080.17,1669.73C2080.89,1666.86 2071.34,1655.37 2072.15,1655.25C2080.51,1653.93 2089.87,1653.7 2099.95,1654.25C2105.04,1646.65 2109.16,1638.4 2112.22,1629.43C2112.49,1628.64 2100.99,1629.56 2099.7,1627.04C2098.41,1624.52 2101.94,1615.38 2104.46,1614.29C2106.99,1613.2 2114.54,1621.72 2114.85,1620.47C2117.63,1609.35 2118.87,1597.22 2118.44,1583.96C2105.39,1582.02 2096.01,1577.82 2090.53,1571.17C2076.09,1591.81 2056.11,1602.89 2037.51,1599.26C2036.71,1599.1 2044.29,1589.28 2043.19,1586.88C2042.08,1584.5 2033.11,1583.23 2030.9,1584.9C2028.69,1586.57 2030.89,1597.33 2029.92,1596.9C2020.09,1592.68 2012.25,1584.46 2006.77,1573.71C1999.23,1584.79 1993.5,1596.02 1989.27,1607.38C1987.76,1611.44 1986.44,1615.53 1985.31,1619.62\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1981.08,1640.14C1964.31,1631.97 1947.71,1625.64 1931.32,1621.69C1930.15,1621.42 1936.04,1635.63 1934.06,1637.68C1932.07,1639.72 1921.33,1636.96 1919.4,1633.98C1917.47,1631 1923.41,1619.96 1922.49,1619.8C1904.04,1616.31 1885.88,1616 1868.09,1619.62C1866.16,1613.49 1864.17,1607.27 1862.12,1600.97C1859.92,1594.22 1857.66,1587.38 1855.32,1580.47C1867.88,1570.68 1882.81,1562.28 1901.47,1556.07C1902.81,1555.63 1901.44,1567.2 1904.22,1568.94C1907,1570.69 1916.97,1569.18 1918.13,1566.55C1919.3,1563.91 1910.23,1553.4 1911.21,1553.14C1926.31,1549.02 1943.66,1546.25 1963.89,1545.15C1964.73,1552.71 1966.22,1560.03 1968.3,1567.05C1968.63,1568.19 1956.87,1565.02 1955.47,1567.82C1954.06,1570.62 1957.18,1582.44 1959.86,1583.87C1962.53,1585.32 1971.05,1575.28 1971.5,1576.47C1975.93,1587.89 1981.96,1598.33 1989.27,1607.38C1987.76,1611.44 1986.44,1615.53 1985.31,1619.62C1983.42,1626.42 1982.03,1633.26 1981.08,1640.14\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1981.08,1692.11C1965.61,1689.8 1950.54,1689.17 1936.06,1690.94C1935.37,1691.02 1941.58,1699.94 1940.28,1701.8C1938.98,1703.67 1930.42,1703.69 1928.25,1702.11C1926.09,1700.54 1928.79,1692.04 1927.27,1692.33C1915.21,1694.69 1903.6,1698.88 1892.54,1705.36C1891.09,1699.64 1889.56,1693.78 1887.95,1687.77C1885.41,1678.29 1882.68,1668.47 1879.76,1658.34C1879.4,1657.1 1893.41,1660.09 1894.86,1657.06C1896.32,1654.03 1891.57,1641.98 1888.47,1640.19C1885.38,1638.41 1876.68,1647.8 1876.25,1646.38C1873.67,1637.66 1870.94,1628.73 1868.09,1619.62C1885.88,1616 1904.04,1616.31 1922.49,1619.8C1923.41,1619.96 1917.47,1631 1919.4,1633.98C1921.33,1636.96 1932.07,1639.72 1934.06,1637.68C1936.04,1635.63 1930.15,1621.42 1931.32,1621.69C1947.71,1625.64 1964.31,1631.97 1981.08,1640.14C1978.7,1657.26 1979.02,1674.61 1981.08,1692.11\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2043.84,1667.82C2037.07,1656.01 2029.44,1646.5 2021.06,1639.01C2020.16,1638.21 2021.15,1649.77 2018.85,1650.21C2016.54,1650.64 2007.91,1644.38 2007.23,1641.66C2006.55,1638.94 2015.35,1634.31 2014.78,1633.89C2005.72,1627.14 1995.86,1622.49 1985.31,1619.62C1983.42,1626.42 1982.03,1633.26 1981.08,1640.14C1978.7,1657.26 1979.02,1674.61 1981.08,1692.11C1982.27,1702.21 1984.04,1712.37 1986.2,1722.56C1986.35,1723.26 1977.13,1719.2 1975.56,1721.48C1973.99,1723.77 1974.73,1734.72 1976.8,1736.23C1978.87,1737.75 1987.86,1730.03 1987.99,1730.61C1990.82,1742.8 1994.14,1755.04 1997.64,1767.3L2045.84,1767.3C2040.88,1753.87 2037.28,1741.91 2034.92,1731.29C2034.75,1730.48 2045.47,1732.69 2047.1,1730.83C2048.74,1728.97 2047.04,1721.55 2044.72,1720.11C2042.39,1718.68 2033.37,1723.53 2033.16,1722.25C2028.69,1695.42 2033.14,1678.23 2043.84,1667.82\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M1981.08,1692.11C1965.61,1689.8 1950.54,1689.17 1936.06,1690.94C1935.37,1691.02 1941.58,1699.94 1940.28,1701.8C1938.98,1703.67 1930.42,1703.69 1928.25,1702.11C1926.09,1700.54 1928.79,1692.04 1927.27,1692.33C1915.21,1694.69 1903.6,1698.88 1892.54,1705.36C1894.24,1712.05 1895.83,1718.54 1897.31,1724.81C1897.54,1725.78 1910.44,1715.58 1913.14,1717.28C1915.83,1718.98 1915.69,1732.06 1913.45,1735C1911.2,1737.95 1899.39,1733.77 1899.65,1734.96C1902.3,1746.64 1904.54,1757.46 1906.35,1767.3L1997.64,1767.3C1994.14,1755.04 1990.82,1742.8 1987.99,1730.61C1987.86,1730.03 1978.87,1737.75 1976.8,1736.23C1974.73,1734.72 1973.99,1723.77 1975.56,1721.48C1977.13,1719.2 1986.35,1723.26 1986.2,1722.56C1984.04,1712.37 1982.27,1702.21 1981.08,1692.11\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2105.2,1767.3C2099.26,1750.93 2097.73,1732.34 2100.82,1711.42C2100.95,1710.5 2113.4,1718.06 2116.14,1716.17C2118.89,1714.29 2119.55,1702.65 2117.31,1700.12C2115.07,1697.58 2102.47,1702.08 2102.72,1700.93C2105.69,1686.9 2110.63,1671.89 2117.57,1655.87C2111.5,1655.12 2105.62,1654.56 2099.95,1654.25C2089.87,1653.7 2080.51,1653.93 2072.15,1655.25C2071.34,1655.37 2080.89,1666.86 2080.17,1669.73C2079.45,1672.6 2070.48,1674.61 2067.84,1672.46C2065.19,1670.33 2065.34,1656.62 2064.31,1656.89C2056.14,1659.07 2049.21,1662.6 2043.84,1667.82C2033.14,1678.23 2028.69,1695.42 2033.16,1722.25C2033.37,1723.53 2042.39,1718.68 2044.72,1720.11C2047.04,1721.55 2048.74,1728.97 2047.1,1730.83C2045.47,1732.69 2034.75,1730.48 2034.92,1731.29C2037.28,1741.91 2040.88,1753.87 2045.84,1767.3L2105.2,1767.3\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2117.57,1655.87C2110.63,1671.89 2105.69,1686.9 2102.72,1700.93C2102.47,1702.08 2115.07,1697.58 2117.31,1700.12C2119.55,1702.65 2118.89,1714.29 2116.14,1716.17C2113.4,1718.06 2100.95,1710.5 2100.82,1711.42C2097.73,1732.34 2099.26,1750.93 2105.2,1767.3L2182.11,1767.3C2174.02,1754.2 2171.46,1737.84 2172.51,1719.37C2172.55,1718.43 2183.73,1725.74 2185.96,1723.62C2188.2,1721.48 2188,1709.21 2185.93,1706.59C2183.87,1703.99 2173.38,1709.42 2173.56,1707.97C2175.16,1695.29 2178.14,1681.8 2181.97,1667.82C2171.76,1665.6 2161.59,1663.43 2151.64,1661.48C2150.57,1661.28 2156.15,1674.88 2153.68,1676.95C2151.21,1679.03 2138.8,1676.81 2136.8,1673.92C2134.79,1671.03 2142.72,1659.8 2141.66,1659.61C2133.4,1658.12 2125.33,1656.84 2117.57,1655.87\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"        <path d=\\\"M2181.97,1667.82C2178.14,1681.8 2175.16,1695.29 2173.56,1707.97C2173.38,1709.42 2183.87,1703.99 2185.93,1706.59C2188,1709.21 2188.2,1721.48 2185.96,1723.62C2183.73,1725.74 2172.55,1718.43 2172.51,1719.37C2171.46,1737.84 2174.02,1754.2 2182.11,1767.3L2257.41,1767.3L2257.41,1682.37C2250.2,1681.39 2242.76,1680.28 2235.16,1678.89C2234.61,1678.79 2240.84,1697.41 2239.15,1699.86C2237.47,1702.31 2226.96,1697.31 2225.09,1693.59C2223.23,1689.87 2228.77,1677.69 2227.98,1677.53C2221.4,1676.25 2214.72,1674.88 2207.99,1673.45C2199.36,1671.62 2190.65,1669.7 2181.97,1667.82\\\" style=\\\"fill:#1cc11c;fill-opacity:0.1;stroke:#000;stroke-width:0.95px;\\\"/>\\n\" +\n                \"    </g>\\n\" +\n                \"    <g id=\\\"Pieces-with-photo\\\" serif:id=\\\"Pieces with photo\\\">\\n\" +\n                \"    </g>\\n\" +\n                \"</svg>\\n\",\n    \"complexFromWeb\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n                      \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n                      \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 1632 1056\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;\\\">\\n\" +\n                      \"    <g transform=\\\"matrix(1.52604,0,0,1.52604,448.758,-4.83242)\\\">\\n\" +\n                      \"        <g id=\\\"Layer-1\\\" serif:id=\\\"Layer 1\\\">\\n\" +\n                      \"            <path id=\\\"path5298\\\" d=\\\"M-277.59,25.827L-237.84,25.834L-155.34,25.827M-154.59,25.077C-137.707,28.034 -117.15,25.807 -99.84,25.836C-58.147,25.906 -16.297,25.828 25.41,25.827M26.16,25.077L56.16,25.827M57.66,25.827C137.506,26.102 217.727,25.531 297.66,25.879C324.284,25.995 352.274,26.143 378.66,25.827M380.91,25.827L452.16,25.827M452.91,25.077L452.16,25.827M453.66,25.077L494.16,25.828L582.66,25.827M584.16,25.827L590.91,25.827M592.41,25.827L656.91,25.827C662.183,25.827 675.495,23.452 679.32,27.821C681.345,30.142 680.888,34.232 680.903,37.079C680.94,44.328 680.911,51.578 680.911,58.827L680.911,625.077C680.911,636.09 680.925,647.071 680.911,658.076C680.903,661.468 681.766,667.372 678.459,669.582C674.026,672.542 665.011,670.827 659.911,670.827L-277.589,670.827M-266.339,26.577L-261.839,30.327L-263.339,33.327L-260.339,37.077L-258.089,42.327L-251.339,43.827M-237.089,26.577C-234.415,32.267 -224.39,48.596 -216.458,45.673C-206.091,41.853 -206.751,29.147 -192.839,33.327C-195.83,38.353 -203.497,47.088 -202.566,53.262C-201.263,61.901 -179.301,61.742 -173.339,60.327L-171.543,49.396L-176.581,42.028L-183.089,26.577M-91.589,26.577L-95.339,31.077M9.66,26.577L4.41,30.327C2.714,34.668 0.156,37.692 -3.84,40.077C-3.652,44.827 -5.766,47.57 -9.84,49.827L-11.34,55.827L-9.84,58.827L-13.59,61.077C-13.887,63.192 -14.388,65.21 -14.836,67.3C-15.076,68.424 -15.306,69.574 -15.262,70.731C-14.779,83.356 -2.482,65.818 0.952,69.136C5.565,73.593 -0.319,88.143 0.22,94.072C0.461,96.719 1.376,102.644 5.076,102.62C10.715,102.582 8.834,88.506 9.107,85.077C9.596,78.909 12.846,72.523 12.018,66.327C11.575,63.015 8.452,57.939 11.054,54.922C14.303,51.155 21.999,53.149 26.159,53.654C31.328,54.282 35.69,52.405 38.91,57.327C42.989,54.601 56.465,43.964 48.008,38.773C41.844,34.989 30.573,45.08 28.943,32.638C28.709,30.861 28.964,29.09 29.16,27.327M67.41,26.577L62.91,43.077C70.874,41.747 75.146,47.436 70.699,54.921C67.746,59.89 63.678,59.145 59.24,61.524C56.51,62.988 55.102,66.039 52.188,67.289C45.533,70.143 40.453,63.268 38.16,58.077M87.66,26.577C88.26,32.957 93.158,37.377 92.16,43.827C85.127,41.172 80.256,45.156 83.431,52.777C85.769,58.389 89.797,59.105 94.601,61.661C101.519,65.342 105.893,71.897 113.167,63.03C115.928,59.665 116.392,55.348 117.66,51.327C125.491,55.954 136.693,48.572 142.904,54.284C149.229,60.099 134.209,73.62 132.66,79.827C124.787,77.415 118.659,79.576 110.91,78.227C107.635,77.656 103.591,74.804 100.261,76.491C95.196,79.057 103.817,87.817 97.79,88.814C93.323,89.552 89.283,83.145 86.059,80.917C81.372,77.679 71.008,75.288 65.312,75.407C62.078,75.475 57.292,82.06 54.396,79.753C52.206,78.007 57.209,69.242 56.16,65.577M141.66,26.577L146.16,29.577C146.087,32.247 146.556,33.079 149.16,33.327L154.41,40.077L152.91,43.827C156.443,46.497 158.236,49.05 158.16,53.577L161.91,55.827C162.677,54.954 163.421,53.956 164.346,53.223C170.476,48.37 170.984,57.683 176.053,57.165C179.54,56.809 179.836,51.642 182.401,49.97C187.335,46.753 194.429,54.467 193.41,43.827C195.449,44.149 197.386,44.445 199.444,45.102C200.611,45.475 201.785,45.911 202.838,46.55C213.814,53.214 187.458,56.743 188.052,62.421C188.939,70.887 207.572,60.863 208.408,69.615C208.744,73.125 204.061,76 201.642,77.706C193.68,83.319 187.849,87.488 182.694,96.075C180.217,100.203 184.829,107.358 179.132,109.86C171.135,113.373 165.817,99.072 158.16,110.577M235.41,26.577C237.242,30.622 245.402,31.705 245.656,35.301C245.965,39.678 239.969,42.267 237.015,44.22C232.567,47.16 230.719,50.587 230.91,55.827C234.176,55.283 237.854,55.356 240.784,53.524C242.249,52.607 244.388,48.752 246.362,49.363C249.218,50.246 248.402,55.655 248.84,57.841C249.569,61.475 252.388,62.187 255.66,62.577C254.1,54.052 257.66,37.466 269.244,36.764C276.218,36.342 282.979,46.826 285.66,52.077C289.691,51.782 292.922,55.202 296.298,54.91C300.113,54.58 299.148,47.009 299.16,44.577C304.846,45.69 312.041,50.311 307.118,56.846C301.686,64.056 289.837,64.267 293.16,76.077L296.392,72.868C304.595,64.846 305.672,78.31 312.515,80.425C316.425,81.634 320.711,76.719 324.365,79.235C328.724,82.235 324.625,91.467 332.983,89.283C349.037,85.088 365.827,75.923 380.91,69.124C386.559,66.577 395.98,64.311 400.035,59.412C404.526,53.987 389.666,50.182 396.598,44.545C399.836,41.912 403.808,43.962 407.311,42.514C412.049,40.554 416.697,30.706 421.286,39.34C421.925,40.542 422.398,41.823 422.91,43.077L430.169,31.934L443.91,26.577M299.16,26.577C297.128,31.265 292.733,30.621 290.098,34.245C286.204,39.6 294.88,42.785 298.41,43.827M377.16,26.577C378.779,30.664 385.847,28.205 387.239,32.129C388.671,36.167 379.074,34.558 378.56,37.981C377.859,42.656 385.384,42.862 383.16,48.327C382.133,48.029 381.086,47.648 380.017,47.506C371.909,46.434 378.068,53.252 375.336,56.499C373.656,58.496 370.057,55.977 367.945,57.171C365.528,58.537 366.923,62.933 364.332,63.988C361.85,64.998 359.84,61.169 357.356,61.275C354.422,61.4 354.47,66.163 351.608,66.497C349.017,66.799 346.727,58.51 343.949,56.975C340.338,54.98 331.393,54.098 329.964,49.586C328.436,44.763 341.139,42.481 343.944,41.051C345.602,40.205 348.676,38.129 347.002,35.951C341.623,28.95 327.448,39.822 325.41,27.327M455.91,26.577C459.785,33.565 465.08,28.668 470.512,32.428C474.39,35.113 472.74,39.598 474.915,43.083C477.743,47.606 482.775,47.974 485.16,53.577C500.783,40.066 527.618,46.599 537.255,64.8C541.665,73.133 540.735,84.987 541.41,94.077C548.37,91.815 550.62,88.986 555.285,83.527C556.62,81.966 560.183,78.953 558.953,76.544C556.995,72.707 549.338,76.813 548.033,71.897C546.81,67.263 555.683,64.46 553.703,60.39C551.925,56.733 545.528,59.067 543.54,55.212C541.125,50.527 555.48,45.08 550.44,42.676C544.455,39.818 533.738,51.246 527.91,52.827M504.66,26.577L510.69,35.708L504.66,46.077M554.91,26.577C550.508,32.616 534.608,32.741 545.91,41.577M625.41,26.577C621.443,35.703 606.323,30.12 598.41,30.414C596.078,30.501 588.398,30.331 588.368,34.029C588.338,38 597.563,37.064 599.91,37.08C607.418,37.13 608.565,40.347 614.633,42.901C617.753,44.211 621.345,43.647 624.63,44.095C627.368,44.468 630.773,45.52 631.23,48.703C631.868,53.176 627.323,56.96 628.238,61.447C630.143,70.833 639.36,57.397 640.808,55.073C642.66,52.09 646.943,37.051 649.658,36.808C653.033,36.505 655.455,40.979 657.51,43.02C658.988,44.495 660.908,45.758 661.98,47.587C665.393,53.371 656.318,51.982 653.678,53.227C649.395,55.251 641.603,65.963 643.793,70.93C646.838,77.846 655.29,62.806 660.803,66.19C666.578,69.729 665.378,75.997 668.31,81.003C671.34,86.173 677.115,90.785 680.91,95.577M-150.84,27.327C-152.374,28.792 -153.901,30.182 -155.504,31.624C-156.562,32.577 -157.651,33.518 -158.581,34.599C-167.08,44.473 -147.406,39.958 -145.7,45.114C-144.694,48.152 -165.036,60.508 -151.516,60.106C-150.256,60.069 -149.028,59.759 -147.835,59.372C-142.631,57.68 -128.703,52.441 -128.175,45.974C-127.88,42.361 -139.294,34.13 -135.499,31.715C-129.403,27.836 -122.467,34.516 -116.482,33.552C-113.173,33.02 -111.282,29.88 -109.59,27.327M-277.59,30.327L-273.09,31.077L-277.59,34.827M125.91,29.577C125.897,31.091 125.951,32.581 125.543,34.073C122.582,44.893 112.33,35.078 106.388,38.789C98.294,43.846 110.662,54.593 114.66,57.327M209.16,29.577C205.232,36.25 197.711,32.879 191.411,34.595C184.775,36.401 190.36,41.691 193.41,43.827M-0.84,34.077L0.66,34.077M-274.59,35.577L-267.84,41.577M-111.84,54.327C-109.3,53.856 -108.599,53.102 -108.09,50.577L-107.34,49.827L-104.34,50.577L-104.34,46.827L-100.59,41.577L-96.84,40.827L-96.09,35.577L-93.84,35.577M-96.09,41.577L-92.34,45.327C-90.142,43.579 -87.956,41.787 -85.547,40.335C-83.94,39.367 -82.215,38.486 -80.343,38.188C-64.081,35.592 -74.008,57.139 -72.438,63.945C-70.69,71.52 -61.302,74.02 -63.09,82.827C-72.211,81.26 -75.881,91.448 -81.09,97.077C-84.53,94.386 -87.28,93.843 -91.59,94.077C-90.443,101.064 -91.098,106.124 -85.59,111.327C-81.013,108.381 -77.377,108.393 -72.09,108.327C-73.652,99.682 -65.13,92.21 -63.09,83.577M-63.09,89.577C-56.99,90.219 -37.749,80.449 -44.064,71.584C-46.291,68.458 -50.77,71.242 -53.856,70.334C-57.904,69.142 -60.641,64.937 -63.09,61.827C-58.429,56.703 -54.975,44.151 -46.095,46.881C-39.738,48.836 -38.615,61.574 -30.397,58.829C-23.178,56.418 -28.372,46.905 -25.048,42.031C-20.188,34.909 -11.224,42.262 -5.34,43.827M-101.34,41.577L-100.59,41.577M-253.59,42.327L-249.09,52.827L-246.09,51.327L-246.84,55.827C-244.303,56.546 -242.953,56.931 -242.34,59.577L-231.84,67.827C-228.996,67.752 -228.066,68.437 -226.59,70.827L-223.59,69.327L-222.84,74.577M422.16,42.327C421.172,44.03 418.702,47.793 421.583,49.147C425.242,50.866 432,46.657 435.66,45.81C445.13,43.617 452.247,43.548 461.16,47.577M626.16,62.577L621.66,67.827C613.98,67.827 616.028,75.288 614.37,80.575C613.058,84.767 610.478,88.264 608.16,91.827L614.91,96.327C617.28,90.816 618.465,87.71 624.66,91.077C621.24,96.969 614.505,105.61 616.125,112.794C616.853,116.022 627.713,124.402 625.898,126.516C622.425,130.555 612.773,120.223 608.355,121.02C603.99,121.807 592.508,135.33 588.705,129.961C586.298,126.563 592.65,118.467 588.368,116.501C585.03,114.97 575.723,123.534 574.86,116.277C574.013,109.13 583.08,104.371 583.118,97.671C583.163,87.78 565.433,79.163 577.41,70.077C574.838,64.561 567.953,51.788 573.195,46.301C579.443,39.763 590.7,45.816 597.758,46.302C602.048,46.597 606.315,44.024 610.41,43.077M-6.84,44.577L-6.84,46.077M-268.59,45.327L-264.84,47.577L-266.34,50.577L-262.59,52.077L-264.09,55.077L-260.34,57.327L-263.34,61.077L-259.59,70.827M-76.59,89.577C-79.318,85.531 -82.85,69.388 -89.249,78.39C-90.094,79.58 -90.826,80.844 -91.59,82.077C-93.162,78.003 -96.803,72.985 -96.86,68.633C-97.044,54.598 -84.703,45.85 -72.09,52.077M442.41,50.577C440.067,54.944 432.858,57.887 432.354,62.781C431.444,71.619 442.868,78.841 450.653,77.698C464.066,75.73 468.242,62.414 463.41,51.327M285.66,52.077C285.225,57.327 284.013,64.059 278.678,66.819C271.393,70.589 261.011,67.888 255.66,62.577M484.41,54.327C478.103,62.991 485.85,73.718 473.91,78.327C477.525,82.219 481.538,86.597 483.81,91.512C488.58,101.819 483.083,114.84 475.62,122.1C470.1,127.465 462.798,126.336 456.902,129.645C454.139,131.195 452.417,135.785 450.66,138.327L471.855,134.845L486.503,131.975L493.41,120.327L511.41,118.827C508.298,123.811 506.303,127.557 510.66,132.327L512.16,126.327L516.66,127.827L517.41,127.077L517.41,121.827L522.66,122.577L521.16,118.827C523.965,117.915 525.338,117.117 526.41,114.327C533.76,109.884 537.083,101.748 539.91,94.077M-12.09,55.827L-11.34,55.827M161.91,56.577C164.317,66.465 169.269,76.124 167.16,86.577L167.91,93.327L167.91,104.577M515.16,113.577C514.463,105.995 510.555,106.365 504.66,109.827L502.703,99.639L496.058,97.744L496.425,90.266L488.91,84.327L497.16,79.077L488.16,72.327C496.53,69.462 499.313,67.489 492.66,60.327C501.188,55.348 512.46,55.136 520.943,60.85C523.268,62.419 527.43,65.511 527.423,68.695C527.414,73.156 515.513,71.767 516.405,79.802C517.47,89.317 526.988,83.246 530.445,87.417C532.358,89.728 529.59,94.881 528.6,97.078C524.663,105.825 518.228,112.275 511.41,118.827M-69.84,57.327L-63.09,62.577M-116.34,58.077L-111.84,58.827M-114.84,58.827L-131.34,73.077L-136.59,76.077L-141.09,76.827L-141.84,77.577L-141.84,79.077M232.41,59.577C237.341,61.991 242.918,64.612 244.958,70.121C247.101,75.911 244.1,85.208 252.023,87.434C259.013,89.399 267.287,81.729 273.604,79.532C276.434,78.548 279.85,79.642 282.467,78.305C286.959,76.011 283.989,69.533 290.91,71.577M410.16,70.077C412.985,77.109 410.102,82.609 411.238,89.463C412.324,96.02 419.621,102.337 411.68,108.096C407.894,110.842 405.425,107.277 402.099,105.811C399.467,104.651 396.2,105.106 393.9,103.202C391.619,101.314 391.103,97.968 389.176,95.742C387.251,93.521 384.483,91.96 384.724,88.632C385.378,79.605 391.453,80.455 397.466,77.39C400.745,75.719 403.109,72.704 406.474,71C414.149,67.112 421.948,63.836 429.66,60.327M481.41,65.577L492.66,60.327M-149.34,61.077C-148.131,61.723 -146.887,62.33 -145.713,63.063C-136.969,68.515 -152.544,71.088 -155.331,73.307C-161.039,77.85 -150.682,80.057 -147.84,80.577L-141.84,77.577M-14.34,61.077L-13.59,61.077M-173.34,61.827C-174.214,65.591 -176.687,69.143 -176.881,73.028C-177.238,80.216 -174.825,91.653 -178.365,98.177C-184.629,109.724 -201.055,106.116 -200.566,121.719C-200.201,133.35 -184.378,116.013 -179.621,117.591C-177.967,118.14 -176.381,119.684 -176.458,121.533C-176.577,124.334 -179.662,125.796 -179.551,128.847C-179.288,136.096 -174.181,139.323 -178.59,146.577C-180.333,145.087 -182.063,143.593 -183.932,142.241C-185.092,141.402 -186.286,140.585 -187.555,139.917C-199.499,133.625 -189.397,152.592 -194.518,155.204C-199.996,157.996 -203.912,146.7 -209.195,148.312C-213.428,149.605 -210.341,159.251 -212.1,162.407C-215.768,168.99 -224.942,153.585 -227.34,151.077C-230.47,156.803 -235.516,174.546 -225.694,176.709C-220.847,177.775 -217.056,173.376 -212.299,173.304C-208.037,173.24 -204.034,176.292 -199.761,174.986C-193.444,173.057 -194.045,162.918 -187.099,162.127C-182.823,161.64 -184.209,167.522 -184.849,169.841C-187.02,177.698 -190.146,185.76 -193.59,193.077C-203.003,189.888 -204.813,186.426 -204.09,176.577M342.66,84.327C339.158,80.407 325.021,73.017 326.588,67.009C327.886,62.034 343.241,64.077 347.16,64.077M-175.59,85.827C-163.601,88.645 -168.219,72.509 -164.227,67.617C-161.755,64.587 -153.567,66.98 -152.34,70.077M140.91,68.577C144.808,77.417 145.422,86.042 145.52,95.557C145.545,98.01 145.691,103.056 149.222,103.056C152.464,103.056 153.452,98.767 153.85,96.293C154.94,89.514 153.371,82.775 152.481,76.09C152.175,73.789 151.512,69.086 154.709,68.393C158.036,67.671 162.359,74.128 165.66,75.327M243.66,66.327C241.221,68.478 238.415,71.534 235.057,72.159C231.737,72.776 229.259,69.851 226.053,72.314C221.528,75.79 220.325,86.691 217.022,91.827C214.892,95.14 208.339,101.747 209.948,106.102C210.888,108.645 214.157,107.648 215.943,106.807C219.29,105.231 227.255,97.138 231.11,100.609C237.02,105.929 224.554,116.871 230.509,121.964C237.395,127.853 242.928,106.47 249.819,109.143C256.664,111.799 249.614,128.587 256.853,130.104C263.987,131.599 262.072,113.983 269.215,113.982C273.736,113.98 274.333,121.059 277.404,123.282C280.43,125.472 285.487,124.346 287.619,127.811C289.294,130.533 287.471,136.194 291.049,137.646C294.319,138.974 297.82,135.275 301.15,135.366C305.409,135.483 306.424,141.341 310.481,141.357C314.829,141.375 315.647,135.115 319.228,133.599C323.201,131.916 330.468,134.919 334.41,136.077C338.179,135.59 339.264,137.186 340.41,140.577C344.117,136.308 343.578,126.588 348.395,124.14C354.043,121.271 357.799,129.18 362.308,130.969C367.269,132.938 371.492,129.12 376.357,129.231C385.967,129.453 380.111,141.804 380.91,147.327C383.967,147.846 390.177,151.515 392.83,149.004C394.825,147.115 393.949,142.477 396.757,141.403C399.878,140.209 402.875,145.71 405.98,143.587C412.415,139.188 405.851,130.361 401.16,128.577C404.364,119.767 387.77,110.618 380.822,107.56C377.938,106.291 376.262,103.214 372.713,104.594C361.58,108.925 377.334,113.342 375.607,117.261C373.742,121.49 364.594,115.969 361.709,119.946C360.608,121.461 365.153,128.827 365.16,131.577M577.41,70.077C584.07,70.437 581.79,75.643 584.025,80.579C588.428,90.34 598.673,101.907 608.16,92.577M16.41,70.077L21.66,79.827C28.164,77.509 40.441,75.127 42.904,84.43C43.843,87.976 41.042,92.306 43.688,95.392C46.054,98.151 50.348,97.781 52.825,100.425C54.929,102.67 54.73,106.093 56.318,108.644C60.6,115.525 67.348,112.998 71.91,108.327C70.954,100.824 85.052,99.459 81.973,92.068C80.99,89.71 78.343,88.381 75.91,89.288C71.746,90.84 70.742,96.308 66.659,98.005C59.142,101.13 63.183,86.922 64.837,84.458C66.403,82.124 68.399,80.235 70.41,78.327M-260.34,73.827C-255.632,77.121 -257.106,83.551 -259.59,88.077C-254.485,91.537 -243.681,91.674 -244.006,82.902C-244.109,80.105 -248.072,77.332 -247.322,74.741C-245.93,69.935 -237.523,73.31 -235.319,75.312C-229.4,80.685 -228.83,95.572 -235.848,100.322C-239.59,102.855 -244.811,101.208 -248.066,104.577C-252.253,108.909 -248.385,114.411 -250.205,119.365C-251.996,124.242 -258.423,126.101 -257.749,132.057C-256.807,140.376 -246.873,133.432 -242.934,133.062C-239.68,132.756 -233.824,135.117 -231.179,137.016C-225.911,140.796 -237.429,142.553 -237.037,145.618C-236.733,147.987 -229.256,149.525 -227.34,151.077M365.91,77.577C371.591,87.14 387.805,65.975 391.41,76.827M-218.34,72.327L-210.84,79.077L-207.84,77.577L-206.34,81.327L-201.09,82.827L-196.59,80.577L-194.34,84.327L-188.34,85.077L-178.59,82.827M-18.84,72.327L-17.34,72.327M272.91,80.577C274.177,82.745 276.311,85.847 274.448,88.313C273.214,89.949 268.797,90.492 269.105,93.028C270.254,102.497 282.99,95.622 284.91,90.327C297.393,98.349 286.757,110.274 296.699,119.661C308.051,130.38 328.101,116.768 321.515,102.368C315.728,89.717 299.594,95.34 291.66,85.077C297.866,82.843 299.246,77.909 302.91,73.077M-86.34,112.077C-80.833,121.93 -63.813,119.081 -60.912,133.077C-58.864,142.954 -66.807,158.718 -77.989,159.196C-82.369,159.383 -86.329,155.772 -90.135,154.042C-93.441,152.539 -97.622,152.312 -100.625,150.289C-107.087,145.936 -110.986,137.447 -111.84,130.077L-119.34,128.577C-120.634,133.635 -122.071,137.109 -126.09,140.577C-128.651,134.868 -135.034,130.101 -139.872,126.087C-141.907,124.399 -145.401,122.961 -146.074,120.14C-147.299,115.013 -137.12,116.382 -135.649,112.307C-134.041,107.856 -140.692,104.344 -138.982,100.011C-137.08,95.195 -129.174,101.033 -125.992,97.459C-122.865,93.948 -127.451,88.883 -125.049,85.25C-122.029,80.683 -115.822,89.566 -111.73,87.164C-107.876,84.901 -110.007,77.506 -105.477,76.178C-99.64,74.469 -98.559,86.353 -91.59,82.077M412.41,76.077C416.06,75.331 421.005,74.753 422.435,79.396C423.613,83.22 421.05,88.709 426.214,90.417C429.713,91.575 433.316,89.163 436.798,90.368C440.755,91.738 442.106,97.206 446.852,96.942C452.488,96.628 455.689,90.702 461.91,90.327C463.452,83.478 467.182,80.113 473.91,78.327M647.16,75.327L644.303,87.668L629.91,105.327C625.29,100.348 630.78,95.467 625.41,91.077M0.66,147.327C-4.411,144.45 -4.012,140.064 -10.59,144.327C-13.063,142.454 -15.858,140.093 -19.186,141.082C-22.516,142.072 -25.085,146.049 -28.944,144.413C-31.841,143.184 -32.857,139.777 -34.918,137.629C-38.09,134.321 -49.264,132.33 -48.336,126.42C-47.685,122.268 -40.344,120.976 -40.807,116.745C-41.338,111.877 -50.102,114.195 -52.223,110.448C-54.471,106.474 -48.865,100.068 -48.84,95.577L-37.21,91.23L-31.207,81.967L-16.59,81.327L-17.34,77.577L-15.09,76.077M-151.59,80.577L-147.84,80.577M111.66,80.577C110.827,85.45 111.585,88.562 114.66,92.577C110.466,99.403 110.627,108.459 120.67,109.706C124.028,110.123 129.056,107.171 131.993,109.222C133.881,110.541 134.582,113.417 135.86,115.245C138.578,119.134 147.896,126.625 142.852,131.935C137.544,137.523 124.205,132.113 116.91,135.327L115.41,128.577C113.159,129.603 110.915,130.621 108.937,132.191C105.452,134.958 100.883,144.137 107.702,146.235C112.72,147.778 125.325,141.232 125.233,151.89C125.145,162.021 111.851,156.784 108.161,162.971C104.865,168.498 112.727,174.706 113.16,180.327M383.91,80.577C368.517,88.416 351.622,97.375 335.16,102.327L340.936,93.95L335.851,93.697L322.41,100.077M-16.59,81.327L-15.09,81.327M165.66,81.327L167.16,81.327M-149.34,82.077C-145.313,84.755 -137.518,92.069 -135.84,96.327M194.16,86.577C200.897,91.856 212.176,83.839 220.41,85.077M-18.84,84.327L-16.59,87.327L-19.59,89.577L-16.59,99.327M-230.34,90.327L-208.59,93.327M-205.59,90.327C-195.28,88.782 -193.569,98.556 -187.59,104.577M551.91,89.577C555.638,91.181 565.47,88.345 567.555,90.935C569.708,93.606 564.78,97.808 563.595,99.857C561.885,102.809 562.71,105.379 563.91,108.327L579.66,103.077M-143.34,88.827C-148.196,91.305 -166.444,91.055 -157.841,99.756C-156.835,100.773 -155.713,101.678 -154.61,102.587C-152.87,104.021 -151.101,105.419 -149.34,106.827C-154.905,112.293 -163.098,106.542 -167.553,110.729C-170.956,113.927 -155.644,130.179 -167.407,127.898C-168.64,127.659 -169.825,127.183 -170.964,126.663C-172.576,125.926 -174.074,124.991 -175.59,124.077M479.91,88.827L473.115,100.869L470.16,118.077C464.954,115.472 459.507,113.244 454.511,110.219C452,108.698 449.294,105.684 446.306,105.207C441.572,104.45 443.787,112.138 440.774,113.63C437.696,115.152 427.887,106.419 431.553,116.628C431.921,117.655 432.478,118.637 433.02,119.581C433.759,120.865 434.585,122.103 435.446,123.309C437.156,125.705 440.111,130.441 443.589,130.131C447.825,129.753 452.747,117.684 455.91,126.327M422.16,89.577C422.916,97.004 425.325,104.625 428.91,111.327M-277.59,105.327C-275.11,102.805 -272.492,92.964 -269.268,92.524C-265.383,91.994 -268.028,101.544 -268.415,103.077C-270.468,111.203 -279.655,128.504 -268.59,133.077L-263.34,112.827L-260.34,111.327C-261.418,104.83 -259.78,97.157 -257.34,91.077M462.66,91.077L449.91,104.577M-120.84,130.077C-132.206,128.412 -128.518,117.8 -123.872,110.597C-117.352,100.487 -104.11,90.755 -91.59,94.077M-65.34,94.827L-48.84,95.577M44.16,97.827C43.305,104.436 39.471,109.923 32.156,109.922C29.282,109.921 26.033,108.241 23.21,109.027C20.839,109.688 20.155,112.868 18.927,114.682C16.013,118.986 11.027,122.289 10.064,127.718C9.263,132.239 13.379,133.982 17.186,134.277C24.074,134.81 36.692,134.772 38.91,127.827C41.18,129.381 43.445,130.895 45.491,132.829C46.777,134.046 47.984,135.38 48.922,136.89C51.334,140.771 51.042,146.832 45.482,147.525C40.062,148.2 30.463,142.421 29.201,151.843C27.64,163.511 43.788,156.544 46.322,163.578C48.667,170.084 37.819,173.987 37.41,180.327C40.485,179.484 41.706,179.868 43.41,182.577L48.66,184.077C54.781,184.065 61.381,184.673 66.66,187.827L83.91,187.827L86.91,184.827L89.91,187.077L92.16,184.077L98.16,182.577L101.16,184.827L107.91,182.577L109.41,178.827M599.16,211.827C598.14,206.055 593.078,210.093 590.303,206.699C588.42,204.403 591.36,200.463 588.908,198.486C585.923,196.081 580.08,200.574 580.013,194.362C579.952,189.641 583.26,181.013 589.365,183.318C591.45,184.106 597.548,189.976 599.618,186.646C601.853,183.032 594.263,177.362 592.62,174.784C588.06,167.647 599.933,150.777 591.69,145.212C585.255,140.87 581.25,153.708 574.845,151.657C567.315,149.248 576.375,134.751 566.858,134.001C559.973,133.458 557.198,153.938 550.2,146.987C547.635,144.438 547.553,140.16 546.33,136.946C545.025,133.521 542.595,131.265 540.18,128.629C538.778,127.095 537.113,125.205 537.458,122.961C538.77,114.264 544.215,109.2 550.388,104.273C554.603,100.902 556.163,97.69 561.66,100.827M272.91,98.577C274.075,107.065 282.557,109.581 275.91,118.077M335.16,102.327C335.163,105.855 336.309,107.507 338.91,109.827C343.316,104.338 353.219,101.231 359.16,105.327C362.367,102.781 365.342,100.872 367.41,105.327M71.91,109.077C78.297,109.308 82.659,107.424 88.382,104.838C90.11,104.057 92.912,102.944 94.355,104.85C99.041,111.039 84.348,115.804 81.2,117.52C79.607,118.387 76.417,121.202 79.082,122.856C81.352,124.265 91.562,126.027 94.094,125.229C97.304,124.217 99.008,120.853 102.188,119.699C108.78,117.306 113.783,123.059 115.41,128.577M-19.59,102.327L-16.59,104.577C-17.553,107.475 -17.213,108.653 -14.34,109.827M416.91,104.577C425.124,121.152 434.288,137.048 448.41,149.577L455.16,149.577L461.91,148.827L464.16,145.077L467.91,148.827L470.91,144.327L474.66,147.327L476.91,142.827L480.66,145.827L483.66,141.327M629.91,105.327C629.213,108.522 627.9,112.28 629.49,115.452C632.97,122.399 647.61,123.183 654.345,122.62C656.933,122.404 659.063,120.597 661.643,120.513C668.138,120.304 674.078,121.818 680.91,121.077M-204.09,123.327L-213.416,133.737L-228.84,134.577C-228.526,130.224 -226.774,126.37 -226.772,121.827C-226.77,117.42 -230.35,110.84 -224.641,108.314C-218.593,105.637 -215.712,112.923 -212.254,116.127C-209.3,118.864 -205.655,120.773 -202.59,123.327M-278.34,107.577L-277.59,109.827M339.66,109.827C342.847,118.581 334.803,116.012 331.832,121.79C330.157,125.048 332.105,130.282 332.16,133.827M-15.84,110.577L-13.59,115.827M179.91,112.077L196.41,133.077M156.66,113.577L155.91,122.577C157.178,121.755 158.437,120.926 159.689,120.079C171.188,112.304 162.342,124.618 162.66,130.077L159.66,134.577L159.66,135.327L160.41,136.077L161.16,136.077M-52.59,114.327C-56.1,122.634 -62.314,116.984 -69.09,120.327M-86.34,115.077C-89.557,118.764 -94.141,126.646 -99.507,127.169C-103.126,127.521 -106.288,123.141 -109.656,122.103C-116.7,119.931 -123.193,124.436 -128.34,128.577M-15.09,124.827L-10.59,127.827L-12.09,130.077C-2.29,131.66 -5.113,124.536 -1.88,118.86C0.538,114.615 4.751,119.489 6.243,121.813C7.192,123.291 8.035,124.819 8.91,126.327M194.91,130.077L207.133,130.782L220.457,127.071L227.91,117.327M38.91,127.827C44.549,115.855 50.948,120.304 59.788,125.162C64.547,127.777 70.184,127.833 70.706,134.623C71.209,141.167 65.693,145.533 61.41,149.577C66.92,153.869 68.036,158.278 70.41,164.577M-16.59,119.577L-12.84,121.827M162.66,130.077C171.447,128.144 175.711,132.108 182.16,137.577C192.78,132.72 202.349,153.097 208.997,158.332C215.712,163.618 216.283,155.58 213.66,151.077L219.66,151.827C222.517,150.588 223.928,150.678 226.41,152.577C229.001,150.054 232.727,147.621 234.692,144.6C237.498,140.286 236,137.949 241.41,135.327L245.16,122.577L251.91,123.327M-267.84,123.327L-267.09,123.327M657.66,124.827C654.728,129.496 646.298,126.487 644.595,130.481C643.568,132.9 649.785,138.402 650.985,140.602C653.723,145.652 654.758,151.469 654.51,157.077C654.3,161.84 652.11,169.329 654.848,173.69C658.08,178.834 673.538,167.651 672.855,178.089C672.308,186.463 660.548,182.881 658.275,189.055C656.55,193.743 661.793,197.934 661.125,202.547C660.533,206.615 655.403,207.834 656.34,212.592C657.15,216.672 662.79,222.005 659.243,226.028C655.643,230.098 647.078,232.863 641.91,234.006C638.79,234.696 633.623,235.331 632.58,239.055C630.645,245.985 645.36,246.148 647.933,250.629C650.34,254.815 645.083,259.312 644.91,263.577C647.183,262.571 652.65,259.065 654.773,261.789C655.935,263.294 655.32,266.4 657.353,267.21C659.805,268.186 664.2,265.634 666.66,265.077L665.91,275.577C673.673,269.744 674.82,272.25 675.66,280.827L680.91,277.077M88.41,125.577C84.688,131.16 83.808,135.645 86.16,142.077M604.41,125.577L602.16,141.327C607.71,141.195 612.803,133.458 617.243,134.385C621.78,135.332 617.408,144.447 621.593,146.895C626.985,150.052 628.185,139.421 632.573,139.425C635.655,139.429 635.588,147.677 637.185,149.706C642.39,156.312 647.385,142.247 649.41,139.077M426.66,126.327L421.41,130.077C422.952,133.52 423.098,135.399 420.66,138.327L428.414,143.904L431.984,152.511L442.41,153.327C437.603,163.075 440.3,164.138 448.41,169.077C446.782,170.397 445.046,171.657 443.563,173.192C435.683,181.347 455.279,186.442 459.66,190.077C471.81,179.823 489.795,189.683 503.648,184.764C509.115,182.822 506.798,177.312 508.853,173.209C511.148,168.636 516.833,168.873 521.16,169.077M-141.84,133.827C-142.678,134.641 -143.648,135.446 -144.361,136.408C-149.566,143.433 -135.808,141.763 -134.441,146.946C-133.366,151.02 -138.319,154.078 -137.66,158.107C-137.164,161.148 -131.573,162.233 -134.346,165.615C-139.927,172.42 -150.998,172.36 -157.901,168.165C-162.193,165.558 -165.953,165.139 -163.59,159.327C-172.183,151.185 -166.158,136.275 -155.041,132.922C-148.867,131.059 -142.522,133.419 -136.59,131.577M489.66,133.077C492.128,132.296 495.113,130.973 497.7,132.244C501.788,134.253 502.8,140.036 506.79,142.437C511.56,145.308 512.543,139.637 511.44,136.248C511.005,134.913 510.435,133.623 509.91,132.327M586.41,130.077L575.16,131.577M513.66,139.077C522.51,136.614 523.68,152.099 530.558,150.165C536.903,148.38 533.948,135.233 539.91,131.577M-8.34,132.327L-9.09,135.327L-5.34,137.577M-268.59,133.077L-259.59,136.077M140.16,134.577C138.984,138.651 135.323,146.56 142.41,145.827M170.91,157.077L169.41,161.577L164.91,159.327L163.41,164.577C160.261,164.204 159.05,164.898 157.41,167.577L153.66,166.077L146.91,175.827L143.16,174.327C139.694,181.939 133.572,186.189 131.16,175.827C126.752,176.555 125.193,174.933 125.16,170.577C129.223,169.553 132.407,167.784 134.16,163.827L141.66,160.827C144.215,155.694 149.117,149.312 153.66,145.827L156.66,136.827L158.91,136.077M199.41,136.077L203.16,142.827M487.41,143.577L488.91,139.077L493.41,141.327L494.91,136.077L500.16,138.327M-38.34,136.827C-41.58,139.839 -49.639,140.016 -51.2,144.12C-52.828,148.401 -44.916,153.719 -48.544,157.296C-51.817,160.524 -57.842,155.514 -60.872,159.501C-63.511,162.973 -58.742,168.459 -62.059,171.501C-65.619,174.768 -70.488,168.2 -74.42,169.328C-79.071,170.661 -76.283,178.464 -80.709,180.552C-83.936,182.074 -86.061,178.138 -87.545,175.995C-91.123,170.831 -95.085,168.309 -94.59,161.577C-90.049,163.093 -87.532,162.704 -84.09,159.327M408.66,140.577L411.66,136.827C415.129,140.748 418.185,147.494 423.66,142.827M380.16,148.077C381.476,150.948 384.937,155.883 383.649,159.234C382.405,162.474 376.07,160.727 373.439,162.427C370.24,164.493 368.647,168.09 365.055,169.791C356.917,173.646 347.285,167.977 344.355,160.062C340.12,148.623 350.033,136.304 362.159,138.292C371.538,139.83 376.44,148.357 377.16,157.077M450.66,138.327L446.16,145.827M655.41,154.827C663.698,151.898 664.673,134.61 671.82,148.752C672.75,150.595 673.815,152.332 674.91,154.077L680.91,151.827M144.66,142.827L152.91,142.827M306.66,141.327C306.085,147.594 306.179,153.81 307.412,159.704C307.843,161.76 306.527,164.37 308.072,166.105C309.928,168.192 313.363,167.747 315.719,168.967C317.683,169.986 321.65,176.737 324.159,174.354C326.83,171.819 324.196,161.124 325.41,157.077C329.575,161.4 331.791,162.999 337.41,160.827C338.085,165.654 334.421,172.512 337.325,176.817C341.166,182.511 348.137,176.34 353.076,176.538C358.73,176.766 360.022,182.964 364.724,184.632C367.799,185.724 370.716,182.91 373.88,184.188C378.063,185.877 378.689,199.953 383.549,197.87C389.281,195.413 390.251,183.255 390.383,178.077C390.645,167.824 397.133,158.182 407.91,156.762C411.028,156.351 414.092,157.029 416.897,158.39C427.022,163.305 432.218,174.57 426.49,184.785C423.353,190.378 414.992,198.402 419.127,205.734C422.101,211.006 431.025,197.343 432.66,195.327C436.709,198.317 438.507,200.634 437.517,205.854C437.092,208.098 434.49,214.174 437.085,215.865C440.108,217.836 444.883,211.983 446.961,210.5C450.866,207.714 453.912,209.363 457.41,211.827C455.464,214.842 448.533,224.859 452.807,228.194C457.852,232.131 465.398,218.472 470.413,224.725C474.668,230.034 463.582,236.335 466.882,241.299C470.118,246.167 480.053,234.746 484.493,240.506C488.82,246.108 477.465,250.842 478.35,256.292C478.658,258.207 480.705,258.569 482.325,258.45C486.008,258.179 489.458,256.004 493.215,256.98C497.258,258.03 500.835,263.028 505.44,261C507.795,259.968 513.638,246.743 512.813,244.359C511.725,241.179 507.293,239.657 507.6,235.857C507.908,231.98 513.675,230.412 513.008,226.404C510.068,208.729 495.795,212.412 482.183,211.758C478.313,211.571 474.623,209.104 470.869,209.292C466.1,209.532 462.329,211.714 457.41,211.827M337.41,160.827C334.553,157.403 329.312,154.721 328.015,150.173C325.987,143.061 335.039,142.378 339.66,141.327M601.41,142.077C605.34,147.086 606.105,150.097 599.91,153.327C604.275,157.108 612.938,154.024 615.563,158.999C618.578,164.702 607.913,171.975 613.583,176.919C618.57,181.275 629.94,170.006 632.783,178.386C635.175,185.451 621.63,189.24 624.6,196.233C627.638,203.373 643.358,192.55 644.288,202.216C645.008,209.69 629.978,210.334 631.763,217.623C632.835,221.97 639.278,221.326 642.593,221.944C647.213,222.809 648.81,225.501 649.41,229.827M232.41,155.577C234.85,153.182 236.317,152.833 239.16,154.827L242.91,152.577L245.16,157.077C248.783,156.251 250.28,157.401 252.66,160.077C256.412,152.437 261.446,145.639 270.66,144.672C282.386,143.442 291.497,152.664 292.41,163.827C284.774,162.81 280.955,153.313 272.915,153.485C263.54,153.686 259.838,165.118 266.153,171.428C270.304,175.576 276.727,174.645 281.91,176.577M88.41,145.827L92.91,148.077C88.568,153.914 85.598,168.559 77.825,170.229C74.29,170.988 71.009,168.533 67.493,168.521C65.023,168.513 61.682,170.187 62.828,173.179C64.071,176.427 69.015,176.855 71.913,177.374C78.098,178.48 83.753,178.8 86.91,184.827M205.41,145.827L213.66,151.077M511.41,145.827C512.273,149.835 512.91,158.542 506.063,156.908C501.563,155.832 496.095,147.207 491.1,150.837C484.973,155.296 494.73,163.788 490.545,169.002C486.81,173.668 479.28,166.695 474.803,166.86C464.837,167.226 472.38,180.396 473.91,184.827M-5.34,253.827L0.66,247.827L5.91,244.077L11.91,240.327L16.41,241.827C16.142,237.41 14.428,232.223 9.5,231.085C5.978,230.272 1.711,232.383 -0.973,229.004C-4.501,224.562 1.034,218.499 -1.029,213.327C-2.847,208.766 -8.737,198.071 -13.843,196.773C-21.556,194.814 -22.812,208.678 -22.59,213.327C-8.972,214.084 -19.356,224.061 -24.814,229.272C-28.653,232.938 -32.056,237.791 -36.9,240.084C-43.547,243.233 -52.982,243.965 -60.09,246.327C-59.01,238.991 -52.165,234.191 -48.09,228.327C-51.078,227.71 -65.695,228.297 -66.143,224.767C-66.593,221.212 -54.279,215.445 -51.84,212.577C-54.359,211.433 -68.381,207.632 -66.786,203.718C-65.26,199.975 -52.52,200.085 -48.84,198.327C-50.595,196.733 -52.352,195.147 -54.176,193.632C-55.57,192.474 -57.007,191.373 -58.396,190.218C-70.177,180.423 -47.749,186.786 -45.28,183.894C-42.34,180.45 -56.198,164.192 -42.82,169.934C-41.583,170.465 -40.386,171.088 -39.184,171.689C-37.402,172.579 -35.625,173.458 -33.84,174.327L-34.59,153.327C-31.74,155.325 -23.656,165.087 -20.057,163.322C-16.656,161.654 -17.665,150.103 -16.59,146.577L-3.84,163.077C-0.125,156.199 0.815,151.753 8.16,157.077L8.16,160.827L12.66,164.577L16.41,163.827L20.91,168.327M469.41,148.827C470.906,153.138 468.092,153.359 465.477,156.087C460.547,161.233 454.535,165.051 448.41,169.077M59.91,149.577L61.41,149.577M288.66,263.577C290.242,269.058 284.184,267.072 281.16,265.827C280.476,267.07 279.828,268.35 279.02,269.523C272.42,279.111 272.401,262.619 270.399,259.068C267.843,254.535 262.323,250.452 260.921,245.476C257.399,232.977 279.019,246.903 279.023,239.874C279.026,236.546 276.093,233.375 274.628,230.577C272.744,226.98 272.687,223.016 271.006,219.369C269.723,216.587 266.969,214.188 266.406,211.118C265.543,206.407 271.85,202.134 266.354,198.216C259.631,193.422 247.847,196.089 241.761,191.145C239.362,189.196 242.258,185.537 242.563,183.239C243.185,178.559 238.637,174.906 234.57,173.769C230.033,172.502 225.701,174.874 221.178,174.09C217.061,173.378 213.617,169.546 209.269,170.197C202.522,171.207 197.651,177.901 190.693,172.558C188.561,170.922 185.535,168.114 185.21,165.324C184.648,160.485 188.968,152.427 194.16,153.327L196.41,149.577L202.41,150.327M-178.59,150.327C-172.815,159.089 -180.068,173.625 -180.645,183.323C-181.293,194.218 -175.88,191.829 -172.249,184.07C-171.316,182.079 -170.401,180.081 -169.489,178.08C-167.779,174.327 -165.935,170.932 -163.59,167.577M230.91,150.327L232.41,153.327M-0.84,151.077L0.66,152.577M-277.59,166.077C-274.208,163.952 -267.606,152.741 -263.454,154.588C-258.955,156.59 -261.845,168.567 -256.325,168.567C-250.677,168.567 -250.512,154.561 -244.967,156.381C-238.304,158.567 -240.707,168.589 -231.84,169.827M-103.59,151.827C-108.172,154.58 -110.542,156.517 -112.59,161.577C-114.498,160.515 -117.478,158.344 -119.815,159.358C-122.863,160.68 -124.475,170.857 -122.506,173.286C-119.413,177.101 -113.298,169.169 -109.4,170.181C-104.949,171.336 -105.465,187.887 -98.446,179.079C-97.662,178.097 -97.06,176.98 -96.445,175.89C-95.584,174.363 -94.729,172.838 -93.84,171.327M146.16,151.827L146.91,151.827M181.41,157.077L182.91,152.577L187.41,154.827M532.41,153.327C532.718,156.442 532.98,160.162 535.665,162.253C537.9,163.987 543.203,163.737 543.81,167.115C544.53,171.102 537.353,172.638 535.755,175.656C533.76,179.431 536.745,191.33 531.765,192.948C528.735,193.93 524.475,189.78 521.91,188.577C523.238,182.566 525.945,177.686 524.16,171.327M575.16,153.327C573.72,156.476 572.573,160.872 569.318,162.694C567.728,163.585 547.68,165.657 558.87,169.617C559.988,170.013 561.158,170.247 562.298,170.559C563.873,170.991 565.38,171.523 566.91,172.077C565.14,179.959 561.705,186.821 555.66,192.327L549.66,181.077C544.725,190.008 543.315,191.829 536.91,182.577M175.41,158.577L177.66,154.827M-183.09,161.577L-177.84,157.077M605.91,157.827C602.565,160.638 599.85,162.54 595.41,163.077M-132.09,160.827L-122.34,158.577M232.41,159.327C237.803,164.076 233.927,166.5 230.91,171.327M252.66,160.077C252.863,167.973 254.912,176.699 262.536,181.289C265.761,183.23 274.442,183.336 276.176,186.649C278.198,190.514 272.027,196.409 269.91,199.077M141.66,160.827L141.66,162.327M293.16,164.577C292.613,168.457 290.84,172.543 291.56,176.562C292.71,182.976 299.273,185.332 304.41,187.827C294.482,195.498 288.911,189.664 284.16,179.577M-240.09,165.327C-245.163,169.971 -244.626,173.844 -244.293,180.309C-244.205,182.005 -244.747,186.164 -242.735,187.032C-238.441,188.886 -234.927,180.921 -228.84,184.077C-232.625,187.318 -236.313,190.836 -236.888,196.083C-237.787,204.288 -229.6,212.325 -221.361,210.478C-218.329,209.798 -215.773,208.074 -213.482,206.039C-211.24,204.046 -206.09,201.361 -205.591,198.187C-205.102,195.074 -208.785,193.544 -210.742,191.952C-217.009,186.857 -220.756,184.887 -228.84,184.077M371.16,166.077C372.456,166.695 373.761,167.283 374.992,168.033C383.897,173.468 374.12,177.014 370.41,181.827M311.91,169.077C311.176,171.008 309.805,173.556 310.506,175.696C311.885,179.904 319.11,184.588 309.59,187.164C308.153,187.552 306.632,187.655 305.16,187.827M-255.09,171.327C-249.784,180.045 -256.979,178.859 -262.508,183.73C-268.862,189.329 -267.918,195.994 -277.59,189.327M-138.09,172.077C-136.965,180.912 -141.161,183.498 -143.684,191.174C-145.09,195.452 -144.421,200.418 -147.079,204.295C-149.929,208.452 -154.967,210.997 -159.09,213.327C-157.813,205.108 -154.147,196.794 -151.738,188.582C-151.409,187.458 -149.127,180.566 -151.827,180.566C-155.446,180.566 -158.62,194.796 -159.633,197.577C-164.818,211.8 -167.357,230.291 -185.34,231.327C-180.69,220.894 -171.292,210.715 -167.347,199.827C-164.036,190.69 -166.48,177.506 -157.59,171.327M20.91,171.327L33.66,177.327L34.41,176.577L35.91,176.577M-30.09,221.577L-33.84,224.577C-41.025,210.426 -34.675,200.667 -28.688,187.827C-26.953,184.106 -28.239,177.619 -23.734,175.738C-20.209,174.266 -16.764,177.063 -13.44,177.807C-8.303,178.958 -3.06,177.759 2.16,178.368C7.76,179.022 13.429,181.253 17.642,185.073C19.437,186.702 21.848,189.4 19.791,191.758C13.202,199.314 4.954,192.887 -2.345,191.726C-6.537,191.059 -10.018,192.623 -13.59,194.577M115.41,176.577L118.41,178.077C119.886,175.722 120.89,175.091 123.66,175.077M179.16,187.077C176.67,179.347 182.558,175.981 188.91,173.577M-96.09,175.077L-91.59,178.077M199.41,175.827C201.665,184.836 210.032,181.879 217.41,181.827M-92.34,178.077L-96.84,187.077C-88.973,195.999 -100.104,203.052 -108.095,196.902C-111.658,194.16 -110.999,183.945 -115.923,183.491C-120.227,183.094 -123.058,189.628 -126.53,191.378C-130.924,193.592 -135.762,190.554 -139.59,188.577M564.66,181.827L569.16,194.577L578.91,188.577M220.41,184.077C219.746,191.49 209.315,195.829 211.683,202.724C215.623,214.194 224.813,198.7 231.121,201.769C235.474,203.886 232.773,210.105 236.766,212.616C240.825,215.168 246.632,215.52 251.16,216.994C258.132,219.264 264.543,222.828 271.41,225.327M335.16,190.827C336.054,192.609 336.926,194.399 337.954,196.112C338.489,197.004 339.037,197.93 339.713,198.724C347.776,208.193 345.097,185.367 351.68,185.367C357.38,185.367 360.324,197.375 362.91,201.327C365.635,196.83 366.839,192.944 367.41,187.827M390.66,184.077C395.849,184.86 397.95,187.089 398.52,192.357C398.771,194.68 398.665,200.292 401.684,201.033C404.596,201.746 407.018,196.532 408.263,194.691C411.647,189.679 414.846,189.442 419.91,192.327M59.16,184.827L60.66,187.077M133.41,185.577C133.251,188.208 132.33,188.649 129.66,188.577L131.16,193.827M447.66,185.577C440.845,187.964 436.666,189.096 437.91,196.827M-63.84,187.077C-73.403,189.096 -83.831,186.439 -93.09,190.077M59.91,187.077C55.535,193.924 47.071,187.686 43.188,192.966C40.843,196.155 45.736,197.341 47.937,197.25C53.987,196.998 71.254,193.155 73.41,201.327L91.494,201.613L110.91,208.827C108.703,213.256 106.291,221.351 100.94,222.875C96.563,224.121 91.036,220.647 86.91,219.433C76.02,216.23 65.157,215.551 53.91,216.3C49.49,216.595 43.315,216.845 40.467,220.833C38.673,223.344 39.191,226.555 38.036,229.297C36.404,233.172 28.27,239.182 29.129,243.799C29.652,246.607 43.119,248.073 45.62,247.726C50.513,247.048 52.499,242.135 57.082,241.554C61.793,240.958 62.816,244.999 66.509,246.475C70.756,248.172 81.542,244.755 83.91,241.077C77.594,239.273 73.577,235.587 80.16,230.577L81.66,233.577L86.91,235.077L89.91,233.577L92.16,237.327L95.16,235.827L100.41,238.077M313.41,187.077C320.334,190.144 325.595,190.385 332.91,188.577M-213.09,207.327C-214.387,215.907 -225.227,214.972 -231.84,216.327C-231.493,221.244 -235.877,228.183 -241.803,225.499C-247.578,222.884 -243.258,212.619 -245.89,207.911C-248.383,203.451 -267.261,199.888 -256.322,192.977C-255.006,192.146 -253.563,191.511 -252.139,190.896C-250.154,190.039 -248.125,189.305 -246.09,188.577M181.41,189.327C164.424,201.65 135.399,196.706 126.309,219.631C124.095,225.213 119.006,225.126 122.16,232.077M521.16,189.327C522.39,195.206 525.96,205.028 533.753,204.527C540.165,204.114 544.808,197.659 551.618,201.939C556.89,205.254 557.783,211.674 555.008,216.884C553.373,219.958 549.713,224.095 552.863,227.463C556.628,231.49 568.32,224.672 573.66,224.577C573.255,221.932 572.55,219.6 571.658,217.06C570.248,213.03 571.028,207.41 576.623,210.243C584.573,214.266 588.015,224.622 596.16,214.827M326.16,191.577C326.696,198.741 328.384,205.924 327.569,213.142C327.244,216.03 323.708,219.086 324.397,221.917C325.264,225.482 330.748,222.277 332.873,222.253C337.563,222.201 337.734,227.14 337.41,230.577M-193.59,193.077C-195.846,199.65 -201.065,203.498 -204.006,209.664C-207.228,216.42 -212.002,226.76 -212.185,234.299C-212.273,237.952 -209.391,241.015 -209.812,244.597C-210.291,248.661 -214.348,251.43 -214.85,255.561C-216.38,268.168 -203.025,256.306 -200.34,253.827C-201.199,246.062 -189.869,248.016 -185.898,252.087C-183.703,254.337 -187.176,257.569 -187.036,260.099C-186.829,263.81 -182.587,265.606 -182.026,269.082C-181.414,272.882 -187.716,275.302 -189.84,277.827L-168.84,288.327C-166.532,285.413 -164.425,273.251 -159.928,274.049C-154.741,274.97 -153.731,282.818 -148.312,283.893C-144.598,284.629 -133.957,277.839 -132.562,284.177C-131.643,288.351 -137.247,290.634 -138.652,293.988C-141.569,300.953 -132.94,314.379 -143.402,317.045C-147.888,318.188 -163.466,307.401 -165.817,313.851C-168.63,321.571 -153.194,327.283 -153.775,334.815C-154.327,341.97 -166.047,341.463 -171.023,342.923C-173.328,343.599 -177.557,345.327 -176.332,348.516C-173.194,356.688 -156.889,350.421 -154.726,359.106C-153.201,365.228 -160.732,370.235 -163.779,374.586C-165.055,376.407 -167.506,380.037 -165.339,382.097C-159.181,387.953 -147.361,372.858 -140.197,378.874C-134.204,383.907 -145.002,399.194 -136.75,402.62C-133.438,403.995 -130.162,399.184 -128.535,397.046C-123.231,390.078 -120.148,384.558 -111.84,391.077C-110.127,388.407 -107.449,385.853 -106.575,382.827C-105.55,379.279 -107.938,375.849 -105.173,372.516C-102.293,369.046 -95.338,372.452 -95.017,365.624C-94.818,361.419 -100.945,361.959 -100.616,358.002C-100.195,352.921 -95.707,342.95 -99.202,338.165C-101.693,334.754 -106.977,340.276 -109.684,337.208C-112.231,334.322 -105.362,330.212 -106.495,326.885C-107.803,323.048 -115.361,324.954 -117.09,320.577C-121.809,321.031 -128.707,321.607 -132.688,324.514C-137.274,327.864 -140.723,339.108 -140.875,344.541C-141.212,356.529 -132.279,372.628 -120.284,376.334C-116.323,377.557 -111.172,375.445 -107.34,374.577M129.66,193.077L125.16,195.327L120.66,200.577L122.16,206.577L117.66,206.577L119.91,212.577L110.91,208.827M124.41,195.327L125.16,195.327M336.66,229.827L331.41,232.827L328.41,231.327L326.16,235.827L322.41,233.577L322.41,238.077L317.16,237.327L317.16,241.077L316.41,241.827L306.66,235.827C307.433,234.935 308.349,234.046 308.95,233.01C314.651,223.188 300.036,232.125 298.173,231.413C293.95,229.798 289.178,216.964 290.075,212.806C292.4,202.038 303.465,218.271 307.832,215.847C311.606,213.75 306.98,205.048 307.942,201.64C310.575,192.317 322.705,207.567 326.16,209.577M-143.34,196.827C-141.093,200.292 -139.231,203.724 -142.002,207.529C-143.823,210.029 -150.232,213.552 -148.728,217.312C-145.978,224.186 -135.301,218.527 -133.59,228.327C-143.591,226.677 -157.025,234.341 -148.722,245.878C-145.127,250.872 -136.859,248.864 -136.59,256.077L-139.59,254.577L-141.84,259.077L-144.84,256.827L-147.09,261.327L-150.09,259.827L-152.34,263.577L-157.59,265.827M5.91,197.577C5.527,200.842 5.741,204.723 9.916,205.097C18.233,205.842 32.534,199.742 40.41,196.827M-93.84,198.327C-88.426,207.114 -100.52,205.541 -104.887,209.979C-108.681,213.834 -107.384,221.957 -105.607,226.496C-102.241,235.098 -95.404,220.329 -90.056,223.647C-87.198,225.421 -77.967,236.664 -78.536,239.976C-79.134,243.456 -84.157,244.612 -83.971,248.412C-83.683,254.321 -78.876,256.84 -80.34,263.577L-69.987,262.184L-51.84,265.077C-52.37,268.902 -51.976,270.933 -48.84,273.327L-59.34,283.827C-63.944,284.046 -66.904,286.338 -70.59,289.077C-71.721,286.923 -74.157,279.051 -77.674,280.514C-80.201,281.565 -81.221,285.035 -84.27,285.127C-86.991,285.21 -89.983,281.412 -92.627,282.772C-95.522,284.26 -94.015,289.2 -97.038,290.835C-99.555,292.197 -103.564,289.391 -105.611,291.473C-108.016,293.919 -104.122,298.5 -106.472,301.341C-107.982,303.165 -110.825,303.324 -112.897,304.149C-115.193,305.064 -117.426,307.14 -120.064,306.793C-125.598,306.066 -130.588,294.747 -133.59,290.577M158.16,248.577C154.8,244.689 147.197,238.353 147.308,232.796C147.388,228.721 152.123,225.99 155.168,224.148C163.802,218.922 173.932,217.788 182.514,213.044C186.932,210.602 185.529,202.95 190.735,201.865C198.245,200.301 201.368,209.245 209.91,205.077M362.91,201.327C363.929,203.799 364.962,205.91 367.724,206.753C369.898,207.417 374.522,206.837 375.203,209.803C376.043,213.462 369.234,213.522 367.292,214.641C363.612,216.759 365.256,220.812 366.66,223.827L369.66,220.077C374.293,221.952 378.26,221.959 383.16,220.827L384.66,223.827L389.16,221.577L391.41,225.327C394.329,223.364 395.573,223.935 397.41,226.827L400.41,224.577L402.66,228.327L406.41,226.077L408.66,230.577C410.772,228.161 413.34,225.018 411.095,221.792C409.951,220.149 405.56,218.175 406.565,215.67C407.542,213.238 416.519,212.464 419.16,209.577M594.66,220.077C599.265,220.446 609.12,221.928 611.43,216.522C612.623,213.738 606.638,204.153 610.358,203.283C613.043,202.656 615.593,206.376 616.898,208.155C620.528,213.099 622.298,219.06 629.16,219.327M662.91,203.577C666.69,202.935 668.858,203.473 671.91,205.827C666.173,213.648 674.183,221.138 680.91,225.327M-133.59,228.327C-132.57,229.065 -131.536,229.965 -130.369,230.493C-127.224,231.912 -122.815,230.966 -122.994,226.712C-123.238,220.941 -129.183,217.504 -127.425,211.106C-124.403,200.112 -112.986,201.813 -107.34,208.827M-254.34,203.577C-258.908,210.436 -269.174,207.273 -263.34,218.577C-262.249,217.782 -261.18,216.955 -260.046,216.205C-250.147,209.66 -253.726,225.24 -249.586,229.447C-246.976,232.099 -239.33,232.163 -238.562,236.235C-237.652,241.059 -246.157,242.701 -247.688,246.607C-248.813,249.479 -245.147,252.328 -243.84,254.577L-240.09,253.077C-238.666,256.993 -238.306,261.632 -236.477,265.33C-234.941,268.436 -231.526,270.174 -230.381,273.527C-229.236,276.88 -232.102,282.024 -229.182,284.665C-226.872,286.755 -222.976,285.625 -220.255,286.902C-217.106,288.381 -216.12,293.039 -212.766,293.876C-209.405,294.714 -207.11,290.23 -204.381,289.044C-200.586,287.395 -196.309,290.284 -192.727,288.524C-189.371,286.874 -190.393,280.885 -189.84,277.827M534.66,206.577C535.725,210.553 537.713,223.611 531.893,225.066C525.023,226.782 522.63,218.001 515.91,225.327M219.66,208.077C219.426,214.185 213.98,212.892 209.222,213.12C207.701,213.192 203.654,213.578 204.248,216.039C205.193,219.964 214.157,223.248 216.942,226.124C221.117,230.436 218.055,235.938 221.078,240.307C224.475,245.219 231.908,243.627 236.158,247.162C239.783,250.179 237.822,255.285 236.91,259.077C242.041,265.57 247.212,268.617 254.16,273.327C255.217,267.506 249.527,265.287 249.725,260.055C249.966,253.634 264.341,258.999 268.41,259.077M-159.09,213.327C-162.561,219.452 -163.312,227.079 -168.206,232.469C-174.192,239.061 -187.612,244.264 -195.84,247.077M120.66,213.327L125.16,215.577M-85.59,228.327C-81.376,224.594 -79.337,221.2 -80.34,215.577C-72.847,214.833 -62.126,213.5 -54.84,215.577M-23.34,214.077L-27.84,218.577M-278.34,217.827C-271.546,222.608 -266.046,231.147 -263.34,218.577M-229.59,221.577C-223.668,219.846 -220.036,222.366 -215.34,226.077M355.41,224.577L357.66,220.827L362.16,223.077L362.91,222.327L362.91,220.827M273.66,223.077C281.692,222.458 287.063,228.696 294.66,230.577M605.91,221.577C604.905,223.14 603.87,224.546 602.655,225.966C595.238,234.627 609.473,233.322 613.71,237.782C615.668,239.84 615.855,246.658 619.433,246.674C623.07,246.69 625.718,239.518 630.66,238.827M351.66,222.327L348.66,226.827L344.16,226.077L343.41,226.827L343.41,228.327M202.41,226.077L209.91,223.077M384.66,223.827C383.484,236.316 373.211,231.339 363.662,233.151C360.473,233.756 354.76,234.456 353.996,238.421C352.551,245.923 365.473,241.791 368.951,243.837C373.848,246.717 370.666,254.143 373.502,258.296C375.232,260.828 380.124,261.704 379.955,265.335C379.457,276.053 358.688,266.931 356.743,276.129C355.445,282.264 371.285,284.962 361.823,290.15C355.231,293.765 347.708,284.646 343.491,280.664C340.396,277.74 338.519,273.69 335.441,270.918C332.958,268.683 329.444,268.188 327.457,265.287C325.03,261.743 326.147,257.031 322.586,254.046C319.314,251.304 315.075,252.542 311.273,251.421C308.036,250.466 305.41,248.128 302.103,247.341C291.205,244.745 291.027,256.364 290.16,263.577M-278.34,224.577L-277.59,226.827M573.66,224.577C585.36,236.592 576.12,247.576 567.66,259.077M123.66,235.077C133.097,238.14 134.855,227.172 143.91,231.327M39.66,230.577L42.66,232.077L44.91,229.077L51.66,228.327L53.16,230.577L59.16,230.577L62.16,228.327L70.41,231.327L74.91,231.327M413.91,228.327L414.66,233.577L424.41,234.327L425.91,239.577C428.954,238.853 431.878,237.804 434.92,237.1C454.686,232.528 442.007,255.933 442.41,263.577M200.91,229.077C201.183,232.715 202.512,237.744 199.361,240.562C195.161,244.317 186.808,242.027 184.057,247.583C182.171,251.394 184.794,256.83 185.91,260.577C196.525,261.3 185.484,272.577 187.875,278.203C189.865,282.886 196.043,282.938 198.566,286.945C200.581,290.147 198.22,295.744 199.346,299.573C201.221,305.957 207.844,308.826 208.41,315.327C203.901,317.086 195.326,322.053 196.728,328.185C198.669,336.678 207.934,338.949 204.314,349.815C202.076,356.532 194.734,360.981 189.044,364.623C186.888,366.003 183.356,366.546 182.084,368.955C180.512,371.931 186.413,375.249 185.16,379.827C193.361,381.895 202.259,377.869 207.164,370.62C208.775,368.24 210,359.937 213.254,359.576C216.81,359.181 218.252,369.145 219.923,371.46C224.727,378.117 232.959,381.757 240.66,379.827L246.66,397.077C253.325,396.958 256.651,402.213 260.773,406.779C267.774,414.534 274.39,421.586 282.66,427.827C279.14,431.409 268.898,437.352 268.092,442.385C267.368,446.909 277.099,449.334 274.295,453.255C272.294,456.054 267.517,454.089 264.743,454.214C261.595,454.356 258.778,456.217 255.576,455.783C248.063,454.764 240.667,449.777 233.16,448.077L232.41,448.827C233.004,457.949 224.176,464.038 224.042,472.198C223.963,477.042 232.321,471.093 234.327,473.009C236.259,474.855 233.437,478.2 231.833,479.087C227.275,481.61 220.229,480.276 215.16,481.077C214.694,488.704 205.937,486.431 204.992,491.857C204.166,496.603 212.501,495.636 214.199,499.039C215.71,502.065 214.274,505.886 216.193,508.746C218.378,512.004 224.935,511.093 225.457,506.959C225.897,503.476 220.277,497.431 223.842,494.557C227.795,491.37 233.829,498.802 237.847,494.304C240.409,491.437 237.122,483.205 241.847,482.281C246.467,481.377 248.912,488.802 253.72,487.563C258.485,486.336 257.246,475.724 262.955,476.754C267.95,477.656 267.429,488.218 273.456,486.702C278.066,485.541 280.094,479.346 284.279,477.193C287.085,475.75 291.183,477.071 293.495,474.762C297.857,470.406 296.361,461.44 305.16,468.327C306.764,466.806 308.377,465.308 309.803,463.598C312.869,459.923 315.404,452.283 308.067,451.701C301.246,451.16 292.904,460.85 287.313,452.683C281.507,444.202 300.323,429.891 282.66,427.827M235.41,244.827L237.66,237.327L245.16,230.577L261.66,229.077C265.274,232.279 269.372,234.288 268.41,239.577M149.91,236.577C158.152,230.278 165.647,234.048 174.66,233.577L182.16,247.827M21.66,238.827C24.063,235.051 27.865,234.119 32.16,234.327M608.91,236.577C606.983,238.067 599.625,240.926 600.24,243.911C600.773,246.457 604.838,247.704 604.47,250.549C604.02,254.046 598.103,252.395 597,255.459C595.568,259.442 603.9,264.925 605.333,268.336C606.503,271.105 600.623,281.885 604.778,281.822C612.525,281.704 616.68,266.572 621.728,262.234C627.435,257.332 637.433,258.017 644.16,259.077M-210.84,240.327C-215.524,243.945 -222.568,240.359 -226.219,243.798C-228.672,246.109 -227.272,250.077 -228.016,252.989C-228.992,256.81 -232.219,258.474 -235.59,259.827M101.16,241.827L105.66,240.327L110.91,243.327L111.66,247.077L128.91,260.577L132.66,265.077C133.505,268.534 136.601,268.701 137.651,264.916C138.595,261.511 135.07,251.861 140.463,250.95C145.915,250.03 149.041,258.717 154.985,256.991C159.73,255.613 161.948,245.889 167.605,247.328C175.376,249.304 167.666,265.677 180.584,261.89C182.219,261.411 183.664,260.616 185.16,259.827M430.41,240.327C426.055,243.58 419.328,243.264 415.712,247.162C410.404,252.885 415.745,262.162 405.66,264.327L389.043,288.519L388.484,299.575L381.66,310.827C370.451,304.41 355.025,315.458 364.126,327.649C369.386,334.696 381.596,330.612 384.398,339.405C386.381,345.628 379.11,351.3 377.91,357.327C382.347,357.417 392.136,361.911 384.933,366.555C380.415,369.468 375.581,366.784 370.93,368.279C369.111,368.863 367.817,370.466 367.574,372.36C367.037,376.544 371.488,377.617 373.682,380.19C375.878,382.765 376.107,387.548 374.705,390.556C372.767,394.715 361.815,392.45 361.815,395.205C361.815,400.467 376.249,398.921 379.323,399.015C380.587,399.055 384.888,399.357 383.856,401.695C381.83,406.285 366.5,403.254 362.256,404.665C356.419,406.606 353.306,413.433 347.91,416.577L345.66,412.827L341.91,415.077L339.66,410.577M-36.84,241.827L-30.09,247.827C-26.862,244.8 -19.858,240.561 -17.746,247.366C-16.878,250.164 -18.248,253.054 -17.682,255.884C-16.324,262.677 -12.889,264.142 -15.84,271.077C-17.979,271.797 -18.623,272.281 -18.84,274.827C-20.578,277.106 -20.91,278.406 -19.59,280.827M311.91,241.827C310.664,244.36 309.512,245.071 306.66,245.577L305.91,246.327L305.91,247.827M464.91,242.577C463.008,246.418 461.792,250.203 464.233,254.171C465.774,256.676 470.837,259.699 469.534,263.16C467.285,269.13 459.095,257.902 456.36,263.069C455.435,264.816 456.991,266.946 457.889,268.35C459.491,270.855 461.351,273.238 461.504,276.33C461.675,279.778 459.464,283.584 461.838,286.705C464.229,289.847 469.385,288.947 470.627,293.217C471.975,297.856 468.21,304.166 471.332,308.307C476.093,314.619 478.92,299.535 483.315,301.187C485.88,302.152 486.758,305.798 488.34,307.784C495.578,316.846 495.12,328.481 493.41,339.327L512.91,342.177L533.91,352.827C534.503,350.279 535.028,346.812 538.125,346.242C540.255,345.85 544.763,347.929 546.15,345.584C547.695,342.956 543.15,338.251 546.315,336.265C549.9,334.012 555.195,338.26 558.225,333.921C562.643,327.59 560.033,316.164 565.328,309.789C568.868,305.524 583.17,304.711 583.17,297.786C583.17,294.239 572.205,297.927 569.52,295.942C566.925,294.021 562.35,284.852 558.623,286.125C555.698,287.121 555.57,293.041 551.978,292.664C548.753,292.326 547.913,284.928 544.358,286.516C539.565,288.654 538.103,296.102 533.64,298.866C530.678,300.701 522.705,296.259 521.37,300.057C519.263,306.077 536.213,308.224 539.213,310.353C545.153,314.57 547.733,327.412 548.16,334.077M536.91,293.577C536.228,291.118 536.093,284.962 533.528,283.678C529.86,281.846 520.823,291.141 521.828,280.776C522.03,278.7 522.855,276.699 523.913,274.917C532.44,260.541 540.84,277.478 551.003,271.127C556.418,267.745 557.91,261.662 555.128,256.077C553.748,253.295 550.35,249.537 552.113,246.228C554.985,240.838 568.905,247.832 573.66,248.577M569.16,261.327C583.26,264.858 584.603,243.48 597.66,242.577M-37.59,243.327L-49.495,252.554L-51.84,265.077M-135.84,250.827C-132.943,248.745 -122.833,242.952 -122.598,250.89C-122.371,258.535 -135.04,270.927 -119.995,274.894C-102.997,279.377 -111.24,256.134 -103.768,250.794C-100.843,248.703 -97.108,253.309 -94.771,254.53C-90.895,256.554 -88.427,253.808 -86.34,250.827M38.16,247.827C32.577,251.429 31.492,254.613 27.488,259.283C26.366,260.592 23.297,262.358 24.113,264.477C24.92,266.571 28.88,266.787 30.622,267.777C39.03,272.558 48.125,272.403 56.91,276.517C72.138,283.648 77.343,296.658 83.91,310.827C88.619,310.75 95.106,313.699 92.561,319.616C90.686,323.978 85.335,324.369 82.74,328.002C75.03,338.795 72.657,350.187 59.899,357.377C48.68,363.701 36.957,364.843 24.66,361.524C17.894,359.698 11.576,353.986 4.41,355.827C1.151,348.444 -1.216,341.905 -6.09,335.577C-10.474,340.904 -13.411,347.723 -9.997,354.798C-8.412,358.081 -4.917,359.141 -2.114,361.094C3.275,364.848 6.411,369.609 13.41,370.077C14.111,374.513 12.142,387.562 16.154,390.224C21.131,393.525 28.459,381.292 33.298,380.499C40.886,379.257 45.941,389.331 52.537,390.629C59.902,392.079 62.462,385.704 68.91,384.327M515.16,248.577C521.348,255.278 524.333,248.182 531.225,249.468C537.368,250.613 535.523,262.254 535.41,266.577M71.91,248.577C81.346,250.999 89.77,255.756 98.16,260.577C102.49,258.961 105.479,260.93 109.41,262.827C106.873,273.384 118.262,283.949 122.16,293.577C124.541,291.471 128.208,288.863 127.978,285.25C127.67,280.423 114.332,269.726 126.596,268.803C128.119,268.688 129.648,268.79 131.16,268.827M329.16,268.077C333.809,264.223 339.324,258.292 344.856,255.876C351.567,252.945 364.862,251.239 371.91,253.077M372.66,251.577L396.776,253.673L409.41,261.327M-248.34,252.327L-244.59,255.327M-15.09,271.827C-11.257,272.733 0.647,265.943 -5.34,274.827L-1.59,279.327L8.16,265.077C1.091,254.691 23.561,254.73 28.41,253.077M447.66,253.077C448.162,255.563 448.827,256.348 451.41,256.827L452.16,257.577L449.433,272.611L444.625,277.635L445.68,285.075L439.388,295.206L441.66,317.577C439.078,317.421 436.511,317.346 434.29,315.6C431.626,313.509 430.053,309.03 425.946,309.853C416.818,311.682 426.302,325.462 419.724,329.256C413.717,332.721 412.921,321.129 407.805,321.608C404.59,321.909 402.64,325.088 402.728,328.113C403.042,338.774 419.564,345.249 426.38,351.152C429.518,353.869 431.062,357.757 434.979,359.685C438.589,361.46 443.523,359.684 446.644,362.406C450.711,365.954 450.02,373.305 454.41,377.577L453.66,370.827L458.91,369.327L457.41,366.327L461.91,364.077C460.365,361.053 460.52,359.814 463.41,358.077L467.16,336.327L470.91,333.327L467.91,329.577L471.66,327.327L467.91,323.577L471.66,320.577C470.535,319.589 469.458,318.561 468.092,317.902C456.39,312.251 463.179,333.454 454.643,332.208C449.602,331.472 451.364,323.789 449.715,320.547C448.241,317.645 445.016,318.059 442.41,318.327M119.91,254.577C116.837,259.095 114.779,261.429 109.41,262.827M-200.34,255.327C-192.202,264.063 -193.688,282.018 -209.338,281.225C-223.862,280.488 -225.716,263.355 -216.84,255.327M-246.84,256.077C-247.3,267.18 -254.837,259.274 -261.077,258.495C-264.769,258.033 -267.524,260.627 -270.09,262.827M-237.84,257.577L-234.09,258.327M-7.59,258.327L-9.09,257.577L-3.84,256.827M-9.09,259.077L-12.09,262.077M236.16,259.827C234.644,264.468 230.314,267.456 229.122,272.039C228.317,275.133 229.397,278.418 228.888,281.577C227.75,288.639 224.659,298.396 221.052,304.569C218.882,308.283 212.618,324.018 209.16,316.077M626.91,260.577C629.993,268.542 640.62,271.721 640.41,280.827C652.605,281.62 663.998,280.497 674.91,287.577L669.66,293.577L680.91,298.077M498.66,261.327C493.74,265.656 488.175,269.214 485.91,275.577M291.66,262.077C297.6,266.655 296.273,274.506 301.422,278.775C305.048,281.781 310.034,279.677 313.934,281.996C316.88,283.747 318.729,286.892 321.407,288.992C330.719,296.295 355.814,311.251 335.91,319.827C335.222,316.478 332.953,308.704 327.815,310.785C320.408,313.785 330.701,328.332 321.593,329.983C317.471,330.73 315.868,325.72 312.826,324.03C308.373,321.555 301.176,324.343 297.499,320.631C294.808,317.914 298.175,308.024 291.874,308.893C285.245,309.807 288.086,320.831 284.834,324.614C282.32,327.537 276.838,327.77 273.66,330.327L277.41,332.577L274.41,337.077L278.16,340.077L275.91,343.077L279.66,345.327L277.41,349.827L278.91,355.827M452.16,262.827L453.66,262.827M-162.09,263.577L-163.59,266.577L-169.59,268.827M173.91,263.577C172.533,267.074 171.049,271.906 167.384,273.68C158.906,277.784 148.622,270.995 145.556,284.583C143.513,293.642 151.849,302.65 161.147,300.512C167.471,299.058 170.801,293.89 173.16,288.327C182.203,293.055 186.946,295.096 197.16,292.827M567.66,292.827C568.44,290.306 568.463,284.186 570.72,282.581C573.608,280.53 576.953,286.371 579.885,284.322C582.413,282.56 580.133,278.345 581.768,276.104C583.718,273.432 587.94,277.226 590.43,275.751C592.86,274.307 590.565,270.1 590.993,267.948C591.765,264.093 598.17,266.195 600.66,266.577L600.66,265.827L601.41,265.077L602.16,264.327M-272.34,265.827L-277.59,267.327M37.41,270.327C45.163,267.186 53.693,265.305 62.16,266.089C69.74,266.79 76.12,269.907 83.16,272.412C86.728,273.681 91.523,272.97 94.469,275.595C97.442,278.244 97.266,283.446 99.171,286.854C108.608,303.741 110.476,317.594 105.377,336.285C103.682,342.497 103.898,346.787 99.66,352.077C91.882,351.954 84.95,360.533 77.91,363.718C67.146,368.588 51.542,369.726 41.16,364.827M-179.34,266.577L-173.34,266.577M-277.59,277.827C-272.793,276.138 -266.002,266.622 -260.939,269.784C-256.926,272.289 -258.964,279.813 -254.019,281.016C-249.434,282.132 -244.59,275.025 -240.38,279.468C-236.904,283.134 -240.848,288.969 -237.034,292.65C-232.896,296.643 -224.664,292.442 -221.681,297.969C-218.96,303.009 -226.507,307.422 -224.291,312.576C-222.176,317.495 -213.323,315.116 -212.815,321.408C-212.359,327.063 -220.537,328.029 -221.021,333.288C-221.55,339.036 -211.157,341.153 -213.608,347.238C-215.648,352.302 -223.24,349.935 -225.498,354.773C-227.888,359.894 -219.353,365.888 -224.487,370.406C-228.31,373.77 -233.925,369.136 -237.787,372.613C-242.036,376.438 -236.554,383.932 -242.118,386.926C-247.149,389.634 -251.265,382.845 -256.215,384.477C-261.506,386.223 -259.354,395.105 -265.576,395.718C-273.309,396.48 -268.517,381.116 -277.59,379.827M425.16,281.577C423.857,270.986 436.671,271.932 443.16,267.327M-105.84,268.827C-97.914,269.828 -95.744,271.26 -93.84,279.327M256.41,270.327C264.939,280.841 235.453,271.279 241.634,282.474C243.696,286.209 255.417,294.738 259.837,292.866C262.926,291.557 263.809,285.142 267.534,285.591C272.161,286.147 268.814,294.586 273.186,296.565C276.249,297.951 277.278,295.305 277.41,292.827L283.41,283.827L281.16,280.827M32.91,271.077C24.724,274.329 12.467,282.684 3.66,280.827L-5.34,301.827C8.093,301.021 12.649,284.169 26.888,282.104C32.705,281.26 34.578,285.053 39.326,287.04C49.524,291.309 63.902,294.926 65.857,308.373C66.578,313.336 59.734,313.407 60.088,318.268C60.526,324.282 68.173,323.792 64.208,331.096C61.262,336.524 56.268,341.199 50.9,344.183C46.468,346.645 41.048,347.003 38.91,352.077M282.66,281.577L287.16,273.327L288.66,273.327M488.91,277.077C492.443,276.387 496.943,274.939 500.498,276.087C505.95,277.845 503.333,283.589 499.988,285.923C497.723,287.503 495.12,288.618 492.66,289.827M425.91,275.577L440.16,291.327M366.66,282.327L368.91,277.077C375.135,282.875 376.843,289.004 386.16,290.577M565.41,317.577C568.875,320.117 578.918,339.201 583.403,328.314C585.128,324.137 579.57,312.801 586.028,311.265C592.59,309.708 599.07,325.679 605.49,318.106C610.088,312.681 598.815,303.36 604.748,298.833C610.44,294.484 618.675,307.876 624.323,300.954C629.423,294.702 613.793,287.164 620.363,281.218C624.863,277.152 634.448,283.317 640.41,280.827M-1.59,279.327C-4.552,285.131 -11.812,289.074 -2.34,292.827M-21.84,280.077L-23.34,285.327L-27.09,287.577C-27.134,291.012 -29.939,296.83 -28.09,299.876C-26.414,302.638 -21.794,301.848 -19.122,302.482C-11.731,304.236 -12.064,310.269 -5.34,301.827M410.91,320.577L413.16,317.577C409.316,315.894 403.784,314.879 401.926,310.545C398.168,301.781 414.761,286.09 422.16,283.827M-59.34,283.827C-59.622,288.351 -62.342,295.242 -60.195,299.484C-58.988,301.869 -55.929,302.854 -54.199,304.836C-52.195,307.134 -50.342,310.857 -46.685,310.268C-43.198,309.706 -41.981,305.925 -39.524,303.928C-37.088,301.947 -33.802,302.015 -30.84,301.827M314.91,283.827C312.947,288.483 308.948,292.212 307.373,296.919C304.654,305.042 304.498,318.841 305.529,327.327C306.77,337.537 308.516,347.348 314.768,355.356C316.241,357.243 318.398,361.503 321.171,361.617C322.982,361.69 324.348,359.031 325.53,357.979C329.87,354.117 333.722,350.653 337.41,346.077M502.41,285.327C508.44,287.166 514.365,286.827 520.41,286.827M-278.34,286.827C-267.012,289.43 -255.738,291.072 -246.605,299.073C-243.977,301.376 -237.873,307.387 -242.291,310.809C-246.471,314.046 -252.578,307.588 -257.347,308.075C-265.644,308.923 -271.841,316.035 -277.59,321.327M38.16,349.077C27.941,346.305 10.109,340.876 9.586,326.863C9.415,322.27 16.151,322.261 15.785,317.739C15.464,313.792 9.776,314.149 9.224,310.315C7.426,297.839 25.457,288.784 35.16,287.577M-168.09,288.327C-171.559,289.646 -181.03,289.736 -182.286,293.877C-183.598,298.201 -175.465,302.024 -174.16,305.837C-172.505,310.677 -182.326,327.667 -169.013,321.408C-167.624,320.755 -166.375,319.901 -165.09,319.077M-194.34,290.577L-205.883,303.068L-213.09,316.827M608.16,313.827L612.66,312.327C613.545,316.636 614.685,322.687 610.995,326.109C608.895,328.057 605.19,328.154 603.975,331.031C600.915,338.294 608.108,350.036 611.91,355.827C619.163,346.758 631.005,340.056 639.435,331.731C642.113,329.089 645.915,327.776 647.408,324.081C650.22,317.121 649.155,308.334 648.75,301.082C648.6,298.401 649.005,293.899 652.125,292.88C655.59,291.748 656.52,297.049 656.243,299.302C655.275,307.057 652.868,316.278 655.958,323.957C658.928,331.334 671.85,328.345 675.66,323.577L680.91,325.077M443.16,291.327C450.162,293.301 449.586,296.864 450.66,303.327L457.753,302.797L462.22,306.869L468.66,303.327M491.16,292.827C495.93,295.849 506.64,293.139 508.943,299.133C510.323,302.73 506.7,304.917 504.75,307.28C501.855,310.797 499.853,318.86 502.995,322.775C508.403,329.52 513.93,314.939 520.08,316.753C526.125,318.537 521.91,327.22 524.325,331.309C530.565,341.862 537.915,321.702 541.41,318.327M122.16,293.577C115.214,305.255 132.677,299.812 135.596,307.44C137.085,311.33 133.448,316.932 136.37,320.286C140.291,324.786 147.955,314.872 153.125,316.938C157.042,318.504 159.754,328.413 164.627,326.55C169.931,324.522 167.765,315.969 172.915,313.633C177.22,311.681 185.637,318.192 188.522,313.042C190.925,308.754 185.618,300.543 185.16,295.827M254.16,293.577C249.811,295.048 237.223,294.002 236.24,299.819C235.086,306.644 247.286,307.218 249.925,312.091C251.864,315.672 251.148,320.419 251.299,324.327C251.611,332.431 256.286,344.373 253.874,352.021C251.172,360.589 239.441,362.907 232.554,358.332C225.777,353.829 222.974,344.611 226.408,337.178C227.821,334.119 231.174,331.401 231.356,327.887C231.735,320.599 222.279,316.317 216.66,314.577M276.66,299.577L273.995,314.728L267.752,320.536L263.233,328.371L258.548,322.736L251.91,319.077M35.16,355.077C26.937,354.63 19.013,352.122 12.733,346.577C6.596,341.157 2.13,337.09 -4.661,332.696C-6.716,331.366 -8.575,328.914 -11.107,328.502C-14.175,328.003 -15.94,332.199 -18.475,333.332C-22.96,335.337 -30.483,335.315 -35.228,334.521C-41.188,333.523 -42.312,323.771 -48.6,325.029C-52.546,325.818 -52.747,330.44 -55.281,332.793C-59.025,336.269 -69.023,335.253 -73.413,333.558C-76.63,332.316 -78.518,329.642 -80.832,327.257C-83.64,324.363 -87.565,322.275 -88.889,318.229C-93.337,304.643 -70.593,301.833 -62.34,301.827M-22.59,303.327L-25.282,311.193L-32.125,316.938L-24.927,323.845L-23.34,333.327M125.16,303.327C125.986,311.153 122.587,319.344 116.91,325.077M625.41,344.577C619.17,334.905 618.54,322.49 624.338,312.349C626.963,307.746 632.205,302.507 638.04,304.383C652.905,309.159 626.835,318.542 640.305,322.857C641.565,323.261 642.855,323.397 644.16,323.577M-115.59,307.827C-108.166,312.801 -110.521,316.308 -117.09,320.577M494.16,311.577L502.41,307.827M381.66,310.827C383.921,318.263 391.856,313.516 394.701,319.5C398.015,326.471 383.256,327.876 380.16,331.827M473.91,311.577L467.91,316.827M179.91,314.577C179.38,322.239 178.861,330.156 177.628,337.827C176.912,342.285 174.986,347.526 176.19,352.024C177.968,358.665 185.254,360.914 191.16,361.827M-277.59,331.827L-276.84,334.827L-258.09,328.827C-258.685,327.291 -259.298,325.761 -259.86,324.211C-261.033,320.976 -261.137,313.634 -256.044,318.402C-252.018,322.171 -252.66,330.657 -246.268,331.836C-240.535,332.894 -240.512,315.105 -232.159,322.44C-223.854,329.733 -232.716,344.745 -227.34,353.577M109.41,315.327C112.454,317.019 113.575,318.52 113.91,322.077M-278.34,316.827L-277.59,318.327M274.41,317.577L276.66,326.577M145.41,318.327L149.91,322.077M442.41,318.327L440.057,342.729L431.16,356.577M125.91,319.077C125.847,322.084 125.399,325.465 126.395,328.356C127.953,332.88 131.732,333.805 129.733,339.309C127.549,345.325 120.379,344.557 118.417,349.977C116.706,354.703 120.737,357.474 116.91,361.827L123.66,366.327C124.567,364.125 124.795,359.613 128.164,359.802C130.563,359.937 132.198,362.378 134.844,361.764C137.487,361.151 136.677,358.073 139.41,357.327M335.16,319.827C336.303,326.565 346.384,326.721 346.41,335.577M595.41,319.827C595.41,325.859 592.778,333.478 593.648,339.153C594.33,343.631 598.86,348.662 600.825,352.834C603.323,358.151 606.135,364.05 612.66,364.077C611.723,370.345 605.273,373.202 600.66,376.827C610.245,387.005 595.68,397.607 590.91,406.827C590.13,406.308 589.253,405.633 588.398,405.19C580.89,401.321 586.418,409.826 585.023,412.608C583.883,414.896 579.57,415.246 577.41,415.827C580.853,425.604 575.775,421.649 571.823,427.398C570.465,429.378 571.545,432.639 569.43,434.155C567.045,435.86 563.738,434.465 561.27,436.447C558.788,438.451 555.72,446.422 551.805,445.533C547.538,444.564 545.738,433.573 544.41,430.077C551.235,426.045 557.888,422.049 563.145,415.795C565.568,412.905 568.335,405.16 571.905,403.858C574.448,402.933 578.22,406.133 581.16,406.077M-212.34,325.827C-210.176,328.667 -206.188,336.033 -201.763,332.869C-199.099,330.965 -197.613,323.924 -193.639,324.381C-188.662,324.952 -190.779,333.858 -186.278,335.693C-181.254,337.741 -170.87,326.835 -171.435,338.423C-171.499,339.747 -171.69,341.03 -171.84,342.327M148.41,322.077L144.66,331.077L146.91,334.077C144.648,338.897 144.743,345.237 139.41,347.577M-278.34,331.077L-277.59,331.827M680.91,367.827C677.94,369.254 674.393,371.707 670.943,371.462C668.063,371.257 666.045,368.613 662.97,369.191C658.763,369.983 658.425,375.196 654.353,376.309C640.545,380.083 624.743,370.34 615.66,361.077C626.243,355.563 634.41,345.628 644.813,339.441C647.513,337.835 651.953,333.206 655.305,333.956C661.538,335.35 664.485,345.745 660.27,350.358C656.31,354.699 651.225,341.571 645.24,348.283C640.028,354.127 646.32,361.11 652.433,362.177C663.053,364.029 671.813,357.907 680.91,353.577M656.91,331.827L680.91,334.077M-241.59,334.077C-233.05,343.427 -241.602,356.139 -249.145,363.702C-251.753,366.318 -256.46,370.962 -260.62,369.783C-266.548,368.103 -258.471,357.533 -259.192,353.592C-260.735,345.162 -270.249,341.827 -277.59,340.827M-4.59,334.077L-6.09,335.577M-61.59,335.577C-60.862,343.078 -57.773,347.87 -55.376,354.783C-53.365,360.582 -52.098,367.768 -50.52,373.799C-49.534,377.564 -52.489,381.972 -50.778,385.33C-49.031,388.758 -44.896,387.546 -42.09,386.577L-34.396,393.784L-32.672,388.042L-33.09,371.577C-28.766,375.069 -24.068,385.842 -18.716,386.925C-13.315,388.017 -12.998,373.212 -12.84,370.077L-15.84,366.327L-28.59,349.077M-30.09,335.577L-27.84,340.827L-26.34,345.327M558.66,336.327L568.275,338.36L570.698,344.817L577.335,347.041L578.91,356.577C583.74,355.014 585.435,357.724 587.91,361.827C595.673,358.425 596.01,362.579 596.91,369.327L607.41,364.827M-151.59,337.827C-151.211,339.169 -150.884,340.44 -150.747,341.847C-149.497,354.662 -147.281,341.623 -141.09,340.077M344.16,338.577L340.41,343.077M455.16,409.827C461.567,404.419 467.319,398.04 471.66,391.077L467.16,388.827C469.464,384.417 472.043,379.225 477.66,381.327C483.668,372.501 475.5,367.236 475.605,358.077C475.733,347.371 485.213,343.65 493.41,340.077M-96.84,349.827C-88.378,343.791 -86.254,346.776 -81.84,355.077L-74.34,344.577C-69.45,349.591 -65.8,352.079 -62.34,344.577M386.16,346.077C396.203,351.953 403.716,360.378 412.159,368.283C414.598,370.567 417.802,371.833 420.011,374.397C422.882,377.726 422.012,382.531 424.856,385.748C427.799,389.076 434.591,386.823 436.478,390.799C438.572,395.213 432.056,398.049 428.91,398.577L424.41,402.327C422.931,404.721 421.989,405.402 419.16,405.327C417.445,407.967 416.24,408.771 413.16,407.577L410.91,412.077L404.91,414.327C399.704,413.995 389.108,422.188 391.868,428.214C393.794,432.42 398.624,430.768 401.938,432.602C406.568,435.165 407.279,441.933 407.16,446.577L397.41,448.827L398.91,451.827L393.66,455.577M548.91,346.077C557.138,346.649 561.87,353.522 569.16,356.402C573.023,357.926 576.705,361.093 578.91,356.577M141.66,348.327L142.41,351.327L138.66,352.827M335.16,379.077C343.14,371.943 348.504,362.889 356.074,355.205C359.093,352.14 363.614,347.649 368.403,349.437C372.329,350.903 374.012,357.172 376.41,360.327L377.16,359.577L377.16,358.077M-242.34,401.577C-231.114,391.165 -220.335,378.771 -209.425,367.767C-205.095,363.4 -201.17,357.416 -195.686,354.429C-185.201,348.718 -172.42,362.914 -178.842,372.778C-182.563,378.494 -190.994,380.935 -196.59,384.373C-203.599,388.681 -209.855,394.158 -216.84,398.495C-222.74,402.159 -229.115,404.254 -234.839,408.361C-238.62,411.073 -248.023,421.432 -253.098,418.729C-260.677,414.694 -245.791,404.233 -243.09,401.577L-260.34,394.827M533.91,352.827C536.978,356.467 540.15,359.973 542.738,364.078C544.358,366.635 545.738,369.382 546.458,372.326C546.878,374.022 547.095,375.789 546.983,377.54C545.985,392.921 527.738,382.043 521.168,378.187C519.435,377.172 512.873,373.474 512.168,377.576C511.493,381.502 516.788,384.978 519.683,386.45C529.605,391.494 541.343,390.869 549.008,400.245C553.673,405.963 554.198,415.987 546.495,419.487C533.01,425.606 515.22,405.809 506.16,398.553C502.845,395.902 494.475,388.263 489.975,392.263C485.873,395.916 490.343,403.887 492.248,407.575C498.375,419.458 507.33,425.748 520.41,421.077L520.41,431.577C524.925,432.309 529.928,431.597 534.338,432.751C538.748,433.903 544.028,445.109 541.035,449.103C539.115,451.671 535.395,448.506 533.228,450.165C531.33,451.615 533.805,455.796 533.1,457.856C531.45,462.636 522.292,461.786 530.085,467.136C531.082,467.821 532.132,468.438 533.16,469.077C529.71,472.243 526.417,474.717 525.66,479.577C527.917,479.021 532.447,477.429 533.73,480.434C534.465,482.144 532.372,488.81 535.672,488.44C537.322,488.256 548.91,481.697 549.367,480.342C550.282,477.618 546.217,472.251 548.857,470.286C551.512,468.315 555.45,472.16 558.42,470.684C561.547,469.129 559.455,461.982 562.957,461.519C568.102,460.837 570.54,471.303 575.295,463.109C575.85,462.153 576.232,461.088 576.66,460.077C570.127,457.909 571.86,453.186 574.41,448.077L563.64,448.358L559.41,439.077M116.16,353.577L107.702,364.266L101.91,376.827L109.539,378.167L110.16,391.827L106.41,392.577L105.66,393.327L105.66,394.827M173.91,353.577C172.891,356.846 171.833,362.129 168.164,363.568C165.296,364.693 158.995,360.882 157.39,364.661C155.483,369.15 164.681,372.093 162.443,378.351C159.443,386.743 152.911,387.616 147.785,393.32C145.298,396.089 145.622,400.325 143.307,403.329C139.448,408.338 133.769,411.327 129.53,415.91C127.484,418.122 127.059,421.02 125.292,423.354C122.161,427.488 117.387,424.133 113.569,426.44C110.188,428.483 109.697,432.93 106.147,435.048C104.05,436.299 97.727,437.831 97.727,440.987C97.727,443.231 101.504,442.484 102.727,442.212C107.744,441.093 112.238,438.375 115.41,443.577L128.91,438.327L129.66,439.077L128.91,439.827L128.16,437.577M254.91,354.327C257.568,359.25 262.304,367.187 261.144,373.035C260.454,376.515 253.618,381.858 255.99,385.476C258.076,388.656 266.018,383.263 270.111,387.031C276.599,393.004 283.832,402.15 288.857,409.434C293.64,416.368 292.658,421.128 302.4,422.188C306.034,422.583 311.694,426.511 314.807,423.111C318.525,419.049 309.317,416.731 312.101,412.916C313.76,410.643 317.284,412.224 319.566,411.566C323.657,410.385 322.84,404.745 322.41,401.577C315.257,403.126 299.271,406.513 299.846,394.11C300.031,390.124 303.105,387.176 304.227,383.493C305.29,380.006 304.247,375.966 306.492,372.849C309.878,368.148 317.453,368.769 321.66,364.077M-81.84,355.077L-84.84,367.827C-78.533,367.807 -74.513,370.458 -70.59,375.327C-73.974,375.819 -78.463,375.63 -80.95,378.377C-84.781,382.608 -79.589,387.75 -75.051,387.613C-64.598,387.299 -57.92,375.684 -53.34,367.827M483.66,374.577L487.41,376.827C488.04,370.876 485.835,364.398 491.033,359.919C501.06,351.276 520.988,357.348 530.903,363.264C534.683,365.519 539.783,369.114 540.735,373.737C541.943,379.554 535.088,378.863 531.653,377.56C525.36,375.171 500.34,357.981 505.088,378.324C508.44,392.712 526.478,394.52 537.638,399.42C540.675,400.755 548.468,405.056 545.603,409.51C542.565,414.239 533.303,408.423 530.16,406.588C518.865,399.989 508.305,391.479 496.41,385.971C492.383,384.105 484.83,381.615 482.378,387.103C480.525,391.275 482.543,396.782 483.848,400.827C487.35,411.728 492.03,423.606 499.973,432.088C506.565,439.125 513.66,439.716 519.66,432.327M611.91,355.827C611.924,358.495 612.36,359.448 614.91,360.327M281.91,356.577L283.41,358.077M566.91,356.577C567.255,363.892 562.875,362.401 559.92,367.339C557.063,372.126 557.61,375.141 552.66,379.077C557.948,384.073 555.555,386.097 557.565,391.836C558.323,393.993 561.173,394.153 562.673,395.596C565.665,398.466 564.825,401.958 569.16,403.827M-174.84,367.827C-169.527,358.02 -164.202,363.17 -154.59,361.827M236.16,361.077L245.031,369.372L240.66,379.827M281.16,361.827L289.41,369.327L287.91,372.327L291.66,376.827L296.16,383.577C299.146,383.994 299.511,385.17 299.16,388.077M-139.59,376.077C-141.529,371.487 -144.553,367.593 -142.59,362.577C-139.831,366.306 -137.728,368.859 -132.84,368.577M134.16,362.577C131.47,369.591 134.645,371.1 135.436,377.767C135.712,380.09 134.43,384.74 137.742,385.45C140.862,386.12 143.99,383.001 146.907,382.316C150.937,381.368 154.263,383.701 157.41,385.827M-84.84,367.827C-89.587,378.855 -97.924,399.183 -93.09,410.577C-86.588,400.656 -80.158,393.864 -69.09,403.077L-87.09,420.327M600.66,376.827C593.145,380.407 590.28,392.044 581.153,392.957C569.73,394.098 564.473,378.741 572.625,371.648C579.053,366.049 587.97,370.973 595.41,369.327M-12.84,370.077C-4.864,369.591 -3.725,382.964 -0.84,388.827L10.41,372.327M29.91,379.827C23.381,372.444 21.154,370.794 32.91,369.327M612.66,369.327C618.158,378.169 625.095,377.616 634.148,380.054C637.013,380.826 639.105,383.136 642.038,383.889C645.683,384.824 651.323,383.322 654.21,386.238C656.423,388.464 653.805,391.85 653.595,394.379C653.003,401.295 651.788,411.621 658.41,415.827L655.41,421.077C659.288,422.805 661.14,424.13 660.66,428.577C664.71,429.918 667.028,430.701 666.66,435.327L680.91,439.827M111.66,388.077C116.241,385.365 120.782,381.801 122.91,376.827L130.41,371.577M417.66,371.577C406.032,383.157 392.436,388.581 375.66,388.665C368.315,388.702 356.888,388.731 350.045,386.156C345.414,384.413 340.825,380.269 336.66,377.577M220.41,373.077L213.66,379.827M36.66,382.077C35.105,385.527 27.995,397.484 31.422,400.751C35.327,404.474 45.852,393.747 48.753,398.501C50.058,400.638 48.31,405.729 48.66,408.327L52.41,405.327L54.66,408.327L68.16,407.577L70.41,404.577L80.16,405.327C81.359,394.596 70.547,399.163 71.91,388.827C77.769,389.324 77.625,383.139 82.534,380.734C88.865,377.633 95.513,380.146 101.91,376.827M-181.59,377.577C-182.248,379.695 -183.535,382.368 -182.815,384.645C-180.685,391.389 -173.588,392.041 -179.34,400.077C-184.465,392.471 -186.217,396.025 -189.84,402.327C-190.304,401.607 -190.785,400.74 -191.336,400.055C-196.099,394.143 -195.794,401.871 -199.63,402.364C-201.877,402.654 -204.156,399.896 -205.59,398.577C-206.539,400.737 -206.968,405.102 -208.784,406.659C-210.356,408.007 -212.665,406.741 -214.456,407.36C-217.181,408.301 -216.062,413.661 -216.09,415.827C-223.336,412.841 -225.946,414.399 -222.09,421.827C-228.344,422.112 -233.56,422.014 -228.84,429.327C-242.092,432.396 -236.831,419.01 -237.84,411.327M656.16,385.077L667.298,384.393L680.91,377.577M455.91,378.327C459.672,390.812 449.837,397.149 439.41,390.327M185.16,380.577C181.574,389.01 181.688,391.461 173.91,397.077M628.41,380.577C622.785,386.258 624.113,393.778 620.513,400.563C618.518,404.318 614.618,407.436 615,412.068C615.69,420.39 626.213,423.105 631.335,416.877C634.275,413.307 632.52,409.446 632.85,405.333C633.143,401.742 634.928,398.618 636.66,395.577C641.01,400.74 644.948,405.765 645.45,412.827C645.998,420.471 642.938,425.952 638.16,431.577C639.15,434.407 638.723,439.092 640.875,441.298C645.563,446.098 653.423,442.311 658.29,445.812C663.21,449.356 660.705,457.431 669.345,456.704C674.01,456.312 675.743,449.455 680.91,448.077M279.66,398.577L282.767,392.149L281.77,384.27L289.254,385.238L295.41,382.827M70.41,383.577L76.41,384.327M332.16,382.827C336.34,396.121 323.587,393.847 317.16,400.827M212.91,383.577C214.795,385.821 220.75,391.164 218.169,394.538C215.46,398.08 208.801,390.867 204.358,394.25C201.307,396.573 199.925,400.371 197.096,402.902C194.531,405.196 190.723,405.67 188.947,408.838C185.568,414.867 188.048,431.76 175.539,426.846C173.837,426.178 172.391,425.089 170.91,424.077C169.091,430.059 175.691,433.272 174.362,437.916C173.522,440.848 169.422,440.845 167.677,443.012C166.661,444.273 166.618,446.191 168.136,447.087C170.811,448.665 174.771,446.229 177.601,446.118C182.633,445.92 188.417,449.31 191.093,453.492C194.138,458.25 193.697,465.147 192.685,470.489C192.275,472.653 190.472,475.799 191.311,477.987C192.303,480.576 196.908,480.376 199.037,479.809C203.682,478.573 200.563,473.579 199.94,470.512C198.815,464.976 197.579,453.089 200.654,448.103C203.906,442.831 218.517,440.673 224.145,440.865C226.655,440.951 231.868,440.909 231.496,437.061C231.031,432.258 222.873,435.569 222.097,430.602C221.059,423.963 225.217,421.257 218.16,416.577C218.656,414.6 219.096,412.592 219.819,410.651C221.492,406.159 226.732,403.304 230.071,408.222C234.056,414.092 229.346,425.63 239.846,426.536C247.65,427.209 250.853,411.213 258.981,416.52C263.927,419.75 260.827,426.078 261.277,430.735C261.631,434.397 264.101,436.372 266.91,438.327M639.66,385.827L636.66,395.577M-112.59,391.077L-118.229,399.955L-114.84,414.327C-102.226,411.954 -103.398,425.318 -95.085,431.411C-88.187,436.467 -87.704,427.777 -90.09,423.327M456.66,391.077C458.004,396.593 459.326,398.115 464.91,399.327M647.16,445.077C647.093,446.842 647.07,448.626 646.68,450.356C644.04,462.08 633.848,451.856 627.75,457.288C622.815,461.683 627.6,466.758 625.575,471.795C621.72,481.384 609.645,475.569 605.16,470.577C600.188,473.4 595.71,469.587 596.895,463.824C598.68,455.129 607.68,449.022 609.548,440.664C610.38,436.949 606.93,433.915 603.405,435.671C599.97,437.385 598.103,441.923 596.288,445.074C594.323,448.485 592.358,451.645 590.16,454.827C586.755,446.253 583.125,437.52 588.315,428.668C590.753,424.5 595.388,422.383 597.728,417.708C599.933,413.291 600.21,408.233 602.535,403.848C606.795,395.818 614.648,392.263 623.16,391.077M-174.84,392.577C-171.326,394.593 -170.287,397.15 -168.84,400.827C-163.033,393.53 -161.914,395.221 -158.34,403.077C-157.742,402.311 -157.137,401.461 -156.485,400.723C-151.193,394.736 -152.164,401.571 -147.823,402.864C-145.449,403.572 -142.296,401.071 -140.34,400.077M101.91,393.327L99.66,397.077L96.66,395.577L95.16,399.327L92.16,397.827C90.538,402.796 91.081,409.791 96.884,411.898C99.381,412.805 103.597,411.812 105.226,414.411C106.746,416.835 90.813,431.221 104.919,429.431C106.427,429.24 107.923,428.877 109.41,428.577M144.66,403.827C148.399,405.006 150.743,404.484 153.86,401.911C155.477,400.578 158.48,396.901 160.965,397.876C162.483,398.472 161.918,400.537 161.442,401.632C159.95,405.072 153.437,418.074 162.851,409.442C163.982,408.404 165.013,407.255 166.052,406.124C167.672,404.359 169.281,402.585 170.91,400.827M269.91,415.077C271.664,410.472 270.393,407.91 267.844,403.856C267.098,402.667 264.734,399.481 266.306,398.091C267.911,396.673 270.908,399.4 272.038,400.308C275.73,403.278 277.934,405.312 282.66,403.827M45.66,406.077C44.36,407.998 40.076,413.1 43.07,415.277C47.508,418.503 58.235,414.945 63.66,415.827C60.107,419.999 46.79,433.311 40.783,429.284C37.453,427.051 36.609,418.316 31.856,418.316C27.261,418.316 36.777,434.214 29.511,432.062C24.786,430.662 19.876,419.557 19.382,415.078C19.083,412.378 20.43,408.071 18.451,405.818C15.893,402.908 10.076,407.818 7.296,408.44C-1.762,410.466 -9.358,406.269 -18.84,409.827L-8.579,417.566L-15.847,421.565L-39.84,424.827C-38.77,419.036 -37.693,414.396 -42.09,409.827C-46.05,415.687 -56.317,418.041 -54.24,407.598C-52.673,399.719 -43.72,396.832 -36.84,396.327M-33.84,396.327C-29.027,403.556 -27.268,406.725 -18.84,409.827M635.16,401.577C637.328,404.595 639.443,407.607 640.298,411.333C646.268,437.374 598.358,431.784 606.075,409.089C606.87,406.76 608.16,404.586 609.78,402.738C612.233,399.934 615.248,398.381 618.66,397.077M-129.84,399.327C-122.008,413.513 -142.783,414.916 -138.894,429.069C-136.979,436.038 -123.685,432.414 -119.707,429.174C-116.274,426.376 -115.63,419.122 -115.59,415.077M82.41,402.327L89.16,401.577M252.66,400.077C251.761,404.903 250.178,406.633 245.16,406.077C244.746,412.785 239.213,420.272 233.91,424.077M-168.84,400.827C-170.284,402.777 -176.782,405.632 -176.803,407.649C-176.822,409.616 -171.9,410.605 -170.757,412.159C-169.645,413.67 -169.336,415.654 -168.079,417.074C-164.688,420.905 -160.082,414.368 -155.944,414.981C-149.926,415.871 -144.451,420.015 -139.59,423.327M-68.34,403.077C-65.635,407.986 -63.559,413.347 -66.862,418.611C-68.078,420.551 -76.065,425.044 -75.036,427.304C-73.864,429.877 -68.206,428.902 -66.088,428.746C-57.415,428.112 -48.991,426.781 -40.59,425.577M464.91,403.077C468.658,404.486 470.003,405.824 468.66,409.827M386.16,403.827C391.375,407.101 394.373,411.228 397.41,416.577M328.41,405.327L329.91,409.077L332.91,407.577L335.16,412.827M197.91,406.077C201.298,414.333 208.088,431.425 217.41,417.327M-222.09,422.577L-219.84,424.827C-212.832,418.575 -204.497,409.68 -194.34,411.327L-209.762,421.732L-211.767,426.856L-204.085,422.946L-184.59,414.327C-183.568,417.523 -183.081,422.491 -180.407,424.806C-178.23,426.69 -174.795,426.2 -173.08,428.777C-170.959,431.964 -172.438,436.365 -169.387,439.173C-165.276,442.958 -159.154,443.497 -155.263,447.896C-152.261,451.291 -153.874,453.8 -156.84,456.327C-155.076,459.103 -153.25,462.812 -149.728,463.593C-145.492,464.535 -138.182,460.455 -137.194,467.06C-135.461,478.654 -151.019,469.464 -151.507,479.013C-151.817,485.074 -141.541,486.548 -139.104,491.289C-134.682,499.891 -141.038,506.847 -142.62,514.315C-143.351,517.764 -139.076,533.178 -147.507,526.859C-148.426,526.17 -149.25,525.339 -150.09,524.577C-150.559,526.941 -150.859,532.959 -154.525,532.575C-156.372,532.383 -158.449,529.893 -160.343,531C-162.324,532.156 -162.901,536.102 -163.59,538.077C-165.786,535.388 -168.411,532.215 -168.325,528.503C-168.274,526.32 -164.29,522.072 -166.407,520.364C-169.431,517.923 -175.678,519.408 -179.34,518.887C-186.046,517.932 -193.745,515.589 -199.324,511.549C-203.367,508.62 -203.428,504.012 -206.581,500.586C-208.922,498.042 -212.565,497.808 -215.163,495.657C-219.589,491.995 -221.928,484.953 -223.31,479.577C-225.164,472.366 -222.615,461.906 -226.833,455.602C-229.691,451.33 -237.89,463.299 -243.078,454.818C-245.144,451.441 -239.227,449.723 -237.09,448.827C-242.468,442.824 -240.038,441.244 -233.34,439.077L-238.59,430.827M407.16,437.577C412.627,435.735 421.511,434.043 425.467,429.498C428.862,425.598 427.481,421.242 432.716,418.054C437.687,415.027 439.433,417.929 444.179,417.715C447.377,417.571 450.452,414.598 452.91,412.827M465.66,413.577L476.91,416.577C476.423,417.636 475.905,418.692 475.463,419.775C472.005,428.151 478.23,423.978 482.25,427.351C484.208,428.992 483.008,432.069 484.658,433.88C486.405,435.799 489.533,434.463 491.61,435.785C494.348,437.529 493.26,441.811 495.833,443.893C503.093,449.765 508.005,445.091 515.505,446.466C518.258,446.97 520.163,451.393 522.983,450.807C525.525,450.278 527.985,446.535 530.16,445.077L530.91,445.827L530.91,447.327M157.41,414.327L145.81,420.856L138.66,430.827L143.91,436.077M353.16,415.077L349.41,421.827M-277.59,421.077C-273.818,418.746 -271.356,416.466 -268.59,421.077M144.66,438.327C149.87,440.729 157.106,440.497 158.739,433.608C159.512,430.347 158.043,426.918 159.223,423.718C161.491,417.566 167.64,420.075 170.91,423.327M599.16,418.077C607.95,430.729 622.373,438.409 637.41,431.577M-7.59,419.577C-2.139,429.904 8.864,420.219 14.528,429.588C18.396,435.986 18.008,445.962 14.198,452.307C12.533,455.082 5.489,460.05 7.006,463.749C8.801,468.126 15.877,461.526 17.237,459.909C22.586,453.554 28.293,441.976 28.41,433.827M-162.09,420.327C-162.736,425.526 -164.435,433.113 -158.152,435.548C-155.125,436.721 -150.901,435.38 -148.473,437.894C-144.884,441.609 -147.097,448.912 -140.738,450.519C-136.547,451.578 -124.796,449.604 -124.543,444.031C-124.365,440.133 -127.642,436.629 -129.84,433.827M-269.34,424.077C-259.8,421.855 -261.169,429.502 -252.09,430.827L-254.744,438.327L-251.523,443.271L-257.34,466.077C-263.725,464.751 -261.673,468.432 -265.92,470.615C-267.694,471.527 -269.796,470.251 -271.655,470.862C-274.075,471.658 -275.808,474.874 -277.59,476.577M350.91,421.077C359.192,426.802 356.124,436.308 345.66,432.327C336.934,443.219 329.592,424.506 318.238,430.875C312.716,433.973 329.789,438.827 327.798,442.035C326.29,444.468 321.429,442.608 319.417,442.096C313.316,440.543 304.731,440.805 298.41,441.327L292.41,434.577M-114.84,421.827L-111.09,435.327C-105.449,435.396 -102.131,439.311 -98.34,442.827C-100.242,444.125 -105.734,446.916 -104.071,450.085C-103.165,451.812 -100.206,452.575 -100.227,454.796C-100.253,457.537 -104.177,457.985 -104.83,460.384C-105.364,462.352 -102.56,463.543 -102.084,465.244C-101.185,468.455 -107.608,469.811 -109.59,470.577C-102.695,476.528 -104.178,477.586 -111.84,481.077L-103.59,488.577C-93.905,481.913 -79.173,490.212 -70.675,496.749C-67.434,499.241 -66.498,502.681 -62.769,505.074C-59.122,507.413 -59.402,516.262 -53.394,513.781C-44.155,509.965 -36.127,493.983 -31.65,485.577C-29.707,481.928 -26.842,477.419 -29.072,473.296C-30.941,469.843 -34.816,466.459 -38.545,465.255C-40.753,464.542 -44.891,464.89 -46.291,462.667C-47.986,459.977 -43.516,455.308 -42.981,452.578C-41.674,445.918 -48.184,443.108 -53.274,440.866C-58.24,438.679 -60.207,443.876 -64.166,445.627C-69.169,447.838 -76.417,447.781 -81.84,448.077C-76.915,454.885 -53.956,453.926 -66.184,464.324C-67.59,465.52 -69.07,466.626 -70.498,467.796C-72.684,469.587 -74.658,471.519 -76.59,473.577L-51.84,474.327C-53.396,476.608 -54.979,478.869 -56.579,481.12C-57.622,482.585 -58.687,484.041 -59.65,485.56C-68.992,500.31 -46.224,484.585 -43.093,487.849C-39.997,491.077 -45.808,501.953 -46.59,505.827M542.16,421.827L544.41,429.327M511.41,448.077C511.267,451.228 516.465,458.533 515.198,460.031C513.6,461.911 510.66,461.312 508.755,460.366C504.788,458.398 501.48,454.453 496.613,456.433C489.885,459.171 489.938,469.87 497.348,471.604C503.303,472.996 508.845,464.164 514.395,467.78C518.603,470.521 511.935,473.404 509.91,474.327C511.14,480.719 507.87,478.241 503.595,479.161C501.293,479.658 499.958,482.362 497.415,481.98C493.245,481.352 486.795,477.287 482.52,478.546C479.588,479.41 477.803,484.761 476.16,487.077L470.16,478.077L463.41,487.077L458.16,477.327C456.26,478.617 451.607,483.226 449.113,481.588C447.248,480.363 447.404,477.44 445.175,476.5C442.732,475.468 439.433,478.171 437.286,476.384C434.65,474.19 436.127,466.889 435.965,463.856C435.737,459.571 432.596,456.556 432.188,452.509C431.82,448.856 435.143,446.441 436.306,443.273C437.333,440.475 436.698,437.092 438.605,434.632C440.348,432.385 443.369,432.159 445.727,430.864C448.523,429.33 450.086,425.908 453.194,424.948C456.451,423.943 459.425,426.403 462.629,426.551C465.892,426.702 469.124,425.047 472.41,424.827M140.16,424.077L141.66,424.077M3.66,426.327C16.25,435.329 -0.647,448.026 -5.854,456.682C-7.547,459.496 -8.167,462.947 -9.042,466.077C-9.845,468.949 -12.006,473.476 -10.596,476.418C-7.695,482.47 6.413,476.009 11.159,476.244C14.048,476.386 17.337,478.198 20.189,477.263C22.171,476.614 22.669,474.58 23.16,472.827M313.41,426.327L316.41,429.327M-180.84,427.077C-181.962,438.032 -189.244,432.948 -195.883,437.62C-199.459,440.137 -202.887,451.912 -202.742,456.139C-202.499,463.283 -192.647,460.32 -189.769,465.277C-186.613,470.713 -187.471,476.794 -182.017,481.118C-177.306,484.854 -169.521,484.103 -165.677,488.536C-160.348,494.682 -165.094,503.238 -161.446,509.307C-159.224,513.002 -148.837,514.176 -144.84,515.577M-213.09,429.327C-215.133,432.722 -219.15,436.937 -219.162,441.094C-219.18,447.295 -208.043,451.411 -203.34,453.327M128.16,437.577C130.514,432.985 133.413,431.003 138.66,430.827M-26.34,474.327C-21.055,465.159 -28.886,463.443 -29.568,455.043C-30.15,447.869 -20.759,454.735 -18.84,456.327C-15.066,448.507 -20.8,429.98 -5.432,432.116C-3.561,432.376 -1.828,433.134 -0.09,433.827M45.66,430.827C55.69,436.484 71.147,432.996 77.91,443.577L99.66,430.827M479.91,466.827C475.545,466.302 474.9,469.413 471.21,470.379C468.626,471.054 464.204,470.028 461.509,469.753C448.29,468.403 446.503,450.399 452.084,441.663C454.498,437.886 458.832,437.138 461.16,432.327C467.631,436.99 475.973,435.31 481.26,442.62C487.073,450.648 480.435,460.083 480.885,468.894C481.073,472.418 484.598,473.829 485.16,477.327M2.16,436.077L3.66,439.077M627.66,436.077C625.905,440.236 625.245,446.625 622.928,450.24C617.873,458.104 607.17,458.975 599.16,460.077M68.16,437.577C64.288,442.635 57.647,443.431 51.666,444.498C49.16,444.946 44.64,444.68 43.178,447.256C41.485,450.24 46.045,451.542 47.988,452.118C55.682,454.395 70.68,460.155 56.91,464.577L66.66,469.827C62.639,476.472 69.575,478.854 64.41,484.077L72.66,487.827L67.41,495.327C73.7,497.854 72.698,500.362 68.91,505.077L77.16,508.827L70.41,514.827L77.91,519.327L71.16,526.077L78.66,529.077C71.498,535.453 66.086,526.687 58.583,528.723C54.433,529.851 51.179,534.153 47.851,536.691C40.056,542.635 28.222,547.485 23.16,556.077C26.789,557.752 31.266,559.809 34.703,556.611C36.786,554.671 38.276,549.155 41.803,549.491C45.899,549.881 46.111,556.186 49.497,557.815C53,559.5 57.848,555.39 60.89,558.187C63.226,560.335 60.995,564.579 64.348,566.018C70.627,568.713 78.055,564.81 84.66,567.327M341.91,438.327C341.899,440.367 341.724,442.857 343.636,444.216C345.815,445.767 348.863,444.745 351.316,445.362C354.282,446.109 358.932,448.74 361.296,450.688C367.743,456.002 353.56,456.8 350.936,456.333C348.32,455.868 345.878,455.04 343.41,454.077C336.822,462.134 332.897,454.543 326.584,451.078C321.402,448.233 315.631,446.444 310.41,443.577M-42.09,444.327C-33.49,440.487 -27.877,441.127 -18.84,442.077M130.41,440.577C132.851,445.392 137.053,452.265 129.66,454.077C129.2,461.498 131.045,470.215 138.005,474.273C141.179,476.125 145.253,475.829 148.061,478.294C158.684,487.621 166.92,500.49 177.671,510.111C182.654,514.569 191.753,519.907 194.233,526.31C195.064,528.455 195.14,533.161 192.288,534.004C189.727,534.762 188.267,530.824 185.571,531.515C183.637,532.01 182.537,534.148 180.48,534.382C177.959,534.669 176.109,532.088 173.574,532.242C171.367,532.376 170.009,534.666 167.761,534.666C165.472,534.665 163.967,532.365 161.694,532.359C154.816,532.339 155.079,535.3 148.41,530.577C144.694,540.262 141.005,547.309 131.91,553.077C132.416,543.702 141.889,538.058 140.465,527.594C139.981,524.034 137.169,517.591 132.432,519.821C124.485,523.561 137.272,538.389 123.66,532.827C122.888,539.601 125.548,546.072 124.926,552.903C124.638,556.072 122.418,558.459 121.73,561.496C121.152,564.05 122.321,569.88 118.403,570.273C113.054,570.808 113.138,557.466 106.479,560.633C103.548,562.026 104.862,567.454 103.418,569.978C99.04,577.628 90.789,573.126 85.41,569.577M-98.34,442.827C-92.148,446.292 -90.149,448.605 -82.59,447.327M115.41,443.577C108.581,447.723 100.156,449.211 93.334,453.372C89.411,455.766 89.462,460.901 84.59,462.25C79.786,463.581 78.787,460.027 75.026,458.406C72.023,457.111 68.773,458.405 65.91,459.327M28.41,445.077L22.41,472.077M209.16,445.827L210.66,452.577C215.048,448.185 226.145,442.303 225.458,454.106C224.853,464.512 212.435,470.376 215.16,481.077M495.66,445.827C493.673,450.012 490.388,447.9 486.66,447.327L485.91,448.077L485.91,449.577M407.91,447.327C418.473,450.063 415.166,451.977 415.41,461.577C416.465,461.203 417.517,460.778 418.608,460.507C427.883,458.209 422.006,465.316 425.979,468.813C428.013,470.601 432.152,468.342 434.16,467.577M231.66,448.077L232.41,448.827M362.16,457.827C366.68,464.135 375.597,469.386 382.389,462.321C385.347,459.244 384.118,455.286 386.043,451.922C387.972,448.55 393.335,448.803 396.66,448.827M-123.84,448.827C-123.508,451.334 -123.082,453.836 -122.823,456.354C-122.653,457.994 -122.85,470.44 -127.175,467.313C-129.667,465.51 -128.684,461.112 -130.325,458.706C-133.381,454.222 -139.217,458.358 -141.09,461.577M183.66,448.827C173.713,454.006 162.065,460.186 152.91,466.827C148.728,459.603 143.864,455.652 135.66,454.077M-189.09,463.077C-180.541,450.801 -169.438,445.944 -156.84,456.327M322.41,450.327L323.16,465.327L317.16,466.077C316.417,469.311 309.248,476.427 309.868,478.21C312.027,484.425 325.838,474.102 329.399,482.151C333.189,490.716 315.409,493.425 317.795,502.762C320.196,512.165 336.401,507.363 342.66,514.077C349.275,506.932 360.649,495.62 371.549,496.955C375.282,497.412 375.818,502.545 379.496,502.545C382.709,502.545 383.251,498.705 385.654,497.387C391.195,494.346 398.697,500.75 398.821,506.333C398.977,513.426 389.858,508.278 386.834,511.534C383.627,514.989 390.89,519.417 389.321,523.338C387.778,527.194 380.082,525.858 379.675,530.145C379.128,535.899 390.29,536.918 393.416,539.852C395.401,541.716 396.089,545.068 399.29,545.107C401.979,545.139 406.986,543.104 406.332,539.698C405.454,535.122 398.484,534.361 397.383,529.008C394.652,515.733 417.05,507.459 426.66,505.077L420.66,500.577L423.66,495.327C430.628,496.458 430.932,488.493 436.373,488.501C440.818,488.507 439.501,496.11 442.683,497.986C446.258,500.093 449.703,495.054 453.014,494.544C458.806,493.653 455.907,504.352 455.91,507.327C459.483,504.665 471.878,497.776 472.29,493.356C472.598,490.071 468.797,485.945 467.16,483.327M66.66,565.827C71.745,560.775 76.158,552.041 70.41,545.577C77.353,540.899 79.976,544.395 87.053,545.867C90.974,546.682 94.985,546.272 98.91,547.188C104.795,548.563 109.998,551.542 116.16,550.827C112.415,546.398 107.429,542.95 103.838,538.51C101.469,535.581 101.597,531.693 98.391,529.287C94.35,526.256 86.193,525.935 85.1,519.956C83.215,509.649 102.814,515.461 104.591,505.786C106.267,496.665 90.563,495.945 91.933,487.195C93.434,477.603 108.936,486.983 114.235,480.55C120.038,473.505 109.46,467.847 107.849,461.57C106.577,456.615 111.103,454.054 115.429,455.098C116.974,455.471 118.443,456.123 119.894,456.75C122.66,457.946 125.351,459.093 128.16,460.077M589.41,455.577C587.01,462.258 581.595,473.115 576,477.926C570.975,482.247 563.903,482.305 561.225,489.375C558.833,495.686 562.575,502.456 568.455,505.202C570.045,505.947 576.36,506.359 576.713,508.458C577.08,510.627 572.595,510.897 571.358,510.979C562.793,511.542 556.808,514.674 549.66,519.327C549,515.379 552.353,509.382 550.635,506.109C548.888,502.788 541.98,505.587 541.065,502.124C540.398,499.623 544.298,497.317 545.378,495.456C547.8,491.288 542.085,489.021 539.16,487.827M258.66,457.827L273.196,467.262L281.91,478.827M628.41,457.827C630.818,460.632 633.555,464.745 637.628,465.087C643.035,465.543 656.925,455.571 653.483,468.957C653.07,470.581 652.358,472.059 651.66,473.577L644.16,469.827C646.103,475.584 643.643,476.646 638.16,476.577C641.31,483.658 633.623,486.006 640.41,490.827L634.41,496.827M576.66,460.077C580.785,460.222 581.82,462.651 583.41,466.077M-140.34,502.077C-143.904,502.533 -148.916,503.628 -151.906,500.828C-157.699,495.403 -156.505,484.622 -162.74,478.504C-166.891,474.432 -175.156,475.422 -176.868,468.925C-178.831,461.478 -169.309,458.193 -164.853,463.666C-160.465,469.054 -159.427,474.811 -153.84,479.577M397.41,466.077C394.736,463.53 393.638,461.233 397.41,459.327M-240.09,460.077C-246.935,463.586 -243.839,466.139 -238.59,469.827C-239.59,470.298 -240.643,470.733 -241.604,471.294C-249.078,475.647 -239.781,476.019 -239.966,479.949C-240.122,483.276 -243.079,485.626 -243.09,489.327L-234.09,489.327C-240.166,496.014 -237.017,496.995 -229.59,498.327C-230.618,499.971 -234.485,504.81 -231.588,506.379C-229.996,507.243 -227.516,506.434 -226.307,508.048C-222.812,512.712 -226.107,516.788 -217.59,512.577C-217.303,519.405 -217.968,524.829 -210.09,518.577L-208.024,537.718L-213.881,540.899L-216.84,549.327C-222.492,545.719 -237.225,549.135 -235.193,558.174C-234.032,563.337 -227.849,562.84 -225.327,566.676C-223.255,569.826 -224.913,574.012 -223.219,577.348C-221.752,580.238 -218.585,581.679 -217.108,584.532C-215.671,587.31 -216.255,590.68 -214.965,593.576C-213.901,595.964 -211.505,598.527 -211.719,601.305C-212.099,606.221 -218.6,603.073 -221.301,603.434C-225.847,604.041 -231.81,612.781 -231.055,617.233C-230.427,620.939 -226.203,620.392 -223.566,619.542C-218.837,618.015 -208.324,610.37 -203.821,614.781C-198.964,619.537 -198.661,634 -203.561,638.753C-206.321,641.43 -215.743,647.242 -212.094,652.467C-210.66,654.52 -201.466,651.348 -198.09,652.827C-193.968,648.043 -183.849,648.231 -181.462,643.362C-178.896,638.127 -187.764,634.071 -190.59,631.077C-187.892,631.15 -183.686,632.138 -181.489,629.885C-179.829,628.18 -180.416,624.681 -178.165,623.554C-175.771,622.356 -172.744,624.766 -170.55,622.836C-168.916,621.399 -169.103,618.457 -166.957,617.51C-162.087,615.36 -159.378,620.072 -155.569,614.046C-150.913,606.682 -159.476,598.644 -161.772,591.329C-163.281,586.519 -160.856,581.838 -166.59,580.077C-168.037,578.123 -171.345,575.865 -171.583,573.306C-171.774,571.246 -170.2,569.501 -170.587,567.385C-172.01,559.586 -174.308,556.997 -171.84,548.577C-180.151,548.51 -177.456,557.224 -180.726,562.241C-183.148,565.956 -188.89,567.252 -190.615,571.48C-192.072,575.049 -186.643,576.384 -185.54,579.076C-184.336,582.016 -187.669,584.401 -187.298,587.301C-186.841,590.875 -180.543,591.544 -177.943,592.825C-175.506,594.025 -170.673,601.125 -167.923,599.858C-165.699,598.834 -167.527,595.05 -168.091,593.561C-169.912,588.745 -172.114,584.167 -167.34,580.827M11.91,525.327L14.16,504.327C15.693,505.732 20.219,511.543 22.685,509.889C25.748,507.836 21.941,493.86 22.41,490.077C37.88,498.175 32.751,510.043 27.097,523.266C25.952,525.945 19.118,538.488 23.152,540.303C25.733,541.464 28.16,537.327 29.28,535.691C32.851,530.471 40.637,521.293 41.975,515.218C44.026,505.916 37.387,493.082 41.503,484.121C43.593,479.571 53.336,485.812 54.366,481.518C55.684,476.027 35.489,463.19 52.289,463.89C53.869,463.956 55.371,464.267 56.91,464.577M656.16,465.327L659.91,471.327L665.91,465.327L668.16,473.577C674.768,468.935 673.845,476.811 680.91,476.577M395.91,466.077L391.41,468.327L396.66,472.077C394.013,476.206 393.723,478.896 395.91,483.327C403.694,477.503 405.012,480.123 408.66,487.827C416.756,482.966 419.455,487.536 423.66,494.577M594.66,466.827C591.315,471.849 586.988,477.293 585.473,483.327C584.46,487.35 586.32,491.29 585.735,495.319C585.03,500.154 581.468,503.402 578.16,506.577M151.41,467.577C154.928,474.377 163.604,478.332 169.41,483.327L176.786,470.763L191.91,469.827M305.16,468.327L307.41,478.827M-224.34,471.327C-219.286,470.223 -209.542,467.621 -205.197,471.613C-200.947,475.518 -200.12,482.507 -196.189,486.973C-192.166,491.544 -184.06,494.079 -181.089,499.134C-178.255,503.955 -182.152,513.104 -183.84,517.827M597.66,471.327C596.213,474.078 593.153,479.059 596.858,481.389C598.523,482.432 602.108,482.1 602.97,484.147C604.013,486.636 599.625,488.724 598.845,490.722C597.405,494.403 604.343,497.583 606.66,499.077L595.155,504.822L596.16,517.077C593.228,515.561 587.4,511.788 584.76,515.64C583.485,517.492 583.883,522.041 581.655,523.026C579.03,524.187 576.383,518.803 573.683,518.568C569.985,518.246 569.153,523.554 565.943,524.288C562.628,525.047 562.268,515.457 561.66,513.327M32.91,495.327C33.656,489.584 32.782,483.132 34.4,477.543C36.357,470.788 39.806,476.598 40.41,480.327M329.91,508.077C329.249,505.716 326.448,500.192 329.386,498.441C331.571,497.139 334.624,498.164 336.296,495.822C337.586,494.017 336.947,491.01 338.813,489.603C341.015,487.941 344.201,490.043 346.347,488.019C348.112,486.354 347.84,482.841 350.35,481.905C352.529,481.092 354.779,482.785 357,482.472C359.714,482.089 360.298,478.784 362.685,477.843C365.375,476.782 367.488,479.609 370.1,479.414C373.182,479.184 375.05,474.322 376.41,472.077C383.432,480.153 384.404,475.867 392.91,475.077M-137.34,474.327C-129.743,486.648 -121.315,499.572 -111.364,510.254C-107.748,514.135 -98.051,517.617 -98.042,523.797C-98.038,526.671 -101.215,528.79 -103.896,528.089C-106.476,527.414 -107.734,524.072 -110.382,523.791C-113.042,523.511 -118.328,529.413 -118.228,531.973C-118.123,534.638 -114.053,535.179 -113.035,537.426C-111.069,541.769 -118.131,545.788 -120.84,547.827L-116.34,553.077M613.41,477.327L613.41,483.327C615.428,483.372 617.445,483.417 619.448,483.744C631.605,485.733 624.645,498.118 631.283,504.933C635.025,508.778 641.475,503.214 644.693,506.626C646.223,508.248 645.57,512.043 645.66,514.077C650.813,510.156 653.07,510.936 654.66,517.077L659.91,510.327L660.66,510.327L664.41,517.077L667.41,508.827C675.563,513.614 673.118,503.801 680.91,507.327M-12.09,478.077C-16.139,486.94 -19.008,495.963 -24.09,504.327C-28.14,498.42 -24.22,493.602 -24.84,487.077C-28.48,491.024 -31.039,495.877 -36.84,496.077M141.66,478.077C139.024,485.696 135.625,490.128 131.538,496.905C130.092,499.303 128.236,503.973 124.65,503.341C119.698,502.47 123.663,491.646 117.893,492.783C114.701,493.413 114.218,497.858 113.02,500.239C111.557,503.145 109.278,504.15 106.41,505.077M512.16,478.077C520.335,481.587 524.333,487.76 525.6,496.354C526.088,499.689 519.743,508.975 525.728,510.65C528.623,511.461 535.118,501.98 538.41,500.577M-186.09,478.827L-195.09,487.827M282.66,479.577C284.624,483.83 285.291,490.243 289.488,492.888C295.575,496.724 302.25,491.667 305.961,499.904C308.175,504.818 311.963,514.303 308.78,519.402C305.958,523.922 300.149,524.428 299.352,530.601C298.367,538.249 306.408,538.506 308.491,544.355C311.529,552.884 305.33,561.248 296.91,559.077L290.542,568.773L285.66,583.077C292.291,583.922 303.479,576.728 297.66,589.077C299.432,589.59 301.139,590.086 303,590.118C320.096,590.413 303.701,577.09 302.91,570.327L306.66,573.327L308.91,568.077C313.263,573.33 314.007,583.696 321.754,585.591C326.14,586.662 331.843,585.065 335.699,582.993C338.088,581.71 341.326,578.737 344.275,579.72C346.195,580.359 343.673,585.985 347.16,588.327L341.16,592.077C342.997,598.119 347.134,594.63 351.239,597.496C353.158,598.835 354.322,603.409 357.359,602.365C360.778,601.189 359.998,594.144 364.432,594.873C369.508,595.707 372.607,604.722 374.91,608.577C378.659,606.23 380.494,603.873 381.763,599.544C382.444,597.219 383.293,592.551 386.377,592.242C392.935,591.582 389.576,605.01 394.823,606.819C399.985,608.597 404.235,599.207 407.128,596.375C411.22,592.369 417.235,595.152 420.578,592.179C421.858,591.042 418.426,579 418.41,576.327L409.41,578.577M492.66,500.577C485.932,494.61 491.332,496.335 493.035,490.719C493.987,487.588 490.672,484.748 494.91,483.327M170.91,484.077C178.424,491.666 186.74,498.915 194.246,506.631C197.18,509.648 200.879,514.926 205.362,515.522C208.883,515.99 211.492,512.56 213.66,510.327M612.66,484.077L620.685,496.285L617.423,511.563L631.125,518.151L636.66,533.577C637.86,531.362 638.948,529.093 640.178,526.877C648.9,511.145 655.725,538.573 665.108,537.54C670.89,536.902 669.548,531.149 672.068,527.512C674.085,524.599 677.73,524.59 680.91,524.577M43.41,670.827C42.347,664.275 33.752,655.106 40.505,649.377C43.858,646.531 53.014,649.884 54.666,645.679C55.686,643.083 52.391,640.298 50.699,638.858C44.372,633.473 39.909,626.759 33.66,621.327L31.644,630.516L26.486,631.913L22.9,637.479L11.91,632.577C9.439,625.083 9.194,617.83 8.486,610.077C8.087,605.712 5.34,601.821 5.411,597.411C5.468,593.959 7.471,590.81 8.309,587.517C10.58,578.601 13.658,571.936 23.91,573.327C24.437,568.208 21.239,561.436 14.78,563.578C12.241,564.42 9.596,568.626 6.62,566.956C3.477,565.192 4.457,558.393 3.66,555.327C2.618,555.702 1.577,556.173 0.475,556.346C-10.558,558.078 -1.438,549.195 -0.381,545.709C1.314,540.122 -3.636,535.092 5.16,534.327C4.481,520.842 9.984,509.786 3.031,496.609C0.862,492.498 -4.432,490.419 -7.59,487.077C3.124,484.667 20.161,491.437 14.16,504.327M417.66,486.327L411.459,499.434L395.91,498.327M-104.34,487.827C-106.33,488.622 -110.989,489.24 -112.12,491.24C-113.671,493.984 -108.945,497.343 -106.978,498.274C-101.978,500.641 -98.214,498.787 -95.34,494.577L-86.572,504.681L-64.59,524.577L-54.84,517.077M-225.09,544.827C-225.493,535.981 -233.699,537.357 -236.338,530.346C-238.637,524.235 -231.336,517.914 -238.246,512.863C-243.148,509.28 -250.459,514.521 -254.389,509.055C-257.908,504.162 -252.508,496.416 -255.09,490.077L-243.09,490.077M-277.59,505.827C-269.37,501.222 -265.671,490.977 -255.84,499.827M292.41,496.077C293.598,499.528 298.678,508.563 295.434,511.746C291.416,515.69 280.055,510.77 278.372,518.667C276.941,525.386 290.162,515.181 292.001,522.635C292.935,526.421 288.851,528.3 288.257,531.585C287.376,536.464 296.341,541.68 288.859,546.146C285.091,548.395 278.546,541.896 276.375,545.16C274.355,548.198 278.008,551.208 280.542,552.105C286.849,554.336 292.815,550.358 299.16,550.827L296.91,559.077M638.16,496.827L642.66,498.327L639.66,502.077M-118.59,499.077L-109.59,498.327M2.91,564.327C-5.782,564.975 -17.275,570.777 -25.53,569.388C-33.402,568.063 -41.158,558.925 -47.413,554.383C-50.346,552.253 -61.456,546.692 -60.895,542.332C-60.569,539.802 -55.112,540.297 -53.379,539.935C-48.634,538.947 -46.15,535.929 -43.59,532.077C-58.807,525.362 -45.577,516.057 -36.84,509.577C-36.989,515.551 -40.256,521.142 -37.59,526.827C-33.849,523.497 -31.882,519.446 -28.281,516.29C-24.622,513.084 -21.061,511.458 -18.036,507.31C-16.542,505.261 -13.302,499.545 -9.992,501.033C-5.732,502.95 -4.156,515.206 -2.34,519.327C1.628,514.842 2.141,509.312 2.91,503.577M422.91,589.827C424.842,586.872 427.793,578.721 432.459,580.188C435.467,581.134 438.244,587.874 441.782,586.26C445.769,584.439 443.18,577.143 447.584,575.872C451.32,574.794 456.35,581.207 459.594,578.358C462.795,575.547 457.535,569.626 460.443,566.258C463.325,562.919 468.851,567.511 471.609,564.406C474.578,561.066 467.981,556.031 469.341,552.176C470.729,548.242 477.818,549.968 478.245,545.439C478.688,540.807 470.862,539.997 471.629,535.176C472.2,531.579 478.755,529.65 477.9,525.853C476.738,520.72 465.936,525.231 467.068,517.674C467.588,514.199 476.025,499.735 480.585,502.337C483.765,504.147 484.635,509.516 487.665,511.959C489.825,513.7 497.955,516.633 497.993,511.27C498.007,508.359 492.645,507.791 491.91,504.327M245.16,550.827C234.801,534.51 237.19,511.751 257.91,504.643C267.065,501.504 275.867,504.25 284.16,508.077M507.66,508.827L521.91,502.827M499.41,507.327C501.21,504.066 503.01,504.126 506.16,505.827M599.91,503.577C603.36,510.201 610.523,518.094 612.3,525.379C614.715,535.265 612.705,549.014 617.858,557.916C620.768,562.944 625.493,561.099 629.16,558.327C626.67,551.142 635.355,541.458 636.66,533.577M-278.34,505.077L-277.59,505.827M-24.09,505.077L-27.84,514.077M127.41,505.077L125.16,516.327M425.91,505.827C432.683,506.313 438.222,505.518 442.52,511.985C445.755,516.852 441.432,524.06 445.181,527.935C447.039,529.857 450.336,529.92 452.75,530.706C454.553,531.293 456.868,532.658 458.765,531.693C461.548,530.276 463.292,525.318 465.66,523.077M456.66,507.327L471.66,507.327M388.41,538.077C386.993,541.845 381.204,545.049 380.852,548.735C380.492,552.506 389.658,552.495 387.953,555.542C384.342,561.996 372.809,556.599 367.41,558.366C363.019,559.804 354.39,569.222 349.992,563.691C347.765,560.889 349.795,557.853 351.965,555.819C356.75,551.337 361.077,548.864 361.447,541.797C361.678,537.392 362.766,532.45 360.81,528.327C358.811,524.111 350.913,518.352 353.45,513.109C354.762,510.398 357.926,510.219 360.282,511.575C364.735,514.138 366.982,519.497 371.685,521.697C377.205,524.28 383.407,522.75 389.16,525.327M529.41,511.827C537.465,511.143 533.603,516.789 535.088,521.799C535.95,524.71 539.295,525.268 540.713,527.696C543.008,531.616 536.34,535.451 533.91,537.327C535.388,539.595 538.958,543.906 536.873,546.752C534.458,550.057 528.593,546.009 526.988,550.576C522.45,563.437 539.43,575.223 534.66,587.577M126.66,514.827C138.775,511.185 147.254,517.044 147.66,529.827M-278.34,514.077C-271.323,514.085 -265.848,514.304 -259.59,517.827C-262.06,525.871 -249.77,524.087 -246.188,531.346C-244.199,535.377 -241.883,542.165 -244.676,546.325C-245.965,548.244 -249.031,548.836 -249.852,551.011C-250.741,553.365 -248.578,556.042 -248.671,558.467C-248.826,562.518 -252.401,565.517 -255.09,568.077C-256.191,567.204 -257.217,566.271 -258.532,565.717C-268.024,561.724 -264.858,574.778 -267.24,578.84C-269.371,582.474 -273.88,584.023 -277.59,585.327M341.91,514.827C337.991,522.262 322.614,521.685 321.785,530.632C320.861,540.614 335.316,538.341 338.626,545.172C340.575,549.195 337.651,553.998 338.874,558.327C342.219,570.161 357.759,583.245 370.238,583.715C376.292,583.942 375.416,574.544 381.389,575.795C385.277,576.609 384.571,581.669 387.691,583.344C392.123,585.725 403.956,582.138 408.66,580.827M487.41,514.827L488.783,525.742L484.56,533.968L490.508,541.491L491.175,550.248L500.565,552.873L505.995,559.141L514.643,555.585L524.91,559.827M210.66,516.327C225.158,519.04 231.188,530.2 224.91,544.077M513.66,553.077C513.165,542.244 499.425,541.134 500.348,529.828C501.023,521.533 510.518,515.96 517.995,519.414C522.45,521.469 524.64,525.522 526.41,529.827L533.91,523.827M568.41,524.577C575.018,534.516 578.31,546.365 584.168,556.749C586.508,560.902 590.918,564.453 594.93,559.795C604.088,549.162 593.723,527.34 605.91,518.577M-140.34,519.327C-136.867,522.999 -132.077,525.831 -129.39,530.202C-125.806,536.03 -125.029,542.673 -120.84,547.827M-205.59,529.077L-200.34,523.827L-197.34,535.077L-190.59,526.827L-186.09,538.077C-184.445,535.392 -176.625,527.961 -178.666,536.41C-179.648,540.477 -184.06,540.246 -186.286,543.04C-188.33,545.608 -185.276,548.472 -185.487,551.205C-185.917,556.792 -194.481,557.054 -187.581,562.791C-186.616,563.592 -185.585,564.324 -184.59,565.077M-95.34,523.827C-86.851,525.339 -70.109,536.619 -65.34,524.577M12.66,523.827L21.66,533.577M570.66,562.827C564.248,564.351 568.05,556.385 566.483,552.517C563.048,544.035 553.725,532.424 561.66,523.827M-36.84,526.827C-26.16,532.026 -13.612,537.391 -2.34,541.077M337.41,541.827L342.954,528.585L361.41,531.327M195.66,541.077C199.456,538.2 209.054,525.813 214.158,530.386C219.431,535.111 200.032,551.122 212.97,549.885C214.202,549.767 215.41,549.444 216.569,549.026C218.461,548.343 220.173,547.326 221.91,546.327M299.91,530.577C306.001,531.918 313.645,530.967 320.16,532.077M406.41,535.827C415.928,530.099 417.663,537.153 426.66,538.827C426.258,537.783 425.792,536.73 425.499,535.645C422.393,524.123 432.335,536.6 435.127,537.022C439.778,537.727 443.163,534.08 445.41,530.577M653.16,528.327C648.72,538.414 648.923,552.657 648.66,563.577M-170.34,529.077C-172.048,532.886 -173.395,535.375 -177.09,537.327M-84.09,529.077C-84.713,536.913 -80.042,534.708 -77.062,539.848C-75.769,542.078 -76.619,545.352 -75.84,547.827M16.41,529.827C12.833,533.78 10.52,537.745 5.16,534.327M-43.59,532.077L-25.998,540.246L-4.59,547.827M-277.59,548.577C-273.484,551.886 -260.576,558.691 -259.802,547.918C-259.446,542.952 -266.698,543.956 -267.092,540.26C-268.06,531.183 -250.163,534.483 -246.09,535.827M77.16,532.827C84.153,535.608 93.691,537.54 101.16,538.077M194.16,535.827L195.66,538.827M441.66,537.327C446.336,540.526 453.91,543.763 455.957,549.513C459.134,558.439 446.21,568.816 438.175,568.702C430.019,568.587 437.937,557.286 433.91,553.939C431.754,552.147 429.107,555.567 427.686,556.797C426.1,558.17 423.502,559.118 422.462,561C420.171,565.147 421.964,570.742 419.16,575.577M44.16,547.827C53.906,541.397 61.973,536.225 73.41,541.827M648.66,566.577C650.153,567.129 651.645,567.77 653.243,567.978C664.815,569.49 660.023,555.875 664.283,550.749C666.33,548.287 669.683,548.445 672.173,546.669C675.51,544.29 677.76,540.69 680.91,538.077M-162.09,538.827C-159.111,547.431 -158.603,557.561 -154.015,565.676C-152.693,568.014 -149.723,568.632 -148.38,571.006C-147.135,573.205 -147.14,575.859 -145.734,578.008C-140.253,586.381 -136.07,578.705 -133.59,573.327L-126.84,579.327C-127.491,589.987 -140.718,591.144 -143.638,601.829C-148.178,618.438 -127.018,630.345 -114.337,619.736C-102.539,609.866 -110.499,601.623 -113.07,590.427C-114.058,586.122 -112.522,580.555 -111.289,576.412C-109.279,569.655 -99.476,570.753 -98.364,565.064C-97.6,561.155 -104.322,561.551 -106.59,561.327L-102.84,556.077C-108.949,553.993 -116.256,564.536 -117.84,557.577M-126.09,578.577C-124.804,568.937 -130.862,563.333 -135.385,555.327C-137.228,552.064 -140.368,546.53 -138.336,542.742C-136.246,538.845 -133.465,543.746 -132.591,545.705C-128.423,555.044 -124.312,559.082 -121.59,547.827M-54.09,541.827C-46.668,547.347 -37.504,553.725 -28.549,556.498C-21.337,558.73 -14.611,558.53 -7.59,556.827M27.66,541.827L33.66,546.327M-163.59,542.577C-164.851,546.387 -166.444,550.348 -166.554,554.517C-166.685,559.536 -164.287,562.49 -168.09,566.577M-63.09,544.077C-74.116,549.276 -66.026,550.937 -62.34,559.077L-55.617,563.582L-49.186,563.613L-45.963,568.116L-37.59,570.327C-41.002,577.283 -35.568,575.044 -34.425,579.974C-33.841,582.491 -37.317,588.886 -31.341,587.702C-27.748,586.99 -26.678,582.285 -24.213,580.057C-16.971,573.512 -7.233,573.413 -0.84,580.827L8.16,569.577M407.91,544.077C415.402,552.261 421.587,550.755 431.16,551.577M192.66,544.827L191.91,545.577M557.16,580.827C556.313,590.164 557.738,599.997 549.66,606.327L551.873,583.077L550.028,569.868L559.41,566.577C556.448,563.668 547.02,552.269 552.938,548.079C554.903,546.687 558.615,547.296 560.91,547.077M-278.34,547.827L-277.59,548.577M-72.09,577.077C-69.283,582.303 -71.187,589.761 -67.72,594.283C-63.751,599.463 -55.377,596.869 -54.504,590.532C-53.745,585.02 -58.852,579.66 -59.34,574.077C-52.723,576.273 -46.381,581.409 -45.94,589.074C-45.25,601.074 -59.625,609.237 -69.703,603.209C-83.121,595.182 -72.556,585.102 -73.696,574.635C-74.664,565.739 -84.325,557.445 -90.84,552.327L-76.59,548.577M189.66,547.827C183.421,554.778 180.063,563.817 170.16,565.077L167.16,557.577C165.605,559.583 163.689,562.659 160.71,562.172C158.863,561.87 157.02,559.827 155.063,560.59C152.802,561.47 151.661,565.375 150.66,567.327C142.441,561.699 145.59,566.072 140.523,570.196C138.531,571.817 135.075,571.572 132.66,571.827L125.91,556.827M101.91,548.577L104.16,559.827M170.16,565.077C164.878,571.419 163.183,577.423 161.16,585.327C175.674,585.674 177.417,576.417 185.346,567.342C191.163,560.685 198.827,554.53 205.41,548.577M413.91,549.327C409.985,555.204 412.632,571.791 403.41,560.577C398.84,565.503 402.389,573.7 399.66,580.077M-277.59,550.077L-277.59,551.577M-102.84,555.327C-98.833,551.889 -95.984,551.247 -90.84,552.327M538.41,550.077L548.91,566.577M210.66,551.577C213.61,560.595 222.158,553.363 226.356,559.286C229.333,563.485 222.554,569.077 226.134,573.003C229.745,576.962 235.624,569.376 240.026,571.986C244.651,574.727 240.677,581.721 244.639,584.754C249.393,588.393 253.12,577.638 258.189,578.883C262.8,580.016 261.998,587.619 266.495,588.517C270.683,589.353 271.57,581.577 273.865,579.502C277.839,575.91 282.302,581.307 284.91,583.827M248.16,553.827C259.787,562.803 274.24,562.521 285.66,553.827M332.16,580.827C330.639,572.784 323.061,571.925 319.559,565.444C315.813,558.513 322.274,554.125 328.406,553.881C331.153,553.771 333.911,553.827 336.66,553.827M-278.34,555.327L-277.59,557.577M390.66,555.327C391.784,559.527 384.063,571.68 394.269,568.257C395.613,567.806 396.881,567.167 398.16,566.577M629.91,558.327C635.393,560.424 637.83,568.142 630.945,570.918C626.423,572.739 621.165,569.869 616.485,570.379C614.348,570.613 611.55,571.678 611.325,574.182C610.53,582.929 633.36,577.35 628.073,588.839C626.745,591.729 621.638,598.168 617.835,596.283C615.608,595.177 614.88,591.549 612.195,591.256C608.91,590.898 607.11,595.262 603.668,594.872C600.195,594.478 597.525,590.625 594.098,593.699C588.323,598.878 595.508,603.21 595.425,608.547C595.365,612.41 591.615,617.008 590.505,620.775C589.283,624.933 590.288,629.04 589.44,633.292C589.178,634.602 587.993,639.831 585.683,639.033C583.673,638.334 583.343,627.368 582.66,625.077C577.388,628.153 574.905,627.624 569.91,624.327C569.145,628.075 568.29,631.809 567.623,635.578C567.225,637.815 567.045,640.056 566.955,642.324C566.797,646.059 562.665,656.358 561.375,647.419C560.49,641.284 563.175,635.155 562.575,629.057C562.14,624.655 557.91,622.237 558.12,617.509C558.42,610.524 562.448,604.581 562.245,597.327C562.065,591.276 562.71,586.461 557.91,582.327M27.66,559.077L24.66,565.827M-62.34,559.827L-60.09,573.327M573.66,559.827C583.185,569.599 586.05,580.153 601.41,581.577C595.418,587.335 589.41,585.393 583.493,580.479C581.228,578.599 577.703,574.386 574.32,575.208C571.89,575.801 571.643,578.826 572.895,580.591C574.673,583.095 578.033,584.019 580.148,586.233C583.725,589.978 586.125,594.878 589.41,598.827M-234.09,564.327C-238.48,574.715 -249.044,581.406 -255.09,568.077M488.91,670.827C489.158,667.246 490.47,661.418 488.078,658.326C486.293,656.016 482.34,657.026 479.82,656.46C474.473,655.261 469.207,652.298 464.16,650.169C459.628,648.258 448.508,644.646 452.818,637.677C455.422,633.465 462.536,635.823 466.41,636.446C475.718,637.943 490.68,642.963 497.91,635.577C501.27,637.52 505.065,639.471 504.893,643.956C504.728,648.089 499.965,656.817 504.743,659.796C511.41,663.956 512.64,650.768 516.593,648.667C522.12,645.73 530.858,653.112 535.62,647.079C538.358,643.615 532.785,639.45 535.328,636.063C537.15,633.639 542.393,634.584 542.985,631.13C543.908,625.777 536.648,623.183 534.795,619.116C533.1,615.404 536.993,611.813 539.16,609.327C536.858,607.226 534.323,604.614 530.903,605.672C526.778,606.946 522.728,613.419 517.988,610.263C514.335,607.83 512.768,601.578 510.18,598.077C503.318,588.803 495.653,579.591 488.91,570.327C496.013,563.941 500.948,567.839 507.66,573.027C515.348,578.973 523.005,586.91 532.41,589.827M661.41,565.077C663.015,566.259 664.703,567.384 666.03,568.92C669.398,572.817 668.588,580.314 662.73,581.352C657.638,582.256 646.815,573.776 644.873,583.134C643.77,588.461 651.15,590.763 654.653,592.783C661.47,596.707 668.618,604.289 667.238,612.919C666.638,616.617 661.733,620.583 657.945,618.393C654.585,616.452 658.058,611.068 654.96,609.001C652.493,607.356 649.223,609.781 646.613,608.559C643.448,607.083 644.88,602.259 642.173,600.41C639.765,598.768 636.63,601.342 634.028,601.022C630.015,600.528 629.415,594.363 628.41,591.327M60.66,565.827C58.386,571.863 63.119,573.045 68.168,574.629C81.944,578.952 92.297,581.979 104.16,590.577C101.063,592.18 96.452,592.569 93.861,594.912C91.041,597.462 90.509,610.65 92.06,614.016C93.396,616.917 97.178,617.59 98.368,620.502C99.685,623.724 96.143,627.767 98.74,630.617C102.057,634.256 110.046,631.051 112.396,636.564C114.074,640.501 105.953,639.228 107.26,642.805C109.047,647.694 119.248,646.668 119.963,652.489C120.223,654.606 117.218,654.168 116.021,653.886C113.6,653.318 104.408,648.38 102.77,652.114C101.09,655.944 112.418,658.742 114.66,659.577M-105.84,670.827C-104.089,667.519 -97.208,661.92 -98.813,657.899C-100.524,653.613 -110.028,658.674 -113.34,658.681C-117.407,658.69 -123.496,658.828 -127.062,656.589C-131.881,653.563 -136.725,639.823 -135.737,634.322C-134.534,627.621 -130.156,636.248 -127.695,635.694C-125.565,635.214 -124.652,632.513 -122.271,632.433C-120.232,632.365 -117.797,635.25 -115.852,634.005C-114.103,632.886 -114.526,630.079 -112.608,629.003C-109.354,627.177 -106.399,630.691 -105.09,625.827C-98.17,628.864 -101.077,635.201 -91.59,634.077L-89.34,622.827C-81.958,627.162 -75.694,620.928 -77.26,612.322C-77.698,609.912 -81.093,610.482 -82.519,609.06C-86.166,605.427 -83.643,602.759 -90.09,601.077L-90.631,587.871L-87.937,583.105L-88.59,574.827C-83.047,575.442 -82.892,572.043 -82.59,567.327L-77.34,567.327M41.16,568.827L53.91,577.827M132.66,571.827L142.608,585.636L153.363,600.084L166.591,607.266L175.494,613.821L197.91,621.327C199.277,611.5 195.571,603.874 200.826,594.335C202.964,590.456 206.04,586.953 209.915,584.748C217.145,580.635 216.779,585.655 213.66,590.577L229.139,593.095L241.41,582.327M182.91,573.327C189.957,573.017 185.789,577.153 187.745,581.485C188.57,583.309 191.15,583.974 191.666,585.9C192.185,587.839 189.984,589.725 189.557,591.523C188.096,597.675 191.636,598.259 185.16,602.577M35.16,574.827L42.66,588.327C47.91,589.506 49.085,595.596 54.684,597.051C58.818,598.125 61.787,595.804 60.718,591.464C60.381,590.096 59.739,588.849 59.16,587.577M98.91,575.577C106.945,580.149 116.412,580.434 122.156,589.2C123.086,590.62 128.436,599.723 124.505,600.353C121.335,600.86 117.893,595.816 115.717,594.124C112.229,591.411 108.387,590.865 104.16,590.577M71.16,576.327C68.065,582.019 53.566,588.236 53.16,577.827M-214.59,585.327C-210.329,583.498 -200.452,576.503 -198.411,584.726C-196.837,591.062 -202.761,596.037 -197.18,602.028C-193.117,606.389 -182.381,602.344 -181.327,609.421C-180.611,614.228 -186.344,616.595 -188.844,619.75C-191.291,622.839 -191.274,626.654 -191.34,630.327M461.16,580.077L467.16,578.577L469.41,584.577L473.91,580.827L475.41,586.827L480.66,583.077L482.16,588.327C485.618,586.671 487.403,586.561 489.66,589.827L494.91,586.077L498.66,589.077L500.16,586.827M12.66,579.327C15.536,580.93 20.151,582.534 21.352,585.93C23.385,591.679 16.255,599.746 26.91,598.077C26.384,608.621 24.326,613.451 33.66,620.577M-146.34,580.077C-147.447,587.435 -147.64,589.673 -155.34,591.327C-152.725,595.43 -150.787,599.048 -156.84,600.327M-0.84,580.827C-3.354,583.122 -5.887,585.43 -5.737,589.152C-5.493,595.242 0.212,602.874 -6.802,607.509C-13.575,611.985 -22.128,606.87 -26.031,601.259C-27.42,599.262 -28.048,596.047 -30.27,594.775C-32.805,593.324 -35.938,594.889 -38.34,595.827C-34.742,601.791 -37.264,601.202 -40.281,605.834C-41.296,607.393 -41.002,609.929 -42.636,611.052C-44.44,612.294 -46.968,611.2 -48.643,612.861C-50.324,614.529 -50.94,617.703 -51.84,619.827C-56.877,615.173 -59.253,615.936 -63.09,621.327C-66.883,615.527 -68.859,614.733 -75.09,617.577L-77.34,615.327M-111.84,583.077C-103.816,582.291 -104.617,586.285 -102.09,592.827C-95.538,593.045 -98.697,608.213 -99.314,612.778C-99.575,614.711 -98.144,617.048 -99.037,618.857C-100.572,621.964 -104.519,620.895 -105.84,625.077M284.91,583.827C283.91,591.571 278.663,592.824 272.7,597.797C258.827,609.367 242.231,616.623 224.91,621.327C224.39,615.424 226.308,608.1 222.361,603.063C221.221,601.609 216.731,597.858 214.83,600.168C213.632,601.623 216.168,604.596 216.76,605.857C218.788,610.174 217.481,617.346 211.469,617.276C207.331,617.229 205.421,612.802 204.991,609.301C204.104,602.086 206.932,595.163 212.91,591.327M-277.59,616.827C-272.25,618.216 -265.392,622.93 -259.816,621.963C-245.144,619.416 -258.033,596.126 -261.09,589.077C-257.687,587.481 -254.343,586.252 -250.587,585.708C-247.872,585.316 -245.085,585.086 -242.342,585.078C-219.627,585.018 -244.957,607.702 -233.34,616.827M-128.34,588.327C-129.363,595.895 -137.95,600.325 -135.787,608.526C-133.694,616.461 -123.455,619.187 -118.195,612.574C-114.424,607.836 -114.343,599.338 -114.09,593.577M-30.84,589.077L-30.84,592.827M340.41,591.327C337.22,590.711 325.774,589.26 326.697,595.331C327.322,599.438 330.992,601.965 331.41,606.327L325.41,607.077C323.918,603.223 322.616,598.746 318.978,596.181C311.701,591.048 300.224,597.039 293.91,601.077L291.66,598.077L293.16,590.577L297.66,589.077M-87.84,592.077L-96.09,593.577M-178.59,592.827L-184.59,603.327M27.66,597.327C37.516,592.332 33.152,601.483 38.96,604.933C43.855,607.841 46.265,598.827 47.16,595.827M410.16,593.577C412.913,599.222 406.004,619.575 417.676,614.344C419.219,613.653 420.654,612.734 422.117,611.892C424.332,610.619 426.56,609.546 428.91,608.577M308.16,595.077C311.341,598.608 320.995,608.534 311.7,611.544C306.323,613.285 301.488,607.716 296.184,607.692C282.816,607.63 291.968,625.307 295.371,630.682C299.684,637.493 300.916,628.769 304.58,627.691C307.123,626.943 309.744,629.252 312.254,627.889C314.185,626.841 314.758,623.791 316.969,623.251C319.424,622.65 322.428,626.026 324.206,627.29C329.901,631.342 339.357,635.028 338.91,643.077C326.773,638.245 303.542,636.618 296.16,650.577M191.91,620.577C192.208,622.713 192.407,624.888 194.354,626.386C196.338,627.912 201.965,628.662 201.203,632.247C200.399,636.033 193.898,634.602 191.243,635.213C186.553,636.291 179.768,639.733 176.681,643.437C173.834,646.851 170.762,654.224 165.133,652.941C155.798,650.814 165.356,636.039 159.114,630.723C150.315,623.229 144.612,640.402 136.781,635.607C129.128,630.92 140.068,615.806 139.242,608.787C138.93,606.132 134.122,601.094 136.886,598.731C139.468,596.525 143.46,600.444 145.634,601.553C148.603,603.067 150.829,602.387 153.66,601.077M497.91,634.827C496.095,625.682 481.118,617.722 473.925,612.132C470.764,609.672 464.726,605.495 467.379,600.747C470.315,595.493 477.473,599.246 481.41,600.93C491.07,605.064 504.353,614.833 514.41,608.577M117.66,597.327C114.563,600.736 104.234,612.421 114.144,614.658C118.484,615.638 122.603,612.059 126.657,611.128C130.737,610.191 133.857,611.821 137.16,613.827M276.66,597.327C276.477,599.773 276.065,601.854 275.047,604.116C274.499,605.333 273.825,606.502 273.375,607.764C272.527,610.138 272.834,614.191 276.416,613.309C282.056,611.922 282.188,605.349 288.66,610.077M605.91,597.327C612.195,604.574 617.76,612.964 621.113,622.073C622.223,625.09 623.745,631.587 618.765,632.149C612.278,632.882 609.57,615.135 602.085,620.646C598.178,623.521 601.56,630.807 601.14,634.826C600.465,641.116 596.07,645.09 591.66,649.077C586.17,646.682 584.558,649.983 579.458,651.369C575.805,652.363 571.98,651.444 568.41,650.577M98.16,633.327L83.91,632.577C87.85,623.321 77.024,621.736 71.122,626.658C66.943,630.142 67.687,638.285 65.16,643.077C59.888,637.404 56.269,631.409 53.16,624.327C42.714,622.924 49.241,619.199 52.231,614.556C53.789,612.139 53.198,608.311 56.069,606.813C58.53,605.528 61.527,606.751 64.136,606.04C67.067,605.241 68.972,602.203 72,601.769C75.024,601.336 77.158,604.239 79.756,605.236C83.217,606.565 87.122,605.94 90.66,607.077M359.91,602.577C360.638,603.829 361.385,604.995 361.832,606.402C362.868,609.655 361.406,614.491 357.086,613.32C353.761,612.418 344.519,601.634 341.677,607.489C339.065,612.872 352.595,620.836 345.944,625.689C339.938,630.07 331.459,618.895 326.91,626.577M35.16,604.827C35.932,611.472 39.489,615.407 44.16,619.827M185.91,606.327L188.91,610.077L178.41,611.577M-0.84,608.577C-0.007,616.543 2.073,624.768 -0.408,632.577C-1.168,634.968 -4.228,640.815 -2.02,643.107C1.241,646.489 9.501,634.674 11.16,632.577M394.41,608.577L389.204,617.719L396.214,625.276L388.623,630.219L375.664,633.327L360.66,640.077C356.174,649.518 362.378,657.944 367.41,666.327M539.91,622.827C542.91,622.016 547.613,622.506 550.11,620.535C553.92,617.523 550.665,612.093 557.16,612.327M646.41,610.827C644.723,614.706 636.06,616.761 637.103,621.105C638.423,626.575 650.43,625.599 654.075,630.621C661.62,641.021 648.645,649.818 639.66,643.077C644.183,641.695 650.205,634.608 641.738,633.936C631.928,633.158 623.46,640.32 617.16,646.827L610.41,641.577C605.235,647.723 599.76,654.29 591.66,649.827M431.91,611.577C431.516,621.857 437.92,619.056 442.41,613.077C448.439,618.465 459.051,615.603 466.908,616.836C469.402,617.227 470.939,619.809 473.46,620.016C475.823,620.21 477.593,618.264 479.16,616.827M-2.34,670.827C-2.395,664.488 -2.893,658.41 -7.687,653.664C-11.945,649.449 -17.533,648.114 -21.09,643.077C-16.161,642.208 -12.341,641.878 -9.09,637.827C-12.862,636.392 -20.671,636.541 -23.191,633.254C-25.199,630.633 -19.729,617.158 -16.446,616.773C-12.229,616.28 -13.219,625.508 -11.156,627.618C-7.678,631.178 -1.952,622.751 -0.09,620.577M-155.34,617.577C-148.276,617.665 -150.079,622.402 -149.34,628.077C-144.989,626.345 -141.855,626.529 -142.59,631.827L-137.34,634.077M-56.34,670.827C-58.394,665.703 -66.875,665.343 -67.883,660.93C-68.964,656.198 -57.633,658.764 -56.741,654.492C-55.886,650.395 -63.868,644.905 -65.34,640.827C-61.71,641.205 -51.53,645.445 -49.687,640.86C-48.473,637.842 -54.382,629.757 -51.211,627.988C-47.26,625.785 -43.195,633.863 -38.842,632.04C-35.274,630.546 -37.849,611.409 -30.739,621.599C-29.977,622.689 -29.334,623.862 -28.675,625.008C-27.641,626.802 -26.626,628.566 -25.59,630.327M430.41,670.827C429.742,669.57 428.983,668.352 428.647,666.951C426.036,656.073 445.171,663.041 445.171,655.269C445.171,649.855 432.365,651.917 430.214,646.992C427.197,640.083 441.335,639.047 440.745,632.888C440.046,625.585 419.254,636.319 424.083,624.303C424.594,623.033 425.367,621.873 426.179,620.781C427.448,619.071 428.933,617.584 430.41,616.077M666.66,618.327C667.275,621.672 664.883,627.16 666.473,629.938C668.153,632.872 673.523,630.461 674.67,634.083C676.905,641.12 669.008,645.399 680.91,646.827M240.66,621.327C239.031,625.696 230.642,626.37 230.617,630.42C230.588,635.196 239.769,632.907 242.56,634.281C249.504,637.701 254.084,647.616 258.66,653.577C261.732,652.006 265.151,650.36 265.913,646.646C267.04,641.148 262.13,634.566 266.369,629.7C273.037,622.044 283.75,634.554 290.16,637.077L294.66,631.827M104.16,630.327C108.525,624.02 119.164,620.432 123.863,629.258C126.608,634.413 124.013,641.663 130.003,645.126C134.804,647.901 139.575,644.265 144.517,644.658C149.593,645.06 153.312,651.74 155.338,655.806C159.707,664.569 147.034,662.193 148.41,670.827M-169.59,625.077C-167.559,627.635 -158.597,633.42 -158.336,636.118C-157.649,643.237 -170.516,646.086 -168.925,654.691C-168.034,659.503 -154.938,660.65 -152.185,657.234C-146.612,650.321 -150.888,637.837 -142.59,631.827M389.16,631.077C397.031,635.557 400.799,640.547 405.764,647.92C407.284,650.178 410.276,652.661 409.568,655.699C408.356,660.911 401.174,665.349 398.91,670.827M-236.34,670.827C-236.512,668.572 -237.245,663.95 -234.386,662.938C-231.933,662.07 -227.338,665.72 -226.607,661.242C-225.505,654.492 -233.953,649.171 -233.74,642.336C-233.294,628.013 -215.206,636.805 -208.59,640.077M-76.59,670.827C-77.934,668.331 -81.01,666.093 -81.784,663.444C-83.813,656.509 -78.38,655.491 -87.84,652.077C-86.897,650.462 -84.746,647.684 -85.98,645.7C-87.34,643.511 -92.141,644.211 -91.369,640.602C-90.644,637.215 -86.953,636.225 -84.048,635.63C-75.065,633.788 -72.436,635.157 -65.34,640.827M-277.59,642.327C-272.288,640.132 -264.373,634.827 -258.471,635.94C-252.344,637.094 -236.974,650.829 -251.34,648.327C-255.142,655.989 -258.135,662.288 -255.84,670.827M-91.59,634.077L-90.09,635.577M148.41,644.577C152.152,637.104 153.579,635.076 160.41,640.827M-37.59,635.577C-38.194,641.784 -47.067,649.084 -45.036,655.05C-43.354,659.994 -37.636,648.454 -34.489,651.299C-31.543,653.961 -35.992,666.834 -36.09,670.827M30.66,670.827C28.735,664.2 18.708,665.257 17.617,659.952C16.695,655.469 28.019,653.103 25.703,649.155C23.325,645.102 7.354,650.876 14.883,640.455C15.794,639.195 16.86,638.166 17.91,637.077M290.91,637.827C288.809,642.537 284.738,639.833 282.11,642.993C280.456,644.982 281.849,648.074 279.968,650.077C278.299,651.855 274.792,651.489 273.671,653.795C272.721,655.751 274.111,658.004 273.677,660.055C272.956,663.46 268.149,664.495 265.41,665.577L268.41,670.827M238.41,670.827L244.254,663.218L247.41,651.327C240.911,648.115 239.047,643.597 245.16,638.577M185.91,639.327C191.358,645.302 189.26,652.828 193.695,658.932C197.762,664.528 206.507,663.225 206.91,670.827M575.16,670.827C576.308,667.664 578.243,663.408 575.183,660.664C570.15,656.158 562.808,662.247 556.808,656.664C554.303,654.326 546.99,645.028 551.498,641.683C554.28,639.62 558.225,643.764 560.16,645.327M197.16,661.827C203.308,658.221 204.413,644.09 212.14,644.363C220.806,644.67 219.25,662.328 228.461,659.816C233.959,658.316 232.841,651.173 233.898,646.929C234.918,642.829 237.723,641.257 241.41,640.077M65.91,642.327C73.928,647.317 80.118,641.067 88.04,643.201C93.09,644.561 92.427,651.56 89.197,654.411C81.725,661.006 63.796,659.382 63.66,670.827M668.91,670.827C667.38,658.904 655.26,650.199 643.463,654.921C638.355,656.967 634.215,663.509 628.043,662.009C623.948,661.016 624.863,656.529 626.145,653.583C628.733,647.619 633.615,644.595 639.66,643.077M-164.34,670.827C-160.246,664.35 -153.133,668.316 -147.724,664.225C-142.608,660.354 -146.016,648.428 -141.879,646.131C-139.744,644.946 -138.734,651.05 -138.561,652.107C-137.934,655.952 -138.617,660.895 -135.637,663.874C-130.519,668.991 -122.377,664.673 -117.09,670.827M338.91,643.827C336.468,644.911 318.352,647.232 322.988,652.202C325.14,654.51 337.991,655.217 336.954,659.304C336.318,661.807 331.968,662.729 329.955,663.558C326.151,665.122 323.999,667.051 322.41,670.827M77.16,645.327L82.41,650.577C73.923,651.917 63.292,653.46 56.91,646.827M617.16,647.577C615.218,651.656 615.18,659.678 612.48,662.803C609.323,666.45 602.243,655.554 601.613,664.233C601.545,665.122 601.673,666.039 601.755,666.921C601.875,668.225 602.025,669.525 602.16,670.827M174.66,648.327C176.601,649.056 179.948,649.719 181.035,651.708C183.573,656.35 178.741,658.962 184.41,663.327L176.16,670.827M527.91,650.577L533.738,661.971L525.66,670.827M-198.09,653.577C-199.937,658.992 -198.552,662.045 -193.59,664.827L-195.84,670.827M299.16,653.577L308.16,664.077C297.996,666.513 288.566,649.875 283.419,664.773C282.735,666.75 282.335,668.792 281.91,670.827M-177.09,670.827C-178.741,668.054 -186.749,660.529 -183.329,657.227C-180.6,654.591 -173.502,658.325 -170.34,658.827M116.91,661.827C123.401,664.758 130.314,661.804 130.41,670.827M-278.34,670.827L-277.59,670.827\\\" style=\\\"fill:none;fill-rule:nonzero;stroke:rgb(190,180,164);stroke-width:0.75px;\\\"/>\\n\" +\n                      \"        </g>\\n\" +\n                      \"    </g>\\n\" +\n                      \"</svg>\\n\",\n    test7: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n           \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n           \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 576 384\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n           \"    <path d=\\\"M72,115.092C91.089,93.617 84.844,94.919 109.932,87.284C135.02,79.648 116.234,79.422 149.999,84.33C183.764,89.239 119.186,100.687 109.932,87.284\\\" style=\\\"fill:none;stroke:black;stroke-width:0.67px;\\\"/>\\n\" +\n           \"</svg>\\n\",\n    test8:\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n          \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n          \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"0 0 100 100\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n          \"    <path d=\\\"M0,0L100,0\\\" style=\\\"fill:none;stroke:black;stroke-width:0.67px;\\\"/>\\n\" +\n          \"    <path d=\\\"M0,100L100 100\\\" style=\\\"fill:none;stroke:black;stroke-width:0.67px;\\\"/>\\n\" +\n          \"</svg>\\n\",\n    testNear: \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n              \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n              \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"119.3331615676731 163.8300018310547 6.890835368972176 0.17475112699366946\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n              \"<path d=\\\"M 126.22399693664528 163.8300018310547 L126.10914968049573,163.8300018310547\\n\" +\n              \"L124.84582986285083,163.8300018310547\\n\" +\n              \"L124.44386446632748,163.8300018310547\\n\" +\n              \"L124.32901721017794,163.8300018310547\\n\" +\n              \"L123.3528155329069,163.8300018310547\\n\" +\n              \"L123.1231210206078,163.8300018310547\\n\" +\n              \"L119.90739784842077,163.8300018310547\\n\" +\n              \"L119.3331615676731,163.8300018310547\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n              \"<path d=\\\"M 126.22399693664528 163.8300018310547 C123.93370897622518 164.00475295804836 121.6294505375227 163.8849005102552 119.3331615676731 163.8300018310547\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/></svg>\",\n    'web2':\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\" +\n           \"<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n\" +\n           \"<svg width=\\\"100%\\\" height=\\\"100%\\\" viewBox=\\\"-185.57029549828803 -212.56343322191506 1241.9189463389403 1119.3891093407733\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xml:space=\\\"preserve\\\" xmlns:serif=\\\"http://www.serif.com/\\\" style=\\\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\\\">\\n\" +\n           \"<path d=\\\"M29.737289882236237,93.24999728298587 C30.414924151841905 72.40004019478322 31.302286957972747 49.8301266480219 32.28603712331532 27.10233847090796\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M350.7361425745785,23.112017777245796 L357.3111237914424,40.722766289232624\\n\" +\n           \"C360.8662763062083 49.983188031344284 364.5298740737044 59.20310775020472 368.28019604783884 68.39052166792716\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M141.831828771418,282.1837634190045 C136.08406270496639 285.31503326330335 130.26825000264768 288.30311252957586 124.35892278824495 291.0928044809401\\n\" +\n           \"C112.82413850540732 296.5381781600499 100.8188372856874 301.26846063011897 88.52554797702079 304.9408449269506\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M185.204997554942,698.0931473043189 C211.10290159529717 694.9253741232178 242.3317190040459 690.3480427834912 275.4406790470684 685.1062736120488\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M185.204997554942,698.0931473043189 C185.204997554942 698.0931473043189 178.62668781396314 753.2903543604787 198.38026890571757 763.5315095216476\\n\" +\n           \"C229.32098109708775 779.6000327649188 279.7432573283037 733.0987146120707 302.88273934252527 759.1772399201141\\n\" +\n           \"C331.430878410443 791.3492284834258 308.8909314811781 888.0733199941657 308.8909314811781 888.0733199941657\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M308.8909314811781,888.0733199941657 C339.79895856747845 885.0221380567538 370.63694952151945 882.1141465502249 401.2359103136687 880.0077705607579\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M40.22726631794497,698.8010262088184 C40.22726631794497 698.8010262088184 63.4899514358308 700.0561237710717 92.8263054694162 700.6472612712427\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M92.8263054694162,700.6472612712427 C123.17277518464715 701.2580730764065 160.03708707029665 701.1562210725821 184.28294677054186 698.2056787969462\\n\" +\n           \"L185.204997554942,698.0931473043189\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M92.8263054694162,700.6472612712427 C92.8263054694162 700.6472612712427 83.4825107382371 797.6353062455923 113.47201167581147 828.8455535446526\\n\" +\n           \"C137.85287141000916 854.2539843195705 189.40547116845187 813.1259266056679 219.0630495130025 832.1112557458027\\n\" +\n           \"C237.1967201645177 843.7211433067337 219.47345599192522 896.7054278575173 219.47345599192522 896.7054278575173\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M3.401200224442455,898.9312869405398 C73.39612291325247 906.8256761188582 146.17324561318756 903.1497803002956 219.47345599192522 896.7054278575173\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M219.47345599192522,896.7054278575173 C249.24344675901767 894.0881642787922 279.09972575195866 891.0142204422982 308.8909314811781 888.0733199941657\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M40.22726631794497,698.8010262088184 C39.14791337512004 715.3695160603671 37.38375400448602 731.8966671007479 35.09421742048562 748.2973537898381\\n\" +\n           \"C32.63719481941082 765.896819026122 28.08096275827168 789.3722797514436 23.17392598591732 812.5440898415837\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M23.17392598591732,812.5440898415837 C13.912564080442431 856.2786738378248 3.401200224442455 898.9312869405398 3.401200224442455 898.9312869405398\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-11.224195082591784,318.17579810261645 C-33.96717291072221 319.8302130871118 -57.326617626414766 321.2164557294272 -77.7052099920251 322.30543040011594\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-77.7052099920251,322.30543040011594 C-112.20371755810399 324.1489153039393 -138.16602952348882 325.1411255927444 -138.16602952348882 325.1411255927444\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-138.16602952348882,325.1411255927444 C-137.40908691049603 364.98045197575203 -136.36088830181737 404.82647642692774 -135.56391505393356 444.6706802934321\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-135.56391505393356,444.6706802934321 L-64.40434410557465,444.2170763918832\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-135.56391505393356,444.6706802934321 C-134.91109132975097 477.3087478647708 -134.4268380768898 509.9455937813535 -134.40932367231298 542.5765357702599\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-56.35767389845798,541.226732931322 L-134.40932367231298,542.5765357702599\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-134.40932367231298,542.5765357702599 C-134.40162735489355 557.8127152093882 -134.4956685092238 573.0476045227576 -134.72178808945026 588.2807262933877\\n\" +\n           \"C-134.98832354148905 606.2365662654558 -138.91193056962084 626.2483740701492 -144.3779185638067 647.084708800672\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-144.3779185638067,647.084708800672 L-58.13721039464147,662.5753136961207\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-144.3779185638067,647.084708800672 C-154.68859121376707 686.4015021691004 -170.4919307782361 728.6551211444053 -177.57451242507645 765.5672192732169\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M23.17392598591732,812.5440898415837 C23.17392598591732 812.5440898415837 -12.119700046412568 818.760945915894 -23.688391714075344 808.1634889775968\\n\" +\n           \"C-41.68945450347313 791.6644972458206 -51.89198908243257 766.1998609141069 -55.09977295847034 741.9190439496623\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-177.57451242507645,765.5672192732169 L-114.89381816163684,753.4644456416951\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-114.89381816163684,753.4644456416951 L-55.09977295847034,741.9190439496623\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-114.89381816163684,753.4644456416951 C-114.89381816163684 753.4644456416951 -94.00829739300009 787.0250664880139 -90.09009219588688 805.9856381366008\\n\" +\n           \"C-85.05406322334878 830.3535480916547 -88.61607341037757 880.6196577196887 -88.61607341037757 880.6196577196887\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-177.57451242507645,765.5672192732169 C-185.57029549828803 807.2353705600478 -182.45331686233172 842.09710399321 -147.77827399183843 858.244826894143\\n\" +\n           \"C-128.438044793553 867.2513236734219 -108.69708875894428 874.6307999580065 -88.61607341037757 880.6196577196887\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-88.61607341037757,880.6196577196887 C-58.63436649242967 889.5611258857697 -27.894640844605256 895.4027473564457 3.401200224442455 898.9312869405398\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-55.09977295847034,741.9190439496623 L-55.25853961264058,740.6715051052628\\n\" +\n           \"C-57.69418621949682 720.7790927794489 -58.43518537436059 700.7886249725202 -58.38018448515929 680.7483687290525\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-58.38018448515929,680.7483687290525 C-58.363571355032995 674.6947834497765 -58.274322871279225 668.6366549410634 -58.13721039464147 662.5753136961207\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M41.43374209738412,662.2942817495689 C41.44237180698603 674.463027253838 41.01921046660342 686.6431564432877 40.22726631794497 698.8010262088184\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-58.38018448515929,680.7483687290525 L41.43374209738412,662.2942817495689\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-58.13721039464147,662.5753136961207 C-57.64289558868312 640.7249824674091 -56.5265423978497 618.8328998724987 -55.94873596441227 596.9613997732632\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-55.94873596441227,596.9613997732632 C-55.45916456382386 578.4302754301851 -55.356183955436215 559.9139257942813 -56.34564016643074 541.4502606960395\\n\" +\n           \"L-56.35767389845798,541.226732931322\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-55.94873596441227,596.9613997732632 L37.413459018774695,590.6487996635535\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-56.35767389845798,541.226732931322 C-57.23516578756688 524.980961556115 -58.76961201374827 505.2035046550902 -60.627962876828654 484.2473062093746\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-60.627962876828654,484.2473062093746 C-61.78719902803332 471.17272136014003 -63.073282866348876 457.636491127275 -64.40434410557465 444.2170763918832\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-60.627962876828654,484.2473062093746 L23.47159582351707,470.64345022723126\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-64.40434410557465,444.2170763918832 C-66.22449896800164 425.853129409382 -68.12964286272408 407.70986836831935 -69.9063503380514 391.29605938468046\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-69.9063503380514,391.29605938468046 C-74.16700512545637 351.9371232028477 -77.7052099920251 322.30543040011594 -77.7052099920251 322.30543040011594\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-11.224195082591784,318.17579810261645 C-11.224195082591784 318.17579810261645 0.7763668143428593 354.544162202456 8.731913682799643 385.904962862704\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-69.9063503380514,391.29605938468046 L8.731913682799643,385.904962862704\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M8.731913682799643,385.904962862704 C11.145112842530061 395.41750713478484 13.186394165405027 404.46963932947403 14.40856049344784 411.9082199683856\\n\" +\n           \"L15.189147617404242,416.6738844343941\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M15.189147617404242,416.6738844343941 C18.116436902992003 434.631326764988 20.889371314240048 452.6226278095582 23.47159582351707 470.64345022723126\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M163.8968319645601,476.5661353642158 C177.18557869052572 451.52135569237845 221.3745955345565 415.59194711256777 221.3745955345565 415.59194711256777\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M102.12770996976396,451.68852550519404 L163.8968319645601,476.5661353642158\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M88.52554797702079,304.9408449269506 C79.71068132608049 307.5739986085376 70.7477815671151 309.6633395673308 61.704115941521636 311.08253712998425\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M102.12770996976396,451.68852550519404 C102.12770996976396 451.68852550519404 121.87477894672726 425.9374612912117 141.14765364904696 403.9484633524667\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M141.14765364904696,403.9484633524667 C148.29336523586852 395.79453388199954 155.37396258274828 388.1574918474427 161.36010307695545 382.5399027704994\\n\" +\n           \"C168.99755366271518 375.37605807931357 189.87801790320452 369.364530523501 189.87801790320452 369.364530523501\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M15.189147617404242,416.6738844343941 L58.43147395251155,434.08979855491424\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M58.43147395251155,434.08979855491424 L102.12770996976396,451.68852550519404\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M58.43147395251155,434.08979855491424 C58.43147395251155 434.08979855491424 62.00819502436852 398.25839335750084 69.92931566047491 382.5329193874532\\n\" +\n           \"C74.09415384656657 374.2337014972186 92.54738318173985 366.2716441005405 92.54738318173985 366.2716441005405\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M61.704115941521636,311.08253712998425 C61.704115941521636 311.08253712998425 76.02057268295006 347.3358210769872 88.46105257786554 361.8776761837238\\n\" +\n           \"C89.6735584072099 363.29414117775315 91.04735403152367 364.7650467102901 92.54738318173985 366.2716441005405\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M92.54738318173985,366.2716441005405 C109.12621178913312 382.92612881542243 141.14765364904696 403.9484633524667 141.14765364904696 403.9484633524667\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M164.75532948723944,533.48928481689 C164.75532948723944 533.48928481689 203.60430349518646 527.3606830099504 217.9814968972512 515.3310247828974\\n\" +\n           \"C223.26954778788456 510.9066867210451 228.84884182184936 504.1635046124605 234.13995749398137 496.7503956741623\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M234.13995749398137,496.7503956741623 C247.7076750980623 477.7436197495238 259.3802278220828 454.33048305996164 259.3802278220828 454.33048305996164\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M275.4406790470684,685.1062736120488 C296.49281368887824 681.7743746783086 318.305900402209 678.1735987321014 339.99096019007516 674.495856608085\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M339.99096019007516,674.495856608085 C359.61726656321633 671.1672700307156 379.1387489214868 667.7756662454744 397.89694281672143 664.4631932778391\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M275.4406790470684,685.1062736120488 C275.4406790470684 685.1062736120488 271.47544213864666 636.0375544292286 257.16443853429104 617.6591485245474\\n\" +\n           \"C252.33582806252787 611.4779879312806 246.48311994721578 606.4120946339063 240.07695421415798 601.9386719187427\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M240.07695421415798,601.9386719187427 C221.57283892442837 589.0168234651093 198.45066053905668 581.03840734161 182.05420140002474 565.402913058698\\n\" +\n           \"C173.32537707103222 557.0791962284212 167.8792716472177 545.333716238329 164.75532948723944 533.48928481689\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M240.07695421415798,601.9386719187427 C240.07695421415798 601.9386719187427 277.86625795294503 572.5751042155022 299.61703714137514 563.2351078510999\\n\" +\n           \"L305.573962783551,560.9048156415378\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M349.43902088835694,466.97434642008693 C349.43902088835694 466.97434642008693 364.18058824957944 503.67479985137214 376.7243219011319 543.2630145867516\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M234.13995749398137,496.7503956741623 C234.13995749398137 496.7503956741623 283.17525412849574 520.4385289291139 296.3500518762345 542.5671836644174\\n\" +\n           \"C299.50421547823123 547.8659594295254 302.59154893169386 554.0920830689455 305.573962783551 560.9048156415378\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M305.573962783551,560.9048156415378 C325.0042973487175 605.2610117633085 339.99096019007516 674.495856608085 339.99096019007516 674.495856608085\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M305.573962783551,560.9048156415378 C331.6310171548479 551.3938919720205 376.7243219011319 543.2630145867516 376.7243219011319 543.2630145867516\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M165.9909613456415,670.0316624572256 C165.9909613456415 670.0316624572256 180.647727050851 670.1340509176315 184.22889270073335 675.3575500905913\\n\" +\n           \"C188.5116729618923 681.6183656255313 185.204997554942 698.0931473043189 185.204997554942 698.0931473043189\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M116.49167855706109,644.0694615014016 C115.6447981044249 655.2798233415991 119.17082818220192 668.3143918528019 127.6352199203436 675.3346824453417\\n\" +\n           \"C136.33221823180642 682.5478948436023 153.0447827380603 686.2366787604763 161.37446905690365 678.602247638141\\n\" +\n           \"C163.54132906479256 676.6162492645229 165.01269366302836 673.5687426746196 165.9909613456415 670.0316624572256\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M116.49167855706109,644.0694615014016 C116.49167855706109 644.0694615014016 77.82037911407099 632.3044206592895 72.1064504612417 645.9662302802392\\n\" +\n           \"C64.58475890037313 663.9481500466394 92.8263054694162 700.6472612712427 92.8263054694162 700.6472612712427\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M138.65949725272122,619.7525606195001 C137.4731018919483 619.6567273334908 136.33949138165826 619.6743739597198 135.27980383835776 619.8282230385558\\n\" +\n           \"C125.85163531767759 621.1970369414737 118.05697004484745 632.1557622757621 116.75547973471396 641.5934598831128\\n\" +\n           \"L116.49167855706109,644.0694615014016\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M164.75532948723944,533.48928481689 L163.680957149826,528.9431377037562\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M163.680957149826,528.9431377037562 L163.55025560387514,528.3900813422742\\n\" +\n           \"C160.04800154005127 511.69871705038105 155.77105002753947 492.4015930284638 163.55281516500185 477.2255738930768\\n\" +\n           \"L163.8968319645601,476.5661353642158\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M110.50616716093218,543.226236614309 L111.3007523513197,542.5467625043433\\n\" +\n           \"C125.67412582929381 531.6462035165736 163.680957149826 528.9431377037562 163.680957149826 528.9431377037562\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M110.50616716093218,543.226236614309 C110.50616716093218 543.226236614309 102.49314369829101 534.7778863297983 95.87995219942485 524.8523747536027\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M95.87995219942485,524.8523747536027 C91.58106198208507 518.400046229943 87.87385934898346 511.32336853207903 87.34520148529435 505.5382538123032\\n\" +\n           \"C85.64787602221686 487.0018404822163 102.12770996976396 451.68852550519404 102.12770996976396 451.68852550519404\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M23.47159582351707,470.64345022723126 C26.51999398076585 491.9209812976367 29.3024492717488 513.239673530445 31.759086728644043 534.5923821822213\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M31.759086728644043,534.5923821822213 C33.906051459713304 553.2534634416302 35.804164312674956 571.9405256299526 37.413459018774695 590.6487996635535\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M95.87995219942485,524.8523747536027 L31.759086728644043,534.5923821822213\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M37.413459018774695,590.6487996635535 L38.828498231355745,608.0908963059275\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M38.828498231355745,608.0908963059275 L40.53798600975489,632.9038334304635\\n\" +\n           \"C41.139200259044344 642.6815002585284 41.42678181897935 652.4841918252716 41.43374209738412 662.2942817495689\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M138.65949725272122,619.7525606195001 C138.65949725272122 619.7525606195001 124.73450160804494 597.8624259502013 116.10723951433008 579.916599629296\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M116.10723951433008,579.916599629296 C114.16227874874272 575.8712415975366 112.48645798266179 572.0262490170826 111.29986045850588 568.6773787772701\\n\" +\n           \"C108.50675680809655 560.8028289011183 104.68740820382547 548.8346194885116 110.50616716093218 543.226236614309\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M38.828498231355745,608.0908963059275 L116.10723951433008,579.916599629296\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M240.07695421415798,601.9386719187427 L169.0144453774601,633.9774721881562\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M169.0144453774601,633.9774721881562 C169.0144453774601 633.9774721881562 150.98374642012487 620.7406186457312 138.65949725272122 619.7525606195001\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M165.9909613456415,670.0316624572256 C170.0170356981805 655.4618122869222 169.0265752605558 634.2534753950572 169.0144453774601 633.9774721881562\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M401.32023127858315,769.7125764965891 C402.11576227764834 830.06450857015 401.2359103136687 880.0077705607579 401.2359103136687 880.0077705607579\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M397.89694281672143,664.4631932778391 C398.7680817613403 679.2162468469877 399.44702358501337 694.706435588815 399.97280240008234 710.3298782269407\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M399.97280240008234,710.3298782269407 C400.6458754425957 730.3287828603749 401.06765786293073 750.5463147587195 401.32023127858315 769.7125764965891\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M550.9845168695975,710.4132362343661 C551.6123472868251 729.5504200380493 551.8473754369127 749.906402893158 551.8507576650472 769.5714569659932\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M399.97280240008234,710.3298782269407 L550.9845168695975,710.4132362343661\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M397.89694281672143,664.4631932778391 C423.306503815506 659.9784257429723 447.31702095788444 655.6385765425999 468.2953731881802 651.7960534194245\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M468.2953731881802,651.7960534194245 L469.32007877527445,651.6083160338187\\n\" +\n           \"C514.573058845981 643.3154354992366 545.4832727744529 637.3814682075305 545.4832727744529 637.3814682075305\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M376.7243219011319,543.2630145867516 C381.85800279260013 559.4617679618594 386.62331988459147 576.1445766775745 389.8570749639604 590.9899159656354\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M389.8570749639604,590.9899159656354 C391.3377870976662 597.7869037333903 392.4979993303329 604.1993902774509 393.2264593124543 610.0053467038506\\n\" +\n           \"C395.201620209181 625.8068889077156 396.72590461527625 644.459039836976 397.89694281672143 664.4631932778391\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M524.9669228655197,492.74386688784716 C529.7412695307918 518.2932343314571 533.7499540315551 544.0169269777078 537.2597877582731 569.8073546578588\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M468.2953731881802,651.7960534194245 L457.47887916563604,581.2722996064083\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M389.8570749639604,590.9899159656354 L457.47887916563604,581.2722996064083\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M457.47887916563604,581.2722996064083 L537.2597877582731,569.8073546578588\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M401.32023127858315,769.7125764965891 L480.0096290499089,769.638806669678\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M480.0096290499089,769.638806669678 L551.8507576650472,769.5714569659932\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M401.2359103136687,880.0077705607579 C426.83674706942224 878.2453795693282 452.2702594793529 877.0441363857724 477.437469175819 876.7896797615414\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M477.437469175819,876.7896797615414 L484.6694615116321,876.742942633873\\n\" +\n           \"C506.41496087141655 876.6829058959574 528.1823031858742 876.7102663082085 549.9630455867386 876.7607012114704\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M480.0096290499089,769.638806669678 L477.437469175819,876.7896797615414\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M663.6824840820341,514.8132054297689 C669.6666311030901 518.1459877764536 675.3558260740423 521.9472054134017 680.6151000590711 526.2234185690215\\n\" +\n           \"C689.3666488998714 533.3391323332427 697.7379074167935 541.0383219865564 705.6001962061574 549.2428150635062\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M705.6001962061574,549.2428150635062 C718.8905453710336 563.1116232545011 730.7265491850897 578.4243006233852 740.4866622599469 594.8032596718243\\n\" +\n           \"C741.9814795879828 597.3117912444623 743.3640063198919 599.8742301846556 744.653808497309 602.4812522125617\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M549.9630455867386,876.7607012114704 C591.1507718892359 876.8561573715599 632.3864198956135 877.0341334513581 673.6128890252387 876.8595973734144\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M551.8507576650472,769.5714569659932 C551.8556833492016 793.3066313226834 551.521961395819 816.0318426568563 551.1347736887132 834.3662073450918\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M551.1347736887132,834.3662073450918 C550.5994584931017 859.7147630823172 549.9630455867386 876.7607012114704 549.9630455867386 876.7607012114704\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M671.1399903944963,835.0304073982632 C672.5047206496515 860.6086604654753 673.6128890252387 876.8595973734144 673.6128890252387 876.8595973734144\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M551.1347736887132,834.3662073450918 L671.1399903944963,835.0304073982632\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M668.1312442612104,767.1229473063227 C669.0440507114008 792.9331551066597 670.1597925627076 816.4899536148364 671.1399903944963 835.0304073982632\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M668.1312442612104,767.1229473063227 C668.1312442612104 767.1229473063227 598.1783627616871 756.8988582443932 562.9996230684321 757.6321505994205\\n\" +\n           \"C557.5559810200715 757.7591184613036 551.8507576650472 769.5714569659932 551.8507576650472 769.5714569659932\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M545.4832727744529,637.3814682075305 L547.8198271484305,659.1245600053717\\n\" +\n           \"L548.23692730826,663.2990244653048\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M548.23692730826,663.2990244653048 C549.5466494451222 677.1031989832622 550.4236528607096 693.2679125226675 550.9845168695975 710.4132362343661\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M705.6001962061574,549.2428150635062 C705.6001962061574 549.2428150635062 671.3777576418563 565.1118182149858 669.8186800520343 580.9777336332527\\n\" +\n           \"C668.843863226321 590.8978486102143 668.1053667028806 601.8394599712972 667.5652521333302 613.4928843296243\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M537.2597877582731,569.8073546578588 L540.0446584946023,591.0726638539162\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M540.0446584946023,591.0726638539162 C541.9905460912978 606.5033071098325 543.7844326770105 621.9472307581814 545.4832727744529 637.3814682075305\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M667.5652521333302,613.4928843296243 C667.5652521333302 613.4928843296243 634.4971716000509 592.3353895980001 615.6569282496257 589.0315656198356\\n\" +\n           \"C612.0466107876049 588.3964973965035 607.888280149142 587.9892203703994 603.417330084709 587.756956174683\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M603.417330084709,587.756956174683 C577.1374971498248 586.3888726882772 540.0446584946023 591.0726638539162 540.0446584946023 591.0726638539162\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M620.3292987450449,499.3608098272968 L603.417330084709,587.756956174683\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M666.4875998907966,699.6771425880652 C666.7635442007612 722.6551358334752 667.3767814548207 745.6714206890261 668.1312442612104 767.1229473063227\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M744.653808497309,602.4812522125617 C757.2269185434083 627.8948183197922 760.9889050587973 657.5448663324398 774.0638132824522 682.7943323269349\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M666.4875998907966,699.6771425880652 L722.1171470548478,690.9467452253697\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M722.1171470548478,690.9467452253697 L774.0638132824522,682.7943323269349\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M673.6128890252387,876.8595973734144 C691.6222249460745 876.7833561775356 709.6298092682403 876.6398449014479 727.630881913359 876.3927978989394\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M722.1171470548478,690.9467452253697 L725.4379860987509,802.6380956546479\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M725.4379860987509,802.6380956546479 L727.630881913359,876.3927978989394\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M727.630881913359,876.3927978989394 C765.5102057390477 875.872976638601 803.3606965758762 874.8947037897037 841.1380023790335 873.1200716517858\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M725.4379860987509,802.6380956546479 C725.4379860987509 802.6380956546479 759.2290510426766 803.7964563281128 790.371681043401 810.2527096639304\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M790.371681043401,810.2527096639304 L832.0184519290603,727.3378108371113\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M790.371681043401,810.2527096639304 C801.787129921484 812.618204889662 812.8466361062774 815.695882815106 821.7539118726685 819.68996530996\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M821.7539118726685,819.68996530996 C824.3903941650932 820.871679443763 826.838502326645 822.1336372600068 829.0517374588775 823.4811327399516\\n\" +\n           \"C843.5976645996342 832.3370541021137 841.1380023790335 873.1200716517858 841.1380023790335 873.1200716517858\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M821.7539118726685,819.68996530996 C821.7539118726685 819.68996530996 866.7940156570776 804.4026458329432 893.1169249811813 790.5756568822211\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M893.1169249811813,790.5756568822211 C895.6539029796725 789.2446781351509 898.0173551011916 787.9271487983856 900.1504046552017 786.6379780678632\\n\" +\n           \"C909.5518124616158 780.9579365516166 916.6432012307822 770.7663313754697 919.9370560336273 760.2877884945839\\n\" +\n           \"C922.7786729940336 751.229132400387 917.3324046197446 731.9254521018337 917.3324046197446 731.9254521018337\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M841.1380023790335,873.1200716517858 C871.3840641563253 871.6992628759508 901.5832129524973 869.7679664518822 931.7126860384327 867.1527570177357\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M893.1169249811813,790.5756568822211 L911.2481486611507,826.5494657484559\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M911.2481486611507,826.5494657484559 L931.7126860384327,867.1527570177357\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M931.7126860384327,867.1527570177357 C966.7741740855431 864.1095433310364 1001.741311542514 860.1401930462389 1036.5782289085473 854.9714171454241\\n\" +\n           \"C1056.3486508406522 852.038066890638 1022.2047150621103 817.167978624139 1020.2498134937522 797.2769633924134\\n\" +\n           \"L1019.5499367248188,790.1238038504254\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M1019.5499367248188,790.1238038504254 L1012.7763109873828,720.893293954458\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M911.2481486611507,826.5494657484559 L1019.5499367248188,790.1238038504254\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M977.8977451649837,319.4231305494402 C975.721510882071 288.6777431337625 973.6988879587575 257.92264364407094 971.8579382427416 227.15673716921242\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M882.9444731735134,326.589261801309 L977.8977451649837,319.4231305494402\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M983.3575160039264,392.63444245331266 C981.4501295648652 368.23642828283585 979.6255249451076 343.8328402908015 977.8977451649837 319.4231305494402\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M983.3575160039264,392.63444245331266 L878.9080263548861,398.1350604770616\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M990.7130518569176,482.2617461615933 C990.7130518569176 482.2617461615933 957.5881783577901 498.04436489874126 939.7092576451166 500.784672478954\\n\" +\n           \"C908.2700111710157 505.6036634315806 844.3700297026161 504.69256823944613 844.3700297026161 504.69256823944613\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M844.3700297026161,504.69256823944613 C858.3265993422913 483.21013176605203 869.1695574357011 459.2896206932196 874.0338730096884 434.42569860856804\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M819.633612883211,536.2133022037855 C824.750990220494 530.8251421218716 829.322331495318 525.6125015249842 832.9934301104254 520.8067770078428\\n\" +\n           \"C836.9598393743736 515.6144981213623 840.7683908882927 510.2345677057726 844.3700297026161 504.69256823944613\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M1012.7763109873828,720.893293954458 C1008.7476924956741 679.4450579160788 1004.7762464336864 637.9878049412648 1000.9311566183146 596.5188356297299\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M1000.9311566183146,596.5188356297299 C997.4007513498148 558.443712670538 993.9768664696744 520.3587126473068 990.7130518569176 482.2617461615933\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M952.3800218952806,591.5741199099232 C975.238277935121 595.2036012064697 1000.9311566183146 596.5188356297299 1000.9311566183146 596.5188356297299\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M917.3324046197446,731.9254521018337 C928.6474985523624 731.1181891823092 940.7507606677601 729.9513978826326 952.4051812444934 728.6760460059149\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M952.4051812444934,728.6760460059149 C984.2643258747643 725.1894432073364 1012.7763109873828 720.893293954458 1012.7763109873828 720.893293954458\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M952.3800218952806,591.5741199099232 L952.4051812444934,728.6760460059149\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M832.0184519290603,727.3378108371113 C850.2989486299008 731.6278430439023 869.488310024793 732.9045153343963 888.2107014260398 733.04339609311\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M888.2107014260398,733.04339609311 L889.6294474646453,733.0517765785979\\n\" +\n           \"C897.6322730562478 733.0871277831247 907.1647029424508 732.6511944835466 917.3324046197446 731.9254521018337\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M897.6650255789114,573.9443625008262 C909.1150104971717 578.9433035702743 920.0898588348755 583.3759935235586 929.172559561285 586.3993561737111\\n\" +\n           \"C935.4699146414569 588.4921630839972 943.7217619547007 590.1990316039714 952.3800218952806 591.5741199099232\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M888.2107014260398,733.04339609311 L897.6650255789114,573.9443625008262\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M819.633612883211,536.2133022037855 C819.633612883211 536.2133022037855 842.5068957411635 548.2219319783826 869.2738524244805 560.9479100605597\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M869.2738524244805,560.9479100605597 C878.5335902904923 565.3502899857765 888.259829256135 569.8386139770255 897.6650255789114 573.9443625008262\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M774.0638132824522,682.7943323269349 L775.3212844480261,685.1553667262228\\n\" +\n           \"C779.400559075735 692.6016682471155 784.3903447922228 700.1112721647978 790.3690505622258 706.468802773182\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M790.3690505622258,706.468802773182 C795.7741538984172 712.2164269674549 801.9874606383788 717.0225161107309 809.066901180714 719.9891714023712\\n\" +\n           \"C816.4768111586761 723.0943106454008 824.163717175225 725.4942534945542 832.0184519290603 727.3378108371113\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M869.2738524244805,560.9479100605597 L790.3690505622258,706.468802773182\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M990.7130518569176,482.2617461615933 L987.1481444276158,439.841259217621\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M987.1481444276158,439.841259217621 L983.3575160039264,392.63444245331266\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M874.0338730096884,434.42569860856804 C911.2638047200098 437.6635895800571 949.7856089037011 439.0713940848421 987.1481444276158 439.841259217621\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M667.5652521333302,613.4928843296243 C666.9055373658383 627.671336159967 666.5392282209966 642.9032915293905 666.3981294246139 658.6312502361752\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M666.3981294246139,658.6312502361752 C666.2775447110957 672.066880152466 666.321587144174 685.8650885915403 666.4875998907966 699.6771425880652\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M548.23692730826,663.2990244653048 C587.2491839651675 664.2402710618511 627.5121354846632 661.9056341357901 666.3981294246139 658.6312502361752\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M637.5366752443119,259.0190286383926 C659.7259685747542 256.0938714623033 682.0465419837764 254.63711493837553 704.4275535900722 253.82843848874074\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M604.3075363604702,265.98924297501117 C613.9970994015731 263.14792947906943 623.828861884354 260.9163744317897 633.8077311212726 259.52475692165063\\n\" +\n           \"L637.5366752443119,259.0190286383926\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M653.721016200775,151.45892752236168 C647.5864377283074 167.84751715250235 643.2870823977814 185.0081723136612 639.9251325918485 202.13656736405628\\n\" +\n           \"C636.2702248121888 220.75881800744588 637.5366752443119 259.0190286383926 637.5366752443119 259.0190286383926\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M582.2633214843909,135.74179977299013 C588.8006235644044 135.30437001958236 595.5446594444969 135.60882097062958 601.3308729696263 135.83277248711158\\n\" +\n           \"C619.5408650101011 136.53748187863542 653.721016200775 151.45892752236168 653.721016200775 151.45892752236168\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M582.2633214843909,135.74179977299013 C582.2633214843909 135.74179977299013 578.9246320655856 85.04358648931996 584.5071933808961 60.62265879587977\\n\" +\n           \"C589.0184572943016 40.89330398366545 611.8333659179335 6.4039278525994865 611.8333659179335 6.4039278525994865\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M736.2466345197048,98.71810096684895 C736.2466345197048 98.71810096684895 702.609985568163 101.4841166149556 687.4253764265833 108.12442223503574\\n\" +\n           \"C683.8085818139015 109.7059289568794 680.2969893784833 111.75655220095516 677.0443873273127 114.18673846039941\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M677.0443873273127,114.18673846039941 C671.0637386368993 118.65521181270155 665.9587600256499 124.407015442848 662.6855768064894 130.88537802403295\\n\" +\n           \"C659.3135414575368 137.55939110683596 656.3488824926676 144.43831835373737 653.721016200775 151.45892752236168\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M677.0443873273127,114.18673846039941 C677.0443873273127 114.18673846039941 697.9184626717381 165.9896693734333 703.2600006954503 193.2299602971321\\n\" +\n           \"C707.1478808049445 213.0555841017733 704.4275535900722 253.82843848874074 704.4275535900722 253.82843848874074\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M604.3075363604702,265.98924297501117 C604.3075363604702 265.98924297501117 581.5849300868131 242.25729078691728 568.9401260127366 221.87246401406563\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M568.9401260127366,221.87246401406563 C568.9401260127366 221.87246401406563 538.8676456521962 225.86184451061723 525.1307897236188 231.82462267436227\\n\" +\n           \"C501.19687657451055 242.19630816141998 457.04248210642334 270.3942855205638 457.04248210642334 270.3942855205638\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M420.74015389394845,187.94658144390277 L430.68954837987627,210.03082991541046\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M430.68954837987627,210.03082991541046 C439.6797854702853 230.07900949260986 448.5424106850857 250.17133143324935 457.04248210642334 270.3942855205638\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M430.68954837987627,210.03082991541046 C430.68954837987627 210.03082991541046 460.78406684851643 191.16104054406733 477.62966679779714 186.30271320378318\\n\" +\n           \"C501.9634026161644 179.28433681080668 552.735560786625 174.83103317062438 552.735560786625 174.83103317062438\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M568.9401260127366,221.87246401406563 C566.3675174746547 217.726697304145 564.211536231954 213.719226256754 562.7478027851791 210.07751697797292\\n\" +\n           \"C558.4050811784182 199.27267001439844 554.0597359481955 186.8872562230021 552.735560786625 174.83103317062438\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M552.735560786625,174.83103317062438 C551.8997406853166 167.221325814854 552.2673989255492 159.74274781785618 554.5987253088817 152.8754144855489\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M554.5987253088817,152.8754144855489 C555.197094248199 151.11287738644614 555.9248255559357 149.39060938692026 556.7947735769943 147.71672914278238\\n\" +\n           \"C561.2102165241467 139.2209080828506 571.4540036083408 136.4675013013527 582.2633214843909 135.74179977299013\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M400.37717558868474,142.81395358446372 L420.74015389394845,187.94658144390277\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M453.07449589564686,16.18026858880426 C453.07449589564686 16.18026858880426 462.9748772819275 50.077451806617205 463.7751726110991 67.54990588922885\\n\" +\n           \"C464.7691402148146 89.13884766148794 458.40250168862934 132.16234906504374 458.40250168862934 132.16234906504374\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M458.40250168862934,132.16234906504374 C430.87364761459725 135.3756009119895 400.37717558868474 142.81395358446372 400.37717558868474 142.81395358446372\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M554.5987253088817,152.8754144855489 C554.5987253088817 152.8754144855489 537.3476863808753 145.03974631868596 518.4870170115126 138.7023789994088\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M518.4870170115126,138.7023789994088 C506.9020482258089 134.80982723568462 494.70969389666055 131.4826610353361 485.5359304392504 130.88463033021713\\n\" +\n           \"C477.9362590711349 130.3892371541168 468.36359511830227 130.99925952602018 458.40250168862934 132.16234906504374\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M539.8563103328732,0.8291856990077238 L518.4870170115126,138.7023789994088\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M811.0459320834042,-53.68036402779546 L842.8834864573414,15.70276954157386\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M833.4898008426364,-136.80401293557685 C815.8206992081126 -135.20480006864773 798.2564340314236 -130.52268353327554 781.8931826393521 -124.0105673126351\\n\" +\n           \"L779.2644019696556,-122.94140471646999\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M811.0459320834042,-53.68036402779546 L833.4898008426364,-136.80401293557685\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M776.4796811355358,37.831347049704036 C782.1300331735154 37.79438772167971 787.7274786466395 37.29028832820367 793.0631248138583 36.406811297239734\\n\" +\n           \"C810.7378262179628 33.48023179209768 827.6141278434104 25.698298994277657 842.8834864573414 15.70276954157386\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M811.0459320834042,-53.68036402779546 L776.4796811355358,37.831347049704036\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M811.0459320834042,-53.68036402779546 L709.1166168555643,-6.228221264928443\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M811.0459320834042,-53.68036402779546 C838.0399821448266 -75.2577828433257 865.8520337232618 -97.48906283508423 892.8460837846842 -119.06648165061448\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M811.0459320834042,-53.68036402779546 C840.9439207922381 -50.53212992294483 872.2100796817583 -54.17252900952617 902.1080683905923 -51.02429490467554\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M779.2644019696556,-122.94140471646999 C789.8985479678151 -100.15293435893523 800.4117860852447 -76.46883438533024 811.0459320834042 -53.68036402779546\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M811.0459320834042,-53.68036402779546 C778.7943390812641 -56.67811658888713 746.7574923282044 -68.40565566162739 714.5058993260643 -71.40340822271905\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M714.5058993260643,-71.40340822271905 C708.0625406702782 -61.14159653131256 703.3776993061965 -49.66028754443103 702.8346966765306 -38.08771093670735\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M702.8346966765306,-38.08771093670735 C702.7571248722926 -36.43448570703254 702.7640803891651 -34.77939787285075 702.8625116861648 -33.12573673350493\\n\" +\n           \"C703.3964322393861 -24.155788177785915 705.5531161599372 -14.91640274053195 709.1166168555643 -6.228221264928443\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M414.1963729706862,-24.047579966815505 C414.1963729706862 -24.047579966815505 410.9482551681683 -0.1719259010678762 414.38159667568647 10.992128317114066\\n\" +\n           \"C416.6422521939723 18.33349840839211 430.149230976896 27.79802645581919 430.149230976896 27.79802645581919\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M368.28019604783884,68.39052166792716 C368.28019604783884 68.39052166792716 398.55785769580774 45.50031996131148 430.149230976896 27.79802645581919\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M430.149230976896,27.79802645581919 C437.8528475541403 23.48127826197672 445.6345766879351 19.472998874078755 453.07449589564686 16.18026858880426\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M453.07449589564686,16.18026858880426 C460.027972994464 13.10286902611518 466.6828841494033 10.65048275654836 472.6964297889598 9.155422314990059\\n\" +\n           \"C476.6188463853417 8.180217587259872 480.5662593246364 7.297778830901059 484.5348723485686 6.504253562414327\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M484.5348723485686,6.504253562414327 C502.6538586625563 2.8813257945178012 521.2147784896595 1.1118604050947152 539.8563103328732 0.8291856990077238\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M484.9864148832617,-35.80322476525936 L484.5348723485686,6.504253562414327\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M539.8563103328732,0.8291856990077238 C550.6161215437369 0.6659901311315704 561.4027912639341 0.9981356683043491 572.1468360273992 1.7551104657837018\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M572.1468360273992,1.7551104657837018 C585.4856945893081 2.6949048895179635 598.7588556700379 4.2894843956149264 611.8333659179335 6.4039278525994865\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M585.2974180177965,-54.9584023161521 L572.1468360273992,1.7551104657837018\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M666.8892463811012,-45.19686929508385 L667.1791588437555,-44.78485355655084\\n\" +\n           \"C674.1909029302402 -34.93211506973739 702.8346966765306 -38.08771093670735 702.8346966765306 -38.08771093670735\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M611.8333659179335,6.4039278525994865 L615.2988255115716,6.977290426156262\\n\" +\n           \"C625.3192869921915 8.672309351701578 634.8923753172174 12.050619207203273 644.1223805957525 16.436920440133527\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M666.8892463811012,-45.19686929508385 L644.1223805957525,16.436920440133527\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M324.5534943708323,-59.52793886529513 C324.5534943708323 -59.52793886529513 351.31641074647223 -85.55973904010047 367.7504741107314 -83.19781600137641\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M367.7504741107314,-83.19781600137641 C368.628545044363 -83.07160664569344 369.47713179702123 -82.86434948216784 370.29057793563317 -82.56774494714182\\n\" +\n           \"C387.2990344877576 -76.36613229701537 381.7785787645356 -46.79163887836924 394.5800862974162 -33.990506169373774\\n\" +\n           \"C399.0415622395686 -29.529160857753958 407.1743081200691 -25.005188480579058 414.1963729706862 -24.047579966815505\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M368.4422791814741,-147.18126215711808 C349.82593801746 -146.79400021818967 331.20828203500355 -146.48093025177917 312.5905656247079 -146.26111411295878\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M367.7504741107314,-83.19781600137641 L368.4422791814741,-147.18126215711808\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M414.1963729706862,-24.047579966815505 C418.7595943726817 -23.425243387396783 422.8538371482463 -24.308833356457594 425.16705709252375 -27.69407105573604\\n\" +\n           \"C436.56465600846354 -44.373670255520906 420.8904667458977 -70.75797508563826 431.46438545114836 -87.97153177009035\\n\" +\n           \"C434.5738448495647 -93.03350142435511 441.6870481209468 -95.63696126999498 448.7530451237538 -95.70495318966968\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M448.7530451237538,-95.70495318966968 C454.5724595887879 -95.7609517697766 460.35985544097974 -94.09718920655055 463.85230293474245 -90.67067468917614\\n\" +\n           \"C476.1754264510671 -78.58019610546188 470.8458221958914 -56.3261722157855 479.1469071290326 -41.18909738229726\\n\" +\n           \"C480.3281078681106 -39.035171223873014 482.4992212860259 -37.09174967789959 484.9864148832617 -35.80322476525936\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M444.0162047368425,-149.11400355845547 C418.8293774839034 -148.3653658099473 393.6370324582092 -147.7053678203083 368.4422791814741 -147.18126215711808\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M448.7530451237538,-95.70495318966968 L444.0162047368425,-149.11400355845547\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M484.9864148832617,-35.80322476525936 C488.0814703775233 -34.19948543560653 491.6660682854435 -33.60984461937946 494.4418317651631 -34.890724744886995\\n\" +\n           \"C507.1737863488312 -40.765903845785346 519.5856436813465 -50.27736375830065 525.9342558319905 -62.7799843135649\\n\" +\n           \"C530.5589467386817 -71.88760566760747 521.8649774528295 -83.41217319885959 524.1369970496365 -93.37081063892983\\n\" +\n           \"C525.9687578095009 -101.3997208253 530.8129551643821 -109.44977146622249 537.6343770777161 -114.06354967312228\\n\" +\n           \"C538.3191833318217 -114.52672937543116 539.1065765102243 -114.9601713688889 539.9608678134798 -115.34756582567347\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M539.9608678134798,-115.34756582567347 C544.9942904479934 -117.62955016309864 552.3500587613655 -118.31271895838643 554.7271315793514 -114.06123707425004\\n\" +\n           \"C563.6010036593609 -98.18999152180224 558.5058888021998 -76.89057752849459 567.3133299077781 -60.982371399259364\\n\" +\n           \"C570.3233981541102 -55.54551572782164 579.0254313127803 -53.28533633906614 585.2974180177965 -54.9584023161521\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M585.2974180177965,-54.9584023161521 L587.1036449829912,-55.582041033305416\\n\" +\n           \"C600.7716077731255 -61.50628138161951 613.3155303311198 -71.78579998581829 621.2848785746621 -84.37147911370951\\n\" +\n           \"C625.776552889637 -91.46500419853311 617.5956763555364 -102.01636572833522 621.2826189233606 -109.55955409814223\\n\" +\n           \"C623.8600403970466 -114.8327514226867 630.2280872612608 -123.63351794220934 635.4536380829607 -126.00741598468916\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M635.4536380829607,-126.00741598468916 C637.6507358857274 -127.00577825817086 639.645983335961 -126.86805239415908 641.0728467746592 -124.85444275163832\\n\" +\n           \"C657.206384385256 -102.08656881248497 650.974621645012 -68.06477463484806 666.8892463811012 -45.19686929508385\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M623.1729855253751,-169.78443078451534 C592.97354288735 -162.9060346089874 562.9688448665963 -156.89143427762104 533.6233938070008 -153.5223857539476\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M635.4536380829607,-126.00741598468916 L623.1729855253751,-169.78443078451534\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M533.6233938070008,-153.5223857539476 C522.2512920399158 -152.25041943732498 510.9787552426818 -151.37737153006933 499.8315128676952 -150.9794398633905\\n\" +\n           \"C481.4127197649462 -150.35615702645498 462.4361352455516 -149.70271478734492 444.0162047368425 -149.11400355845547\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M539.9608678134798,-115.34756582567347 C539.2542705742786 -121.85127966693003 537.9116715694616 -128.38471365254273 536.6773424328195 -134.91356184752212\\n\" +\n           \"C535.5032157067125 -141.12397601409867 534.3682652075869 -147.32745832779221 533.6233938070008 -153.5223857539476\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M30.8817919515169,167.04354054493228 C29.17024442046144 157.9865693664491 28.407103595356773 148.72936533392732 28.5523210695176 139.5850166537099\\n\" +\n           \"C28.77121946277671 125.80101108621406 29.186012763020216 110.08399877461599 29.737289882236237 93.24999728298587\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-20.187844661478195,162.61299486731772 L30.8817919515169,167.04354054493228\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M61.704115941521636,311.08253712998425 L56.85674181858046,311.77732808804996\\n\" +\n           \"C39.50840864160172 314.02676426783586 17.42353748112256 316.0314714200355 -5.609550946360034 317.76092683168173\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-5.609550946360034,317.76092683168173 L-11.224195082591784,318.17579810261645\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-72.45703133524759,158.0783822393718 L-20.187844661478195,162.61299486731772\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-137.98240326313862,152.39372942758087 C-139.35985774569212 197.34857479766777 -139.36515773369374 242.32768016567968 -138.7799033058488 287.31877035988526\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-138.7799033058488,287.31877035988526 L-138.16602952348882,325.1411255927444\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-72.45703133524759,158.0783822393718 C-72.45703133524759 158.0783822393718 -76.68534801304733 230.95894172029216 -92.882129272872 262.5180819624031\\n\" +\n           \"C-94.2341788866872 265.15245533071743 -96.45638790867676 267.60877505876465 -99.213287480194 269.87131330915383\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-99.213287480194,269.87131330915383 C-112.64728137801924 280.896197070794 -138.7799033058488 287.31877035988526 -138.7799033058488 287.31877035988526\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-9.20228413747713,279.5256480264879 L-5.609550946360034,317.76092683168173\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-99.213287480194,269.87131330915383 L-9.20228413747713,279.5256480264879\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-20.187844661478195,162.61299486731772 L-14.355787112529889,224.6800436933506\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-14.355787112529889,224.6800436933506 L-9.20228413747713,279.5256480264879\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M88.52554797702079,304.9408449269506 C88.52554797702079 304.9408449269506 65.73317300451707 257.7671237826428 48.68962499834569 217.72142206119688\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-14.355787112529889,224.6800436933506 L48.68962499834569,217.72142206119688\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M48.68962499834569,217.72142206119688 C44.93427600108787 208.89937205100227 41.45793215259195 200.42321785237328 38.56573187662726 192.87341811998795\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M38.56573187662726,192.87341811998795 L36.17819886980286,186.48260213670898\\n\" +\n           \"C33.895444375967216 180.1914806247317 32.135180783330476 173.67105431107075 30.8817919515169 167.04354054493228\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M117.53825326818661,112.80108469621557 C118.44329182467183 100.18241098646658 118.12359115799434 90.24644044167673 118.12359115799434 90.24644044167673\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M38.56573187662726,192.87341811998795 C38.56573187662726 192.87341811998795 78.12570090634156 181.54288141402182 98.33097533755404 165.3836639509517\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M98.33097533755404,165.3836639509517 C101.20802113438438 163.08275373011787 103.69265610814793 160.6839421547354 105.61480054085422 158.20599880270572\\n\" +\n           \"C113.41940384793517 148.13671242040965 116.41730473765334 128.41364378289836 117.53825326818661 112.80108469621557\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M170.373075365745,265.4342133972568 C160.9710162641014 271.2473380941751 151.49764021147575 276.91802180266467 141.831828771418 282.1837634190045\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M98.33097533755404,165.3836639509517 L170.373075365745,265.4342133972568\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M117.53825326818661,112.80108469621557 C117.53825326818661 112.80108469621557 157.46710649448994 125.84417446438486 170.82889578704473 140.81830138434015\\n\" +\n           \"C175.45836332900677 146.0031588352875 180.3349749063796 152.68914027530025 185.1827089446548 160.08580043130655\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M185.1827089446548,160.08580043130655 C204.99078132671957 190.30441182057416 224.31740927019948 232.39136128488067 224.31740927019948 232.39136128488067\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M185.1827089446548,160.08580043130655 C185.1827089446548 160.08580043130655 202.68531239433366 136.07507246184798 210.27255433347125 117.78336212199241\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M210.27255433347125,117.78336212199241 C211.35644603906235 115.17026064487018 212.23798342811176 112.67387381325007 212.83723074271802 110.380877270278\\n\" +\n           \"C218.02933488367296 90.48868998254656 214.2651077920894 48.72153319625923 214.2651077920894 48.72153319625923\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M210.27255433347125,117.78336212199241 C210.27255433347125 117.78336212199241 253.9868137333566 118.05670797739234 267.90895763783254 132.1336867608585\\n\" +\n           \"C271.8875490796255 136.15827119457862 275.45176621232036 141.90553968115628 278.59063536283196 148.4185765954703\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M278.59063536283196,148.4185765954703 C289.66301564272885 171.382701223168 295.4439838671807 203.87720750540836 295.4439838671807 203.87720750540836\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M368.28019604783884,68.39052166792716 C374.70173672249115 84.12178596170502 381.37753705776447 99.75774905703325 388.1985573545864 115.33855204026042\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M388.1985573545864,115.33855204026042 L400.37717558868474,142.81395358446372\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M278.59063536283196,148.4185765954703 C278.59063536283196 148.4185765954703 295.4115913075232 131.78118334349935 308.1258381932639 126.09646587771968\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M308.1258381932639,126.09646587771968 C309.2334610473173 125.60130890189197 310.30994044429923 125.18919757732462 311.3414637706422 124.87833963520312\\n\" +\n           \"C336.05348064931604 117.41088151032693 388.1985573545864 115.33855204026042 388.1985573545864 115.33855204026042\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M269.21031131315897,33.76466599977977 C306.52007043527885 27.163801711269933 350.7361425745785 23.112017777245796 350.7361425745785 23.112017777245796\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M308.1258381932639,126.09646587771968 L269.21031131315897,33.76466599977977\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M224.31740927019948,232.39136128488067 L215.93706013770267,237.2262663389978\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M215.93706013770267,237.2262663389978 C200.5940849030549 246.26131688491492 185.57683041996032 256.03401368220545 170.373075365745 265.4342133972568\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M215.93706013770267,237.2262663389978 C215.93706013770267 237.2262663389978 218.9508795403071 267.9325112428761 212.83723074271802 281.34909603969686\\n\" +\n           \"C203.25002983755985 302.3327657084394 170.73401177039796 336.2797639569343 170.73401177039796 336.2797639569343\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M189.87801790320452,369.364530523501 C183.3299726611653 358.5235294313629 176.7872856035992 347.1252005028111 170.73401177039796 336.2797639569343\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M170.73401177039796,336.2797639569343 C154.5366477289548 307.2589588162205 141.831828771418 282.1837634190045 141.831828771418 282.1837634190045\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M295.4439838671807,203.87720750540836 C286.5563028830662 205.87727932208693 278.3491932358739 208.0922498749268 271.324897239783 210.53656870099528\\n\" +\n           \"C266.74712933881233 212.12955019227448 262.2376730531757 213.87295603031941 257.78614057050277 215.74427056953377\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M257.78614057050277,215.74427056953377 C246.30394421152474 220.5711055733959 235.20712085173878 226.24892983371745 224.31740927019948 232.39136128488067\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M221.3745955345565,415.59194711256777 L213.60002279859418,405.363351865502\\n\" +\n           \"C210.6315593270446 401.42188855658765 207.50652018204772 396.97268690010526 204.28906681113924 392.1629746421796\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M204.28906681113924,392.1629746421796 C199.61528174984656 385.1768580283933 194.7451475246624 377.4249122167841 189.87801790320452 369.364530523501\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M259.3802278220828,454.33048305996164 C255.21128142251635 451.4871313043534 251.23542354845304 448.2870345411457 247.42366387220517 444.8313796859198\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M247.42366387220517,444.8313796859198 C237.8598820154614 436.16122891370765 229.3296439663348 425.8814582993555 221.3745955345565 415.59194711256777\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M420.74015389394845,187.94658144390277 C420.74015389394845 187.94658144390277 390.25268967324126 189.75325305406906 354.84301775923166 194.10121282859654\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M354.84301775923166,194.10121282859654 C335.0948615129935 196.52622213244445 313.81442202327355 199.7423469988212 295.4439838671807 203.87720750540836\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M349.43902088835694,466.97434642008693 C336.2434491545247 468.99041535090686 322.9161370245944 470.18182307382966 309.8641568245681 469.5957636298441\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M309.8641568245681,469.5957636298441 C299.302913579439 469.12156361813413 288.9219342906955 467.4836142321487 278.93686748595076 464.1771592181523\\n\" +\n           \"C271.9475063460658 461.8627021756993 265.45859088947356 458.475879367212 259.3802278220828 454.33048305996164\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M436.42835323476413,443.78735716104876 C416.7478182071677 450.9965444602004 396.6000764614854 457.619169470143 381.22345425606585 460.9177535399615\\n\" +\n           \"L375.18409481986646,462.1990066184673\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M375.18409481986646,462.1990066184673 C366.73684722430164 463.96676739347663 358.11644967893324 465.6491287291105 349.43902088835694 466.97434642008693\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M457.04248210642334,270.3942855205638 L465.4272252880817,290.69907868093816\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M465.4272252880817,290.69907868093816 C471.23096202003336 305.02540761260326 476.8154931219328 319.43102385276376 482.09848714008064 333.9462363319804\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M457.47887916563604,581.2722996064083 L438.8948536746783,459.8965352469859\\n\" +\n           \"L436.42835323476413,443.78735716104876\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M482.09848714008064,333.9462363319804 C485.71838457831257 343.8920854590985 489.1967089162363 353.8893902681974 492.50697348492486 363.94790132625474\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M492.50697348492486,363.94790132625474 L497.73653918368865,380.35661226919603\\n\" +\n           \"C501.28333176626927 391.86852936166247 504.57959328441495 403.45249240630574 507.6520301544564 415.09773221757564\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M507.6520301544564,415.09773221757564 C507.6520301544564 415.09773221757564 495.7438016647879 420.34269889767455 478.56398839787306 427.3672972506688\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M492.50697348492486,363.94790132625474 L478.56398839787306,427.3672972506688\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M478.56398839787306,427.3672972506688 C466.272981357973 432.3929094372638 451.5835779477693 438.1402991437434 436.42835323476413 443.78735716104876\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M295.4439838671807,203.87720750540836 C295.4439838671807 203.87720750540836 295.48694005487516 214.2525566720031 295.24047906744295 230.23489634434037\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M430.68954837987627,210.03082991541046 C430.68954837987627 210.03082991541046 415.18471528882674 206.36808373017138 414.231839123518 211.80278988838282\\n\" +\n           \"C412.05156031596573 224.23795732504837 410.4390252839429 236.74706041795648 409.1793665099901 249.30243936019863\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M354.84301775923166,194.10121282859654 C354.84301775923166 194.10121282859654 355.3327859308353 213.68526236586217 355.22357821938726 240.27216316866134\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M295.24047906744295,230.23489634434037 L355.22357821938726,240.27216316866134\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M355.22357821938726,240.27216316866134 L409.1793665099901,249.30243936019863\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M257.78614057050277,215.74427056953377 C257.78614057050277 215.74427056953377 256.0260215528359 239.5853469139023 252.54677958235314 267.4115948856965\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M465.4272252880817,290.69907868093816 C463.6835163047374 301.81847620142634 461.69539131379753 312.97131195442205 459.56982853186696 324.14295039082504\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M295.24047906744295,230.23489634434037 C295.0305845611279 243.41577691228602 294.61620249046945 260.5199237027046 293.80143458003 278.7163672397459\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M409.1793665099901,249.30243936019863 C407.18412952106183 269.1846080182235 406.0737970767121 289.1828443607919 404.99510175432556 309.18728626693974\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M355.22357821938726,240.27216316866134 C355.1606946002896 256.87398532670284 354.86254759086876 276.2367585561655 354.0571275814399 295.22888223127075\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M252.54677958235314,267.4115948856965 L293.80143458003,278.7163672397459\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M293.80143458003,278.7163672397459 L354.0571275814399,295.22888223127075\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M354.0571275814399,295.22888223127075 L404.99510175432556,309.18728626693974\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M404.99510175432556,309.18728626693974 L459.56982853186696,324.14295039082504\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M252.54677958235314,267.4115948856965 C250.16400924980402 286.4741696513561 246.9728492816926 307.4108955500039 242.98629949613257 323.8116517299495\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M242.98629949613257,323.8116517299495 C242.98629949613257 323.8116517299495 271.694036872026 322.77166402684384 285.2921118644409 326.6233382632413\\n\" +\n           \"L290.49810300123363,328.15605073825634\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M459.56982853186696,324.14295039082504 C455.8983554649775 343.44003089788185 451.8166762102367 362.7932326452278 447.8765037440579 382.12707452741665\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M293.80143458003,278.7163672397459 C293.06821944834024 294.9984191725223 292.01382853791216 312.15598208112925 290.49810300123363 328.15605073825634\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M404.99510175432556,309.18728626693974 C403.98099703167287 327.90889140119253 402.99460178936005 346.6359387241399 401.3364710239089 365.27819788191715\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M354.0571275814399,295.22888223127075 C353.2708619791599 313.9672151838775 351.99063563331015 332.34496405714754 349.95385611475126 347.3545430257027\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M290.49810300123363,328.15605073825634 C307.54896854341797 333.174819890849 328.73237260985314 340.12011948057074 349.95385611475126 347.3545430257027\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M349.95385611475126,347.3545430257027 C367.87401291934 353.45049185626164 385.8214186340526 359.7522945397693 401.3364710239089 365.27819788191715\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M401.3364710239089,365.27819788191715 C428.20924925655703 374.852273459243 447.8765037440579 382.12707452741665 447.8765037440579 382.12707452741665\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M242.98629949613257,323.8116517299495 C242.1516519468178 327.2482379407454 241.28210845935263 330.4860393387392 240.3777771033756 333.46629646131936\\n\" +\n           \"C237.73868332591204 342.2026070528394 231.49824444864575 353.2644052156802 224.9361740117641 363.4229719423725\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M224.9361740117641,363.4229719423725 C214.98238346087695 378.8314422014034 204.28906681113924 392.1629746421796 204.28906681113924 392.1629746421796\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M290.49810300123363,328.15605073825634 C289.13230596664414 342.56222904553493 287.39306372832516 356.0312291699396 285.1784443598429 367.0829477868373\\n\" +\n           \"C283.9730979710918 373.10006523756493 281.56609752263165 380.0792586623862 278.5236410464904 387.33829604235075\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M278.5236410464904,387.33829604235075 C267.31220666488 414.1686439033201 247.42366387220517 444.8313796859198 247.42366387220517 444.8313796859198\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M349.95385611475126,347.3545430257027 L348.9665126116661,353.98742416482577\\n\" +\n           \"C346.4586750421623 369.34454610004167 340.14560782331387 389.86805551713735 333.30584958660995 409.3573732672943\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M333.30584958660995,409.3573732672943 C322.27149145658774 440.8237097803428 309.8641568245681 469.5957636298441 309.8641568245681 469.5957636298441\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M224.9361740117641,363.4229719423725 C224.9361740117641 363.4229719423725 248.76617496210625 374.6097513713367 278.5236410464904 387.33829604235075\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M278.5236410464904,387.33829604235075 C295.9504832343558 394.7958904222081 315.4131192197353 402.78336264173385 333.30584958660995 409.3573732672943\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M333.30584958660995,409.3573732672943 C344.62156209040484 413.5154635990014 355.30995849479143 417.10870174714853 364.46065007414404 419.64637065964246\\n\" +\n           \"C371.7022360678624 421.65058245193956 381.34090074395647 422.757021143798 391.302286414658 423.32294992867355\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M447.8765037440579,382.12707452741665 C445.0934697071591 395.78280791579925 442.38104139354965 409.42888178283846 439.9336836774608 423.03869152035696\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M439.9336836774608,423.03869152035696 C438.68807968884056 429.9654695729052 437.5110998699425 436.88285929219677 436.42835323476413 443.78735716104876\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M401.3364710239089,365.27819788191715 C400.21410162413673 377.9195882991172 398.7828965943287 390.5220463341913 396.8248275358907 403.05748078238213\\n\" +\n           \"C395.9240050278681 408.84469424847816 393.83972815367986 416.0053298685833 391.302286414658 423.32294992867355\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M391.302286414658,423.32294992867355 C384.75646565722883 442.2357646907141 375.18409481986646 462.1990066184673 375.18409481986646 462.1990066184673\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M391.302286414658,423.32294992867355 C414.7240528632211 424.6749395631379 439.9336836774608 423.03869152035696 439.9336836774608 423.03869152035696\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M87.21657098828607,-150.16488643383133 C72.54118666520584 -151.18715041196526 57.057419763405576 -152.42610328088654 41.47903150333999 -153.77678228798027\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M324.5534943708323,-59.52793886529513 C327.46955951525865 -48.83829924601844 330.54935415122446 -38.19040064995828 333.79410273508023 -27.59309978644955\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M333.79410273508023,-27.59309978644955 C339.0130139436399 -10.548213000646225 344.6586622406227 6.365777075228266 350.7361425745785 23.112017777245796\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M120.75423700626332,-148.16907117206495 C110.349127590753 -148.65694932013167 99.04537818799781 -149.34053754623076 87.21657098828607 -150.16488643383133\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M174.66778935925944,-146.62937776295266 C161.4759915740266 -146.88258108267573 148.28572016933705 -147.20621708559688 135.0974214350052 -147.6070637007071\\n\" +\n           \"L120.75423700626332,-148.16907117206495\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M312.5905656247079,-146.26111411295878 C312.5905656247079 -146.26111411295878 311.8855587709681 -113.57728838767835 315.41352732796213 -95.62970417176817\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M315.41352732796213,-95.62970417176817 L315.9389135016325,-93.20438181117215\\n\" +\n           \"C318.6323546777544 -81.94001900499507 321.50341505842044 -70.71116450821059 324.5534943708323 -59.52793886529513\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M219.02212648245603,-146.03394931577142 C204.235849322413 -146.15033534351758 189.45086093156584 -146.34563203690652 174.66778935925944 -146.62937776295266\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M219.02212648245603,-146.03394931577142 C219.02212648245603 -146.03394931577142 210.6312245571034 -102.14939197537043 223.93649475192103 -88.02188061007877\\n\" +\n           \"C233.01951458496924 -78.37745622107451 252.06407094447027 -91.62968676759098 261.5415504015301 -100.88676806915555\\n\" +\n           \"C273.4832001952346 -112.5507659970142 283.2907390595786 -145.99596247368655 283.2907390595786 -145.99596247368655\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M312.5905656247079,-146.26111411295878 L283.2907390595786,-145.99596247368655\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M283.2907390595786,-145.99596247368655 C261.86643645343486 -145.86234634601428 240.44292907823888 -145.86534167051764 219.02212648245603 -146.03394931577142\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M258.47467637430213,-68.48819109660545 C267.0096665782977 -75.95329042584832 275.48592518825444 -83.53358166089642 285.292109505182 -89.0114860790136\\n\" +\n           \"C294.2725304740136 -94.01447380170805 315.41352732796213 -95.62970417176817 315.41352732796213 -95.62970417176817\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M276.4397793987066,-25.076996734255307 C297.50324973954883 -35.53921802158101 324.5534943708323 -59.52793886529513 324.5534943708323 -59.52793886529513\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M258.47467637430213,-68.48819109660545 L276.4397793987066,-25.076996734255307\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M224.9245104457851,-3.3467268747397547 C240.02055108850004 -10.196697482780362 254.8612175233729 -17.22943171681866 268.48673125816555 -21.72628222633587\\n\" +\n           \"C270.98285614321685 -22.550082391205933 273.6591814263468 -23.695729575421435 276.4397793987066 -25.076996734255307\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M224.9245104457851,-3.3467268747397547 L224.091937020133,11.955950688389123\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M192.56770217109695,-30.997796633937522 C204.51055885257452 -32.83389410448894 220.18921252975252 -43.198253912727985 230.8662952922823 -48.43829961336374\\n\" +\n           \"C241.09647268996264 -53.459015316494074 249.81580427419198 -60.914316820416445 258.47467637430213 -68.48819109660545\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M155.2596875876443,17.02598469448404 C176.5958547783932 17.836546426386008 201.0788194511541 7.472957318942864 224.9245104457851 -3.3467268747397547\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M192.56770217109695,-30.997796633937522 L155.2596875876443,17.02598469448404\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M174.66778935925944,-146.62937776295266 C174.66778935925944 -146.62937776295266 169.325513578449 -117.78127032115788 169.21501303860003 -87.9869777875886\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M169.21501303860003,-87.9869777875886 C169.14434220008715 -68.72649803778039 171.26061071070677 -49.070591916626526 178.42161443214036 -36.56107284819768\\n\" +\n           \"C181.4175031778851 -31.32756934006504 186.51247500377323 -30.066400334758946 192.56770217109695 -30.997796633937522\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M120.75423700626332,-148.16907117206495 C120.75423700626332 -148.16907117206495 112.35780857508402 -118.2066584963201 108.759815277023 -83.99996310634515\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M169.21501303860003,-87.9869777875886 L108.759815277023,-83.99996310634515\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M108.759815277023,-83.99996310634515 C107.25279166428503 -69.6762201131555 106.58747065333277 -54.607938359436346 107.73351464585207 -40.68496097627647\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M107.73351464585207,-40.68496097627647 C109.34251461038328 -21.11904785902365 114.52701671771113 -3.8134926937650775 125.9757100415336 5.99253272952744\\n\" +\n           \"C134.62384824939895 13.39236158298145 144.54490595007064 16.617891587376498 155.2596875876443 17.02598469448404\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M67.980131660252,-29.35873253555961 L107.73351464585207,-40.68496097627647\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M67.980131660252,-29.35873253555961 C68.72713831249399 -5.9649781513155595 73.69055227310886 15.165697178731833 86.36433015085838 27.742645943280777\\n\" +\n           \"C88.72500349014081 30.082714637724884 91.20510090534066 32.091365561134296 93.79315775422117 33.79802371967201\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M29.737289882236237,93.24999728298587 C29.737289882236237 93.24999728298587 68.07761708870252 99.41487734081608 92.88010988376193 96.64659686004369\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M92.88010988376193,96.64659686004369 C95.99219898040454 96.2995233214915 98.89154102209645 95.81203841752864 101.4760185509695 95.15441331954644\\n\" +\n           \"C107.09799419621105 93.73961095099443 112.64120690378017 92.08562923257439 118.12359115799434 90.24644044167673\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M93.79315775422117,33.79802371967201 L92.88010988376193,96.64659686004369\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M87.21657098828607,-150.16488643383133 C87.21657098828607 -150.16488643383133 72.85027042746677 -104.62239641536229 68.8821041121786 -58.13885241575024\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M68.8821041121786,-58.13885241575024 C68.05514785398572 -48.45179139058324 67.67977894304119 -38.72386073059259 67.980131660252 -29.35873253555961\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M224.091937020133,11.955950688389123 C231.1833394613215 9.544586089374278 238.10343153301116 7.46864856144757 244.75388413503765 5.980659214537445\\n\" +\n           \"C247.3419254204807 5.401604260313181 250.11916318697934 4.6850404457165435 253.03603542194267 3.857933167637665\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M253.03603542194267,3.857933167637665 C285.0056775640008 -5.209380581956799 333.79410273508023 -27.59309978644955 333.79410273508023 -27.59309978644955\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M214.2651077920894,48.72153319625923 C221.934007592528 45.71911871035578 229.69786516813943 42.99811012376724 237.60802335195615 40.71300389343511\\n\" +\n           \"C242.96180594967427 39.16640134880224 249.1625890784395 37.69629333731126 255.84980263737194 36.31323066831698\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M255.84980263737194,36.31323066831698 C260.13448037126165 35.42685236988874 264.6199430657564 34.576394099472914 269.21031131315897 33.76466599977977\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M253.03603542194267,3.857933167637665 L255.84980263737194,36.31323066831698\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M93.79315775422117,33.79802371967201 C109.83799717375543 44.377164015098344 130.03013582653205 43.352910972891436 151.6399277323657 37.732404912843265\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M151.6399277323657,37.732404912843265 C175.28533613971638 31.583162023493244 200.62851167090886 19.930041397245777 224.091937020133 11.955950688389123\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M118.12359115799434,90.24644044167673 C131.25098087781654 85.84000758177837 144.02896214358248 80.37034294792647 156.70452177772714 74.58029763586268\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M156.70452177772714,74.58029763586268 C175.8415025200605 65.8387933822235 194.74501453274834 56.36698116073468 214.2651077920894 48.72153319625923\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M151.6399277323657,37.732404912843265 L156.70452177772714,74.58029763586268\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-36.59263089570921,-55.110256745324605 L-33.415431290454826,-101.2313613170888\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-107.02655218611694,-55.10927771945546 C-110.46579119252381 -27.448086778597368 -116.53326780952295 -0.08827747394584406 -122.32997682350845 27.290952380545157\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-36.59263089570921,-55.110256745324605 L-107.02655218611694,-55.10927771945546\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-42.2623728459667,27.193279031996145 L-39.8494420048615,-7.833489655436534\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-39.8494420048615,-7.833489655436534 L-36.59263089570921,-55.110256745324605\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M32.28603712331532,27.10233847090796 L34.3289673709141,-17.765506527616928\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-39.8494420048615,-7.833489655436534 L34.3289673709141,-17.765506527616928\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M32.28603712331532,27.10233847090796 L-13.57227089101255,27.15828037849655\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-13.57227089101255,27.15828037849655 L-42.2623728459667,27.193279031996145\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-42.2623728459667,27.193279031996145 L-69.97977042419424,27.227091097051684\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-69.97977042419424,27.227091097051684 L-122.32997682350845,27.290952380545157\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-137.98240326313862,152.39372942758087 L-76.03209164756555,157.76822792725122\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-76.03209164756555,157.76822792725122 L-72.45703133524759,158.0783822393718\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-122.32997682350845,27.290952380545157 C-126.71163907201648 47.98652794297023 -130.93859447707655 68.69319978820803 -133.75880269186956 89.5495186137639\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-133.75880269186956,89.5495186137639 C-135.28011603199218 100.80009085838023 -136.39209058028356 112.09420782199585 -136.89820257879552 123.45361684309427\\n\" +\n           \"C-137.32795259901147 133.0991227208668 -137.6867775375326 142.74586736297474 -137.98240326313862 152.39372942758087\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-13.57227089101255,27.15828037849655 C-13.57227089101255 27.15828037849655 -11.040678913934595 57.25387918193601 -9.469055816460836 90.25422335595539\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-9.469055816460836,90.25422335595539 C-8.437263010247584 112.00393850814405 -7.823640101570047 135.01819951379576 -8.630883328486448 151.47698595133477\\n\" +\n           \"C-8.892951735238412 156.82026762275024 -20.187844661478195 162.61299486731772 -20.187844661478195 162.61299486731772\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-69.97977042419424,27.227091097051684 L-72.885228157478,89.8942466423231\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-72.885228157478,89.8942466423231 L-76.03209164756555,157.76822792725122\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-133.75880269186956,89.5495186137639 L-72.885228157478,89.8942466423231\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-72.885228157478,89.8942466423231 L-9.469055816460836,90.25422335595539\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M34.3289673709141,-17.765506527616928 L36.4295111575075,-60.32017973294898\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M68.8821041121786,-58.13885241575024 C58.172747575786296 -58.858677615605345 47.13886622959425 -59.60033274789968 36.4295111575075 -60.32017973294898\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M41.47903150333999,-153.77678228798027 C17.173320197665127 -155.88365040848703 -7.351737551289503 -157.90140534388067 -29.476330334129432 -159.67210774289615\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-29.476330334129432,-159.67210774289615 L-30.39004049521435,-159.745445728769\\n\" +\n           \"C-76.94714020806022 -163.48071630001027 -112.65735363621081 -166.10360599219598 -112.9219152946837 -166.1246436527186\\n\" +\n           \"C-112.9219152946837 -166.1246436527186 -102.70630152601142 -102.96878065267072 -105.32544075608398 -71.40149343690284\\n\" +\n           \"C-105.7771245847174 -65.95755483849764 -106.35142268357117 -60.527621686178236 -107.02655218611694 -55.10927771945546\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-33.415431290454826,-101.2313613170888 C-32.10097892152356 -120.51582146979224 -30.766048871673025 -140.38597763586552 -29.476330334129432 -159.67210774289615\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M36.4295111575075,-60.32017973294898 L36.49783180571454,-61.70427982940174\\n\" +\n           \"L38.883203746704105,-107.04868427111428\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M38.883203746704105,-107.04868427111428 L39.055154984927796,-110.31736801652372\\n\" +\n           \"L41.47903150333999,-153.77678228798027\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M-33.415431290454826,-101.2313613170888 C-9.556898724606057 -103.15128911441307 15.024642288064715 -105.1291155521225 38.883203746704105 -107.04868427111428\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M720.7654216492036,-192.7695468053424 C688.3950685095913 -185.58805221443038 655.6712463094707 -177.18602593530903 623.1729855253751 -169.78443078451534\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M735.7039917300629,-162.88644225308462 L720.7654216492036,-192.7695468053424\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M778.5720958456816,-174.4362414442333 C764.1021445452473 -171.3964517018204 749.8012957509999 -167.37641492565064 735.7039917300629 -162.88644225308462\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M784.500422572905,-204.79555405107573 C763.5231414215656 -201.75439805079392 742.2219306065418 -197.53011095003166 720.7654216492036 -192.7695468053424\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M778.5720958456816,-174.4362414442333 L784.500422572905,-204.79555405107573\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M925.6035709698285,-197.99015557134987 C881.8634709315453 -212.56343322191506 834.08682895964 -211.98459407455567 784.500422572905 -204.79555405107573\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M901.1617619762444,-176.55756480116122 L925.6035709698285,-197.99015557134987\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M956.3237854631411,-132.93196104522687 C954.822367529036 -137.9332887442763 952.8675777815994 -142.77123697963782 950.3379989228998 -147.38302693119624\\n\" +\n           \"C941.1864423894351 -164.06764473506615 919.959446213063 -172.13810814271787 901.1617619762444 -176.55756480116122\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M1006.6143003883764,-126.35372997325999 C1001.4057992479102 -146.29001428980806 990.5198942506609 -163.25386359242793 971.2615768479443 -175.89959929685466\\n\" +\n           \"C956.6373328784417 -185.50242805121408 941.3831451879053 -192.73226764156993 925.6035709698285 -197.99015557134987\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M956.3237854631411,-132.93196104522687 L1006.6143003883764,-126.35372997325999\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M1009.1598884619511,-69.08270213614726 C1011.3749810071872 -89.80475615885318 1011.1002896125419 -109.18161524944647 1006.6143003883764 -126.35372997325999\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M1009.1598884619511,-69.08270213614726 L960.3508572612714,-69.1229698984804\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M989.4537587145021,25.42007134819122 C997.7571855693658 -7.155232789609329 1005.9977582326027 -39.49099189459243 1009.1598884619511 -69.08270213614726\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M952.0282638435365,5.364860514333211 L989.4537587145021,25.42007134819122\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M980.9737930237332,59.4105612768605 C983.6670972589574 48.12177416461202 986.5642344483654 36.75641535765938 989.4537587145021 25.42007134819122\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M980.9737930237332,59.4105612768605 L917.9752541507669,77.92302890236405\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M929.1339247252803,105.85057497221425 L929.5601978503706,103.97506944278614\\n\" +\n           \"C931.2575419926493 94.63884556141394 924.4009024290958 85.50356114695066 917.9752541507669 77.92302890236405\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M969.7487246498594,118.14405893006331 C972.0638431812057 99.19930998218737 976.1984190386901 79.42529273468179 980.9737930237332 59.4105612768605\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M929.1339247252803,105.85057497221425 L969.7487246498594,118.14405893006331\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M971.8579382427416,227.15673716921242 C970.4630670832319 203.84364076833472 969.1725112599182 180.52433962820754 967.9984803473501 157.1983574221888\\n\" +\n           \"L967.8361375061545,152.91201043459802\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M967.8361375061545,152.91201043459802 C967.5493000647148 141.752623606876 968.2858971213234 130.11383839256703 969.7487246498594 118.14405893006331\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M967.8361375061545,152.91201043459802 C967.8361375061545 152.91201043459802 947.9687756981655 153.9185214303643 939.422158822113 158.3901945676222\\n\" +\n           \"C934.4449999290458 160.98770649216615 931.1221805661828 165.99086494637922 927.5326937585078 170.557896910664\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M927.5326937585078,170.557896910664 C924.7173571890524 174.15903192380242 921.7362821390124 177.49067121497302 917.6508108144444 179.17193584766932\\n\" +\n           \"C913.6716682223123 180.80374937732824 919.7759272295583 166.44592309036432 919.7759272295583 166.44592309036432\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M927.5326937585078,170.557896910664 C926.6711970132332 169.59159455915295 925.693700966732 168.82301053272835 924.608513291687 168.32078659771975\\n\" +\n           \"C923.0230801554345 167.58704948782423 921.4111166728301 166.96702404053417 919.7759272295583 166.44592309036432\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M908.3766394514271,204.9189406896067 C914.6540669702845 201.85040301839987 920.7510683323458 198.80821416550725 926.5635947017291 196.06681784413874\\n\" +\n           \"C933.8679989289569 192.62179831118874 933.3458971227313 177.08881329407464 927.5326937585078 170.557896910664\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M883.5958682648385,245.1645144661881 C897.3059405167512 242.92096317779095 912.2407548172451 240.03941952043309 925.8542378837078 237.24350300035357\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M925.8542378837078,237.24350300035357 C951.1261021860535 232.05299669867944 971.8579382427416 227.15673716921242 971.8579382427416 227.15673716921242\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M908.3766394514271,204.9189406896067 L925.8542378837078,237.24350300035357\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M850.1220326345799,225.81862710815244 C869.3029781853753 223.49620831002258 889.6446029206082 214.08954945529894 908.3766394514271 204.9189406896067\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M793.0139594468931,252.13139986843316 C811.4551864936951 251.69958936881545 829.8741672160429 250.97519217403996 848.2314678741407 249.50165400277953\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M848.2314678741407,249.50165400277953 L858.060810839458,248.63787906178428\\n\" +\n           \"C865.4680746390993 247.92855341593884 874.2478019100585 246.69457550679627 883.5958682648385 245.1645144661881\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M850.1220326345799,225.81862710815244 L848.2314678741407,249.50165400277953\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M919.7759272295583,166.44592309036432 C901.3150837186656 160.56496059200254 879.8959276581951 167.29002555431447 860.2690325465177 165.35180038212607\\n\" +\n           \"C857.0777040771807 165.03664543088215 853.5027443636758 164.8088660721415 850.3429876060355 163.86970132131563\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M817.2133009369861,220.64362158436603 C827.3503187138064 226.0369648799062 838.5239965474462 227.2226741253167 850.1220326345799 225.81862710815244\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M850.3429876060355,163.86970132131563 L817.2133009369861,220.64362158436603\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M850.3429876060355,163.86970132131563 C848.0527257769648 163.18886455817807 845.9805927087158 162.13433588687053 844.430731720553 160.4020265347785\\n\" +\n           \"C841.3424719843687 156.95021939624024 839.2984451896889 148.61352186069016 843.4411987250379 146.5423111362209\\n\" +\n           \"C851.2786709821368 142.6238891366689 859.8686857296775 140.68780913236188 868.601758556843 139.1267190766602\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M868.601758556843,139.1267190766602 C881.327942455371 136.8506867515612 894.3580331267885 135.37105855694358 905.8049881331779 129.71257837832107\\n\" +\n           \"C915.6946267850057 124.82391372873779 926.2407860323045 116.44964445702385 929.1339247252803 105.85057497221425\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M868.601758556843,139.1267190766602 L837.783904654535,109.62258122983991\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M776.4796811355358,37.831347049704036 C776.4796811355358 37.831347049704036 772.5923487998244 70.33461620386797 784.0452915791999 77.25299537718283\\n\" +\n           \"C799.5882996833346 86.64206032143045 820.4501736729593 73.17857932547554 838.4860270809494 75.28752059966827\\n\" +\n           \"C839.666318151345 75.42553261926115 840.6962619160847 76.14756278098466 841.5120968212161 77.17145838485034\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M841.5120968212161,77.17145838485034 C843.0278824797466 79.0742183220437 843.8041092759672 82.01942927248619 843.4316907610706 84.19595619414875\\n\" +\n           \"C842.0521265402751 92.2585485374936 841.7080127113068 102.60211529152404 837.783904654535 109.62258122983991\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M917.9752541507669,77.92302890236405 L915.702927295201,75.27238182538728\\n\" +\n           \"C908.3734103398418 66.76834490658294 891.2368012970306 61.425532768149054 881.040190279319 54.7704500150152\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M841.5120968212161,77.17145838485034 L881.040190279319,54.7704500150152\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M842.8834864573414,15.70276954157386 C848.8965270964703 11.766676679387972 854.6603623191088 7.4872877684849435 860.1256081365474 3.025946916842063\\n\" +\n           \"C865.1294268425569 -1.0587258596512878 869.8075900803327 -5.5462376440365535 874.1866499256103 -10.339691315560739\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M874.1866499256103,-10.339691315560739 C885.2647754358293 -22.466136940424896 894.4286085185278 -36.55064390836405 902.1080683905923 -51.02429490467554\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M881.040190279319,54.7704500150152 C874.6657726045513 50.6135070086739 871.001887722715 45.942957627310584 874.1361748291358 39.665228470346115\\n\" +\n           \"C881.4720137596588 24.972123345867065 903.0105622626693 27.652210905612602 921.4390507599801 25.766201756614347\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M921.4390507599801,25.766201756614347 C931.1061102642121 24.78082354476884 939.9185738216424 22.53965698702492 945.382658514029 15.8798599679762\\n\" +\n           \"C948.0589976974079 12.617854212416798 950.2439455117001 9.093525488018134 952.0282638435365 5.364860514333211\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M874.1866499256103,-10.339691315560739 L921.4390507599801,25.766201756614347\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M902.1080683905923,-51.02429490467554 L903.4302019876545,-53.557998382209824\\n\" +\n           \"C905.8744831781909 -58.301751586753745 907.9002579729246 -63.39689160643579 909.3778984319193 -68.65656323918009\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M952.0282638435365,5.364860514333211 C960.1028206410172 -11.501029111685005 959.9736388857561 -32.55290266205625 960.0542479039369 -52.41342988697926\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M960.0542479039369,-52.41342988697926 C960.0716971674389 -56.77919895729526 960.0992718946426 -61.087489034326005 960.2260719902201 -65.28136155880584\\n\" +\n           \"L960.3508572612714,-69.1229698984804\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M909.3778984319193,-68.65656323918009 L960.0542479039369,-52.41342988697926\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M909.3778984319193,-68.65656323918009 C911.8421770583336 -77.41783813497808 912.7847107462173 -86.6363999066343 911.6053842515486 -95.44776594694957\\n\" +\n           \"C911.0603269351799 -99.520174689725 907.6988303920074 -104.35674135319667 904.147663587922 -108.46062149500831\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M904.147663587922,-108.46062149500831 C899.7503723630069 -113.5407033488171 895.0630948845394 -117.499856090357 895.0518703681133 -117.50925495722412\\n\" +\n           \"L893.5274433960901,-118.5927161804145\\n\" +\n           \"L892.8460837846842,-119.06648165061448\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M960.3508572612714,-69.1229698984804 C960.9096667033111 -85.36567728654632 961.7725887503865 -102.43241467976058 959.4470844890535 -118.5170704303135\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M959.4470844890535,-118.5170704303135 C958.7366790562081 -123.43082969637021 957.7287596526184 -128.2529517132154 956.3237854631411 -132.93196104522687\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M904.147663587922,-108.46062149500831 L959.4470844890535,-118.5170704303135\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M892.8460837846842,-119.06648165061448 C888.3059037325746 -122.21125296963304 877.4304135253585 -129.40836516536302 867.0548193306929 -133.7381178469591\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M867.0548193306929,-133.7381178469591 C862.5134929496502 -135.6333416404456 858.0678957230974 -136.9793979284977 854.2908365494942 -137.19637069903573\\n\" +\n           \"C847.3850646384196 -137.59307204666646 840.4291662230478 -137.43685444285146 833.4898008426364 -136.80401293557685\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M901.1617619762444,-176.55756480116122 L898.8794560542555,-177.0792493791536\\n\" +\n           \"C889.3052546630437 -179.207488473514 879.5659212113931 -180.49011899769462 869.749056800089 -181.14731948813582\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M869.749056800089,-181.14731948813582 C849.175099023805 -182.52467644256083 828.2605934987695 -181.15490072064443 807.8119707498737 -179.06488933010462\\n\" +\n           \"C797.9966687466422 -178.06168763577776 788.246611320825 -176.46799541162486 778.5720958456816 -174.4362414442333\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M867.0548193306929,-133.7381178469591 L869.749056800089,-181.14731948813582\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M779.2644019696556,-122.94140471646999 C769.9603029555095 -119.07526213930905 760.8168822154478 -114.39396889755317 752.2608898055081 -108.86191464997611\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M752.2608898055081,-108.86191464997611 C742.2198499750367 -102.36967688376288 732.9878355024249 -94.70574263111016 725.2545782268026 -85.8125566952515\\n\" +\n           \"C721.4291168069452 -81.4133057089322 717.7452778367791 -76.56247019401027 714.5058993260643 -71.40340822271905\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M735.7039917300629,-162.88644225308462 L724.6650714631126,-159.2701673344646\\n\" +\n           \"C721.6782493009305 -158.26658395903956 718.2656408496413 -157.38726221046062 714.7411163412479 -156.4748995593758\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M714.7411163412479,-156.4748995593758 C702.2436359344489 -153.23527514918538 688.3371800829625 -149.5791616084329 687.055461880987 -138.479213740546\\n\" +\n           \"C684.2842798277757 -114.48019720504075 714.5058993260643 -71.40340822271905 714.5058993260643 -71.40340822271905\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M752.2608898055081,-108.86191464997611 L714.7411163412479,-156.4748995593758\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M709.1166168555643,-6.228221264928443 C714.1187971644736 5.967141670122315 721.8927530601662 17.076453989935413 731.8412485689585 24.830221996793398\\n\" +\n           \"C736.7775243414898 28.677510978756146 742.4374530750038 31.565443962265775 748.4973424782299 33.63002063749352\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M748.4973424782299,33.63002063749352 C757.3106903248007 36.63272067093265 766.9701299167067 37.893676704795475 776.4796811355358 37.831347049704036\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M644.1223805957525,16.436920440133527 C660.8342617518225 24.37879539020946 676.4213442405198 35.62536109444227 691.5027423984141 46.167755491042655\\n\" +\n           \"C698.1269876902032 50.798321285720725 704.1237979085028 56.298387216912644 709.6259848688594 62.30654565558853\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M709.6259848688594,62.30654565558853 C716.1874568601439 69.47139104369631 722.0454739207879 77.35884818820576 727.425301388166 85.35592379212811\\n\" +\n           \"L736.2466345197048,98.71810096684895\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M748.4973424782299,33.63002063749352 L709.6259848688594,62.30654565558853\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M837.783904654535,109.62258122983991 C836.3000557596704 112.27949586057895 834.3036700936124 114.46099177889869 831.5447854178652 115.86378469295732\\n\" +\n           \"C817.7073536955747 122.89961744792471 787.3551790276088 98.53717941290265 785.0165633566113 113.88346026424547\\n\" +\n           \"C784.1642633725733 119.47635656048188 783.548123265016 125.41956311035233 783.2315308109253 131.54005230773353\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M783.2315308109253,131.54005230773353 C781.4841422691231 165.177353572078 788.7864175785757 204.1732555358107 815.6743044279189 219.78775409086495\\n\" +\n           \"L817.2133009369861,220.64362158436603\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M736.2466345197048,98.71810096684895 C743.9076194233294 110.57829293136835 751.2334677835597 122.69516083309696 757.8235358994477 135.1656214157765\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M757.8235358994477,135.1656214157765 C763.1098259786899 145.1689158934445 767.9226884567383 155.3997249737035 772.0553432516522 165.90806940108274\\n\" +\n           \"C782.8807540920251 193.4338565649921 793.0139594468931 252.13139986843316 793.0139594468931 252.13139986843316\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M783.2315308109253,131.54005230773353 L757.8235358994477,135.1656214157765\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M704.4275535900722,253.82843848874074 C720.7268171675 253.2394771930826 737.0581372324204 252.99425097600883 753.3941483587594 252.77588645353617\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M753.3941483587594,252.77588645353617 C766.6025069704319 252.59932871490278 779.8139323551355 252.440331755292 793.0139594468931 252.13139986843316\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M744.653808497309,602.4812522125617 C744.653808497309 602.4812522125617 760.5230279542919 590.1306885523782 779.482291114352 573.7810546564887\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M779.482291114352,573.7810546564887 C792.8302911685672 562.26945647147 807.7197327144629 548.7628025672144 819.633612883211 536.2133022037855\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M704.4275535900722,253.82843848874074 C704.4275535900722 253.82843848874074 705.829983978874 271.7617347890537 706.6937180741573 295.06398202127946\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M705.70064837307,368.20444746244755 C705.3763695647684 371.394284255419 704.996598490529 374.42242128700224 704.5548476291966 377.2468180470715\\n\" +\n           \"C703.2189440742214 385.7872439526881 701.0316888658909 395.732048647753 698.3440855748705 406.29562045632525\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M507.6520301544564,415.09773221757564 C511.63762425257136 430.2040666804028 515.2465888424586 445.41351136734005 518.5372171162069 460.70255995624177\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M518.5372171162069,460.70255995624177 C520.828208457714 471.3470519742954 522.9648853858511 482.0301322160263 524.9669228655197 492.74386688784716\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M482.09848714008064,333.9462363319804 C482.09848714008064 333.9462363319804 517.323091858728 303.41980870728105 538.0169442920728 293.26859164369796\\n\" +\n           \"L542.9170486834331,290.8789470208246\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M542.9170486834331,290.8789470208246 C562.7386535554081 281.2744389841399 583.1852055302755 272.18292043920053 604.3075363604702 265.98924297501117\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M524.9669228655197,492.74386688784716 C524.9669228655197 492.74386688784716 556.0075962798669 492.92325215601585 585.9956368806747 495.24838114496754\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M585.9956368806747,495.24838114496754 C598.3707695459092 496.20784230328127 610.5666951157922 497.5326124205574 620.3292987450449 499.3608098272968\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M507.6520301544564,415.09773221757564 C507.6520301544564 415.09773221757564 522.4894087137568 398.3078610949835 532.740321162285 395.8872702295537\\n\" +\n           \"C541.793053727864 393.7504407927993 552.349038560271 391.5948744458292 563.7010739551706 389.4805879139409\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M575.1082287853533,443.5849957846601 L518.5372171162069,460.70255995624177\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M542.9170486834331,290.8789470208246 L554.3337444482411,345.0393671932392\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M554.3337444482411,345.0393671932392 L563.7010739551706,389.4805879139409\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M563.7010739551706,389.4805879139409 L575.1082287853533,443.5849957846601\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M575.1082287853533,443.5849957846601 L585.9956368806747,495.24838114496754\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M706.6937180741573,295.06398202127946 C706.6937180741573 295.06398202127946 646.2357238678793 304.13858028281317 617.8038590124445 314.75123869344947\\n\" +\n           \"L617.5883724399953,314.8311828319729\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M617.5883724399953,314.8311828319729 C599.993006388448 321.3708928245677 574.9291270168491 334.0427160628345 554.3337444482411 345.0393671932392\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M563.7010739551706,389.4805879139409 C585.802382020997 385.3472650607781 610.9290988417574 381.36857068599386 633.8359915141075 377.9935718994451\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M633.8359915141075,377.9935718994451 C673.0123118271033 372.21633468059554 705.70064837307 368.20444746244755 705.70064837307 368.20444746244755\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M698.3440855748705,406.29562045632525 L644.3607027514838,422.6302058281184\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M644.3607027514838,422.6302058281184 L575.1082287853533,443.5849957846601\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M604.3075363604702,265.98924297501117 C604.3075363604702 265.98924297501117 610.0034635757582 286.29262394898126 617.5883724399953 314.8311828319729\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M617.5883724399953,314.8311828319729 C622.5501569484154 333.47958817663516 628.327051336071 355.67708401639675 633.8359915141075 377.9935718994451\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M633.8359915141075,377.9935718994451 C637.5827149922615 393.1789620985594 641.2051150855953 408.41954407225046 644.3607027514838 422.6302058281184\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M644.3607027514838,422.6302058281184 C647.1674701518882 435.22573263089834 649.6084398458551 447.0158002567693 651.4466010843178 457.2514263092514\\n\" +\n           \"C654.3879483717235 473.6841689160787 647.4791525440432 507.17575237487364 647.4791525440432 507.17575237487364\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M620.3292987450449,499.3608098272968 L623.933860355385,500.08278321215533\\n\" +\n           \"C631.8826123027542 501.79010407654346 639.8083910045826 504.15064544141165 647.4791525440432 507.17575237487364\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M647.4791525440432,507.17575237487364 C653.0440144606673 509.3703591399166 658.474658475888 511.914732877491 663.6824840820341 514.8132054297689\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M882.9444731735134,326.589261801309 C883.6072246159035 303.6521898166959 883.7547070333027 282.520807765172 883.7452203667041 267.61740116758966\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M883.7452203667041,267.61740116758966 C883.736600769338 253.77152886795022 883.5958682648385 245.1645144661881 883.5958682648385 245.1645144661881\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M805.4825173174523,311.9230776445544 L883.7452203667041,267.61740116758966\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M805.4825173174523,311.9230776445544 L807.8032015437036,312.76810614029455\\n\" +\n           \"C817.7241633202848 316.880177142727 825.8857263638356 326.42993305697433 829.5768841731467 336.51506887798286\\n\" +\n           \"C831.1941381669861 340.9337979130285 829.7735127740058 348.351692827219 826.2306800093647 351.66555982459033\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M878.9080263548861,398.1350604770616 C879.8398635213784 388.29620201039745 880.5969713039219 377.92069364537855 881.2109190814331 367.39782114678485\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M881.2109190814331,367.39782114678485 C882.0067080040221 353.7594017365899 882.5615639002089 339.8729714661835 882.9444731735134 326.589261801309\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M826.2306800093647,351.66555982459033 L881.2109190814331,367.39782114678485\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M826.2306800093647,351.66555982459033 C825.2073506118454 352.62249491751726 824.0070507377549 353.23708274817227 822.6518622914182 353.338208099548\\n\" +\n           \"C802.5246878477335 354.8401155230664 783.4256284705804 340.260438607983 763.2783610130318 341.46314014591314\\n\" +\n           \"C757.5279597419204 341.80641332015637 755.465933459302 351.603864783289 756.3513499993924 357.2960514282866\\n\" +\n           \"C757.9839774303094 367.7919249948395 761.0966765448206 380.52828500215736 770.2050125783475 385.9933603862305\\n\" +\n           \"C783.3657012861975 393.889880192919 803.6856161373298 383.4011482613643 815.7247098554868 392.9205481777343\\n\" +\n           \"C819.5822673552972 395.9707472542398 820.9610331799001 403.2061306790104 819.9658483878806 409.3964207914617\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M874.0338730096884,434.42569860856804 L874.3787635555251,432.6057755033058\\n\" +\n           \"C875.0151703590053 429.135715435681 875.6092450196898 425.461820498778 876.1637347997818 421.61791218550945\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M876.1637347997818,421.61791218550945 C877.2155312511871 414.3281278165147 878.1239620036824 406.4225135659428 878.9080263548861 398.1350604770616\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M819.9658483878806,409.3964207914617 L841.1304224028377,413.9991323113687\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M841.1304224028377,413.9991323113687 L876.1637347997818,421.61791218550945\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M841.1304224028377,413.9991323113687 L799.9634620489284,471.5835853658653\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M799.9634620489284,471.5835853658653 C801.317986455588 476.2112826455156 801.6905232888323 480.6794123821735 800.4436212081029 483.82293833351696\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M800.4436212081029,483.82293833351696 L819.633612883211,536.2133022037855\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M819.9658483878806,409.3964207914617 C819.1474652118906 414.4869175620897 816.7241229568783 418.8708544643756 812.7540985881084 419.6411275225866\\n\" +\n           \"C791.5347435565175 423.75815451668353 770.9610391472229 404.16125593636593 749.4069344678151 405.78344911103477\\n\" +\n           \"C747.6789123168832 405.91350256399016 745.6774543889006 406.25738849582444 743.5438383565229 406.77822025199924\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M743.5438383565229,406.77822025199924 C731.1347962694317 409.8091842054092 714.2553094421655 418.8273356542179 720.7086716068562 426.56930254224613\\n\" +\n           \"C736.3589534421609 445.34462626732335 770.0565605859052 437.8326354547321 788.9983594413684 453.2810126712908\\n\" +\n           \"C793.4303707570621 456.8956314915697 797.8698381633014 464.4302265595843 799.9634620489284 471.5835853658653\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M707.2413696399952,339.53972762156354 C707.0494917415436 349.72448205410893 706.5790350447795 359.55868137822836 705.70064837307 368.20444746244755\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M743.5438383565229,406.77822025199924 L707.2413696399952,339.53972762156354\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M753.3941483587594,252.77588645353617 C753.3941483587594 252.77588645353617 738.7441987911006 286.750073398854 746.9295523273072 300.81228593232663\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M746.9295523273072,300.81228593232663 C747.3624932990168 301.55606672440865 747.8593105960572 302.24414851363247 748.4255496510801 302.86855957720206\\n\" +\n           \"C761.3526633704523 317.1238619168168 787.0495768213339 306.0722394176011 805.4825173174523 311.9230776445544\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M706.6937180741573,295.06398202127946 C707.1145442498921 306.4515265525054 707.4055030708926 319.1319517523919 707.3364197730535 331.6143024608858\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M707.3364197730535,331.6143024608858 L707.2413696399952,339.53972762156354\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M746.9295523273072,300.81228593232663 L707.3364197730535,331.6143024608858\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M800.4436212081029,483.82293833351696 C799.6497214629434 485.82385265211406 798.1999001385207 487.2881571978058 795.9298768512198 487.91553676999587\\n\" +\n           \"C769.1632909375859 495.31317419223103 718.9728218437358 446.7834483365315 713.7794126647453 474.06354478068596\\n\" +\n           \"C712.6176916711541 480.1234186580311 713.3948301729387 486.70056499238603 715.5376700732145 493.4890226323346\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M715.5376700732145,493.4890226323346 C727.217997256374 530.4948512948139 779.482291114352 573.7810546564887 779.482291114352 573.7810546564887\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M698.3440855748705,406.29562045632525 C689.5765962332828 440.7775513735637 675.4565772989712 481.88082903440613 668.2905717029396 502.050091293019\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M668.2905717029396,502.050091293019 L663.6824840820341,514.8132054297689\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M715.5376700732145,493.4890226323346 L668.2905717029396,502.050091293019\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/>\\n\" +\n           \"<path d=\\\"M554.3337444482411,345.0393671932392 C529.9371044748428 358.0650254175615 505.41658612175496 358.0376954839948 499.35531037752264 358.86185949161785\\n\" +\n           \"C496.56624164170705 359.2432787679847 493.467865428428 361.30194748115497 492.50697348492486 363.94790132625474\\\" style=\\\"fill:none;stroke:black;stroke-width:1px;\\\"/></svg>\",\n}\n\n\nexport {sampleFiles};","import React, { useState, KeyboardEvent } from \"react\";\n\ninterface TextAreaProps {\n  onEnter: (text: string) => void;\n  className: string\n}\n\nexport function TextAreaWithCallback({ onEnter,className }: TextAreaProps) {\n  const [text, setText] = useState(\"\");\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      onEnter(text);\n      setText(\"\");\n    }\n  };\n\n  return (\n      <textarea\n          className={className}\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyDown={handleKeyDown}\n      />\n  );\n}\n","import {Bounds} from \"../Bounds\";\nimport {Path} from \"./Path\";\nimport {Shape, shapeColorFunctionByMedianArea} from \"./Chain\";\n\n// todo, local storage compression\n// https://chat.openai.com/chat/03c5e364-6f07-4e25-b274-af68833bd945\n\nexport function exportDocumentWithPaths(paths:Path[], vb:Bounds):string {\n    let svg = exportPrefix(vb);\n    let v = Object.values(paths).map(path=>\"\\n\"+`<path d=\"${path.fullSvgPath()}\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>`);\n    v.push(exportSuffix())\n    return svg.concat(...v);\n}\nexport function exportDocumentWithShapes(shapes:Shape[], vb:Bounds):string {\n    let svg:string[] = [exportPrefix(vb)];\n    let shapeColorFunction = shapeColorFunctionByMedianArea(shapes);\n    let v: [Path,string][] = shapes.map(s=>[s.toChain(), shapeColorFunction(s)]);\n    let w = v.map(x=>`\\n<path d=\"${x[0].fullSvgPath()}\" style=\"fill:${x[1]};stroke:black;stroke-width:1px;\"/>`);\n    svg = svg.concat(...w);\n    svg.push(exportSuffix());\n    \n    return svg.join(\"\");\n}\n\n\nexport function exportPrefix(vb:Bounds) {\n\n    return  `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg width=\"100%\" height=\"100%\" viewBox=\"${vb.toViewBox()}\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" xmlns:serif=\"http://www.serif.com/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\">`;\n\n}\nexport function exportSuffix() {\n    return '</svg>'\n}\n\n// ","import {nullProgress, ProgressContext, StateContext} from \"../App\";\nimport {Path} from \"../../Math/Path\";\nimport {ImportedSVG, scrapePathsFromParsedDom} from \"../svgParsing\";\nimport {Mos} from \"../Mos\";\nimport React, { useState, useEffect } from 'react';\nimport {sampleFiles} from \"../../Test/sample-files\";\nimport {UserCoo} from \"../UserCoo\";\nimport ProgressBar from \"../ProgessBar\";\nimport {Chain} from \"../../Math/Chain\";\nimport {TextAreaWithCallback} from \"./TextAreaWithCallback\";\nimport './FileInput.css'\nimport {exportDocumentWithPaths, exportDocumentWithShapes} from \"../../Math/Exporter\";\nimport {OriginalSvgDocument} from \"../../Math/const\";\n\nexport function  FileInput() {\n\n    //https://chat.openai.com/chat/4e94f4bc-d53f-4632-8cca-9f297d2a07a6\n    const { state, setState } = React.useContext(StateContext);\n    const {progress, setProgress} = React.useContext(ProgressContext);\n\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        setProgress({message:\"Loading...\",progress:0,visible:true});\n        setSvgFile(e.dataTransfer.files[0]);\n        setProgress({...nullProgress});\n    };\n\n    // @ts-ignore\n    const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (!(e?.target?.files)) return;\n        setProgress({message:\"Loading...\",progress:0,visible:true});\n        setSvgFile(e.target.files[0]);\n        e.target.value='';\n        setProgress({...nullProgress});\n    };\n\n\n    const setSvgFile = (svgFile: any) => {\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            let svgString = fileReader.result;\n            resetStateWithNewDocumentFromString(svgString as string);\n        };\n        // @ts-ignore\n        fileReader.readAsText(svgFile); // triggers above callback on completion\n    };\n\n    const prog = (prog:number)=>{\n        setProgress({...progress,progress:prog, visible:true});\n    }\n\n    function sepia(svgElement:SVGSVGElement) {\n        // Create the filter.\n        const svgDefs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        const svgFilter = document.createElementNS('http://www.w3.org/2000/svg', 'filter');\n        svgFilter.setAttribute('id', 'black-to-blue');\n\n        const feColorMatrix = document.createElementNS('http://www.w3.org/2000/svg', 'feColorMatrix');\n        feColorMatrix.setAttribute('in', 'SourceGraphic');\n        feColorMatrix.setAttribute('type', 'matrix');\n        feColorMatrix.setAttribute('values', '1 0 0 0 0.5 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\n\n\n        // Append the filter to the defs, and the defs to the SVG.\n        svgFilter.appendChild(feColorMatrix);\n        svgDefs.appendChild(svgFilter);\n        svgElement.appendChild(svgDefs);\n\n        // Apply the filter to the SVG.\n        svgElement.style.filter = 'url(#black-to-blue)';\n    }\n    \n    // AI generated, not checked\n    function removeFillColorFromSvgPaths(svgElement: SVGSVGElement): void {\n        const paths = svgElement.getElementsByTagName('path');\n\n        for (let i = 0; i < paths.length; i++) {\n            const path = paths[i];\n            if (path.hasAttribute('fill')) {\n                path.setAttribute('fill', 'none');\n            }\n\n            if (path.hasAttribute('style')) {\n                \n                path.setAttribute('style', path.getAttribute('style').replace( /(<=(;|^)\\s*)fill\\\\ *:/, 'xxxfill:') );\n                \n                // const styles = path.getAttribute('style')!.split(';').map(style => style.trim());\n                // const styleObject: Record<string, string> = {};\n                //\n                // styles.forEach(style => {\n                //     const [key, value] = style.split(':').map(s => s.trim());\n                //     styleObject[key] = value;\n                // });\n                //\n                // if (styleObject.fill) {\n                //     delete styleObject.fill;\n                // }\n                //\n                // const newStyle = Object.entries(styleObject).map(([key, value]) => `${key}: ${value}`).join('; ');\n                // path.setAttribute('style', newStyle);\n            }\n        }\n    }\n\n    /**\n     * Given SVG doc as a string, scrape the paths from it,\n     * create a Mos, push the paths into the Mos, and \n     * reset the State to use the new Mos.\n     */\n    async function resetStateWithNewDocumentFromString(svgString: string, reprocess:boolean=true) {\n        setProgress({message:\"Loading...\",progress:0,visible:true});\n        const parser = new DOMParser();\n        const svgDoc = parser.parseFromString(svgString as string, 'image/svg+xml');\n        let s = svgDoc as unknown as SVGSVGElement;\n        OriginalSvgDocument.svg = s.cloneNode(true) as unknown as SVGSVGElement;\n        // sepia(svgDoc.documentElement as unknown as SVGSVGElement);\n        let breakChains = reprocess;\n        let {paths,viewBox}: ImportedSVG = scrapePathsFromParsedDom(svgDoc.documentElement,breakChains);\n        let mos = new Mos();\n\n        let t = Date.now();\n        if (reprocess) {\n            await mos.accept(paths, true, false, prog);  // why not true,true??\n        } else {\n            for (let path of paths) mos._accept(path);\n        }\n        // await mos.accept(paths, false, false, prog); // debug\n        console.log(\"Loaded document in \"+(Date.now()-t)+\" milliseconds\");\n                setState({...state,mos:mos,coo:state.coo.updateViewBox(viewBox)});\n        setProgress({...nullProgress});\n        removeFillColorFromSvgPaths(s);\n    }\n\n    async function paste() {\n        // resetStateWithNewDocumentFromString(await navigator.clipboard.readText())\n        resetStateWithNewDocumentFromString(localStorage.getItem(\"clip\"), false);\n    }\n\n    function acceptWithoutReprocessing(input:string) {\n        resetStateWithNewDocumentFromString(input, false);\n    }\n\n    const hammer = ()=>{\n        let undo = [...state.undo, state.mos];\n        let mos = new Mos();\n        let allUnchained = Object.values(state.mos.paths)\n            .flatMap(path=>path.unchainRecursive())\n            .map(cs=>cs.path);\n        let t = Date.now();\n        // Todo this has to be made synchronous!\n        // mos.acceptSync(allUnchained, true);\n        mos.acceptSync(Object.values(state.mos.paths), true);\n        console.log(\"hammered in \"+((Date.now()-t)/1000)+\" seconds\");\n        setState({...state,mos:mos, undo:undo});\n    };\n\n    const saveFile = (data:string, filename:string)=>{\n        let svgBlob = new Blob([data], {type: 'image/svg+xml;charset=utf-8'})\n        let url = URL.createObjectURL(svgBlob);\n\n        //https://stackoverflow.com/questions/31359539/saving-inline-svg-as-a-image-file\n        let triggerDownload = (imgURI:string) => {\n            let a = document.createElement('a')\n            a.setAttribute('download', filename)\n            a.setAttribute('href', imgURI)\n            a.setAttribute('target', '_blank')\n            a.click()\n        }\n\n        triggerDownload(url)\n    }\n    const saveButton1d = ()=>{\n        let paths = Object.values(state.mos.paths);\n        let bounds = paths.map(p => p.bounds()).reduce((a, b) => a.union(b));\n        let data = exportDocumentWithPaths(paths, bounds);\n        saveFile(data, \"mosaic-edges.svg\");\n    }\n\n    const saveButton2d = ()=>{\n        let shapes = state.mos.shapes();\n        let paths = shapes.map(s=>s.toChain());\n        let bounds = paths.map(p => p.bounds()).reduce((a, b) => a.union(b));\n        let data = exportDocumentWithShapes(shapes, bounds);\n        saveFile(data, \"mosaic-paths.svg\");\n        // console.log(data);\n    }\n    \n    \n    return <div style={{position:\"relative\"}}>\n        <input type=\"file\" accept=\".svg\" onChange={handleFileSelect}/>\n        <button id=\"saveButton1d\" onClick={saveButton1d}>Save SVG file (1-d edges)</button>\n        <br/>\n        <button id=\"saveButton2d\" onClick={saveButton2d}>Save SVG file (2-d edges)</button>\n        <hr/>\n        Test viles:\n        <br/>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.simple)}>simple</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.web)}>web</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.test2)}>test2</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.test4)}>test4</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.test5)}>test5</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.ee)}>ee</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.test6)}>test6</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.cat)}>cat</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.test5b)}>test5b</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.test5c)}>test5c</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.testInners)}>testInners</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.t)}>tttttttttttt</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles.testCross)}>testCross</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles[\"DECO-1000\"])}>DECO-1000</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles[\"complexFromWeb\"])}>complexFromWeb</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles[\"test7\"])}>test7</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles[\"test8\"])}>test8</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles[\"testNear\"])}>testNear</button>\n        <button  onClick={() => resetStateWithNewDocumentFromString(sampleFiles[\"web2\"])}>web2</button>\n        <hr/>\n        <button  onClick={() => paste()}>Paste from clipboard</button>\n        <button onClick={hammer}>Reprocess current file</button>\n        <hr/>\n        Paste SVG to be imported without processing:\n        <div>\n            <TextAreaWithCallback className=\"pastedSvg\" onEnter={acceptWithoutReprocessing} />\n        </div>\n        {/*<hr/>*/}\n        {/*<div*/}\n        {/*    onDrop={handleDrop}*/}\n        {/*    onDragOver={(e) => e.preventDefault()}*/}\n        {/*    className=\"fileDropArea\"*/}\n        {/*>Drag files here*/}\n        {/*</div>*/}\n    </div>;\n};\n\n","import React, {useEffect} from \"react\";\nimport {StateContext} from \"../App\";\nimport \"./Toolbar.css\"\nimport {\n    DISTORTION_ORTHORGONAL, DISTORTION_STRETCHY,\n    END_TANGENTS_FIXED,\n    END_TANGENTS_FLOPPY,\n    END_TANGENTS_FREE\n} from \"../../Math/DragOptions\";\n\nexport const Edit = () => {\n    return <>\n        <EditToolSelector/>\n    </>\n}\nexport const UndoButton = () => {\n    // UNDO:  https://chat.openai.com/chat/863401a7-5788-4d6d-b8e0-299504e1b0fa\n    // keyboard handler: https://chat.openai.com/chat/ea8ca9ff-06fa-491d-8793-1d4c4e84c65a\n    const {state, setState} = React.useContext(StateContext);\n\n    function undo() {\n        let u = state.undo.slice();\n        if (u.length) {\n            let mos = u.pop();\n            setState({...state, mos: mos, undo: u})\n        }\n    }\n    function undoKeyHandler(event:KeyboardEvent) {\n        // @ts-ignore\n        let tagName = event.target.tagName?.toLowerCase() || \"none\";\n\n        if (event.key === 'z') {\n            let isTextField = ['input', 'textarea', 'select'].indexOf(tagName) > -1;\n            if (!isTextField) {\n               undo(); \n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('keydown', undoKeyHandler);\n        return () => {\n            window.removeEventListener('keydown', undoKeyHandler);\n        };\n    }, [state,setState]);\n\n    return <>\n                    <button className=\"undoButton\" onClick={undo} >[z]<br/>Undo </button>\n    </>\n}\nexport const EditToolSelector = () => {\n    const {state, setState} = React.useContext(StateContext);\n\n    const handleToolSelection = (tool: string) => {\n        setState({...state, toolSelection: tool});\n    };\n\n    // \"🖋️🌀\": Curve\n    // \"🖋️⚡\": Zig Zag\n    return (\n        <>\n            <div>\n                <table className=\"toolIconSet\" width=\"100%\">\n                    <tbody>\n                    <tr>\n                        <td width=\"33.3%\" onClick={() => handleToolSelection(\"Drag\")}\n                            className={state.toolSelection === 'Drag' && \"toolIcon selected\" || \"toolIcon\"}>\n                            <div >\n                                👆️<br/>Drag\n                            </div>\n                        </td>\n                        <td width=\"33.3%\" onClick={() => handleToolSelection(\"Pencil\")}\n                            className={state.toolSelection === 'Pencil' && \"toolIcon selected\" || \"toolIcon\"}>\n                            <div>\n                                ✏️🌀<br/>Pencil\n                            </div>\n                        </td>\n                        <td width=\"33.3%\"  >\n                            <div>\n                                <UndoButton/>\n                                \n                            </div>\n                        </td>\n\n                    </tr>\n                    </tbody>\n                </table>\n                {state.toolSelection === 'Drag' && <DragOptions/>}\n                {state.toolSelection === 'Pencil' && <PencilOptions/>}\n            </div>\n        </>\n    );\n};\n\nconst DragOptions: React.FC = () => {\n    const {state, setState} = React.useContext(StateContext);\n\n    const handleEndTangents = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        // @ts-ignore\n        setState({ ...state, dragOptions:{...state.dragOptions, endTangents:event.target.value} });\n    };\n\n    const handleDistortion = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        // @ts-ignore\n        setState({ ...state, dragOptions:{...state.dragOptions, distortion:event.target.value} });\n    };\n\n    return <>\n        <table width=\"100%\" border={0} cellPadding={0} cellSpacing={0}>\n            <tbody>\n            <SnappingSlider/>\n            <tr>\n                <td className=\"labelCell\">\n                    Scaling:\n                </td>\n                <td  className=\"controlCell\" >\n                    <select value={state.dragOptions.distortion} onChange={handleDistortion}>\n                        <option value={DISTORTION_STRETCHY}>Auto (Stretchy)</option>\n                        <option value={DISTORTION_ORTHORGONAL}>Rigid</option>\n                    </select>\n                </td>\n            </tr>\n            <tr>\n                <td className=\"labelCell\">\n                    End tangents:\n                </td>\n                <td  className=\"controlCell\" >\n                    <select value={state.dragOptions.endTangents} onChange={handleEndTangents}>\n                        <option value={END_TANGENTS_FLOPPY}>Auto (Smart)</option>\n                        <option value={END_TANGENTS_FIXED}>Fixed Angle</option>\n                        <option value={END_TANGENTS_FREE}>Free Rotating</option>\n                    </select>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <hr/>\n        <div className={'small'}>\n            <p><b>Snapping:</b> strength of magnetic snapping.</p>\n            <p><b>Rescaling, End Tangents:</b> These options affect smart redrawing of paths when an endpoint is dragged.  You can also use <b>Shift</b> and <b>Control</b> while dragging to toggle these.</p>\n        </div>\n    </>;\n};\nconst PencilOptions: React.FC = () => {\n\n    return (\n        <>\n            <div>\n                <table width=\"100%\" border={0} cellPadding={0} cellSpacing={0}>\n                    <tbody>\n                    <SnappingSlider/>\n                    <PencilSimplifyingSlider/>\n                    </tbody>\n                </table>\n            </div>\n            <hr/>\n            <div className={'small'}>\n                <p><b>Snapping:</b> strength of magnetic snapping.</p>\n                <p><b>Smoothing:</b> Reduce Smoothing (or zoom in) for drawing finer details.</p>\n                <p><b>Pause</b> while dragging to create a corner or to stop without snapping.</p>    \n            </div>\n        </>\n    );\n};\n\n\nconst SnappingSlider: React.FC = () => {\n    const { state, setState } = React.useContext(StateContext);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, snapping:parseInt(event.target.value) });\n    };\n\n    return (\n        <>\n            <tr >\n                <td className=\"labelCell\">\n                    Snapping: \n                </td>\n                <td  className=\"controlCell\" ><input type=\"range\" id=\"snappingSlider\"\n                                                     name=\"snappingSlider\"\n                                                     min={0} max={20} step={1}\n                                                     value={state.snapping}\n                                                     onChange={handleChange}/>\n                    {/*= {state.snapping}*/}\n                </td>\n            </tr>\n        </>\n    );\n};\n\n\nconst PencilSimplifyingSlider: React.FC = () => {\n    const { state, setState } = React.useContext(StateContext);\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, pencilSimplifying: parseInt(event.target.value) });\n    };\n\n    return (\n        <>\n            <tr >\n                <td className=\"labelCell\">\n                    Smoothing: \n                </td>\n                <td  className=\"controlCell\" >\n                        <input type=\"range\" id=\"pencilSimplifyingSlider\"\n                               name=\"pencilSimplifyingSlider\"\n                               min={-10} max={10}\n                               value={state.pencilSimplifying}\n                               onChange={handleChange}/>\n                    {/*= {state.pencilSimplifying < 0 ? \"less (\"+state.pencilSimplifying+\")\" :state.pencilSimplifying > 0 ? \"more (\"+state.pencilSimplifying+\")\" : \"default (0)\"}*/}\n                </td>\n            </tr>\n        </>\n    );\n};\n","import React from \"react\";\nimport {StateContext} from \"../App\";\nimport {\n    DISTORTION_ORTHORGONAL, DISTORTION_STRETCHY,\n    END_TANGENTS_FIXED,\n    END_TANGENTS_FLOPPY,\n    END_TANGENTS_FREE\n} from \"../../Math/DragOptions\";\n\nexport const ViewToolOptions = () => {\n    const {state, setState} = React.useContext(StateContext);\n\n    const handleThicknessSlider = (event: React.ChangeEvent<HTMLSelectElement>) => {\n        setState({...state, viewOptions: {...state.viewOptions, thickLines:parseFloat(event.target.value)}});\n    };\n    const handleScaleWithZoom = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({...state, viewOptions: {...state.viewOptions, scaleWithZoom: !state.viewOptions.scaleWithZoom}});\n    };\n    const toggleViewInners = () => {\n        setState({...state, viewOptions: {...state.viewOptions, viewInners: !state.viewOptions.viewInners}});\n    };\n    const toggleViewShapes = () => {\n        setState({...state, viewOptions: {...state.viewOptions, viewShapes: !state.viewOptions.viewShapes}});\n    };\n    return <div>\n        <div className=\"small\">\n            These options only affect the display, not the final SVG.\n        </div>\n        <hr/>\n        <div className=\"controlCell\">\n            Edge thickness:\n            <select value={state.viewOptions.thickLines} onChange={handleThicknessSlider}>\n                <option value=\".5\">0.5px (laser kerf)</option>\n                <option value=\"1\">1px</option>\n                <option value=\"2\">2px</option>\n                <option value=\"3\">3px</option>\n                <option value=\"4\">4px</option>\n                <option value=\"5\">5px</option>\n                <option value=\"6\">6px</option>\n                <option value=\"7\">7px</option>\n                <option value=\"8\">8px</option>\n            </select>\n        </div>\n        <div className=\"controlCell\"><label>\n            └ Scale with zoom:\n            <input type=\"checkbox\" id=\"scaleWithZoom\" name=\"scaleWithZoom\"\n                   checked={state.viewOptions.scaleWithZoom} onChange={handleScaleWithZoom}/>\n        </label></div>\n        <div className=\"controlCell\">\n            <label>Make polypaths visible:\n                <input type=\"checkbox\" id=\"viewInners\" name=\"viewInners\"\n                       checked={state.viewOptions.viewInners} onChange={toggleViewInners}/>\n            </label>\n        </div>\n        <div className=\"controlCell\">\n            <label>View 2-D shapes:\n                <input type=\"checkbox\" id=\"viewShapes\" name=\"viewShapes\"\n                       checked={state.viewOptions.viewShapes} onChange={toggleViewShapes}/>\n            </label>\n        </div>\n    </div>;\n};","import React from \"react\";\nimport {StateContext} from \"../App\";\nimport {exportDocumentWithPaths} from \"../../Math/Exporter\";\n\nexport const DebugToolOptions = () => {\n    const {state, setState} = React.useContext(StateContext);\n    const toggleViewLabels = () => {\n        setState({...state, viewOptions: {...state.viewOptions, viewLabels: !state.viewOptions.viewLabels}});\n    };\n    const dumpMos = () => {\n        console.log(state.mos.hString())\n    };\n    const dumpSvg = () => {\n        let paths = Object.values(state.mos.paths);\n        let bounds = paths.map(p => p.bounds()).reduce((a, b) => a.union(b));\n        console.log(exportDocumentWithPaths(paths, bounds))\n    };\n    const dumpView = () => {\n        let bounds = state.coo.effectiveViewBox;\n        let paths = Object.values(state.mos.paths).filter(path => path.bounds().isInside(bounds));\n        console.log(exportDocumentWithPaths(paths, bounds))\n    };\n    const saveSvg = () => {\n        let paths = Object.values(state.mos.paths);\n        let bounds = paths.map(p => p.bounds()).reduce((a, b) => a.union(b));\n        let doc = exportDocumentWithPaths(paths, bounds);\n        localStorage.setItem(\"clip\", doc)\n        // navigator.clipboard.writeText(doc);\n    };\n    const saveView = () => {\n        let bounds = state.coo.effectiveViewBox;\n        let paths = Object.values(state.mos.paths).filter(path => path.bounds().isInside(bounds));\n        let doc = exportDocumentWithPaths(paths, bounds);\n        // navigator.clipboard.writeText(doc);\n        localStorage.setItem(\"clip\", doc)\n    };\n    const cropView = () => {\n        let bounds = state.coo.effectiveViewBox;\n        // let paths = Object.values(state.mos.paths).filter(path=>path.bounds().isInside(bounds));\n        let mos = state.mos.clone();\n        let undo = [...state.undo];\n        undo.push(state.mos);\n        let paths = Object.keys(mos.paths);\n        for (let key of paths) {\n            let path = mos.paths[key];\n            if (!path.bounds().isInside(bounds)) mos._remove(path);\n        }\n        setState({...state, undo: undo, mos: mos});\n    }\n    const makeChains = () => {\n        let mos = state.mos.clone();\n        mos.accept([], true);\n        setState({...state, mos: mos});\n    };\n    const fragmentize = () => {\n        let mos = state.mos.fragmentizeAll();\n        setState({...state, mos: mos});\n    };\n    const smooth = () => {\n        let mos = state.mos.smoothAll();\n        setState({...state, mos: mos});\n    };\n    const linearize = () => {\n        let mos = state.mos.linearizeAll();\n        setState({...state, mos: mos});\n    };\n    return <div>\n        <div>\n            <input type='checkbox' checked={state.viewOptions.viewLabels} onChange={toggleViewLabels}/>\n            View Labels (for debugging)\n        </div>\n        <div>\n            <button onClick={dumpMos}>Dump Mos to console</button>\n        </div>\n        <div>\n            <button onClick={cropView}>Crop to viewbox</button>\n        </div>\n        <div>\n            <button onClick={dumpSvg}>Dump all SVG to console</button>\n        </div>\n        <div>\n            <button onClick={dumpView}>Dump viewport SVG to console</button>\n        </div>\n        <div>\n            <button onClick={saveSvg}>Save all SVG to clip</button>\n        </div>\n        <div>\n            <button onClick={saveView}>Save viewport SVG to clipboard</button>\n        </div>\n        <div>\n            <button onClick={makeChains}>Simplify paths (make chains)</button>\n        </div>\n        <div>\n            <button onClick={smooth}>Smooth paths</button>\n        </div>\n        <div>\n            <button onClick={fragmentize}>Fragmentize</button>\n        </div>\n        <div>\n            <button onClick={linearize}>Linearize</button>\n        </div>\n\n    </div>;\n};","import React, {useEffect} from \"react\";\nimport {StateContext} from \"../App\";\nimport './Inspect.css';\nimport './Toolbar.css';\nimport {\n    DISTORTION_ORTHORGONAL,\n    DISTORTION_STRETCHY,\n    END_TANGENTS_FIXED,\n    END_TANGENTS_FLOPPY, END_TANGENTS_FREE\n} from \"../../Math/DragOptions\";\n\nexport const Inspect = () => {\n    const {state, setState} = React.useContext(StateContext);\n    // const { state, setState } = React.useContext(StateContext);\n\n    const handleToolSelection = (tool: string) => {\n        setState({...state, inspectToolSelection: tool});\n    };\n\n    let loose = state.mos.looseEndsReport().totalCount;\n    let pointyCount = state.mos.pointyCornersReport().totalCount;\n    let tangentCount = state.mos.tangentCornersReport().totalCount;\n    let straightenIntersectionsCount = state.mos.straightenIntersectionsReport(state.straightenTolerance).totalCount;\n    return <div>\n        <table className=\"toolIconSet\" width=\"100%\"><tbody>\n            <tr>\n                <td width=\"33.3%\" onClick={()=>handleToolSelection(\"Loose Ends\")} className={state.inspectToolSelection==='Loose Ends'&&\"toolIcon selected\"||\"toolIcon\"}>\n                    <div >\n                        <>\n                            {loose && <div className=\"badge\">{loose}</div> }\n                            🌀<br/>Loose Ends\n                        </>\n                    </div>\n                </td>\n                <td width=\"33.3%\"  onClick={()=>handleToolSelection(\"PointyCorners\")}  className={state.inspectToolSelection==='PointyCorners'&&\"toolIcon selected\"||\"toolIcon\"}>\n                    <div>\n                        {pointyCount>0 && <div className=\"badge\">{pointyCount}</div> }\n                        🌀<br/>Pointies\n                    </div>\n                </td>\n                <td width=\"33.3%\"  onClick={()=>handleToolSelection(\"TangentCorners\")}  className={state.inspectToolSelection==='TangentCorners'&&\"toolIcon selected\"||\"toolIcon\"}>\n                    <div>\n                        {tangentCount>0 && <div className=\"badge\">{tangentCount}</div> }\n                        🌀<br/>Tangents\n                    </div>\n                </td>\n            </tr>\n        <tr>\n            <td width=\"33.3%\"  onClick={()=>handleToolSelection(\"StraightenIntersections\")}  className={state.inspectToolSelection==='StraightenIntersections'&&\"toolIcon selected\"||\"toolIcon\"}>\n                <div>\n                    {straightenIntersectionsCount>0 && <div className=\"badge\">{straightenIntersectionsCount}</div> }\n                    🌀<br/>Straighten<br/>Intersections\n                </div>\n            </td>\n        </tr>\n        </tbody></table>\n        <hr/>\n        { state.inspectToolSelection==='StraightenIntersections'&& <StraightenIntersectionsOptions/>}\n        { state.inspectToolSelection==='Loose Ends'&& <LooseEndsOptions/>}\n        { state.inspectToolSelection==='PointyCorners'&& <PointyCornersOptions/>}\n        { state.inspectToolSelection==='TangentCorners'&& <TangentCornersOptions/>}\n    </div>;\n};\n\nconst LooseEndsOptions: React.FC = () => {\n    const {state, setState} = React.useContext(StateContext);\n    let report = state.mos.looseEndsReport();\n    function commit() {\n        setState({...state, mos:report.autoFixed, undo:[state.mos, ...state.undo]});\n    }\n    return <>\n        {\n            !report.totalCount ? \n            <>There are no loose ends.</>\n            : report.autoFix.size ? \n            <button onClick={commit}>Commit auto-fix</button>\n            : \n            <>I couldn't fix the remaining <span className='badgeInline'>{report.totalCount}</span> loose ends, because I can't see where they're supposed to go. \n                You can fix them manually using the editing tools (or export to edit in your preferred vector editor).</>\n        }\n    </>;\n};\n\nconst StraightenIntersectionsOptions: React.FC = () => {\n    const {state, setState} = React.useContext(StateContext);\n    let report = state.mos.straightenIntersectionsReport(state.straightenTolerance);\n    const handleStraightenToleranceSlider = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, straightenTolerance:parseFloat(event.target.value) });\n    };\n    function commit() {\n        setState({...state, mos:report.autoFixed, undo:[state.mos, ...state.undo]});\n    }\n    return <>\n        <table width=\"100%\" border={0} cellPadding={0} cellSpacing={0}>\n            <tbody>\n            <tr >\n                <td className=\"labelCell\">\n                    Tolerance:\n                </td>\n                <td  className=\"controlCell\" ><input type=\"range\" id=\"straightenToleranceSlider\"\n                                                     name=\"straightenToleranceSlider\"\n                                                     min={0} max={Math.PI/6} step={Math.PI/360}\n                                                     value={state.straightenTolerance}\n                                                     onChange={handleStraightenToleranceSlider}/>\n                    = {Math.round(state.straightenTolerance*180/Math.PI*10)/10}°\n                </td>\n            </tr>\n            </tbody>\n        </table>\n        <hr/>\n        {\n            report.autoFix.size ? <div>\n                <button onClick={commit}>Commit auto-fix</button>\n            </div>: <>Nothing to fix</>\n            \n        }\n    </>;\n};\n\nconst PointyCornersOptions: React.FC = () => {\n    const {state, setState} = React.useContext(StateContext);\n    let report = state.mos.pointyCornersReport();\n    return <>\n        {\n            !report.totalCount ? <>There are no pointy corners.</>\n                               : <>You can fix them manually</>\n        }\n    </>;\n};\n\nconst TangentCornersOptions: React.FC = () => {\n    const {state, setState} = React.useContext(StateContext);\n    let report = state.mos.tangentCornersReport();\n    return <>\n        {\n            !report.totalCount ? <>There are no tangent corners.</>\n                               : <>You can fix them manually</>\n        }\n    </>;\n};\n","import React, {useState} from 'react';\nimport {StateContext} from \"../App\";\nimport {FileInput} from \"./FileInput\";\nimport {Edit} from \"./Edit\";\nimport {ViewToolOptions} from \"./ViewToolOptions\";\nimport {DebugToolOptions} from \"./DebugToolOptions\";\nimport {Inspect} from \"./Inspect\";\nimport \"./Toolbar.css\"\n\n\nexport const Toolbar = () => {\n\n    const [selectedTool, setSelectedTool] = useState<string|null>(\"file\");\n    // const { state, setState } = React.useContext(StateContext);\n\n    const handleToolSelection = (tool: React.SetStateAction<string | null>) => {\n        setSelectedTool(tool);\n    };\n\n    return <div id=\"toolbar\">\n\n\n        <div style={{backgroundColor:\"#ffeeee\"}}>\n            <h1  onClick={()=>handleToolSelection(\"View\")}>\n                View\n            </h1>\n            <div className=\"toolbarSection\">{<ViewToolOptions/>}</div>\n        </div>\n        <div style={{backgroundColor:\"#eeeeff\"}}>\n            <h1  onClick={()=>handleToolSelection(\"Edit\")}>\n                Edit\n            </h1>\n            <div className=\"toolbarSection\">{<Edit/>}</div>\n        </div>\n\n        <div style={{backgroundColor:\"#ddFF99\"}}>\n            <h1  onClick={()=>handleToolSelection(\"Inspect\")}>\n                Inspect\n            </h1>\n            <div className=\"toolbarSection\">{<Inspect/>}</div>\n        </div>\n\n\n        <div style={{backgroundColor:\"#eeffee\"}}>\n            <h1  onClick={()=>handleToolSelection(\"file\")}>\n                File\n            </h1>\n            {/*<div>{selectedTool==='file' && <FileInput/>}</div>*/}\n            <div className=\"toolbarSection\">{<FileInput/>}</div>\n        </div>\n        <div style={{backgroundColor:\"#ff88ee\"}}>\n            <h1  onClick={()=>handleToolSelection(\"Debug\")}>\n                Debug\n            </h1>\n            <div className=\"toolbarSection\">{<DebugToolOptions/>}</div>\n        </div>\n\n    </div>;\n};\n\n\n        ","import React from 'react';\nimport {Mos} from \"./Mos\";\nimport {Preview} from \"./SvgZoomer\";\nimport {shapeColorFunctionByMedianArea} from \"../Math/Chain\";\n\n\nexport const RendPathStyles = React.memo( (props: {prec:number}) => {\n    return <>\n        <defs>\n            <marker id=\"markerSquare\" markerWidth=\"7\" markerHeight=\"7\" refX=\"4\" refY=\"4\"\n                    orient=\"auto\" markerUnits=\"strokeWidth\">\n                <rect x=\"1\" y=\"1\" width=\"5\" height=\"5\" className={'.markerSquare'}/>\n            </marker>\n\n            <marker id=\"markerArrow\" markerWidth=\"13\" markerHeight=\"13\" refX=\"2\" refY=\"7\"\n                    orient=\"auto\" markerUnits=\"strokeWidth\">\n                <path d=\"M2,2 L2,13 L8,7 L2,2\" className={'.markerArrow'} />\n            </marker>\n        </defs>\n\n        <style>\n            {`\n            .markerSquare {stroke: none; fill:#000000;}\n            .markerArrow {fill: #000000}\n            path.pths     {opacity:.5;fill:none;stroke-linecap:round;stroke:black;stroke-width:${props.prec*(1)} }\n            path.pthsb    {opacity:.5;fill:none;stroke-linecap:round;stroke:black;stroke-width:${props.prec*(1.5)} }\n            path.pths.removed { stroke:red; pointer-events:none; position:relative; z-index:10 }\n            path.pths.added { opacity:1;  stroke:blue; pointer-events:none; stroke-dasharray:1,1; stroke-width:${props.prec*0.5}}\n            path.pths.added.highlight { opacity:1;  stroke:#FFFF00; pointer-events:none; stroke-width:${props.prec*20}}\n            path.pthsFine {opacity:1;fill:none;stroke-linecap:round;stroke:purple;stroke-width:${props.prec*0.1} }\n            path.control1 {opacity:1;fill:none;stroke-linecap:round;stroke:green;stroke-width:${props.prec*0.3} } \n            path.control2 {opacity:1;fill:none;stroke-linecap:round;stroke:red;stroke-width:${props.prec*0.3} } \n            xxxpath.pths:hover {stroke-width:${props.prec*(3)}}\n            `}\n        </style>\n\n    </>;\n}, /*props equivalence*/ (a, b) => {\n    return (\n        a.prec === b.prec\n    );\n});\n\nexport const RendPaths = React.memo( (props: { mos:Mos, preview:Preview}) => {\n    // let removed=(k:string)=> props.previewMos && props.mos.paths[k] && !props.previewMos.paths[k]\n    return <>\n        <g id=\"paths\">\n            {Object.entries(props.mos.paths).map(([k, path]) => {\n                let identifier = {pathid:k};\n                let d = path.fullSvgPath();\n                let style = path.debugClass || \"pths\";\n                if (props.preview.diff.left[k]) style = style + \" removed\";\n                return   <g key={k}>\n                    <path className={style} d={d} {...identifier}/>\n                    \n                    \n                    \n                    <path key={k+\"fine\"} className=\"pthsFine\" d={path.fragmentize().fullSvgPath()} markerEnd=\"url(#markerArrow)\" {...identifier}/>\n                </g>\n            })}\n        </g>\n    </>;\n}, /*props equivalence*/ (a, b) => {\n    return (\n        a.mos === b.mos && a.preview===b.preview\n    );\n});\n\nexport const RendShapes = React.memo( (props: { mos:Mos, prec:number}) => {\n    let ss = props.mos.shapes().map(s=>s.estimatedArea()).sort((a,b)=>a-b);\n    if (!ss || !ss.length) return <></>;\n    let half = Math.floor(ss.length/2);\n    let medianSize = ss.length % 2 ? ss[half] : (ss[half-1]+ss[half])/2.0;\n    \n    let shapeColorFunction = shapeColorFunctionByMedianArea(props.mos.shapes());\n    \n    return <>\n        <style>\n            {`\n                @keyframes blink {\n                    0%, 100% { stroke-opacity: 1; }\n                    50% { stroke-opacity: 0; }\n                }\n            \n            path.shape {    \n                stroke-width: 0;\n                /* For opacity, see shapeColor() in const.ts  */\n            }\n            path.shapeOutlineHighlighted {\n                stroke-width: ${props.prec*2};\n                fill:none;stroke-linecap:round;stroke:#ff0088;\n                     /*animation: blink 1s linear infinite;*/\n            }\n            `}\n        </style>\n        <g id=\"shapes\">\n            {props.mos.shapes().map((shape)=>{\n                let key = shape.segs[0].id(); \n                let fullPath = shape.fullSvgPath();\n                let colorParam = shape.estimatedArea() / medianSize;\n                let color=shapeColorFunction(shape);\n                let className = \"shape \" //+( colorParam<0.2 ? \"halo\" : \"\");\n                \n                return <>\n                    <path key={key} style={{fill:color}} className={className} d={fullPath}/>\n                    { colorParam<0.2 &&\n                      <path key={key+\"h\"}  className={\"shapeOutlineHighlighted\"} d={fullPath}/> }\n                    </>\n            })}\n        </g>\n    </>\n}, /*props equivalence*/ (a, b) => {\n    return (\n        a.mos === b.mos \n    );\n});\n    \nexport const RendPreviewPaths = React.memo( (props: { mos:Mos,preview:Preview}) => {\n    // let added=(k:string)=> props.previewMos && !props.mos.paths[k] && props.previewMos.paths[k]\n    // let allAdded = Object.keys(props.previewMos?.paths||[]).filter(added);\n    \n    return <>\n        <g id=\"added paths\">\n            {Object.keys(props.preview.diff.right).map((k) => {\n                let path=props.preview.diff.right[k];\n                let d = path.fullSvgPath();\n                let style = \"pths added\";\n                return   <g key={k+\" added\"}>\n                    <path className={style} d={d} />\n                    <use xlinkHref={'#defPoiAdded'} x={path.start().x} y={path.start().y}/>\n                    <use xlinkHref={'#defPoiAdded'} x={path.end().x} y={path.end().y}/>\n                </g>\n\n            })}\n        </g>\n    </>;\n}, /*props equivalence*/ (a, b) => {\n    return (\n        a.mos === b.mos && a.preview===b.preview\n    );\n});\n\n\nexport const RendAddedPathHighlights = React.memo( (props: { mos:Mos,preview:Preview}) => {\n    return <>\n        <g id=\"added highlights\">\n            {props.preview.highlightedPaths.map((path)=> {\n                let d = path.fullSvgPath();\n                let style = \"pths added highlight\";\n                return  <path key={path.id()+\" added\"} className={style} d={d} />\n            })}\n        </g>\n    </>;\n}, /*props equivalence*/ (a, b) => {\n    return (\n        a.mos === b.mos && a.preview===b.preview\n    );\n});\n","import {StateContext, ViewOptions} from \"./App\";\nimport React, {useEffect, useState} from 'react';\nimport {Mos, POI} from \"./Mos\";\nimport {minRenderScale, Preview} from \"./SvgZoomer\";\nimport {P} from \"../Bounds\";\nimport {Path} from \"../Math/Path\";\n\n\nexport const RendPoiStyles = React.memo((props: { prec: number}) => {\n    return <>\n        <style>{`\n            circle.poiDotHighlighted {fill:#ffff00; stroke:none; opacity:1; pointer-events:none  }\n            circle.poiDotI {fill:black;   stroke:none; opacity:.9; pointer-events:none  }\n            circle.poiDot0 {fill:magenta; stroke:none; opacity:.9;     }\n            circle.poiDot1 {fill:#FF0000; stroke:none; opacity:.9;     }\n            circle.poiDot2 {fill:#000000; stroke:none; opacity:.9; }\n            circle.poiDot3 {fill:#000000; stroke:none; opacity:.9; }\n            circle.poiAdded {fill:blue; stroke:none; opacity:1; pointer-events:none;}\n            .poiDot1b      {fill:#FF0000; stroke:none; opacity:.9;     }\n            .poiDot2b      {fill:#00ff00; stroke:none; opacity:.9; }\n            .poiDot3b      {fill:#00ff00; stroke:none; opacity:.9; }\n            text.poiLabel { font-size:${props.prec*3}px }\n            xxx.gpoiDotHover:hover  {opacity:1 }\n            xxx.gpoiDotHover  {opacity:0.01}\n        `}</style>\n        <defs>\n            <circle id=\"defPoiDotHighlighted\" r={props.prec*20} className=\"poiDotHighlighted\"/>\n            <circle id=\"defPoiDotI\" r={props.prec*0.3} className=\"poiDotI\"/>\n            <circle id=\"defPoiDot0\" r={props.prec*0.35} className=\"poiDot0\"/>\n            <circle id=\"defPoiDot1\" r={props.prec*1} className=\"poiDot1\"/>  \n            <circle id=\"defPoiDot2\" r={props.prec*1}   className=\"poiDot2\"/>\n            <circle id=\"defPoiDot3\" r={props.prec*1} className=\"poiDot3\"/>\n            <circle id=\"defPoiAdded\" r={props.prec*0.5} className=\"poiAdded\"/>\n            <circle id=\"defPoiDot1b\" r={props.prec*1.5} className=\"poiDot1b\"/>\n            <circle id=\"defPoiDot2b\" r={props.prec*1.5} className=\"poiDot2b\"/>\n            <circle id=\"defPoiDot3b\" r={props.prec*1.5} className=\"poiDot3b\"/>\n        </defs>\n    </>;\n    \n},  (prevProps, nextProps) => prevProps.prec === nextProps.prec);\n\n\nexport const RendPreviewHighlights = React.memo((props: {mos: Mos, preview:Preview}) => {\n\n    return <>\n        <g id=\"RendPreviewHighlights\">\n            {props.preview.highlightedPoints.map(point=>{\n                return  <use key={point.id()} xlinkHref={'#defPoiDotHighlighted'}\n                             x={point.x} y={point.y}  className={'poiDotHighlighted'}/>\n            })}\n        </g>\n    </>\n}, (a, b) => {\n    // Return true if nothing has changed\n    return (\n        a.mos===b.mos \n        && a.preview===b.preview\n    );\n});\n\n\nexport const RendPois = React.memo((props: {paths:Record<string,Path>, viewOptions:ViewOptions, pois: Record<string,POI>}) => {\n    \n    // Get the inner points duplicates\n    let dedupInners:Record<string,any> = {};\n    let inners1 = props.viewOptions.viewInners \n                  ?  Object.values(props.paths)\n                    .flatMap(path => path.innerPointsOfNaturalInterest())\n                    .filter(path=> dedupInners[path.id()] ? false : (dedupInners[path.id()] = 1))\n                  : []\n   \n    \n    return <>\n        <g id=\"points\">\n            {Object.values(props.pois).map(poi => {\n                return <PoiDots key={poi.p.id()} poi={poi} viewOptions={props.viewOptions} hover={false}/>;\n            })}\n        </g>\n        <g id=\"innerPoints\">\n            {inners1.map(point=>{\n                // return <PoiDots key={poi.p.id()} poi={poi} viewLabels={props.viewLabels}/>;\n                // console.log(\"rendering inner point \"+point.id());\n                return <use key={point.id()} xlinkHref=\"#defPoiDotI\" x={point.x} y={point.y}  className=\"poiDotI\" />\n            })}\n        </g>\n    </>\n}, (a, b) => {\n    // Return true if nothing has changed\n    return (\n        a.pois === b.pois\n        && a.viewOptions===b.viewOptions\n        && a.paths===b.paths\n    );\n});\n\nexport const PoiDots = React.memo((props: { viewOptions:ViewOptions,poi: POI, hover:boolean}) => {\n    let s = props.poi.star.length;\n    let x = props.poi.p.x;\n    let y = props.poi.p.y;\n    let id = props.poi.p.id();\n    let identifier = {poid:id};\n    let css = s===0 ? \"poiDot0\" : s === 1 ? \"poiDot1\" : s === 2 ? \"poiDot2\" : \"poiDot3\";\n    let link= s===0 ? \"#defPoiDot0\" : s===1 ? \"#defPoiDot1\" : s===2 ? \"#defPoiDot2\" : \"#defPoiDot3\"\n    if (props.hover) {\n        return <use xlinkHref={link+\"b\"} x={x} y={y}  className={css+\"b\"}  {...identifier}/>\n    } else {\n        return  <use xlinkHref={link} x={x} y={y}  className={css}  {...identifier}/>;\n    }\n}, (a, b) => {\n    // Return true if nothing has changed\n    return (\n        a.poi === b.poi \n        && a.viewOptions===b.viewOptions\n        && a.hover===b.hover\n    );\n});","import {StateContext, ViewOptions} from \"./App\";\nimport React from 'react';\nimport {Mos, POI} from \"./Mos\";\nimport {Point} from \"../Math/Point\";\n\nexport const RendPoiLabels= (props: {viewOptions:ViewOptions, mos:Mos}) => {\n\n    // Make a list of poi that should be visible\n    let poiLabels = !props.viewOptions.viewLabels ? [] : Object.values(props.mos.pois);\n    let innerLabels:Point[] = !props.viewOptions.viewLabels ? [] : Object.values(props.mos.paths)\n        .map(p=>p.innerPointsOfNaturalInterest())\n        .flat(1)\n        .filter(p=>!props.mos.pois[p.id()]);\n\n    return <>\n        <g id=\"poiLabels\" style={{zIndex:1000}}>\n            {poiLabels.map(poi =><PoiLabel key={poi.p.id()} poi={poi}/>)}\n        </g>\n        <g id=\"innerLabels\">\n            {innerLabels.map(point =><InnerLabel key={point.id()} p={point}/>)}\n        </g>\n    </>;\n};\n\nconst PoiLabel = (props:{poi:POI, })=>{\n    // console.log(\"rendering 1 poi label\");\n    return <text key={\"poiLabel\" + props.poi.p.id()} opacity={0.8} fill={\"#000000\"}\n                 x={props.poi.p.x} y={props.poi.p.y} textAnchor=\"middle\"\n                 dy=\"-2em\" className={\"poiLabel\"} fontFamily=\"sans-serif\">\n        {props.poi.p.id()\n         // +\" (\" + props.poi.star.length + \") \"\n        }\n    </text>\n}\nconst InnerLabel = (props:{p:Point})=>{\n    // console.log(\"rendering 1 poi inner label\");\n    return <text key={props.p.id()} opacity={0.8} fill={\"#00ff00\"} x={props.p.x} y={props.p.y}\n                 textAnchor=\"middle\" dy=\"-2em\" className={\"poiLabel\"} fontFamily=\"sans-serif\">\n        {props.p.id()}\n    </text>\n\n}","import {StateContext} from \"./App\";\nimport React, {useEffect, useState} from 'react';\nimport {Mos} from \"./Mos\";\nimport {P} from \"../Bounds\";\nimport {Point} from \"../Math/Point\";\nimport {\n    DISTORTION_ORTHORGONAL,\n    DISTORTION_STRETCHY, dragOptionsWithModifierKeys,\n    END_TANGENTS_FIXED,\n    END_TANGENTS_FLOPPY,\n    END_TANGENTS_FREE\n} from \"../Math/DragOptions\";\n\n\ninterface Drag { \n    from:P,\n    to:P,\n    poid:string,\n    orig:Mos, \n    shiftKey:boolean, \n    controlKey:boolean;\n};\n\nexport const PoisInteractions = (props:{container: React.RefObject<HTMLDivElement> }) => {\n    \n    const [ drag, setDrag] = useState<Drag|null>(null);\n    const { state, setState } = React.useContext(StateContext);\n\n    function keyup(event:KeyboardEvent) {\n        if (!drag) return;\n        \n        doDrag(null, event.shiftKey, event.ctrlKey)\n    }\n    function keydown(event:KeyboardEvent) {\n        if (!drag) return;\n        doDrag(null, event.shiftKey, event.ctrlKey)\n    }\n    function mousedown(event: MouseEvent) {\n        if (event.button!==0) return;\n        // @ts-ignore\n        let id = event.target.getAttribute(\"poid\");\n        if (!id) return;\n        // can't use this because behaves differently on safari\n        // let bbox = event.target.getBBox();\n        let to = state.coo.translateContainerToSvg(event.clientX, event.clientY);\n        let from = to;\n        let drag2 = {\n            from:from,\n            to:to, \n            poid:id, orig:state.mos,\n            shiftKey: event.shiftKey,\n            controlKey: event.ctrlKey,\n        };\n        setDrag(drag2);\n        let u = state.undo.slice();\n        u.push(state.mos);\n        setState({...state,undo:u})\n    }\n\n// version with snapping\n    function mousemove(event: MouseEvent) {\n        if (event.button!==0) return;\n        if (!drag) return;\n        let to = state.coo.translateContainerToSvg(event.clientX, event.clientY);\n        doDrag(to, event.shiftKey, event.ctrlKey);\n    }\n\n\n    function doDrag(svgCoords:P|null,  shiftKey: boolean, controlKey: boolean) {\n        let drag2 = {...drag, to: svgCoords||drag.to, \n                      shiftKey: shiftKey, controlKey: controlKey};\n        setDrag(drag2);\n        let mos = drag2.orig.clone();\n        let poi = mos.pois[drag2.poid]\n        if (poi) {\n            let delta = Point.forP(drag2.to).minus(drag2.from);\n            let dest = poi.p.plus(delta);\n\n            // Remove the poi and its adjacent paths from the clone\n            // so we can decide where else to snap to\n            let snap = state.snapping * Math.max(1, state.coo.pixelRatio());\n            // don't snap so strongly if it's not a loose endpoint\n            if (poi.star.length > 1) snap = snap / 3;\n            // Do the snap\n            if (snap>0) {\n                let mos2 = mos.clone();\n                let poisToPrune: string[] = []\n                for (const {pathID} of poi.star) {\n                    let toRemove = mos2.paths[pathID];\n                    mos2._remove(toRemove)\n                    // poisToPrune.push(toRemove.end().id())\n                    // poisToPrune.push(toRemove.start().id())\n                }\n                mos2.prunePOI(poi.p.id());\n                for (let e of poisToPrune) {\n                    mos2.prunePOI(e);\n                }\n                dest = mos2.getSnapTo(dest, snap).p;\n            }\n\n            let d = dragOptionsWithModifierKeys(state.dragOptions, shiftKey, controlKey);\n\n            mos = mos.clone();\n            mos.movePOI(poi, dest, d)\n            setState({...state, mos: mos});\n        } else {\n        }\n    }\n\n    function mouseleave(event: MouseEvent) {\n        if (event.button!==0) return;\n        if (!drag) return;\n        // cancel it\n        let u = state.undo.slice();\n        let m = u.length ? u.pop() : state.mos;\n        setState({...state, mos:m, undo:u})\n        setDrag(null);\n    }\n    function mouseup(event: MouseEvent) {\n        if (event.button!==0) return;\n        if (!drag) return;\n        \n        // hammer it?  after we fix the makeChains efficiency problem.\n        // let mos = new Mos();\n        // let allUnchained = Object.values(state.mos.paths)\n        //     .flatMap(path=>path.unchainRecursive())\n        //     .map(cs=>cs.path);\n        // mos.accept(allUnchained, true);\n        // setState({...state,mos:mos});\n\n        setDrag(null);\n    }\n    \n    useEffect(() => {\n        let p: HTMLDivElement = props.container.current;\n        p.addEventListener(\"mouseup\", mouseup);\n        p.addEventListener(\"mouseleave\", mouseleave);\n        p.addEventListener(\"mousemove\", mousemove);\n        p.addEventListener(\"mousedown\", mousedown);\n        document.addEventListener(\"keyup\", keyup);\n        document.addEventListener(\"keydown\", keydown);\n        return () => {\n            p.removeEventListener(\"mouseup\", mouseup);\n            p.removeEventListener(\"mouseleave\", mouseleave);\n            p.removeEventListener(\"mousemove\", mousemove);\n            p.removeEventListener(\"mousedown\", mousedown);\n            document.removeEventListener(\"keyup\", keyup);\n            document.removeEventListener(\"keydown\", keydown);\n        };\n    }, [state,drag, mousedown, mouseleave, mousemove, mouseup, keyup, keydown, props.container]);\n    \n    // Get all of the paths in the relevant star; we'll be modifying these\n    if (!(drag && drag.poid && state.mos.pois[drag.poid])) {\n        return null;\n    }\n\n    \n    return <></>;\n    \n};\n","import {StateContext} from \"./App\";\nimport React, {useEffect, useState} from 'react';\nimport {Mos} from \"./Mos\";\nimport {Point} from \"../Math/Point\";\nimport {singularity} from \"../Math/Path\";\nimport {dragOptionsWithModifierKeys} from \"../Math/DragOptions\";\nimport {PRECISION_PIXEL} from \"../Math/const\";\n\n\ninterface Drag {\n    startTime:number;\n    to:Point,\n    from:Point,\n    pathid:string;\n    orig:Mos,\n    shiftKey:boolean,\n    controlKey:boolean;\n};\n\nexport const PathsInteractions = (props:{container: React.RefObject<HTMLDivElement> }) => {\n\n    const [ drag, setDrag] = useState<Drag|null>(null);\n    const { state, setState } = React.useContext(StateContext);\n\n    function keyup(event:KeyboardEvent) {\n        if (!drag) return;\n\n        doDrag(null, event.shiftKey, event.ctrlKey, false)\n    }\n    function keydown(event:KeyboardEvent) {\n        if (!drag) return;\n        doDrag(null, event.shiftKey, event.ctrlKey, false)\n    }\n    function mousedown(event: MouseEvent) {\n        if (event.button!==0) return;\n        // @ts-ignore\n        let id = event.target.getAttribute(\"pathid\");\n        if (!id) return;\n        let path = state.mos.paths[id];\n        if (!path) return;\n        let to = state.coo.translateContainerToSvg(event.clientX, event.clientY);\n        \n        // this doesn't work because we're not even getting\n        // the event\n        // let snapping = state.snapping * Math.max(1, state.coo.pixelRatio());\n        // to = state.mos.getSnapTo(to, snapping).p;\n        \n        let drag2:Drag = {\n            startTime:performance.now(),\n            to:to,\n            from:to,\n            pathid:id, orig:state.mos,\n            shiftKey: event.shiftKey,\n            controlKey: event.ctrlKey,\n        };\n        setDrag(drag2);\n        let u = state.undo.slice();\n        u.push(state.mos);\n        setState({...state,undo:u})\n    }\n\n// version with snapping\n    function mousemove(event: MouseEvent) {\n        if (event.button!==0) return;\n        if (!drag) return;\n        let to = state.coo.translateContainerToSvg(event.clientX, event.clientY);\n        doDrag(to, event.shiftKey, event.ctrlKey, false);\n    }\n\n\n    function doDrag(svgCoords: Point | null, shiftKey: boolean, controlKey: boolean, finish: boolean) {\n        let drag2 = {...drag, to: svgCoords||drag.to,\n            shiftKey: shiftKey, controlKey: controlKey};\n        setDrag(drag2);\n        let mos = drag2.orig.clone();\n        \n        let path = mos.paths[drag2.pathid]\n        if (path) {\n            let delta = Point.forP(drag2.to).minus(drag2.from);\n            \n            let prec=state.viewOptions.scaleWithZoom\n                     ? state.viewOptions.thickLines\n                     : state.viewOptions.thickLines*state.coo.pixelRatio();\n            let split = path.splitForPoint3(drag2.from, prec);\n            \n            // We're dragging from the middle, not the ends, so I don't think these\n            // cases are possible\n            if (!split || split[0]===singularity || split[1]===singularity) return; \n\n            let dest = split[0].end().plus(delta);\n            let loose0 = mos.isLooseEnd(split[0].start());\n            let loose1 = mos.isLooseEnd(split[1].end());\n            mos._remove(path)\n            \n            let snap = state.snapping * Math.max(1, state.coo.pixelRatio());\n            // don't snap so strongly because it's not a loose endpoint\n            snap = snap / 3;\n            // compute the snap in a temporary Mos\n            if (snap>0) {\n                dest = mos.getSnapTo(dest, snap).p;\n            }\n\n            let d = dragOptionsWithModifierKeys(state.dragOptions, shiftKey, controlKey);\n            split[0] = split[0].autoBend(split[0].start(), dest, loose0, false, d);\n            split[1] = split[1].autoBend(dest, split[1].end(), false, loose1, d)\n\n            if (split[0]!==singularity) mos.acceptSyncAndReChain([split[0]])\n            if (split[1]!==singularity) mos.acceptSyncAndReChain([split[1]])\n            \n            setState({...state, mos: mos});\n        } else {\n        }\n    }\n\n    function mouseleave(event: MouseEvent) {\n        if (event.button!==0) return;\n        if (!drag) return;\n        // cancel it\n        let u = state.undo.slice();\n        let m = u.length ? u.pop() : state.mos;\n        setState({...state, mos:m, undo:u})\n        setDrag(null);\n    }\n    function mouseup(event: MouseEvent) {\n        if (event.button!==0) return;\n        if (!drag) return;\n        let to = state.coo.translateContainerToSvg(event.clientX, event.clientY);\n        \n        // was it a single click with no dragging?  If so, toggle chains.\n        if (drag.from.dist(to)<PRECISION_PIXEL && (performance.now()<drag.startTime+250)) {\n            setState({...state,\n                         mos:state.mos.withToggleChain(drag.pathid)\n                         ,undo:[...state.undo, state.mos]});\n            setDrag(null);\n            return;\n        }\n        \n        doDrag(to, event.shiftKey, event.ctrlKey, true);\n\n        // hammer it?  after we fix the makeChains efficiency problem.\n        // let mos = new Mos();\n        // let allUnchained = Object.values(state.mos.paths)\n        //     .flatMap(path=>path.unchainRecursive())\n        //     .map(cs=>cs.path);\n        // mos.accept(allUnchained, true);\n        // setState({...state,mos:mos});\n\n        setDrag(null);\n    }\n\n    useEffect(() => {\n        let p: HTMLDivElement = props.container.current;\n        p.addEventListener(\"mouseup\", mouseup);\n        p.addEventListener(\"mouseleave\", mouseleave);\n        p.addEventListener(\"mousemove\", mousemove);\n        p.addEventListener(\"mousedown\", mousedown);\n        document.addEventListener(\"keyup\", keyup);\n        document.addEventListener(\"keydown\", keydown);\n        return () => {\n            p.removeEventListener(\"mouseup\", mouseup);\n            p.removeEventListener(\"mouseleave\", mouseleave);\n            p.removeEventListener(\"mousemove\", mousemove);\n            p.removeEventListener(\"mousedown\", mousedown);\n            document.removeEventListener(\"keyup\", keyup);\n            document.removeEventListener(\"keydown\", keydown);\n        };\n    }, [state,drag, mousedown, mouseleave, mousemove, mouseup, keyup, keydown, props.container]);\n\n    return <></>;\n\n};\n\n// export const PathsInteractions = (props: { container: React.RefObject<HTMLDivElement> }) => {\n//\n//     const {state, setState} = React.useContext(StateContext);\n//\n//     function mousedown(event: MouseEvent) {\n//         if (event.button !== 0) return;\n//         // @ts-ignore\n//         let id = event.target.getAttribute(\"pathid\");\n//         if (!id) return;\n//         let u = state.undo.slice();\n//         u.push(state.mos);\n//         let mos2 = state.mos.withToggleChain(id);\n//         setState({...state, mos: mos2, undo: u});\n//     }\n//\n//     useEffect(() => {\n//         let p: HTMLDivElement = props.container.current;\n//         p.addEventListener(\"mousedown\", mousedown);\n//         return () => {\n//             p.removeEventListener(\"mousedown\", mousedown);\n//         };\n//     }, [state, mousedown, props.container]);\n//\n//     return <></>;\n//\n// };","import React, {useEffect} from \"react\";\nimport {StateContext} from \"./App\";\nimport {Bounds} from \"../Bounds\";\n\n/**\n * parentRef is the enclosing Div (need to figure out the viewport)\n * svgRef is the <svg. (needed to figure out the viewbox)\n */\nexport const ZoomInteractions = (props: { \n    parentRef: React.RefObject<HTMLDivElement>, \n    svgRef: React.RefObject<SVGSVGElement>,\n    origSvgContainerRef: React.RefObject<HTMLDivElement>}) => {\n\n    const {state, setState} = React.useContext(StateContext);\n\n    const handleResize = () => {\n        if (!props.parentRef.current) return;\n        let cb = new Bounds(0, 0, props.parentRef.current.clientWidth, props.parentRef.current.clientHeight);\n        if (!cb.equals(state.coo.viewPort)) {\n            // console.warn(\"Resizing container: \",cb.toViewBox());\n            setState({...state,coo:state.coo.updateViewPort(cb)});\n        }\n    };\n\n    function updateOrigSvg() {\n        let div1Ref = props.parentRef;\n        let svg1Ref = props.svgRef;\n        // We need to check if our refs are currently referencing something.\n        if (div1Ref.current && svg1Ref.current) {\n            // Get div1's width and height\n            const { clientWidth: divWidth, clientHeight: divHeight } = div1Ref.current;\n\n            // Get svg1's viewBox\n            const svgViewBox = svg1Ref.current.getAttribute('viewBox');\n\n            // Apply them to orig-svg-container and OriginalSvg\n            const originalDiv = document.getElementById('orig-svg-container');\n            const originalSvg = document.getElementById('origSvg');\n            if (originalDiv && originalSvg) {\n                const rect = div1Ref.current.getBoundingClientRect();\n\n                // Set the width, height and location of OriginalSvgDiv\n                originalDiv.style.width = `${divWidth}px`;\n                originalDiv.style.height = `${divHeight}px`;\n                originalDiv.style.position = 'absolute';\n                originalDiv.style.left = `${rect.left}px`;\n                originalDiv.style.top = `${rect.top}px`;\n\n                // Set the viewBox of OriginalSvg\n                originalSvg.setAttribute('viewBox', svgViewBox);\n            }\n        }\n    }\n    React.useEffect(() => {\n       updateOrigSvg();\n    }, [props.parentRef.current, props.svgRef.current, props.origSvgContainerRef.current, state.coo]);\n\n    function onAuxMouseDown(event: MouseEvent) {\n        if (event.button!==1) return;\n        setState({...state,\n                     isAuxMouseDown:true,\n                     auxMouseMoveOrigin:{x:event.clientX,y:event.clientY}});\n    }\n    function onAuxMouseUp(event: MouseEvent) {\n        if (event.button!==1) return;\n        setState({...state,\n                     isAuxMouseDown:false});\n    }\n    function onAuxMouseMove(event: MouseEvent) {\n        if (!state.isAuxMouseDown) return;\n        if (0===(event.buttons & 4)) return;\n        let dx = event.clientX - state.auxMouseMoveOrigin.x;\n        let dy = event.clientY - state.auxMouseMoveOrigin.y;\n        let c = props.parentRef.current;\n        let parentViewPort = new Bounds(0, 0, c.clientWidth, c.clientHeight);\n        let coo = state.coo.updateViewPort(parentViewPort);\n        let sdx = dx * coo.effectiveViewBox.w / coo.viewPort.w;\n        let sdy = dy * coo.effectiveViewBox.h / coo.viewPort.h;\n        let newViewBox = new Bounds(coo.nominalViewBox.x - sdx, coo.nominalViewBox.y - sdy,\n                                    coo.nominalViewBox.w,       coo.nominalViewBox.h);\n        setState({...state,\n                     coo:coo.updateViewBox(newViewBox),\n                     auxMouseMoveOrigin:{x:event.clientX,y:event.clientY}});\n    }\n\n    function onWheel(event: WheelEvent) {\n        let s = props.svgRef.current;\n        let c = props.parentRef.current;\n        let parentViewPort = new Bounds(0, 0, c.clientWidth, c.clientHeight);\n        let coo = state.coo.updateViewPort(parentViewPort);\n        let p = coo.translateContainerToSvg(event.clientX,event.clientY);\n        let expansionFactor = (event.deltaY<0) ? 1/1.1 : 1.1;\n        let vb:Bounds = coo.nominalViewBox;\n        let u = (p.x-vb.x)/vb.w;\n        let v = (p.y-vb.y)/vb.h;\n        let b2:Bounds = new Bounds(\n            vb.x - vb.w * u * (expansionFactor-1),\n            vb.y - vb.h * v * (expansionFactor-1),\n            vb.w * expansionFactor,\n            vb.h * expansionFactor\n        )\n        setState({...state, coo:state.coo.updateViewBox(b2)});\n        event.preventDefault();\n\n\n    }\n    useEffect(() => {\n        handleResize();\n        let p = props.parentRef.current;\n        p.addEventListener(\"wheel\", onWheel);\n        p.addEventListener(\"mousedown\", onAuxMouseDown);\n        p.addEventListener(\"mouseup\", onAuxMouseUp);\n        p.addEventListener(\"mouseleave\", onAuxMouseUp);\n        p.addEventListener(\"mousemove\", onAuxMouseMove);\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            p.removeEventListener(\"wheel\", onWheel);\n            p.removeEventListener(\"mousedown\", onAuxMouseDown);\n            p.removeEventListener(\"mouseup\", onAuxMouseUp);\n            p.removeEventListener(\"mouseleave\", onAuxMouseUp);\n            p.removeEventListener(\"mousemove\", onAuxMouseMove);\n        };\n    }, [state]);\n\n    return <></>;\n\n};","import {StateContext} from \"./App\";\nimport React, {useEffect, useState} from 'react';\nimport {anglePreservingTransformation, PRECISION_PIXEL} from \"../Math/const\";\nimport {Point} from \"../Math/Point\";\nimport {Segment} from \"../Math/Segment\";\nimport {RamerDouglasPeuckerSmoothing, smoothToCurves} from \"../Math/RDPSmoothing\";\nimport {Bounds} from \"../Bounds\";\nimport {singularity} from \"../Math/Path\";\n\n\ninterface PencilDrag{points:Point[], lastInteraction:number};\n\nexport const PencilInteractions = (props:{container: React.RefObject<HTMLDivElement> ,prec:number}) => {\n    \n    const CORNER_DELAY=300;\n    \n    const [ drag0, setDrag] = useState<PencilDrag|null>(null);\n    const { state, setState } = React.useContext(StateContext);\n    let drag = drag0;\n\n    function begin(start:Point) {\n        drag = {points:[start],lastInteraction:Date.now()};\n    }\n    function move(to:Point, tolerance:number) {\n        let svgDist = drag.points[drag.points.length - 1].dist(to);\n        if (svgDist >= tolerance)\n            drag = {...drag,points:[...drag.points,to]};\n        if (svgDist >= tolerance * state.coo.pixelRatio())\n            drag = {...drag,lastInteraction:Date.now()};\n    }\n    // Calls setState\n    function end() {\n        let ps=drag.points;\n        if (ps.length<2) return;\n\n        let scale = 0;\n        // for (let i=1;i<ps.length;i++) scale += ps[i-1].dist(ps[i]);\n        // scale = Bounds.forPoints(ps).perimeter()/2;\n        scale = 100 * state.coo.pixelRatio();\n        // let pencilSimplifying=state.pencilSimplifying * Math.max(PRECISION, state.coo.pixelRatio());\n        let pencilSimplifying= scale * 0.02 * 2**(state.pencilSimplifying/5);\n        console.log(\"actual pencilSimplifying=\"+pencilSimplifying);\n        \n        ps = RamerDouglasPeuckerSmoothing(ps,pencilSimplifying);\n\n        let mos = state.mos.clone();\n        // The non-smoothing method...\n        // let segs = [];\n        // for (let i = 1; i < ps.length; i++) {\n        //     segs.push(Segment.of(ps[i - 1], ps[i]));\n        // }\n        let v = smoothToCurves(ps);\n        if (v!==singularity) {\n            mos.acceptSync(v, true, true);\n            let u = state.undo.slice();\n            u.push(state.mos);\n            setState({...state,mos:mos, undo:u})\n        }\n    }\n    function mousedown(event: MouseEvent) {\n        if (event.button!==0) return;\n        let startPoint = Point.forP(state.coo.translateContainerToSvg(event.clientX, event.clientY));\n        let snapping = state.snapping * Math.max(1, state.coo.pixelRatio());\n        let startSnap = state.mos.getSnapTo(startPoint, snapping).p;\n        begin(startSnap);\n        setDrag(drag);\n    }\n\n    function mouseup(event: MouseEvent) {\n        if (event.button!==0) return;\n        if (!drag) return;\n        let to = Point.forP(state.coo.translateContainerToSvg(event.clientX, event.clientY));\n        let snapping = state.snapping * Math.max(1, state.coo.pixelRatio());\n        to = state.mos.getSnapTo(to, snapping).p;\n        move(to, 0.0);\n        end();\n        setDrag(null);\n    }\n\n    function _mouseMove(to: Point) {\n        // Todo, figure out how to make this work\n        // let corner = Date.now() > CORNER_DELAY + drag.lastInteraction;\n        let corner=false;\n        if (corner) {\n            move(to, PRECISION_PIXEL);\n            end();\n            begin(to);\n        } else {\n            move(to, PRECISION_PIXEL);\n        }\n        setDrag(drag);\n    }\n\n    function mousemove(event: MouseEvent) {\n        if (event.button!==0) return;\n        if (!drag) return;\n        let to = Point.forP(state.coo.translateContainerToSvg(event.clientX, event.clientY));\n        _mouseMove(to);\n    }\n    function mouseleave(event: MouseEvent) {\n        if (event.button!==0) return;\n        if (!drag) return;\n        // cancel it\n        setDrag(null);\n    }\n    \n    useEffect(() => {\n        let p: HTMLDivElement = props.container.current;\n        p.addEventListener(\"mouseup\", mouseup);\n        p.addEventListener(\"mouseleave\", mouseleave);\n        p.addEventListener(\"mousemove\", mousemove);\n        p.addEventListener(\"mousedown\", mousedown);\n        return () => {\n            p.removeEventListener(\"mouseup\", mouseup);\n            p.removeEventListener(\"mouseleave\", mouseleave);\n            p.removeEventListener(\"mousemove\", mousemove);\n            p.removeEventListener(\"mousedown\", mousedown);\n        };\n    }, [state,drag, props.container]);\n\n    useEffect(() => {\n        let interval: any;\n\n        if (drag?.points?.length) {\n            interval = setInterval(() => {\n                _mouseMove(drag.points[drag.points.length-1]);\n            }, CORNER_DELAY+1);\n        }\n\n        return () => {\n            clearInterval(interval);\n        };\n    }, [drag]);\n\n\n    if (!drag || drag.points.length<2) {\n        return <g></g>;\n    } else {\n        let segs = [];\n        let ps = drag.points;\n        for (let i = 1; i < ps.length; i++) {\n            let s = Segment.of(ps[i - 1], ps[i]);\n            if (s!=singularity) segs.push(s);\n        }\n        return <g>\n            <style>{`\n                path.drawnPath { opacity:.5;fill:none;stroke-linecap:round;stroke:#4444ff;stroke-width:${props.prec} }\n            `}</style>\n            { segs.map((seg,idx)=>\n                  <path key={idx} className={\"drawnPath\"} d={seg.fullSvgPath()}/>         \n                )}\n        </g>; \n        \n       \n    }\n    \n    \n};\n","import {StateContext} from \"./App\";\nimport React, {useEffect, useState} from 'react';\nimport {Point} from \"../Math/Point\";\nimport {Segment} from \"../Math/Segment\";\nimport {RamerDouglasPeuckerSmoothing, smoothToCurves} from \"../Math/RDPSmoothing\";\nimport {PoiDots} from \"./RendPois\";\nimport {SnapResult} from \"./Mos\";\n\n\nexport const HoverInteractions = (props:{container: React.RefObject<HTMLDivElement> ,prec:number}) => {\n    \n    \n    const { state, setState } = React.useContext(StateContext);\n    const [ point, setPoint] = useState<SnapResult|null>(null);\n\n    function mousemove(event: MouseEvent) {\n        let snapping = state.snapping * Math.max(1, state.coo.pixelRatio());\n        let to = Point.forP(state.coo.translateContainerToSvg(event.clientX, event.clientY));\n        setPoint(state.mos.getSnapTo(to,snapping));\n        \n    }\n    function mouseleave(event:MouseEvent) {\n        setPoint(null);\n    }\n    useEffect(() => {\n        let p: HTMLDivElement = props.container.current;\n        p.addEventListener(\"mousemove\", mousemove);\n        p.addEventListener(\"mouseleave\", mouseleave);\n        return () => {\n            p.removeEventListener(\"mousemove\", mousemove);\n            p.removeEventListener(\"mouseleave\", mouseleave);\n        };\n    }, [state, props.container]);\n\n    \n    if (!point?.p) return <></>;\n    \n    return <g style={{pointerEvents:\"none\"}}>\n        <style>{`\n                .hoverSnapDot      { fill:#0000FF; stroke:none; opacity:1;     }\n            `}</style>\n        <defs>\n            <circle id=\"defHoverSnapDot\" r={props.prec*1.1} className=\"hoverSnapDot\"/>\n        </defs>\n        {/*{ point.poi && <PoiDots viewOptions={state.viewOptions} poi={point.poi} hover={true}/> }*/}\n        {/*{ point.path && <path className=\"pthsb\" d={point.path.fullSvgPath()} />}*/}\n        <use xlinkHref={\"#defHoverSnapDot\"} x={point.p.x} y={point.p.y}  className={'hoverSnapDot'}/>\n    </g>;\n\n};\n","import React, {useEffect, useRef} from \"react\";\nimport {StateContext, ViewOptions} from \"./App\";\nimport {Bounds} from \"../Bounds\";\nimport {RendAddedPathHighlights, RendPaths, RendPathStyles, RendPreviewPaths, RendShapes} from \"./RendPaths\";\nimport { RendPois, RendPoiStyles, RendPreviewHighlights} from \"./RendPois\";\nimport {RendPoiLabels} from \"./RendPoiLabels\";\nimport {PoisInteractions} from \"./PoisInteractions\";\nimport {Mos, MosDiff, POI} from \"./Mos\";\nimport {PathsInteractions} from \"./PathsInteractions\";\nimport {ZoomInteractions} from \"./ZoomInteractions\";\nimport {PencilInteractions} from \"./PencilInteractions\";\nimport {HoverInteractions} from \"./HoverInteractions\";\nimport {Point} from \"../Math/Point\";\nimport {Path} from \"../Math/Path\";\nimport {OriginalSvgDocument} from \"../Math/const\";\n\nexport function SvgZoomer() {\n\n    //https://chat.openai.com/chat/4e94f4bc-d53f-4632-8cca-9f297d2a07a6\n    const { state, setState } = React.useContext(StateContext);\n\n    const origSvgContainerRef = useRef(null);\n    const svgParentRef = useRef(null); // type  React.RefObject<HTMLDivElement>\n    const svgRef = useRef(null);\n\n\n    let prec=state.viewOptions.scaleWithZoom\n             ? state.viewOptions.thickLines \n             : state.viewOptions.thickLines*state.coo.pixelRatio();\n    // let prec=(state.viewOptions.thickLines ?3:1)* Math.max(1,PRECISION);\n    // prec=0.1;\n    let viewBox = state.coo.nominalViewBox.toViewBox();\n    \n    let preview:Preview = {diff:{right:{},left:{},size:0},highlightedPaths:[],highlightedPoints:[]}\n    if (state.inspectToolSelection==='Loose Ends') {\n        let report = state.mos.looseEndsReport();\n        // Adapt the report to the preview interface\n        preview = {\n            diff: report.autoFix,\n            highlightedPaths: Object.values(report.autoFix.left)\n                             .concat(Object.values(report.autoFix.right)),\n            highlightedPoints: report.autoFix.size>0 ? [] \n                              : report.pois.map(k=>state.mos.pois[k].p)\n        }\n    }\n    if (state.inspectToolSelection==='StraightenIntersections') {\n        let report = state.mos.straightenIntersectionsReport(state.straightenTolerance);\n        // Adapt the report to the preview interface\n        preview = {\n            diff: report.autoFix,\n            highlightedPaths: Object.values(report.autoFix.left)\n                .concat(Object.values(report.autoFix.right)),\n            highlightedPoints: []\n        }\n    }\n    if (state.inspectToolSelection==='PointyCorners') {\n        let report = state.mos.pointyCornersReport();\n        // Adapt the report to the preview interface\n        preview = {\n            diff: {right:{},left:{},size:0},\n            highlightedPaths: [],\n            highlightedPoints: report.pois.map(k=>state.mos.pois[k].p)\n        }\n    }\n\n    if (state.inspectToolSelection==='TangentCorners') {\n        let report = state.mos.tangentCornersReport();\n        // Adapt the report to the preview interface\n        preview = {\n            diff: {right:{},left:{},size:0},\n            highlightedPaths: [],\n            highlightedPoints: report.pois.map(k=>state.mos.pois[k].p)\n        }\n    }\n\n\n    // supplements ZoomInteractions.updateOrigSvg for fasater response\n    const originalSvg = document.getElementById('origSvg');\n    if (originalSvg) {\n        originalSvg.setAttribute('viewBox', viewBox);\n    }\n    \n    return <>\n        <div ref={origSvgContainerRef} id=\"orig-svg-container\" className=\"orig-svg-container\"/>\n        <ZoomInteractions parentRef={svgParentRef} svgRef={svgRef}\n                          origSvgContainerRef={origSvgContainerRef}  />\n        <div ref={svgParentRef} id=\"svgParent\" className=\"svgFront\">\n            <svg ref={svgRef} id=\"displaySvg\" \n                 width=\"100%\" height=\"100%\"\n                 viewBox={viewBox} \n                 xmlns=\"http://www.w3.org/2000/svg\">\n                \n                <SVGBody viewOptions={state.viewOptions} mos={state.mos} prec={prec} preview={preview} />\n\n                {state.toolSelection==='Drag' && <>\n                    <PoisInteractions container={svgParentRef}/>\n                    <PathsInteractions container={svgParentRef}/>\n                </> }\n                {state.toolSelection==='Pencil' && <>\n                    <PencilInteractions container={svgParentRef} prec={prec}/>\n                    <HoverInteractions container={svgParentRef} prec={prec}/>\n                </>}\n            </svg>\n        </div>\n    </>;\n\n    \n}\n\nexport interface Preview {\n    diff:MosDiff;\n    highlightedPaths:Path[];\n    highlightedPoints:Point[];\n}\n\n// The portion that doesn't need the viewBox\nconst SVGBody = React.memo((props: { viewOptions:ViewOptions; mos:Mos,prec:number, preview:Preview}) => {\n    return <g>\n        {props.viewOptions.viewShapes &&  <RendShapes mos={props.mos} prec={props.prec}/>}\n        <RendPathStyles prec={props.prec}/>\n        <RendPreviewHighlights mos={props.mos} preview={props.preview}/>\n        <RendAddedPathHighlights mos={props.mos} preview={props.preview}/>\n        <RendPaths mos={props.mos} preview={props.preview}/>\n        <RendPoiStyles prec={props.prec}/>\n        <RendPois viewOptions={props.viewOptions} pois={props.mos.pois} paths={props.mos.paths}/>\n        <RendPoiLabels viewOptions={props.viewOptions} mos={props.mos}/>\n        <RendPreviewPaths mos={props.mos}  preview={props.preview}/>\n    </g>\n}, /*props equivalence*/ (props1, props2) => {\n    return (\n        props1.viewOptions === props2.viewOptions\n        && props1.mos === props2.mos\n        && props1.prec === props2.prec\n        && props1.preview === props2.preview\n    );\n});\n\n\n\n\n//https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/isPointInFill\n//    https://svgwg.org/svg2-draft/interact.html#SVGEvents\n//https://w3c.github.io/uievents/#mouseleave\n//https://developer.mozilla.org/en-US/docs/Web/API/Element/mousemove_event\n// look at the pointer-events property\n// (dubious) Also, events like mouseenter and mouseleave behave differently in SVG compared to HTML. In HTML, when the mouse enters a child element of an element, the parent's mouseleave event is triggered and when the mouse leaves the child element, the parent's mouseenter event is triggered. But in SVG, these events are triggered only when the mouse enters or leaves the exact boundaries of the SVG element, regardless of whether it enters or leaves any of its child elements.\n\n\nexport const minRenderScale: number = 4;","// To understand the coordinates and effective viewBox \n// for a user event.  Every time you instantiate this\n// you will get a snapshot of the current viewBox\n// and container size, with associated transforms.\nimport {Bounds, P} from \"../Bounds\";\nimport {Point} from \"../Math/Point\";\n\nexport class UserCoo {\n    effectiveViewBox: Bounds;\n    nominalViewBox: Bounds;\n    viewPort: Bounds|null;\n\n    constructor(viewBox: Bounds, parentViewPort: Bounds) {\n        this.viewPort = parentViewPort;\n        this.nominalViewBox = viewBox;\n        let sar = this.nominalViewBox.w / this.nominalViewBox.h;\n        let car = this.viewPort ? this.viewPort.w / this.viewPort.h : sar;\n        if (car > sar) {\n            // container is wider.  effective viewBox must be widened.\n            let newBWidth = this.nominalViewBox.h * car;\n            let dw = newBWidth - this.nominalViewBox.w;\n            this.effectiveViewBox = new Bounds(this.nominalViewBox.x - dw / 2, this.nominalViewBox.y,\n                                               this.nominalViewBox.w + dw, this.nominalViewBox.h);\n        } else {\n            // effective viewBox must be grown vertically\n            let newBHeight = this.nominalViewBox.w / car;\n            let dh = newBHeight - this.nominalViewBox.h;\n            this.effectiveViewBox = new Bounds(this.nominalViewBox.x, this.nominalViewBox.y - dh / 2,\n                                               this.nominalViewBox.w, this.nominalViewBox.h + dh);\n        }\n    }\n\n    toHumanString():string {\n        return `viewPort=${this.viewPort?.toViewBox()}\\nnominalViewBox=${this.nominalViewBox.toViewBox()}\\neffectiveViewBox=${this.effectiveViewBox.toViewBox()}`\n    }\n    // ratio of  viewport pixel size to SVG pixel size. When zoomed out, will be large.\n    pixelRatio() {\n        return this.viewPort ? this.effectiveViewBox.w / this.viewPort.w : null;\n    }\n\n    translateContainerToSvg(x: number, y: number): Point {\n        if (!this.viewPort) return Point.of(x,y);\n        let x2 = this.effectiveViewBox.x + this.effectiveViewBox.w * (x / this.viewPort.w);\n        let y2 = this.effectiveViewBox.y + this.effectiveViewBox.h * (y / this.viewPort.h);\n        return Point.of(x2,y2); \n    }\n\n    updateViewBox(viewBox: Bounds):UserCoo {\n        return new UserCoo(viewBox, this.viewPort);\n    }\n    updateViewPort(parentViewPort:Bounds):UserCoo {\n        return new UserCoo(this.nominalViewBox, parentViewPort);\n    }\n}","import React from 'react';\nimport {Progress} from \"./App\";\n\nconst ProgressBar = (props:{ progress:Progress }) => {\n    let prog = Math.round(props.progress.progress * 100);\n    // <dialog open style={{zIndex:100, position: 'fixed', top: 0, left: 0, bottom: 0, right: 0, backgroundColor: 'rgba(0, 33, 0)' }}>\n    //     <progress value={prog} max=\"100\"  />\n    // </dialog>\n    return (\n        <>\n            <style>{`\n                .d1 {\n                      width: 100%;\n                      position: fixed;\n                      top: 0;\n                      left: 0;\n                      bottom: 0;\n                      right: 0;\n                      vertical-align: middle;\n                      text-align: center;\n                      z-index: 1000;\n                    background-color: #00000080;\n                      backdrop-filter: blur(1px);\n                    }\n                    \n                .d2 {\n                      margin: 0;\n                      width: 100%;\n                      height: 100%;\n                      display: flex;\n                      justify-content: center;\n                      align-items: center;\n                }\n                .d3 {\n                    border-radius:5px;\n                    border:thin solid black;\n                      background-color: white;\n                      padding: 1em;\n                }\n                .pb {\n                }\n            `}\n            </style>\n            <div className=\"d1\">\n                <div className=\"d2\">\n                    \n                    <div className=\"d3\">\n                        Hello\n                        <br/>\n                        <progress className=\"pb\" value={prog} max=\"100\" />\n                    </div>\n                </div>\n                {/*    <div style={{position:\"absolute\", height: '3em', backgroundColor: 'deepskyblue', borderRadius: '5px',*/}\n                {/*         width: `${100*props.progress.progress}%` }} >*/}\n                {/*    </div>*/}\n                {/*<div style={{position:\"absolute\", height: '3em', margin:\".5em\",width:\"100%\"}}>{props.progress.message}<br/>{prog}%</div>*/}\n            </div>\n        </>\n        \n        \n    // <div style={{width:\"100%\", position:\"absolute\",\n    //     top:'0',left:'0',height:'2em', backgroundColor:\"pink\",\n    //     borderRadius: '5px', border:'thin solid black',\n    //     verticalAlign:\"middle\", textAlign:\"center\", zIndex:\"1\"}}>\n    //     <div style={{position:\"absolute\", height: '2em', backgroundColor: 'deepskyblue', borderRadius: '5px',\n    //         width: `${100*props.progress}%` }} />\n    //\n    //     <div style={{position:\"absolute\",height:'2em',width: '100%',textAlign: 'center', color: 'gray', fontWeight: 'bold'}}>\n    //         <div style={{margin:\".5em\"}}>Loading... {prog}%</div>\n    //     </div>\n    // </div>\n    );\n};\n\nexport default ProgressBar;\n","import React, {useState} from 'react';\nimport {Toolbar} from \"./Toolbar/Toolbar\";\nimport {Mos} from \"./Mos\";\nimport './App.css';\nimport {Bounds, P} from \"../Bounds\";\nimport {SvgZoomer} from \"./SvgZoomer\";\nimport {UserCoo} from \"./UserCoo\";\nimport ProgressBar from \"./ProgessBar\";\nimport {DISTORTION_STRETCHY, DragOptions, END_TANGENTS_FLOPPY} from \"../Math/DragOptions\";\n\n//https://chat.openai.com/chat/4e94f4bc-d53f-4632-8cca-9f297d2a07a6\n\ninterface ToolEventHandler {\n    mouseup:(event: React.MouseEvent<HTMLDivElement>)=>void;\n    mouseleave:(event: React.MouseEvent<HTMLDivElement>)=>void;\n    mousemove:(event: React.MouseEvent<HTMLDivElement>)=>void;\n    mousedown:(event: React.MouseEvent<HTMLDivElement>)=>void;\n}\n\nexport interface State {\n    mos: Mos;\n    isAuxMouseDown:boolean;\n    auxMouseMoveOrigin:P; // in container coordinates\n    coo:UserCoo; // tracks viewPort and parent bounds, gives mapping from SVG user coords\n    viewOptions:ViewOptions;\n    undo:Mos[];\n    toolSelection:string;\n    inspectToolSelection:string;\n    pencilSimplifying: number;  \n    snapping:number; // 0=none\n    straightenTolerance: number;  // radians\n    dragOptions:DragOptions;\n}\nexport interface ViewOptions{\n    viewLabels:boolean,\n    viewInners:boolean,\n    thickLines:number,\n    scaleWithZoom:boolean,\n    viewShapes:boolean,\n}\nconst initialState: State = {\n    mos:new Mos(),\n    isAuxMouseDown:false,\n    auxMouseMoveOrigin:{x:0,y:0}, // in container coordinates\n    \n    coo:new UserCoo(Bounds.forViewBox(\"0 0 500 500\"), null),\n    viewOptions:{viewLabels:false,thickLines:2,viewInners:true,scaleWithZoom:true,viewShapes:false},\n    dragOptions:{distortion:DISTORTION_STRETCHY, endTangents:END_TANGENTS_FLOPPY},\n    straightenTolerance: Math.PI/8,\n    undo:[],\n    toolSelection:\"Drag\",\n    inspectToolSelection:\"Loose Ends\",\n    pencilSimplifying: 0,\n    snapping: 10,\n};\nexport interface Progress {\n    progress:number,\n    message:string,\n    visible:boolean\n}\nexport const nullProgress:Progress = {message:\"Loading...\",visible:false,progress:0}\n\nexport const StateContext = React.createContext<{ state: State; setState: React.Dispatch<React.SetStateAction<State>> }>({state: initialState, setState: () => {}});\nexport const ProgressContext = React.createContext<{ progress: Progress; setProgress: React.Dispatch<React.SetStateAction<Progress>> }>({progress: nullProgress, setProgress: () => {}});\n\nfunction App() {\n    const [state, setState] = useState(initialState);\n    const [progress, setProgress] = useState(nullProgress);\n    return (\n        <StateContext.Provider value={{ state, setState }}>\n            <ProgressContext.Provider value={{ progress, setProgress }}>\n            <>\n                <div className=\"main\">\n                    <div className=\"svgContainer\">\n                        { progress.visible &&\n                          <div style={{position:\"absolute\", left:\"5px\",top:\"5px\",width:\"30em\",height:\"3em\"}}>\n                              <ProgressBar progress={progress}/>\n                          </div>\n                        }\n                        <SvgZoomer/>\n                    </div>\n                    \n                </div>\n                <div className=\"sidebar\">\n                    <Toolbar/>\n                </div>\n            </>\n            </ProgressContext.Provider>\n        </StateContext.Provider>\n    );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './Reacts/App';\n// const CopyWebpackPlugin = require('copy-webpack-plugin');\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"names":["Bounds","x","y","w","h","mx","my","this","style","e","document","createElementNS","setAttribute","String","other","Math","min","max","dx","dy","sqrt","p","r","d2","b","a","fuzz","extent","dist","viewBox","v","trim","replace","split","length","parseFloat","ps","map","reduce","union","_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","value","apply","Shape","segs","_id","_svg","_area","path","id","join","s","svgPath","start","svg","Chain","of","seg","t1","t2","points","flatMap","fragmentize","unchainRecursive","piece","end","area","j","i","shapeColorFunctionByMedianArea","shapes","ss","estimatedArea","sort","half","floor","medium","sum","shape","colorParam","shapeColor","_hString","_reverse","_of","reverse","Error","hString","bounds","b1","b2","isPoint","every","isSingularity","console","log","singularity","f","newSegs","path2","applyLinearTransform","equals","push","Segment","c","PRECISION_EPSILON","newStart","newStartTangent","newEnd","newEndTangent","stretch","DISTORTION_STRETCHY","linear","DISTORTION_ORTHORGONAL","linDirection","minus","linNewEnd","plus","toLength","lin2","anglePreservingTransformation","LEN","A1","moveRigidToStart","B1","moveRigidToEnd","A","B","ts","concat","t","pointAt","u","up","to","ap","endTangent","vector","times","bp","xp","xp1","Angle","startTangent","xp2","x1","x2","a1","a2","bend","splitNatural","mid","ceil","c1","slice","c2","shift","abs","splitRatio","split2","left","right","unshift","input","result","current","currentPoint","len","totalParamLength","cs","subchain","scs","Path","Cubic","d","y2","isSegment","PRECISION_PATH","moveRigidtoStartEnd","equalsfp","dA","ab","radians","PI","rotate","dD","dc","P","Q","G","F","X","C","E","D","__split","cubic","b0","b3","precision","Point","END_TANGENTS_FIXED","END_TANGENTS_FREE","END_TANGENTS_FLOPPY","dragOptionsWithModifierKeys","original","control","distortion","endTangents","Symbol","$splitNatural","$fragmentize","$reversed","$linearize","debugClass","$bounds","$totallyShatter","IdReg","fullSvgPath","idPrefix","IdSeq","tolerance","recursionLimit","warn","isErrant","splitErrant","da","divideComplex","timesComplex","newDirection","_bend","looseStart","looseEnd","dragOptions","o1","o2","nst","net","stretchTransformation","PQ","RS","dth","PR","rot","th","_bounds","_linearize","require","size","_smooth","n","smooth","threshold","RamerDouglasPeuckerSmoothing","smoothToCurves","_fragmentize","cs1","cs2","recurse","_splitNatural","norm","bb","radius","fp","_findPoint2","maxRadius","intersectsCircle","pt","closestPoint","sp1","sp2","alin","linearize","blin","db","newPoints","findPathInnerIntersection","p1","p2","_findPathInnerIntersections","s1","e1","s2","e2","intersectsBounds","isInsideCircle","finePrecision","extentWith","hasher","charCodeAt","toString","hash","Vector","atan2","scalar","magnitude","angle","unit","round","atan","forAngle","theta","cos","sin","curves","q","maxDistance","index","distance","perpendicularDistance","simplifiedLeft","simplifiedRight","point","lineStart","lineEnd","mag","dx1","dy1","ofNonsingular","cub","coarsePrecision","found","maxLength","deltaX","deltaY","segments","segmentStart","segmentEnd","px","py","ax","ay","bx","by","near","BACK_SVG","PRECISION_PIXEL","PRECISION_NUMERICAL","OriginalSvgDocument","dot","q2","sanitize","dt","scalarMultiply","pq","pq2","len2","g","SVGElement","getTransformToElement","toElement","getScreenCTM","inverse","multiply","p2s","convertToString","arr","arc_transform","a_rh","a_rv","a_offsetrot","large_arc_flag","sweep_flag","endpoint","matrix","svgDOM","NEARZERO","rh","rv","ac","A2","C2","m","K","matrixTransform","R","has","Str","array","isnan","lowerCase","toLowerCase","upperCase","toUpperCase","objectToString","math","mmax","pow","toFloat","pathCommand","parseInt","pathValues","clone","obj","res","constructor","key","is","o","type","Array","isArray","_path2string","pathClone","pathArray","paths","sleep","setTimeout","catmullRom2bezier","crp","z","iLen","parsePathString","pathString","pth","paramCounts","l","data","params","name","splice","pathToAbsolute","cacher","pa","crz","ii","dots","jj","pop","k","kk","scope","postprocessor","newf","arg","args","cache","count","l2c","y1","q2c","_13","_23","a2c","rx","ry","recursive","xy","_120","rad","f1","f2","cx","cy","rx2","ry2","asin","toFixed","df","f2old","x2old","y2old","tan","hx","hy","m1","m2","m3","m4","newres","path2curve","curve","attrs","Y","qx","qy","attrs2","processPath","pcom","nx","ny","T","fixArc","pp","pi","pcoms1","pcoms2","fixM","path1","pfirst","seg2","seglen","seg2len","window","flatten","elem","toCubics","toAbsolute","rectAsArgs","dec","children","ilen","removeAttribute","SVGCircleElement","SVGRectElement","SVGEllipseElement","SVGLineElement","SVGPolygonElement","SVGPolylineElement","SVGPathElement","path_elem","oldElem","ownerSVGElement","namespaceURI","attrValue","attrName","getAttribute","valid","val","Infinity","num","tag","tagName","getBBox","width","height","parentNode","replaceChild","convertToPath","pathDOM","arr_orig","letter","letter_orig","newcoords","createSVGPoint","subpath_start","prevX","prevY","prevXtmp","prevYtmp","lentmp","aa","ca","encodeURIComponent","Set","ea","fa","ha","add","ia","createElement","ja","ka","la","ma","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","forEach","ra","sa","ta","isNaN","qa","test","oa","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","assign","Ma","stack","match","Na","Oa","prepareStackTrace","defineProperty","set","construct","displayName","includes","Pa","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","cb","ownerDocument","eb","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","indexOf","setProperty","keys","charAt","substring","tb","menuitem","br","col","embed","hr","img","keygen","link","meta","param","source","track","wbr","ub","vb","wb","xb","srcElement","correspondingUseElement","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","unstable_requestPaint","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","code","location","repeat","locale","which","Rd","Td","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","wheelDeltaX","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","pf","qf","rf","random","sf","capture","passive","J","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","payload","callback","dh","eh","fh","gh","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","props","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","uh","vh","wh","xh","yh","implementation","zh","Ah","done","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ji","ki","getSnapshot","li","mi","ni","lastEffect","stores","oi","qi","ri","create","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","message","digest","Li","Mi","error","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Bj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","autoFocus","createTextNode","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","nk","ok","pk","Z","qk","rk","sk","tk","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","pendingSuspenseBoundaries","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","querySelectorAll","JSON","stringify","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","version","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","exports","createPortal","dl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","module","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","escape","_status","_result","default","Children","toArray","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","_arrayLikeToArray","arr2","_classCallCheck","Constructor","TypeError","_defineProperties","descriptor","writable","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","sham","Proxy","Boolean","Super","NewTarget","_defineProperty","_getPrototypeOf","setPrototypeOf","__proto__","_setPrototypeOf","_inherits","subClass","superClass","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_slicedToArray","_i","_s","_e","_x","_r","_arr","_n","_d","unsupportedIterableToArray","_toConsumableArray","arrayLikeToArray","iter","from","_toPropertyKey","hint","prim","toPrimitive","undefined","Number","_typeof","_unsupportedIterableToArray","minLen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","prop","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","fn","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","method","_invoke","AsyncIterator","PromiseImpl","invoke","reject","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_createForOfIteratorHelper","allowArrayLike","it","normalCompletion","didErr","step","_e2","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","scrapePathsFromParsedDom","svgDocumentLement","breakChains","backContainer","getElementById","getElementsByTagName","backSvg","originalViewBox","fileContainer","all","pathElements","parsePaths","pullPathDs","pathSegments","pieces","gather","subpathStart","prevControl","segment","command","memoizeWithWeakMaps2","arg1","arg2","innerCache","NPoint","that","adjustEndpointsUnnormal","NPath","cast","t3","PathO","pathID","reversed","POI","star","poi","some","_addToStar","Mos","pois","$looseEndsReport","$straightenIntersectionsReport","$pointyCornersReport","$tangentCornersReport","_shapes","mos","poiString","coming","comingPath","reverseTangentRadians","smallest","pathO","dr","roundingError","visited","here","limit","_turnLeft","pO","handled","_traverseLeft","segs2","path0","id2","_computeShapes","oldPaths","acceptSync","newPaths","makeChains","pathIDs","consumed","_extendChain","newChain","_remove","accept","unchained","newChains","dest","movePOIs","movedPoints","pathsToRemove","pathsToAdd","autoBend","cleanPOIs","isLikeNormal","np","closestPOITo","nearest","poiStart","poiEnd","remove","prunePOI","adjustEndpointsFirst","setProgress","estDuration","progress","lastYield","seen","_acceptpath","_acceptFinish","pathsToCheckForIntersectionWithNewEndpoint","locateNewEndpoint","adj","nps","normalizePathEndpoints","filterNoops","skipNearDuplicatesToExisting","splitOnGivenPoints","allPois","nPath","aPoint","affected","moreids","_splitExistingPathOn","splitExistingPathsOn","newBreakpoints","splitExistingPathsOnInteriorIntersectionsWith","_accept","chains","discards","chain","frags","_extendChainRight","isReverse","nextP","nextPoi","nextSteps","nextPathId","nextReversed","rev","nextChain","normalizeEndpoints","isNoop","inputs","isNearDuplicate2","existing","isNearDuplicateHeuristicNormalized","given","maxSnapDistance","dPoi","curveSnap","getClosestNonNormalExistingPathPointWithinPrecisionOf","dCurve","nearestPoint","nearestPathId","badPaths","nearPathIds","nNearest","prec","endpointPrec","nearestApproach","splitpoint","output","splitOnExistingPOI","paths1","splitForPointPrecisionPixel","breaks","pathId","nExisting","nbp","existingPathId","splitForPoint3","adjustEndpoints","acceptExperimental2","errant","experimentalSplitExistingCurveAt","oldpath","ops","bads","_cornersReport","totalCount","STARS","r1","r2","pathid","poi1","poi2","tangent1","tweakToAlign","tangent2","autoStraightenEdges","diff","autoFix","autoFixed","report","loosePois","autoFixLooseEnds","patchLimit","mos2","toRemove","getSnapTo","movePOI","paths2","set1","set2","d1","sampleFiles","simple","web","basicShapes1","test4","test5","cat","testInners","testCross","test7","test8","testNear","TextAreaWithCallback","onEnter","className","setText","onChange","onKeyDown","exportDocumentWithPaths","exportPrefix","toViewBox","FileInput","React","StateContext","ProgressContext","setSvgFile","svgFile","fileReader","FileReader","onload","resetStateWithNewDocumentFromString","readAsText","prog","visible","removeFillColorFromSvgPaths","svgElement","hasAttribute","svgString","reprocess","parser","DOMParser","svgDoc","parseFromString","cloneNode","coo","updateViewBox","nullProgress","localStorage","getItem","saveFile","filename","svgBlob","Blob","imgURI","click","triggerDownload","URL","createObjectURL","position","files","toChain","shapeColorFunction","exportDocumentWithShapes","test2","test6","test5b","test5c","paste","undo","Edit","EditToolSelector","UndoButton","undoKeyHandler","handleToolSelection","tool","toolSelection","DragOptions","PencilOptions","border","cellPadding","cellSpacing","SnappingSlider","PencilSimplifyingSlider","snapping","pencilSimplifying","ViewToolOptions","viewOptions","thickLines","scaleWithZoom","viewInners","viewShapes","DebugToolOptions","viewLabels","effectiveViewBox","isInside","doc","setItem","smoothAll","fragmentizeAll","linearizeAll","Inspect","inspectToolSelection","loose","looseEndsReport","pointyCount","pointyCornersReport","tangentCount","tangentCornersReport","straightenIntersectionsCount","straightenIntersectionsReport","straightenTolerance","StraightenIntersectionsOptions","LooseEndsOptions","PointyCornersOptions","TangentCornersOptions","Toolbar","setSelectedTool","backgroundColor","RendPathStyles","markerWidth","markerHeight","refX","refY","orient","markerUnits","RendPaths","entries","identifier","preview","markerEnd","RendShapes","medianSize","fullPath","fill","RendPreviewPaths","RendAddedPathHighlights","highlightedPaths","RendPoiStyles","prevProps","nextProps","RendPreviewHighlights","highlightedPoints","RendPois","dedupInners","inners1","innerPointsOfNaturalInterest","PoiDots","hover","poid","css","RendPoiLabels","poiLabels","innerLabels","flat","PoiLabel","InnerLabel","textAnchor","fontFamily","PoisInteractions","drag","setDrag","keyup","doDrag","keydown","mousedown","translateContainerToSvg","drag2","orig","controlKey","mousemove","svgCoords","delta","snap","pixelRatio","mouseleave","mouseup","container","PathsInteractions","loose0","isLooseEnd","loose1","acceptSyncAndReChain","withToggleChain","ZoomInteractions","handleResize","parentRef","clientWidth","clientHeight","viewPort","updateViewPort","onAuxMouseDown","isAuxMouseDown","auxMouseMoveOrigin","onAuxMouseUp","onAuxMouseMove","parentViewPort","sdx","sdy","newViewBox","nominalViewBox","onWheel","svgRef","expansionFactor","div1Ref","svg1Ref","divWidth","divHeight","svgViewBox","originalDiv","originalSvg","rect","getBoundingClientRect","updateOrigSvg","origSvgContainerRef","PencilInteractions","drag0","begin","lastInteraction","move","svgDist","startPoint","_mouseMove","interval","setInterval","CORNER_DELAY","clearInterval","idx","HoverInteractions","setPoint","pointerEvents","SvgZoomer","svgParentRef","xmlns","SVGBody","props1","props2","UserCoo","sar","car","dw","initialState","ReactDOM"],"sourceRoot":""}